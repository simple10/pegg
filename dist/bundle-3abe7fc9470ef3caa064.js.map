{"version":3,"file":"bundle-3abe7fc9470ef3caa064.js","sources":["webpack/universalModuleDefinition","bundle-3abe7fc9470ef3caa064.js","webpack/bootstrap 3abe7fc9470ef3caa064*","./src/app.coffee","./bower_components/famous/core/Transform.js","./~/bluebird/js/main/util.js","./bower_components/famous/core/Surface.js","./bower_components/famous/core/View.js","./bower_components/famous/modifiers/StateModifier.js","./bower_components/famous/core/EventHandler.js","./bower_components/famous/utilities/Timer.js","./~/bluebird/js/main/errors.js","./src/app/constants/PeggConstants.coffee","./~/style-loader/addStyle.js","./bower_components/famous/surfaces/ImageSurface.js","./bower_components/famous/transitions/Easing.js","./bower_components/famous/utilities/Utility.js","./bower_components/famous/transitions/Transitionable.js","./src/app/dispatchers/AppDispatcher.coffee","./src/lib/Parse.coffee","./bower_components/famous/core/Modifier.js","./bower_components/famous/core/OptionsManager.js","./~/bluebird/js/main/es5.js","./~/bluebird/js/main/async.js","./~/bluebird/js/main/global.js","./bower_components/famous/core/EventEmitter.js","./bower_components/famous/surfaces/ContainerSurface.js","./bower_components/famous/core/Engine.js","./bower_components/famous/core/Entity.js","./bower_components/famous/core/RenderNode.js","./bower_components/famous/math/Vector.js","./bower_components/famous/views/Scrollview.js","./~/bluebird/js/main/errors_api_rejection.js","./src/app/actions/MenuActions.coffee","./src/app/actions/PlayActions.coffee","./src/app/actions/UserActions.coffee","./src/app/stores/UserStore.coffee","./bower_components/famous/core/Context.js","./bower_components/famous/transitions/TransitionableTransform.js","./src/app/views/ListItemView.coffee","./src/lib/Config.coffee","./src/app/views/scss/peggbox.scss","./bower_components/famous/core/ViewSequence.js","./bower_components/famous/physics/PhysicsEngine.js","./bower_components/famous/physics/bodies/Particle.js","./bower_components/famous/physics/forces/Force.js","./bower_components/famous/physics/forces/Spring.js","./bower_components/famous/transitions/SpringTransition.js","./bower_components/famous/views/Lightbox.js","./~/bluebird/js/main/promise_resolver.js","./~/bluebird/js/main/some_promise_array.js","./src/app/stores/AppStateStore.coffee","./src/app/stores/PlayStore.coffee","./src/app/views/ActivityView.coffee","./src/app/views/scss/bandmenu.scss","./src/app/views/scss/card.scss","./src/app/views/scss/login.scss","./src/app/views/scss/tabmenu.scss","(webpack)/~/node-libs-browser/~/process/browser.js","./bower_components/famous-polyfills/classList.js","./bower_components/famous-polyfills/functionPrototypeBind.js","./bower_components/famous-polyfills/requestAnimationFrame.js","./bower_components/famous/core/ElementAllocator.js","./bower_components/famous/core/Group.js","./bower_components/famous/core/SpecParser.js","./bower_components/famous/inputs/GenericSync.js","./bower_components/famous/inputs/ScrollSync.js","./bower_components/famous/inputs/TouchSync.js","./bower_components/famous/inputs/TouchTracker.js","./bower_components/famous/physics/forces/Drag.js","./bower_components/famous/physics/integrators/SymplecticEuler.js","./bower_components/famous/transitions/MultipleTransition.js","./bower_components/famous/transitions/TweenTransition.js","./bower_components/famous/views/HeaderFooterLayout.js","./bower_components/famous/views/Scroller.js","./~/bluebird/js/main/any.js","./~/bluebird/js/main/bluebird.js","./~/bluebird/js/main/call_get.js","./~/bluebird/js/main/cancel.js","./~/bluebird/js/main/captured_trace.js","./~/bluebird/js/main/catch_filter.js","./~/bluebird/js/main/direct_resolve.js","./~/bluebird/js/main/filter.js","./~/bluebird/js/main/finally.js","./~/bluebird/js/main/generators.js","./~/bluebird/js/main/map.js","./~/bluebird/js/main/nodeify.js","./~/bluebird/js/main/progress.js","./~/bluebird/js/main/promise.js","./~/bluebird/js/main/promise_array.js","./~/bluebird/js/main/promise_spawn.js","./~/bluebird/js/main/promisify.js","./~/bluebird/js/main/properties_promise_array.js","./~/bluebird/js/main/props.js","./~/bluebird/js/main/queue.js","./~/bluebird/js/main/race.js","./~/bluebird/js/main/reduce.js","./~/bluebird/js/main/schedule.js","./~/bluebird/js/main/settle.js","./~/bluebird/js/main/settled_promise_array.js","./~/bluebird/js/main/some.js","./~/bluebird/js/main/synchronous_inspection.js","./~/bluebird/js/main/thenables.js","./~/bluebird/js/main/timers.js","./src/app/actions/PeggBoxActions.coffee","./src/app/constants/menu.coffee","./src/app/dispatchers/Dispatcher.coffee","./src/app/routes/AppRoutes.coffee","./src/app/stores/PeggBoxStore.coffee","./src/app/views/AppView.coffee","./src/app/views/BandMenuItemView.coffee","./src/app/views/BandMenuView.coffee","./src/app/views/CardView.coffee","./src/app/views/ChoicesView.coffee","./src/app/views/FpsMeterView.coffee","./src/app/views/HeaderView.coffee","./src/app/views/ImageUploadView.coffee","./src/app/views/LoginView.coffee","./src/app/views/NewCardView.coffee","./src/app/views/PeggBoxView.coffee","./src/app/views/PlayView.coffee","./src/app/views/ProfileView.coffee","./src/app/views/ProgressBarView.coffee","./src/app/views/RateView.coffee","./src/app/views/SignupView.coffee","./src/app/views/StatusView.coffee","./src/app/views/TabMenuItemView.coffee","./src/app/views/TabMenuView.coffee","./src/config/public.coffee","./src/lib/Facebook.coffee","./src/lib/Utils.coffee","./bower_components/famous/core/famous.css","./src/app/views/scss/app.scss ./~/sass-loader?outputStyle=expanded&includePaths[]=./bower_components/","./src/app/views/scss/bandmenu.scss ./~/sass-loader?outputStyle=expanded&includePaths[]=./bower_components/","./src/app/views/scss/card.scss ./~/sass-loader?outputStyle=expanded&includePaths[]=./bower_components/","./src/app/views/scss/fpsmeter.scss ./~/sass-loader?outputStyle=expanded&includePaths[]=./bower_components/","./src/app/views/scss/header.scss ./~/sass-loader?outputStyle=expanded&includePaths[]=./bower_components/","./src/app/views/scss/login.scss ./~/sass-loader?outputStyle=expanded&includePaths[]=./bower_components/","./src/app/views/scss/newcard.scss ./~/sass-loader?outputStyle=expanded&includePaths[]=./bower_components/","./src/app/views/scss/peggbox.scss ./~/sass-loader?outputStyle=expanded&includePaths[]=./bower_components/","./src/app/views/scss/play.scss ./~/sass-loader?outputStyle=expanded&includePaths[]=./bower_components/","./src/app/views/scss/profile.scss ./~/sass-loader?outputStyle=expanded&includePaths[]=./bower_components/","./src/app/views/scss/tabmenu.scss ./~/sass-loader?outputStyle=expanded&includePaths[]=./bower_components/","./~/script-loader/addScript.js","./src/lib/parse-1.2.18_fixed-parsedate.js ./~/script-loader","./src/lib/parse-1.2.18_fixed-parsedate.js ./~/script-loader/~/raw-loader","./bower_components/famous/core/famous.css*","./src/app/views/scss/app.scss","./src/app/views/scss/fpsmeter.scss","./src/app/views/scss/header.scss","./src/app/views/scss/newcard.scss","./src/app/views/scss/play.scss","./src/app/views/scss/profile.scss"],"names":["root","factory","exports","module","define","amd","a","i","this","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","AppStateStore","AppView","Constants","Easing","Engine","Facebook","FpsMeter","Lightbox","LoginView","Routes","SignupView","Timer","Transform","UserActions","UserStore","appView","lightbox","loginView","mainContext","pickView","signupView","createContext","setFPSCap","setPerspective","inOpacity","outOpacity","inOrigin","outOrigin","showOrigin","inTransform","thenMove","rotateX","window","innerHeight","outTransform","rotateZ","inTransition","duration","curve","outExpo","outTransition","inCubic","add","show","getCurrentPageID","getLoggedIn","on","stores","CHANGE","after","__WEBPACK_AMD_DEFINE_RESULT__","require","_normSquared","v","length","_norm","Math","sqrt","_sign","n","precision","identity","multiply4x4","b","multiply","t","moveThen","t0","t1","t2","translate","x","y","z","undefined","thenScale","s","scale","theta","cosTheta","cos","sinTheta","sin","rotateY","rotate","phi","psi","cosPhi","sinPhi","cosPsi","sinPsi","result","rotateAxis","verTheta","xxV","xyV","xzV","yyV","yzV","zzV","xs","ys","zs","aboutOrigin","skew","tan","perspective","focusZ","getTranslate","inverse","c0","c1","c2","c4","c5","c6","c8","c9","c10","detM","invD","transpose","interpret","M","sgn","xNorm","mult","Infinity","Q1","MQ1","x2","sgn2","x2Norm","v2","mult2","Q2","Q","R","remover","atan2","asin","abs","PI","average","M1","M2","specM1","specM2","specAvg","build","spec","scaleMatrix","skewMatrix","rotateMatrix","equals","notEquals","normalizeRotation","rotation","slice","inFront","behind","deprecated","msg","console","warn","tryCatch1","fn","receiver","arg","e","errorObj","tryCatch2","arg2","tryCatchApply","args","apply","asString","val","isPrimitive","isObject","value","maybeWrapAsError","maybeError","Error","withAppended","target","appendee","len","ret","Array","notEnumerableProp","obj","name","descriptor","configurable","enumerable","writable","es5","defineProperty","thrower","r","toFastProperties","f","prototype","global","haveGetters","o","get","canEvaluate","document","navigator","appName","inherits","Child","Parent","T","constructor","constructor$","propertyName","hasProp","charAt","hasOwnProperty","wrapsPrimitiveReceiver","isArray","Surface","options","properties","content","classList","size","_classesDirty","_stylesDirty","_sizeDirty","_contentDirty","_dirtyClasses","_matrix","_opacity","_origin","_size","eventForwarder","event","emit","type","bind","eventHandler","EventHandler","bindThis","Entity","register","setOptions","_currTarget","_addEventListeners","listeners","addEventListener","_removeEventListeners","removeEventListener","_cleanupClasses","remove","_applyStyles","style","_cleanupStyles","_formatCSSTransform","round","devicePixelRatio","_formatCSSOrigin","origin","_xyNotEquals","usePrefix","createElement","webkitTransform","elementType","elementClass","removeListener","handled","stopPropagation","pipe","unpipe","render","setProperties","getProperties","addClass","className","indexOf","push","removeClass","splice","setClasses","removal","getClassList","setContent","getContent","setSize","classes","_setMatrix","userAgent","toLowerCase","element","matrix","zIndex","transform","_setOrigin","webkitTransformOrigin","transformOrigin","_setInvisible","opacity","setup","allocator","allocate","display","commit","context","deploy","origSize","clientWidth","clientHeight","aaMatrix","width","height","cleanup","recall","deallocate","Node","hasChildNodes","removeChild","firstChild","appendChild","innerHTML","df","createDocumentFragment","getSize","actual","View","_node","RenderNode","_eventInput","_eventOutput","setInputHandler","setOutputHandler","Object","create","DEFAULT_OPTIONS","_optionsManager","OptionsManager","getOptions","patch","arguments","_add","StateModifier","_transformState","TransitionableTransform","_opacityState","Transitionable","_originState","_alignState","_sizeState","_modifier","Modifier","align","_hasOrigin","_hasAlign","_hasSize","setTransform","setOpacity","setOrigin","setAlign","transition","callback","set","originFrom","alignFrom","sizeFrom","halt","getTransform","getFinalTransform","getFinal","getOpacity","getOrigin","getAlign","modify","EventEmitter","downstream","downstreamFn","upstream","upstreamListeners","object","handler","trigger","subscribe","unsubscribe","addListener","Function","downstreamCtx","index","upstreamListener","source","addTimerFunction","FamousEngine","_event","setTimeout","getTime","setInterval","numTicks","clear","every","initial","debounce","func","wait","timeout","ctx","timestamp","last","performance","now","Date","markAsOriginatingFromRejection","ignore","originatesFromRejection","RejectionError","isError","canAttach","subError","nameProperty","defaultMessage","SubError","message","captureStackTrace","cause","isAsync","stack","Objectfreeze","freeze","util","TypeError","RangeError","CancellationError","TimeoutError","key","errorTypes","Utils","actions","keyMirror","MENU_SELECT","PEGGBOX_FETCH","GAME_FETCH","CARD_ANSWER","CARD_RATE","CARD_PICK","USER_LOGIN","USER_LOGOUT","SUBSCRIBER_SUBMIT","PLAY_CONTINUE","CARD_ANSWERED","CARD_RATED","UNLOCK_ACHIEVED","PLAY_CONTINUED","SUBSCRIBE_PASS","SUBSCRIBE_FAIL","cssCode","styleElement","styleSheet","cssText","createTextNode","head","getElementsByTagName","ImageSurface","_imageUrl","imageUrl","src","inQuad","outQuad","inOutQuad","outCubic","inOutCubic","inQuart","outQuart","inOutQuart","inQuint","outQuint","inOutQuint","inSine","outSine","inOutSine","inExpo","pow","inOutExpo","inCirc","outCirc","inOutCirc","inElastic","outElastic","inOutElastic","inBack","outBack","inOutBack","inBounce","outBounce","inOutBounce","Utility","Direction","X","Y","Z","count","counter","loadURL","url","xhr","XMLHttpRequest","onreadystatechange","readyState","responseText","open","send","createDocumentFragmentFromHTML","html","start","currentAction","actionQueue","callbackQueue","state","velocity","_callback","_engineInstance","_currentMethod","_loadNext","shift","method","endValue","transitionMethods","TweenTransition","SUPPORTS_MULTIPLE","MultipleTransition","reset","registerMethod","engineClass","unregisterMethod","endState","action","startState","startVelocity","delay","getVelocity","isActive","AppDispatcher","Dispatcher","dispatch","__hasProp","__extends","child","parent","ctor","__super__","_super","handleViewAction","Config","Parse","parse","initialize","appId","jsKey","_transformGetter","_opacityGetter","_originGetter","_alignGetter","_sizeGetter","_legacyStates","_output","transformFrom","opacityFrom","_update","_value","eventOutput","_createEventOutput","manager","myState","data","k","identifier","originalValue","isES5","keys","getPrototypeOf","has","str","toString","proto","ObjectKeys","ObjectDefineProperty","desc","ObjectFreeze","ObjectGetPrototypeOf","ArrayIsArray","Async","_isTickUsed","_length","_lateBuffer","Queue","_functionBuffer","self","consumeFunctionBuffer","_consumeFunctionBuffer","schedule","process","haveItemsQueued","invokeLater","domain","_queueTick","invoke","functionBuffer","_reset","_consumeLateBuffer","buffer","res","_owner","handlers","owner","ContainerSurface","_container","_shouldRecalculateSize","Context","previousSize","update","loop","runLoop","step","requestAnimationFrame","loopEnabled","handleResize","contexts","frameTime","frameTimeLimit","nextTickQueue","deferQueue","lastTime","eventForwarders","containerType","containerClass","fpsCap","optionsManager","MAX_DEFER_FRAME_TIME","currentTime","preventDefault","body","nextTick","forwarder","getFPS","fps","floor","el","needMountContainer","registerContext","defer","entities","entity","unregister","_object","_child","_hasMultipleChildren","_isRenderable","_isModifier","_resultCache","_prevResults","_childResult","_applyCommit","cacheStorage","SpecParser","childNode","commitParams","commitResult","prevKeys","children","Vector","_setXYZ","_setFromArray","_setFromVector","_setFromNumber","_register","sub","div","cross","vx","vy","vz","dot","normSquared","norm","normalize","clone","isZero","setXYZ","set1D","put","cap","project","reflectAcross","get1D","Scrollview","_physicsEngine","PhysicsEngine","_particle","Particle","addBody","spring","Spring","anchor","drag","Drag","forceFunction","FORCE_FUNCTIONS","QUADRATIC","friction","LINEAR","sync","GenericSync","direction","_touchCount","_springState","_onEdge","_pageSpringPosition","_edgeSpringPosition","_touchVelocity","_earlyEnd","_needsPaginationCheck","_scroller","Scroller","positionFrom","getPosition","_bindEvents","_handleStart","_detachAgents","setVelocity","_handleMove","delta","slip","_handleEnd","setPosition","_setSpring","SpringStates","EDGE","_attachAgents","speedLimit","edgeGrip","position","attach","NONE","detachAll","_nodeSizeForDirection","node","nodeSize","_handleEdge","edgeDetected","_handlePagination","pageStopSpeed","velocitySwitch","pageSwitchSpeed","positionNext","velocityNext","goToNextPage","PAGE","springState","springOptions","period","edgePeriod","dampingRatio","edgeDamp","pagePeriod","pageDamp","_normalizeState","nextNode","getNext","TOLERANCE","_shiftOrigin","sequenceFrom","previousNodeSize","previousNode","getPrevious","amount","ViewSequence","ScrollSync","TouchSync","scroll","touch","rails","margin","paginated","groupScroll","outputFrom","getPosition1D","setPosition1D","getVelocity1D","setVelocity1D","strength","DIRECTION_X","DIRECTION_Y","goToPreviousPage","currentPosition","previousSpringPosition","currentNodeSize","nextNodeSize","nextSpringPosition","array","onEdge","Promise","apiRejection","error","rejected","_peekContext","_attachExtraTrace","MenuActions","selectMenuItem","pageID","actionType","PlayActions","load","game","gameID","answer","choice","rate","rating","pick","card","cardID","continue","login","logout","email","user","_subscribed","FacebookUtils","logIn","success","_this","FB","api","save","avatar_url","facebook","first_name","last_name","gender","log","existed","User","logOut","Subscriber","subscriber","extend","description","getUser","current","getName","part","getAvatar","getSubscriptionStatus","payload","_getElementSize","container","_allocator","ElementAllocator","_perspectiveState","_perspective","_nodeContext","_originZeroZero","getAllocator","migrate","contextParameters","toFixed","webkitPerspective","getPerspective","_final","_build","setTranslate","setScale","setRotate","eulerAngles","setSkew","skewAngles","components","setDefaultTransition","setDefault","ListItemView","init","itemID","pic","item","itemModifier","innerWidth","public","_","firstIndex","firstNode","lastNode","_previousNode","_nextNode","Backing","getValue","_i","setValue","reindex","removeCount","insertCount","indexShiftAmount","spliceStartNode","spliceResumeNode","getIndex","unshift","howMany","values","concat","swap","other","otherValue","myValue","myPrevious","myNext","myIndex","otherPrevious","otherNext","otherIndex","_particles","_bodies","_agents","_forces","_constraints","_buffer","_prevTime","_isSleeping","_eventHandler","_currAgentId","_hasBodies","_mapAgentArray","agent","applyForce","applyConstraint","_attachOne","targets","getParticlesAndBodies","_getBoundAgent","_updateForce","boundAgent","_updateForces","_updateConstraint","dt","_updateConstraints","iteration","constraintSteps","_updateVelocities","particle","integrateVelocity","_updateAngularVelocities","integrateAngularMomentum","updateAngularVelocity","_updateOrientations","integrateOrientation","_updatePositions","integratePosition","_integrate","forEach","forEachBody","_getEnergyParticles","energy","particleEnergy","getEnergy","sleepTolerance","sleep","_getEnergyForces","_getEnergyConstraints","TIMESTEP","MIN_TIME_STEP","MAX_TIME_STEP","opts","_engine","isBody","removeBody","detachFrom","getBodies","agents","agentIDs","attachTo","agentID","detach","getAgent","agentArray","getParticles","forEachParticle","particles","bodies","currTime","dtFrame","isSleeping","wake","force","defaults","mass","axis","inverseMass","_positionGetter","_spec","Integrator","SLEEP_TOLERANCE","AXES","INTEGRATOR","_events","end","positionGetter","setMass","getMass","applyImpulse","impulse","Force","_energy","setEnergy","disp","_init","_setForceFunction","_calcStiffness","stiffness","pi","_calcDamping","damping","_calcEnergy","dist","FENE","rMax","rMaxSmall","max","min","HOOK","maxLength","restLength","lMax","p2","setAnchor","SpringTransition","initState","_dimensions","_restTolerance","_absRestTolerance","PE","_getEnergy","_setParticlePosition","_setParticleVelocity","_getParticlePosition","_getParticleVelocity","_setCallback","_wake","_sleep","cb","_setupDefinition","definition","_setAbsoluteRestTolerance","distance","_setTarget","pos","vel","_showing","nodes","transforms","states","showTransform","showOpacity","overlap","renderable","hide","stateItem","_cb","isUntypedError","wrapAsRejectionError","errors","nodebackForPromise","promise","PromiseResolver$_callback","err","wrapped","_reject","$_len","$_i","_fulfill","PromiseResolver","async","asCallback","prop","_nodebackForPromise","resolve","fulfill","_tryFollow","reject","reason","trace","_setCarriedStackTrace","progress","_progress","cancel","isResolved","toJSON","isRejected","PromiseArray","SomePromiseArray","boundTo","_howMany","_unwrap","_initialized","_resolve","_init$","isArrayResolved","_values","_holes","_isResolved","_canPossiblyFulfill","setUnwrap","setHowMany","_promiseFulfilled","_addFulfilled","_fulfilled","_promiseRejected","_addRejected","_totalResolved","_rejected","appstate","_currentPageID","changePage","PlayStore","play","_game","_card","fetchGame","Sets","query","Query","equalTo","find","results","code","saveAnswer","saveRating","saveStatusAck","savePlay","getGame","ActivityView","itemDensity","items","scrollview","surfaces","overflow","noop","canSetImmediate","setImmediate","canPost","postMessage","queue","ev","title","browser","env","argv","once","off","removeAllListeners","binding","cwd","chdir","view","classListProp","protoProp","elemCtrProto","HTMLElement","Element","objCtr","strTrim","String","trim","replace","arrIndexOf","DOMEx","DOMException","checkTokenAndGetIndex","token","test","ClassList","elem","trimmedClasses","split","_updateClassName","classListProto","classListGetter","contains","toggle","join","classListPropDesc","ex","number","__defineGetter__","oThis","aArgs","fToBind","fNOP","fBound","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","detachedNodes","nodeCount","oldContainer","DocumentFragment","nodeStore","pop","nodeType","nodeName","getNodeCount","Group","_groupSize","SIZE_ZERO","_vecInContext","_instance","_parseSpec","parentContext","sizeContext","alignAdjust","nextSizeContext","parentSize","syncs","_syncs","addSync","_addSingleSync","registry","pipeSync","DIRECTION_Z","syncObject","unpipeSync","_payload","_position","_prevVel","_inProgress","_loopBound","_newFrame","_now","stallTime","finalVel","minimumEndSpeed","clientX","clientY","offsetX","offsetY","prevTime","diffX","wheelDeltaX","deltaX","diffY","wheelDeltaY","deltaY","deltaMode","lineHeight","nextVel","nextDelta","diffTime","MINIMUM_TICK_TIME","velX","velY","_touchTracker","TouchTracker","_clearPayload","history","currHistory","prevHistory","_timestampTouch","touches","changedTouches","selective","touchHistory","track","_handleUnpipe","eventInput","SymplecticEuler","velocityCap","angularVelocityCap","w","L","angularMomentum","torque","q","orientation","angularVelocity","scalarMultiply","_instances","_allCallback","_startTime","_startValue","_updateTime","_endValue","_curve","_duration","_active","_interpolate","_clone","_normalize","defaultTransition","speed","getCurve","_calculateVelocity","eps","_calculateState","Curves","linear","easeIn","easeOut","easeInOut","easeOutBounce","registeredCurves","registerCurve","curveName","unregisterCurve","getCurves","startValue","variance","_startVelocity","timeSinceStart","customCurve","v1","HeaderFooterLayout","_entityId","header","footer","_resolveNodeSize","defaultSize","_outputTransform","offset","_finalSize","directionSize","headerSize","footerSize","defaultHeaderSize","defaultFooterSize","contentSize","_positionOffset","_outputFunction","_masterOutputFunction","group","_innerRender","_contextSize","_sizeForDir","dimension","_getClipSize","clipSize","prevNode","prevNodeSize","currNode","sizeNode","nodesSize","edgeSize","masterFn","scrollTransform","Promise$_CreatePromiseArray","Promise$_Any","promises","useBound","_isBound","_boundTo","any","Promise$getter","_then","INTERNAL","_cancel","isCancellable","promiseToReject","_cancellationParent","_rejectUnchecked","cancellable","_cancellable","_setCancellable","uncancellable","_setTrace","_follow","_unsetCancellable","_setBoundTo","fork","didFulfill","didReject","didProgress","formatNonError","ruselessToString","newStr","JSON","stringify","snip","maxChars","substr","CapturedTrace","ignoreUntil","isTopLevel","rignore","RegExp","rtraceline","formatStack","possiblyUnhandledRejection","combine","prev","curLast","line","lines","isSupported","stackDetection","stackTraceLimit","startsWith","rline","NEXT_FILTER","CatchFilter","instances","_promise","CatchFilter$_safePredicate","predicate","safeObject","retfilter","safeKeys","doFilter","itemIsErrorType","shouldHandle","returner","wrapper","thenReturn","thenThrow","Promise$_filter","booleans","_settledValue","j","ref","filter","map","returnThis","throwThis","return$","throw$","promisedFinally","reasonOrValue","isFulfilled","then","finallyHandler","maybePromise","_cast","tapHandler","_passThroughHandler","isFinally","promiseAndHandler","lastly","tap","PromiseSpawn","coroutine","generatorFunction","PromiseSpawn$","generator","spawn","_generator","_next","addYieldHandler","_run","unpack","Promise$_Map","shouldUnwrapItems","pack","mapping","Mapping","all","pending","isPending","_proxyPromiseArray","_unsetRejectionIsUnhandled","iterate","_promiseProgressed","Promise$_successAdapter","nodeback","Promise$_errorAdapter","nodeify","isPromiseArrayProxy","progressed","progressValue","_isFollowingOrFulfilledOrRejected","_progressUnchecked","_progressHandlerAt","_progressHandler0","_doProgressWith","progression","_pushContext","_popContext","_promiseAt","_receiverAt","_isProxied","isPromise","promiseSlotValue","resolver","_bitField","_fulfillmentHandler0","_rejectionHandler0","_promise0","_receiver0","_resolveFromResolver","Promise$_all","PromiseArrayConstructor","list","APPLY","makeSelfResolutionError","thisArg","caught","catchInstances","catchFilterTypeError","_resetTrace","catchFilter","done","_setIsFinal","spread","fulfillmentValue","rejectionReason","is","fulfilled","_cleanValues","_setFulfilled","_setRejected","_ensurePossibleRejectionHandled","_resolveFromSyncValue","attempt","cast","onPossiblyUnhandledRejection","unhandledRejectionHandled","onUnhandledRejectionHandled","debugging","execPath","NODE_ENV","longStackTraces","hasLongStackTraces","_setProxyHandlers","_setLength","promiseArray","_proxyPromise","_setProxied","internalData","haveInternalData","haveSameContext","_traceParent","callbackIndex","_addCallbacks","_queueSettleAt","_isFollowing","_setFollowing","_isFinal","_setRejectionIsUnhandled","_isUnhandledRejectionNotified","_unsetUnhandledRejectionIsNotified","_notifyUnhandledRejectionIsHandled","_isRejectionUnhandled","_setUnhandledRejectionIsNotified","capturedTrace","_unsetCarriedStackTrace","_isCarryingStackTrace","_getCarriedStackTrace","_fulfillmentHandlerAt","_rejectionHandlerAt","_unsetAt","Promise$_resolver","Promise$_rejecter","_spreadSlowCase","targetFn","promiseForAll","_callSpread","localDebugging","_callHandler","_settlePromiseFromHandler","castValue","_fulfillUnchecked","_trace","headerLineCount","carriedStackTrace","_settlePromiseAt","_unsetProxied","_queueGC","_isGcQueued","_setGcQueued","_unsetGcQueued","_gc","_settlePromises","_rejectUncheckedCheckError","_rejectPromises","_notifyUnhandledRejection","contextStack","lastIndex","old","noConflict","_makeSelfResolutionError","toResolutionValue","hasOwn","PropertiesPromiseArray","resolveValueIfEmpty","__hardReject__","newValues","newLen","isDirectScanNeeded","scanMethod","_scanDirectValues","_scanDirectValuesHoled","totalResolved","promiseFromYieldHandler","_yieldHandlers","yieldHandlers","_errorObj","_Promise","_generatorFunction","_receiver","_continue","PromiseSpawn$_continue","_throw","next","isPromisified","__isPromisified__","hasPromisified","containsKey","checkValid","rasyncSuffix","keyWithoutAsyncSuffix","switchCaseArgumentOrder","likelyArgumentCount","parameterDeclaration","parameterCount","propertyAccess","rident","makeNodePromisifiedEval","originalName","generateCallForArgumentCount","comma","THIS","generateArgumentSwitchCase","argumentOrder","newParameterCount","callbackName","makeNodePromisifiedClosure","promisified","_promisify","isAll","methods","inheritedMethods","promisifiedKey","makeNodePromisified","getOwnPropertyDescriptor","cur","visitedKeys","original","promisify","promisifyAll","keyOffset","Promise$_Props","props","arrayCopy","srcIndex","dst","dstIndex","pow2AtLeast","getCapacity","capacity","_capacity","_front","_makeCapacity","_willBeOverCapacity","_pushOne","_checkCapacity","wrapMask","front","_resizeTo","oldFront","oldCapacity","oldQueue","lengthBeforeWrapping","Promise$_Race","raceLater","race","Reduction","accum","Promise$_reducer","fulfilleds","initialValue","startIndex","reduction","Promise$_unpackReducer","Promise$_slowReduce","Promise$_Reduce","reduce","version","MutationObserver","WebkitMutationObserver","WebKitMutationObserver","importScripts","MESSAGE_KEY","random","Promise$_Scheduler","queuedFn","MessageChannel","channel","port1","onmessage","port2","observer","observe","attributes","setAttribute","Promise$_Settle","SettledPromiseArray","settle","PromiseInspection","_promiseResolved","inspection","Promise$_Some","some","inspect","getThen","Promise$_Cast","originalPromise","isAnyBluebirdPromise","Promise$_doThenable","Promise$_resolveFromThenable","called","Promise$_rejectFromThenable","Promise$_progressFromThenable","ms","afterTimeout","afterDelay","PeggBoxActions","page","iconUrl","_callbacks","_promises","rejects","resolves","waitFor","promiseIndexes","selectedPromises","AppRouter","appRoutes","Router","routes","PeggBoxStore","peggbox","_nextSet","fetchParse","PeggBox","getNextSet","BandMenuView","DecksView","HeaderView","Menu","NewCardView","PeggBoxView","PlayView","ProfileView","StatusView","TabMenuView","__bind","me","onScroll","onStatusChange","onPlayContinued","onGameChange","onPeggBoxChange","onAppStoreChange","toggleMenu","initData","initMenu","initMain","initPages","initListeners","menu","model","pages","menuOpen","menuState","layout","initHeader","initFooter","initViewManager","layoutState","decks","activity","profile","status","showPage","getPage","closeMenu","openMenu","change","hideTabs","tabsOpen","showTabs","BandMenuItemView","createBackground","createIcon","angle","color","iconSize","background","getID","icon","iconState","initBackground","initBands","topOffset","band","staggerDelay","backgroundState","bandModifier","bands","yOffset","_results","bandModifiers","resetBands","initX","initY","showBackground","showBands","hideBackground","hideBands","bandOffset","CardView","ChoicesView","ImageUploadView","flip","pickAnswer","hideChoices","showChoices","toggleImage","depth","initCard","initQuestion","initChoices","initAnswer","borderRadius","easing","back","modifier","mainNode","question","qModifier","choiceText","choices","choicesMod","image","maxHeight","imageModifier","text","textModifier","big","side","currentSide","newChoice","toggleState","tick","initTime","surface","filterStrength","updateFrequency","perf","perfNow","webkitNow","thisFrameTime","stop","interval","initEvents","cssPrefix","picMod","logo","padding","ImageEditView","aviary","onError","onSave","initEditor","theme","launchEditor","launch","Aviary","Feather","apiKey","apiVersion","tools","appendTo","imageID","newURL","img","getElementById","initSplash","logoWidth","logoHeight","markWidth","markHeight","logoPosMod","logoSizeMod","mark","markMod","initLogin","fbButton","fbButtonMod","gpButton","gpButtonMod","loginText","loginTextMod","privacyText","input","cardIcon","cardIconMod","newCardMod","newCardTitle","step1","step1Mods","addNum","addSurface","addButton","hideStep","step2","showStep","step2Mods","step3","step3Mods","addLinkContainer","alert","step4","step4Mods","steps","surfaceMod","num","numMod","params","submit","submitMod","containerMod","imageMod","textMod","ProgressBarView","RateView","rateCard","nextCard","initPlay","cards","initProgress","playMod","playNode","progressMod","increment","showStars","logoutMod","nameMod","inactiveBar","inactiveBarMod","progressBarMod","activeBar","activeBarMod","pickStar","spacing","star","starMod","starModifiers","stars","numStars","resetStars","showMessage","onSubmit","markSizeMod","initSignUp","signupEmail","signupEmailMod","signupSubmit","signupSubmitMod","signupText","signupTextMod","messageMod","messageText","nextMod","statusMod","unicorn","unicornMod","TabMenuItemView","createTitle","titleState","tab","xOffset","tabs","tabModifiers","addTab","tabModifier","bounceTabs","d","fjs","js","parentNode","insertBefore","fbAsyncInit","cookie","xfbml","execScript","eval"],"mappings":"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","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(this, function() {\nreturn ","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/ \t\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/ \t\t\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/ \t\t\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/ \t\t\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/ \t\n/******/ \t\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/ \t\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/ \t\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"dist/\";\n/******/ \t\n/******/ \t\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar AppStateStore, AppView, Constants, Easing, Engine, Facebook, FpsMeter, Lightbox, LoginView, Routes, SignupView, Timer, Transform, UserActions, UserStore, appView, lightbox, loginView, mainContext, pickView, signupView;\n\t\n\t__webpack_require__(143);\n\t\n\t__webpack_require__(57);\n\t\n\t__webpack_require__(56);\n\t\n\t__webpack_require__(58);\n\t\n\tEngine = __webpack_require__(24);\n\t\n\tLightbox = __webpack_require__(45);\n\t\n\tTimer = __webpack_require__(7);\n\t\n\tTransform = __webpack_require__(1);\n\t\n\tEasing = __webpack_require__(12);\n\t\n\tFacebook = __webpack_require__(126);\n\t\n\tAppView = __webpack_require__(106);\n\t\n\tFpsMeter = __webpack_require__(111);\n\t\n\tLoginView = __webpack_require__(114);\n\t\n\tSignupView = __webpack_require__(121);\n\t\n\tUserStore = __webpack_require__(33);\n\t\n\tAppStateStore = __webpack_require__(48);\n\t\n\tUserActions = __webpack_require__(32);\n\t\n\tConstants = __webpack_require__(9);\n\t\n\tRoutes = __webpack_require__(104);\n\t\n\tmainContext = Engine.createContext();\n\t\n\tEngine.setFPSCap(60);\n\t\n\tmainContext.setPerspective(2000);\n\t\n\tappView = new AppView;\n\t\n\tloginView = new LoginView;\n\t\n\tsignupView = new SignupView;\n\t\n\tlightbox = new Lightbox({\n\t  inOpacity: 1,\n\t  outOpacity: 0,\n\t  inOrigin: [.5, 1],\n\t  outOrigin: [0, 0],\n\t  showOrigin: [0.5, 0.5],\n\t  inTransform: Transform.thenMove(Transform.rotateX(1), [0, window.innerHeight, -300]),\n\t  outTransform: Transform.thenMove(Transform.rotateZ(0.7), [0, -window.innerHeight, -1000]),\n\t  inTransition: {\n\t    duration: 1000,\n\t    curve: Easing.outExpo\n\t  },\n\t  outTransition: {\n\t    duration: 500,\n\t    curve: Easing.inCubic\n\t  }\n\t});\n\t\n\tmainContext.add(lightbox);\n\t\n\tpickView = function() {\n\t  if (AppStateStore.getCurrentPageID() === \"login\") {\n\t    return lightbox.show(loginView);\n\t  } else if (UserStore.getLoggedIn()) {\n\t    return lightbox.show(appView);\n\t  } else {\n\t    return lightbox.show(signupView);\n\t  }\n\t};\n\t\n\tAppStateStore.on(Constants.stores.CHANGE, pickView);\n\t\n\tUserStore.on(Constants.stores.CHANGE, pickView);\n\t\n\tTimer.after((function() {\n\t  return pickView();\n\t}), 20);\n\t\n\tmainContext.add(new FpsMeter);\n\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;/* This Source Code Form is subject to the terms of the Mozilla Public\n\t * License, v. 2.0. If a copy of the MPL was not distributed with this\n\t * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n\t *\n\t * Owner: mark@famo.us\n\t * @license MPL 2.0\n\t * @copyright Famous Industries, Inc. 2014\n\t */\n\t\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = (function(require, exports, module) {\n\t\n\t    /**\n\t     *  A high-performance static matrix math library used to calculate\n\t     *    affine transforms on surfaces and other renderables.\n\t     *    Famo.us uses 4x4 matrices corresponding directly to\n\t     *    WebKit matrices (column-major order).\n\t     *\n\t     *    The internal \"type\" of a Matrix is a 16-long float array in\n\t     *    row-major order, with:\n\t     *    elements [0],[1],[2],[4],[5],[6],[8],[9],[10] forming the 3x3\n\t     *          transformation matrix;\n\t     *    elements [12], [13], [14] corresponding to the t_x, t_y, t_z\n\t     *           translation;\n\t     *    elements [3], [7], [11] set to 0;\n\t     *    element [15] set to 1.\n\t     *    All methods are static.\n\t     *\n\t     * @static\n\t     *\n\t     * @class Transform\n\t     */\n\t    var Transform = {};\n\t\n\t    // WARNING: these matrices correspond to WebKit matrices, which are\n\t    //    transposed from their math counterparts\n\t    Transform.precision = 1e-6;\n\t    Transform.identity = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];\n\t\n\t    /**\n\t     * Multiply two or more Transform matrix types to return a Transform matrix.\n\t     *\n\t     * @method multiply4x4\n\t     * @static\n\t     * @param {Transform} a left matrix\n\t     * @param {Transform} b right matrix\n\t     * @return {Transform} the resulting matrix\n\t     */\n\t    Transform.multiply4x4 = function multiply4x4(a, b) {\n\t        return [\n\t            a[0] * b[0] + a[4] * b[1] + a[8] * b[2] + a[12] * b[3],\n\t            a[1] * b[0] + a[5] * b[1] + a[9] * b[2] + a[13] * b[3],\n\t            a[2] * b[0] + a[6] * b[1] + a[10] * b[2] + a[14] * b[3],\n\t            a[3] * b[0] + a[7] * b[1] + a[11] * b[2] + a[15] * b[3],\n\t            a[0] * b[4] + a[4] * b[5] + a[8] * b[6] + a[12] * b[7],\n\t            a[1] * b[4] + a[5] * b[5] + a[9] * b[6] + a[13] * b[7],\n\t            a[2] * b[4] + a[6] * b[5] + a[10] * b[6] + a[14] * b[7],\n\t            a[3] * b[4] + a[7] * b[5] + a[11] * b[6] + a[15] * b[7],\n\t            a[0] * b[8] + a[4] * b[9] + a[8] * b[10] + a[12] * b[11],\n\t            a[1] * b[8] + a[5] * b[9] + a[9] * b[10] + a[13] * b[11],\n\t            a[2] * b[8] + a[6] * b[9] + a[10] * b[10] + a[14] * b[11],\n\t            a[3] * b[8] + a[7] * b[9] + a[11] * b[10] + a[15] * b[11],\n\t            a[0] * b[12] + a[4] * b[13] + a[8] * b[14] + a[12] * b[15],\n\t            a[1] * b[12] + a[5] * b[13] + a[9] * b[14] + a[13] * b[15],\n\t            a[2] * b[12] + a[6] * b[13] + a[10] * b[14] + a[14] * b[15],\n\t            a[3] * b[12] + a[7] * b[13] + a[11] * b[14] + a[15] * b[15]\n\t        ];\n\t    };\n\t\n\t    /**\n\t     * Fast-multiply two or more Transform matrix types to return a\n\t     *    Matrix, assuming bottom row on each is [0 0 0 1].\n\t     *\n\t     * @method multiply\n\t     * @static\n\t     * @param {Transform} a left matrix\n\t     * @param {Transform} b right matrix\n\t     * @return {Transform} the resulting matrix\n\t     */\n\t    Transform.multiply = function multiply(a, b) {\n\t        return [\n\t            a[0] * b[0] + a[4] * b[1] + a[8] * b[2],\n\t            a[1] * b[0] + a[5] * b[1] + a[9] * b[2],\n\t            a[2] * b[0] + a[6] * b[1] + a[10] * b[2],\n\t            0,\n\t            a[0] * b[4] + a[4] * b[5] + a[8] * b[6],\n\t            a[1] * b[4] + a[5] * b[5] + a[9] * b[6],\n\t            a[2] * b[4] + a[6] * b[5] + a[10] * b[6],\n\t            0,\n\t            a[0] * b[8] + a[4] * b[9] + a[8] * b[10],\n\t            a[1] * b[8] + a[5] * b[9] + a[9] * b[10],\n\t            a[2] * b[8] + a[6] * b[9] + a[10] * b[10],\n\t            0,\n\t            a[0] * b[12] + a[4] * b[13] + a[8] * b[14] + a[12],\n\t            a[1] * b[12] + a[5] * b[13] + a[9] * b[14] + a[13],\n\t            a[2] * b[12] + a[6] * b[13] + a[10] * b[14] + a[14],\n\t            1\n\t        ];\n\t    };\n\t\n\t    /**\n\t     * Return a Transform translated by additional amounts in each\n\t     *    dimension. This is equivalent to the result of\n\t     *\n\t     *    Matrix.multiply(Matrix.translate(t[0], t[1], t[2]), m).\n\t     *\n\t     * @method thenMove\n\t     * @static\n\t     * @param {Transform} m a matrix\n\t     * @param {Array.Number} t floats delta vector of length 2 or 3\n\t     * @return {Transform} the resulting translated matrix\n\t     */\n\t    Transform.thenMove = function thenMove(m, t) {\n\t        if (!t[2]) t[2] = 0;\n\t        return [m[0], m[1], m[2], 0, m[4], m[5], m[6], 0, m[8], m[9], m[10], 0, m[12] + t[0], m[13] + t[1], m[14] + t[2], 1];\n\t    };\n\t\n\t    /**\n\t     * Return a Transform atrix which represents the result of a transform matrix\n\t     *    applied after a move. This is faster than the equivalent multiply.\n\t     *    This is equivalent to the result of:\n\t     *\n\t     *    Transform.multiply(m, Transform.translate(t[0], t[1], t[2])).\n\t     *\n\t     * @method moveThen\n\t     * @static\n\t     * @param {Array.Number} v vector representing initial movement\n\t     * @param {Transform} m matrix to apply afterwards\n\t     * @return {Transform} the resulting matrix\n\t     */\n\t    Transform.moveThen = function moveThen(v, m) {\n\t        if (!v[2]) v[2] = 0;\n\t        var t0 = v[0] * m[0] + v[1] * m[4] + v[2] * m[8];\n\t        var t1 = v[0] * m[1] + v[1] * m[5] + v[2] * m[9];\n\t        var t2 = v[0] * m[2] + v[1] * m[6] + v[2] * m[10];\n\t        return Transform.thenMove(m, [t0, t1, t2]);\n\t    };\n\t\n\t    /**\n\t     * Return a Transform which represents a translation by specified\n\t     *    amounts in each dimension.\n\t     *\n\t     * @method translate\n\t     * @static\n\t     * @param {Number} x x translation\n\t     * @param {Number} y y translation\n\t     * @param {Number} z z translation\n\t     * @return {Transform} the resulting matrix\n\t     */\n\t    Transform.translate = function translate(x, y, z) {\n\t        if (z === undefined) z = 0;\n\t        return [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, x, y, z, 1];\n\t    };\n\t\n\t    /**\n\t     * Return a Transform scaled by a vector in each\n\t     *    dimension. This is a more performant equivalent to the result of\n\t     *\n\t     *    Transform.multiply(Transform.scale(s[0], s[1], s[2]), m).\n\t     *\n\t     * @method thenScale\n\t     * @static\n\t     * @param {Transform} m a matrix\n\t     * @param {Array.Number} s delta vector (array of floats &&\n\t     *    array.length == 3)\n\t     * @return {Transform} the resulting translated matrix\n\t     */\n\t    Transform.thenScale = function thenScale(m, s) {\n\t        return [\n\t            s[0] * m[0], s[1] * m[1], s[2] * m[2], 0,\n\t            s[0] * m[4], s[1] * m[5], s[2] * m[6], 0,\n\t            s[0] * m[8], s[1] * m[9], s[2] * m[10], 0,\n\t            s[0] * m[12], s[1] * m[13], s[2] * m[14], 1\n\t        ];\n\t    };\n\t\n\t    /**\n\t     * Return a Transform which represents a scale by specified amounts\n\t     *    in each dimension.\n\t     *\n\t     * @method scale\n\t     * @static\n\t     * @param {Number} x x scale factor\n\t     * @param {Number} y y scale factor\n\t     * @param {Number} z z scale factor\n\t     * @return {Transform} the resulting matrix\n\t     */\n\t    Transform.scale = function scale(x, y, z) {\n\t        if (z === undefined) z = 1;\n\t        return [x, 0, 0, 0, 0, y, 0, 0, 0, 0, z, 0, 0, 0, 0, 1];\n\t    };\n\t\n\t    /**\n\t     * Return a Transform which represents a clockwise\n\t     *    rotation around the x axis.\n\t     *\n\t     * @method rotateX\n\t     * @static\n\t     * @param {Number} theta radians\n\t     * @return {Transform} the resulting matrix\n\t     */\n\t    Transform.rotateX = function rotateX(theta) {\n\t        var cosTheta = Math.cos(theta);\n\t        var sinTheta = Math.sin(theta);\n\t        return [1, 0, 0, 0, 0, cosTheta, sinTheta, 0, 0, -sinTheta, cosTheta, 0, 0, 0, 0, 1];\n\t    };\n\t\n\t    /**\n\t     * Return a Transform which represents a clockwise\n\t     *    rotation around the y axis.\n\t     *\n\t     * @method rotateY\n\t     * @static\n\t     * @param {Number} theta radians\n\t     * @return {Transform} the resulting matrix\n\t     */\n\t    Transform.rotateY = function rotateY(theta) {\n\t        var cosTheta = Math.cos(theta);\n\t        var sinTheta = Math.sin(theta);\n\t        return [cosTheta, 0, -sinTheta, 0, 0, 1, 0, 0, sinTheta, 0, cosTheta, 0, 0, 0, 0, 1];\n\t    };\n\t\n\t    /**\n\t     * Return a Transform which represents a clockwise\n\t     *    rotation around the z axis.\n\t     *\n\t     * @method rotateZ\n\t     * @static\n\t     * @param {Number} theta radians\n\t     * @return {Transform} the resulting matrix\n\t     */\n\t    Transform.rotateZ = function rotateZ(theta) {\n\t        var cosTheta = Math.cos(theta);\n\t        var sinTheta = Math.sin(theta);\n\t        return [cosTheta, sinTheta, 0, 0, -sinTheta, cosTheta, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];\n\t    };\n\t\n\t    /**\n\t     * Return a Transform which represents composed clockwise\n\t     *    rotations along each of the axes. Equivalent to the result of\n\t     *    Matrix.multiply(rotateX(phi), rotateY(theta), rotateZ(psi)).\n\t     *\n\t     * @method rotate\n\t     * @static\n\t     * @param {Number} phi radians to rotate about the positive x axis\n\t     * @param {Number} theta radians to rotate about the positive y axis\n\t     * @param {Number} psi radians to rotate about the positive z axis\n\t     * @return {Transform} the resulting matrix\n\t     */\n\t    Transform.rotate = function rotate(phi, theta, psi) {\n\t        var cosPhi = Math.cos(phi);\n\t        var sinPhi = Math.sin(phi);\n\t        var cosTheta = Math.cos(theta);\n\t        var sinTheta = Math.sin(theta);\n\t        var cosPsi = Math.cos(psi);\n\t        var sinPsi = Math.sin(psi);\n\t        var result = [\n\t            cosTheta * cosPsi,\n\t            cosPhi * sinPsi + sinPhi * sinTheta * cosPsi,\n\t            sinPhi * sinPsi - cosPhi * sinTheta * cosPsi,\n\t            0,\n\t            -cosTheta * sinPsi,\n\t            cosPhi * cosPsi - sinPhi * sinTheta * sinPsi,\n\t            sinPhi * cosPsi + cosPhi * sinTheta * sinPsi,\n\t            0,\n\t            sinTheta,\n\t            -sinPhi * cosTheta,\n\t            cosPhi * cosTheta,\n\t            0,\n\t            0, 0, 0, 1\n\t        ];\n\t        return result;\n\t    };\n\t\n\t    /**\n\t     * Return a Transform which represents an axis-angle rotation\n\t     *\n\t     * @method rotateAxis\n\t     * @static\n\t     * @param {Array.Number} v unit vector representing the axis to rotate about\n\t     * @param {Number} theta radians to rotate clockwise about the axis\n\t     * @return {Transform} the resulting matrix\n\t     */\n\t    Transform.rotateAxis = function rotateAxis(v, theta) {\n\t        var sinTheta = Math.sin(theta);\n\t        var cosTheta = Math.cos(theta);\n\t        var verTheta = 1 - cosTheta; // versine of theta\n\t\n\t        var xxV = v[0] * v[0] * verTheta;\n\t        var xyV = v[0] * v[1] * verTheta;\n\t        var xzV = v[0] * v[2] * verTheta;\n\t        var yyV = v[1] * v[1] * verTheta;\n\t        var yzV = v[1] * v[2] * verTheta;\n\t        var zzV = v[2] * v[2] * verTheta;\n\t        var xs = v[0] * sinTheta;\n\t        var ys = v[1] * sinTheta;\n\t        var zs = v[2] * sinTheta;\n\t\n\t        var result = [\n\t            xxV + cosTheta, xyV + zs, xzV - ys, 0,\n\t            xyV - zs, yyV + cosTheta, yzV + xs, 0,\n\t            xzV + ys, yzV - xs, zzV + cosTheta, 0,\n\t            0, 0, 0, 1\n\t        ];\n\t        return result;\n\t    };\n\t\n\t    /**\n\t     * Return a Transform which represents a transform matrix applied about\n\t     * a separate origin point.\n\t     *\n\t     * @method aboutOrigin\n\t     * @static\n\t     * @param {Array.Number} v origin point to apply matrix\n\t     * @param {Transform} m matrix to apply\n\t     * @return {Transform} the resulting matrix\n\t     */\n\t    Transform.aboutOrigin = function aboutOrigin(v, m) {\n\t        var t0 = v[0] - (v[0] * m[0] + v[1] * m[4] + v[2] * m[8]);\n\t        var t1 = v[1] - (v[0] * m[1] + v[1] * m[5] + v[2] * m[9]);\n\t        var t2 = v[2] - (v[0] * m[2] + v[1] * m[6] + v[2] * m[10]);\n\t        return Transform.thenMove(m, [t0, t1, t2]);\n\t    };\n\t\n\t    /**\n\t     * Return a Transform representation of a skew transformation\n\t     *\n\t     * @method skew\n\t     * @static\n\t     * @param {Number} phi scale factor skew in the x axis\n\t     * @param {Number} theta scale factor skew in the y axis\n\t     * @param {Number} psi scale factor skew in the z axis\n\t     * @return {Transform} the resulting matrix\n\t     */\n\t    Transform.skew = function skew(phi, theta, psi) {\n\t        return [1, 0, 0, 0, Math.tan(psi), 1, 0, 0, Math.tan(theta), Math.tan(phi), 1, 0, 0, 0, 0, 1];\n\t    };\n\t\n\t    /**\n\t     * Returns a perspective Transform matrix\n\t     *\n\t     * @method perspective\n\t     * @static\n\t     * @param {Number} focusZ z position of focal point\n\t     * @return {Transform} the resulting matrix\n\t     */\n\t    Transform.perspective = function perspective(focusZ) {\n\t        return [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, -1 / focusZ, 0, 0, 0, 1];\n\t    };\n\t\n\t    /**\n\t     * Return translation vector component of given Transform\n\t     *\n\t     * @method getTranslate\n\t     * @static\n\t     * @param {Transform} m matrix\n\t     * @return {Array.Number} the translation vector [t_x, t_y, t_z]\n\t     */\n\t    Transform.getTranslate = function getTranslate(m) {\n\t        return [m[12], m[13], m[14]];\n\t    };\n\t\n\t    /**\n\t     * Return inverse affine matrix for given Transform.\n\t     *   Note: This assumes m[3] = m[7] = m[11] = 0, and m[15] = 1.\n\t     *   Will provide incorrect results if not invertible or preconditions not met.\n\t     *\n\t     * @method inverse\n\t     * @static\n\t     * @param {Transform} m matrix\n\t     * @return {Transform} the resulting inverted matrix\n\t     */\n\t    Transform.inverse = function inverse(m) {\n\t        // only need to consider 3x3 section for affine\n\t        var c0 = m[5] * m[10] - m[6] * m[9];\n\t        var c1 = m[4] * m[10] - m[6] * m[8];\n\t        var c2 = m[4] * m[9] - m[5] * m[8];\n\t        var c4 = m[1] * m[10] - m[2] * m[9];\n\t        var c5 = m[0] * m[10] - m[2] * m[8];\n\t        var c6 = m[0] * m[9] - m[1] * m[8];\n\t        var c8 = m[1] * m[6] - m[2] * m[5];\n\t        var c9 = m[0] * m[6] - m[2] * m[4];\n\t        var c10 = m[0] * m[5] - m[1] * m[4];\n\t        var detM = m[0] * c0 - m[1] * c1 + m[2] * c2;\n\t        var invD = 1 / detM;\n\t        var result = [\n\t            invD * c0, -invD * c4, invD * c8, 0,\n\t            -invD * c1, invD * c5, -invD * c9, 0,\n\t            invD * c2, -invD * c6, invD * c10, 0,\n\t            0, 0, 0, 1\n\t        ];\n\t        result[12] = -m[12] * result[0] - m[13] * result[4] - m[14] * result[8];\n\t        result[13] = -m[12] * result[1] - m[13] * result[5] - m[14] * result[9];\n\t        result[14] = -m[12] * result[2] - m[13] * result[6] - m[14] * result[10];\n\t        return result;\n\t    };\n\t\n\t    /**\n\t     * Returns the transpose of a 4x4 matrix\n\t     *\n\t     * @method transpose\n\t     * @static\n\t     * @param {Transform} m matrix\n\t     * @return {Transform} the resulting transposed matrix\n\t     */\n\t    Transform.transpose = function transpose(m) {\n\t        return [m[0], m[4], m[8], m[12], m[1], m[5], m[9], m[13], m[2], m[6], m[10], m[14], m[3], m[7], m[11], m[15]];\n\t    };\n\t\n\t    function _normSquared(v) {\n\t        return (v.length === 2) ? v[0] * v[0] + v[1] * v[1] : v[0] * v[0] + v[1] * v[1] + v[2] * v[2];\n\t    }\n\t    function _norm(v) {\n\t        return Math.sqrt(_normSquared(v));\n\t    }\n\t    function _sign(n) {\n\t        return (n < 0) ? -1 : 1;\n\t    }\n\t\n\t    /**\n\t     * Decompose Transform into separate .translate, .rotate, .scale,\n\t     *    and .skew components.\n\t     *\n\t     * @method interpret\n\t     * @static\n\t     * @param {Transform} M tranform matrix\n\t     * @return {Object} matrix spec object with component matrices .translate,\n\t     *    .rotate, .scale, .skew\n\t     */\n\t    Transform.interpret = function interpret(M) {\n\t\n\t        // QR decomposition via Householder reflections\n\t        //FIRST ITERATION\n\t\n\t        //default Q1 to the identity matrix;\n\t        var x = [M[0], M[1], M[2]];                // first column vector\n\t        var sgn = _sign(x[0]);                     // sign of first component of x (for stability)\n\t        var xNorm = _norm(x);                      // norm of first column vector\n\t        var v = [x[0] + sgn * xNorm, x[1], x[2]];  // v = x + sign(x[0])|x|e1\n\t        var mult = 2 / _normSquared(v);            // mult = 2/v'v\n\t\n\t        //bail out if our Matrix is singular\n\t        if (mult >= Infinity) {\n\t            return {translate: Transform.getTranslate(M), rotate: [0, 0, 0], scale: [0, 0, 0], skew: [0, 0, 0]};\n\t        }\n\t\n\t        //evaluate Q1 = I - 2vv'/v'v\n\t        var Q1 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1];\n\t\n\t        //diagonals\n\t        Q1[0]  = 1 - mult * v[0] * v[0];    // 0,0 entry\n\t        Q1[5]  = 1 - mult * v[1] * v[1];    // 1,1 entry\n\t        Q1[10] = 1 - mult * v[2] * v[2];    // 2,2 entry\n\t\n\t        //upper diagonal\n\t        Q1[1] = -mult * v[0] * v[1];        // 0,1 entry\n\t        Q1[2] = -mult * v[0] * v[2];        // 0,2 entry\n\t        Q1[6] = -mult * v[1] * v[2];        // 1,2 entry\n\t\n\t        //lower diagonal\n\t        Q1[4] = Q1[1];                      // 1,0 entry\n\t        Q1[8] = Q1[2];                      // 2,0 entry\n\t        Q1[9] = Q1[6];                      // 2,1 entry\n\t\n\t        //reduce first column of M\n\t        var MQ1 = Transform.multiply(Q1, M);\n\t\n\t        //SECOND ITERATION on (1,1) minor\n\t        var x2 = [MQ1[5], MQ1[6]];\n\t        var sgn2 = _sign(x2[0]);                    // sign of first component of x (for stability)\n\t        var x2Norm = _norm(x2);                     // norm of first column vector\n\t        var v2 = [x2[0] + sgn2 * x2Norm, x2[1]];    // v = x + sign(x[0])|x|e1\n\t        var mult2 = 2 / _normSquared(v2);           // mult = 2/v'v\n\t\n\t        //evaluate Q2 = I - 2vv'/v'v\n\t        var Q2 = [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1];\n\t\n\t        //diagonal\n\t        Q2[5]  = 1 - mult2 * v2[0] * v2[0]; // 1,1 entry\n\t        Q2[10] = 1 - mult2 * v2[1] * v2[1]; // 2,2 entry\n\t\n\t        //off diagonals\n\t        Q2[6] = -mult2 * v2[0] * v2[1];     // 2,1 entry\n\t        Q2[9] = Q2[6];                      // 1,2 entry\n\t\n\t        //calc QR decomposition. Q = Q1*Q2, R = Q'*M\n\t        var Q = Transform.multiply(Q2, Q1);      //note: really Q transpose\n\t        var R = Transform.multiply(Q, M);\n\t\n\t        //remove negative scaling\n\t        var remover = Transform.scale(R[0] < 0 ? -1 : 1, R[5] < 0 ? -1 : 1, R[10] < 0 ? -1 : 1);\n\t        R = Transform.multiply(R, remover);\n\t        Q = Transform.multiply(remover, Q);\n\t\n\t        //decompose into rotate/scale/skew matrices\n\t        var result = {};\n\t        result.translate = Transform.getTranslate(M);\n\t        result.rotate = [Math.atan2(-Q[6], Q[10]), Math.asin(Q[2]), Math.atan2(-Q[1], Q[0])];\n\t        if (!result.rotate[0]) {\n\t            result.rotate[0] = 0;\n\t            result.rotate[2] = Math.atan2(Q[4], Q[5]);\n\t        }\n\t        result.scale = [R[0], R[5], R[10]];\n\t        result.skew = [Math.atan2(R[9], result.scale[2]), Math.atan2(R[8], result.scale[2]), Math.atan2(R[4], result.scale[0])];\n\t\n\t        //double rotation workaround\n\t        if (Math.abs(result.rotate[0]) + Math.abs(result.rotate[2]) > 1.5 * Math.PI) {\n\t            result.rotate[1] = Math.PI - result.rotate[1];\n\t            if (result.rotate[1] > Math.PI) result.rotate[1] -= 2 * Math.PI;\n\t            if (result.rotate[1] < -Math.PI) result.rotate[1] += 2 * Math.PI;\n\t            if (result.rotate[0] < 0) result.rotate[0] += Math.PI;\n\t            else result.rotate[0] -= Math.PI;\n\t            if (result.rotate[2] < 0) result.rotate[2] += Math.PI;\n\t            else result.rotate[2] -= Math.PI;\n\t        }\n\t\n\t        return result;\n\t    };\n\t\n\t    /**\n\t     * Weighted average between two matrices by averaging their\n\t     *     translation, rotation, scale, skew components.\n\t     *     f(M1,M2,t) = (1 - t) * M1 + t * M2\n\t     *\n\t     * @method average\n\t     * @static\n\t     * @param {Transform} M1 f(M1,M2,0) = M1\n\t     * @param {Transform} M2 f(M1,M2,1) = M2\n\t     * @param {Number} t\n\t     * @return {Transform} resulting matrix\n\t     */\n\t    Transform.average = function average(M1, M2, t) {\n\t        t = (t === undefined) ? 0.5 : t;\n\t        var specM1 = Transform.interpret(M1);\n\t        var specM2 = Transform.interpret(M2);\n\t\n\t        var specAvg = {\n\t            translate: [0, 0, 0],\n\t            rotate: [0, 0, 0],\n\t            scale: [0, 0, 0],\n\t            skew: [0, 0, 0]\n\t        };\n\t\n\t        for (var i = 0; i < 3; i++) {\n\t            specAvg.translate[i] = (1 - t) * specM1.translate[i] + t * specM2.translate[i];\n\t            specAvg.rotate[i] = (1 - t) * specM1.rotate[i] + t * specM2.rotate[i];\n\t            specAvg.scale[i] = (1 - t) * specM1.scale[i] + t * specM2.scale[i];\n\t            specAvg.skew[i] = (1 - t) * specM1.skew[i] + t * specM2.skew[i];\n\t        }\n\t        return Transform.build(specAvg);\n\t    };\n\t\n\t    /**\n\t     * Compose .translate, .rotate, .scale, .skew components into\n\t     * Transform matrix\n\t     *\n\t     * @method build\n\t     * @static\n\t     * @param {matrixSpec} spec object with component matrices .translate,\n\t     *    .rotate, .scale, .skew\n\t     * @return {Transform} composed martix\n\t     */\n\t    Transform.build = function build(spec) {\n\t        var scaleMatrix = Transform.scale(spec.scale[0], spec.scale[1], spec.scale[2]);\n\t        var skewMatrix = Transform.skew(spec.skew[0], spec.skew[1], spec.skew[2]);\n\t        var rotateMatrix = Transform.rotate(spec.rotate[0], spec.rotate[1], spec.rotate[2]);\n\t        return Transform.thenMove(Transform.multiply(Transform.multiply(rotateMatrix, skewMatrix), scaleMatrix), spec.translate);\n\t    };\n\t\n\t    /**\n\t     * Determine if two Transforms are component-wise equal\n\t     *   Warning: breaks on perspective Transforms\n\t     *\n\t     * @method equals\n\t     * @static\n\t     * @param {Transform} a matrix\n\t     * @param {Transform} b matrix\n\t     * @return {boolean}\n\t     */\n\t    Transform.equals = function equals(a, b) {\n\t        return !Transform.notEquals(a, b);\n\t    };\n\t\n\t    /**\n\t     * Determine if two Transforms are component-wise unequal\n\t     *   Warning: breaks on perspective Transforms\n\t     *\n\t     * @method notEquals\n\t     * @static\n\t     * @param {Transform} a matrix\n\t     * @param {Transform} b matrix\n\t     * @return {boolean}\n\t     */\n\t    Transform.notEquals = function notEquals(a, b) {\n\t        if (a === b) return false;\n\t        if (!(a && b)) return true;\n\t\n\t        // shortci\n\t        return !(a && b) ||\n\t            a[12] !== b[12] || a[13] !== b[13] || a[14] !== b[14] ||\n\t            a[0] !== b[0] || a[1] !== b[1] || a[2] !== b[2] ||\n\t            a[4] !== b[4] || a[5] !== b[5] || a[6] !== b[6] ||\n\t            a[8] !== b[8] || a[9] !== b[9] || a[10] !== b[10];\n\t    };\n\t\n\t    /**\n\t     * Constrain angle-trio components to range of [-pi, pi).\n\t     *\n\t     * @method normalizeRotation\n\t     * @static\n\t     * @param {Array.Number} rotation phi, theta, psi (array of floats\n\t     *    && array.length == 3)\n\t     * @return {Array.Number} new phi, theta, psi triplet\n\t     *    (array of floats && array.length == 3)\n\t     */\n\t    Transform.normalizeRotation = function normalizeRotation(rotation) {\n\t        var result = rotation.slice(0);\n\t        if (result[0] === Math.PI * 0.5 || result[0] === -Math.PI * 0.5) {\n\t            result[0] = -result[0];\n\t            result[1] = Math.PI - result[1];\n\t            result[2] -= Math.PI;\n\t        }\n\t        if (result[0] > Math.PI * 0.5) {\n\t            result[0] = result[0] - Math.PI;\n\t            result[1] = Math.PI - result[1];\n\t            result[2] -= Math.PI;\n\t        }\n\t        if (result[0] < -Math.PI * 0.5) {\n\t            result[0] = result[0] + Math.PI;\n\t            result[1] = -Math.PI - result[1];\n\t            result[2] -= Math.PI;\n\t        }\n\t        while (result[1] < -Math.PI) result[1] += 2 * Math.PI;\n\t        while (result[1] >= Math.PI) result[1] -= 2 * Math.PI;\n\t        while (result[2] < -Math.PI) result[2] += 2 * Math.PI;\n\t        while (result[2] >= Math.PI) result[2] -= 2 * Math.PI;\n\t        return result;\n\t    };\n\t\n\t    /**\n\t     * (Property) Array defining a translation forward in z by 1\n\t     *\n\t     * @property {array} inFront\n\t     * @static\n\t     * @final\n\t     */\n\t    Transform.inFront = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1e-3, 1];\n\t\n\t    /**\n\t     * (Property) Array defining a translation backwards in z by 1\n\t     *\n\t     * @property {array} behind\n\t     * @static\n\t     * @final\n\t     */\n\t    Transform.behind = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, -1e-3, 1];\n\t\n\t    module.exports = Transform;\n\t}.call(exports, __webpack_require__, exports, module)), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright (c) 2014 Petka Antonov\n\t * \n\t * Permission is hereby granted, free of charge, to any person obtaining a copy\n\t * of this software and associated documentation files (the \"Software\"), to deal\n\t * in the Software without restriction, including without limitation the rights\n\t * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\t * copies of the Software, and to permit persons to whom the Software is\n\t * furnished to do so, subject to the following conditions:</p>\n\t * \n\t * The above copyright notice and this permission notice shall be included in\n\t * all copies or substantial portions of the Software.\n\t * \n\t * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\t * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\t * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE\n\t * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\t * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\t * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n\t * THE SOFTWARE.\n\t * \n\t */\n\t\"use strict\";\n\tvar global = __webpack_require__(21);\n\tvar es5 = __webpack_require__(19);\n\tvar haveGetters = (function(){\n\t    try {\n\t        var o = {};\n\t        es5.defineProperty(o, \"f\", {\n\t            get: function () {\n\t                return 3;\n\t            }\n\t        });\n\t        return o.f === 3;\n\t    }\n\t    catch (e) {\n\t        return false;\n\t    }\n\t\n\t})();\n\t\n\tvar canEvaluate = (function() {\n\t    if (typeof window !== \"undefined\" && window !== null &&\n\t        typeof window.document !== \"undefined\" &&\n\t        typeof navigator !== \"undefined\" && navigator !== null &&\n\t        typeof navigator.appName === \"string\" &&\n\t        window === global) {\n\t        return false;\n\t    }\n\t    return true;\n\t})();\n\t\n\tfunction deprecated(msg) {\n\t    if (typeof console !== \"undefined\" && console !== null &&\n\t        typeof console.warn === \"function\") {\n\t        console.warn(\"Bluebird: \" + msg);\n\t    }\n\t}\n\t\n\tvar errorObj = {e: {}};\n\tfunction tryCatch1(fn, receiver, arg) {\n\t    try {\n\t        return fn.call(receiver, arg);\n\t    }\n\t    catch (e) {\n\t        errorObj.e = e;\n\t        return errorObj;\n\t    }\n\t}\n\t\n\tfunction tryCatch2(fn, receiver, arg, arg2) {\n\t    try {\n\t        return fn.call(receiver, arg, arg2);\n\t    }\n\t    catch (e) {\n\t        errorObj.e = e;\n\t        return errorObj;\n\t    }\n\t}\n\t\n\tfunction tryCatchApply(fn, args, receiver) {\n\t    try {\n\t        return fn.apply(receiver, args);\n\t    }\n\t    catch (e) {\n\t        errorObj.e = e;\n\t        return errorObj;\n\t    }\n\t}\n\t\n\tvar inherits = function(Child, Parent) {\n\t    var hasProp = {}.hasOwnProperty;\n\t\n\t    function T() {\n\t        this.constructor = Child;\n\t        this.constructor$ = Parent;\n\t        for (var propertyName in Parent.prototype) {\n\t            if (hasProp.call(Parent.prototype, propertyName) &&\n\t                propertyName.charAt(propertyName.length-1) !== \"$\"\n\t           ) {\n\t                this[propertyName + \"$\"] = Parent.prototype[propertyName];\n\t            }\n\t        }\n\t    }\n\t    T.prototype = Parent.prototype;\n\t    Child.prototype = new T();\n\t    return Child.prototype;\n\t};\n\t\n\tfunction asString(val) {\n\t    return typeof val === \"string\" ? val : (\"\" + val);\n\t}\n\t\n\tfunction isPrimitive(val) {\n\t    return val == null || val === true || val === false ||\n\t        typeof val === \"string\" || typeof val === \"number\";\n\t\n\t}\n\t\n\tfunction isObject(value) {\n\t    return !isPrimitive(value);\n\t}\n\t\n\tfunction maybeWrapAsError(maybeError) {\n\t    if (!isPrimitive(maybeError)) return maybeError;\n\t\n\t    return new Error(asString(maybeError));\n\t}\n\t\n\tfunction withAppended(target, appendee) {\n\t    var len = target.length;\n\t    var ret = new Array(len + 1);\n\t    var i;\n\t    for (i = 0; i < len; ++i) {\n\t        ret[i] = target[i];\n\t    }\n\t    ret[i] = appendee;\n\t    return ret;\n\t}\n\t\n\t\n\tfunction notEnumerableProp(obj, name, value) {\n\t    if (isPrimitive(obj)) return obj;\n\t    var descriptor = {\n\t        value: value,\n\t        configurable: true,\n\t        enumerable: false,\n\t        writable: true\n\t    };\n\t    es5.defineProperty(obj, name, descriptor);\n\t    return obj;\n\t}\n\t\n\t\n\tvar wrapsPrimitiveReceiver = (function() {\n\t    return this !== \"string\";\n\t}).call(\"string\");\n\t\n\tfunction thrower(r) {\n\t    throw r;\n\t}\n\t\n\t\n\tfunction toFastProperties(obj) {\n\t    /*jshint -W027*/\n\t    function f() {}\n\t    f.prototype = obj;\n\t    return f;\n\t    eval(obj);\n\t}\n\t\n\tvar ret = {\n\t    thrower: thrower,\n\t    isArray: es5.isArray,\n\t    haveGetters: haveGetters,\n\t    notEnumerableProp: notEnumerableProp,\n\t    isPrimitive: isPrimitive,\n\t    isObject: isObject,\n\t    canEvaluate: canEvaluate,\n\t    deprecated: deprecated,\n\t    errorObj: errorObj,\n\t    tryCatch1: tryCatch1,\n\t    tryCatch2: tryCatch2,\n\t    tryCatchApply: tryCatchApply,\n\t    inherits: inherits,\n\t    withAppended: withAppended,\n\t    asString: asString,\n\t    maybeWrapAsError: maybeWrapAsError,\n\t    wrapsPrimitiveReceiver: wrapsPrimitiveReceiver,\n\t    toFastProperties: toFastProperties\n\t};\n\t\n\tmodule.exports = ret;\n\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;/* This Source Code Form is subject to the terms of the Mozilla Public\n\t * License, v. 2.0. If a copy of the MPL was not distributed with this\n\t * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n\t *\n\t * Owner: mark@famo.us\n\t * @license MPL 2.0\n\t * @copyright Famous Industries, Inc. 2014\n\t */\n\t\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = (function(require, exports, module) {\n\t    var Entity = __webpack_require__(25);\n\t    var EventHandler = __webpack_require__(6);\n\t    var Transform = __webpack_require__(1);\n\t\n\t    var devicePixelRatio = window.devicePixelRatio || 1;\n\t    var usePrefix = document.createElement('div').style.webkitTransform !== undefined;\n\t\n\t    /**\n\t     * A base class for viewable content and event\n\t     *   targets inside a Famo.us application, containing a renderable document\n\t     *   fragment. Like an HTML div, it can accept internal markup,\n\t     *   properties, classes, and handle events.\n\t     *\n\t     * @class Surface\n\t     * @constructor\n\t     *\n\t     * @param {Object} [options] default option overrides\n\t     * @param {Array.Number} [options.size] [width, height] in pixels\n\t     * @param {Array.string} [options.classes] CSS classes to set on inner content\n\t     * @param {Array} [options.properties] string dictionary of HTML attributes to set on target div\n\t     * @param {string} [options.content] inner (HTML) content of surface\n\t     */\n\t    function Surface(options) {\n\t        this.options = {};\n\t\n\t        this.properties = {};\n\t        this.content = '';\n\t        this.classList = [];\n\t        this.size = null;\n\t\n\t        this._classesDirty = true;\n\t        this._stylesDirty = true;\n\t        this._sizeDirty = true;\n\t        this._contentDirty = true;\n\t\n\t        this._dirtyClasses = [];\n\t\n\t        this._matrix = null;\n\t        this._opacity = 1;\n\t        this._origin = null;\n\t        this._size = null;\n\t\n\t        /** @ignore */\n\t        this.eventForwarder = function eventForwarder(event) {\n\t            this.emit(event.type, event);\n\t        }.bind(this);\n\t        this.eventHandler = new EventHandler();\n\t        this.eventHandler.bindThis(this);\n\t\n\t        this.id = Entity.register(this);\n\t\n\t        if (options) this.setOptions(options);\n\t\n\t        this._currTarget = null;\n\t    }\n\t    Surface.prototype.elementType = 'div';\n\t    Surface.prototype.elementClass = 'famous-surface';\n\t\n\t    /**\n\t     * Bind a callback function to an event type handled by this object.\n\t     *\n\t     * @method \"on\"\n\t     *\n\t     * @param {string} type event type key (for example, 'click')\n\t     * @param {function(string, Object)} fn handler callback\n\t     * @return {EventHandler} this\n\t     */\n\t    Surface.prototype.on = function on(type, fn) {\n\t        if (this._currTarget) this._currTarget.addEventListener(type, this.eventForwarder);\n\t        this.eventHandler.on(type, fn);\n\t    };\n\t\n\t    /**\n\t     * Unbind an event by type and handler.\n\t     *   This undoes the work of \"on\"\n\t     *\n\t     * @method removeListener\n\t     * @param {string} type event type key (for example, 'click')\n\t     * @param {function(string, Object)} fn handler\n\t     */\n\t    Surface.prototype.removeListener = function removeListener(type, fn) {\n\t        this.eventHandler.removeListener(type, fn);\n\t    };\n\t\n\t    /**\n\t     * Trigger an event, sending to all downstream handlers\n\t     *   listening for provided 'type' key.\n\t     *\n\t     * @method emit\n\t     *\n\t     * @param {string} type event type key (for example, 'click')\n\t     * @param {Object} [event] event data\n\t     * @return {EventHandler} this\n\t     */\n\t    Surface.prototype.emit = function emit(type, event) {\n\t        if (event && !event.origin) event.origin = this;\n\t        var handled = this.eventHandler.emit(type, event);\n\t        if (handled && event && event.stopPropagation) event.stopPropagation();\n\t        return handled;\n\t    };\n\t\n\t    /**\n\t     * Add event handler object to set of downstream handlers.\n\t     *\n\t     * @method pipe\n\t     *\n\t     * @param {EventHandler} target event handler target object\n\t     * @return {EventHandler} passed event handler\n\t     */\n\t    Surface.prototype.pipe = function pipe(target) {\n\t        return this.eventHandler.pipe(target);\n\t    };\n\t\n\t    /**\n\t     * Remove handler object from set of downstream handlers.\n\t     *   Undoes work of \"pipe\"\n\t     *\n\t     * @method unpipe\n\t     *\n\t     * @param {EventHandler} target target handler object\n\t     * @return {EventHandler} provided target\n\t     */\n\t    Surface.prototype.unpipe = function unpipe(target) {\n\t        return this.eventHandler.unpipe(target);\n\t    };\n\t\n\t    /**\n\t     * Return spec for this surface. Note that for a base surface, this is\n\t     *    simply an id.\n\t     *\n\t     * @method render\n\t     * @private\n\t     * @return {Object} render spec for this surface (spec id)\n\t     */\n\t    Surface.prototype.render = function render() {\n\t        return this.id;\n\t    };\n\t\n\t    /**\n\t     * Set CSS-style properties on this Surface. Note that this will cause\n\t     *    dirtying and thus re-rendering, even if values do not change.\n\t     *\n\t     * @method setProperties\n\t     * @param {Object} properties property dictionary of \"key\" => \"value\"\n\t     */\n\t    Surface.prototype.setProperties = function setProperties(properties) {\n\t        for (var n in properties) {\n\t            this.properties[n] = properties[n];\n\t        }\n\t        this._stylesDirty = true;\n\t    };\n\t\n\t    /**\n\t     * Get CSS-style properties on this Surface.\n\t     *\n\t     * @method getProperties\n\t     *\n\t     * @return {Object} Dictionary of this Surface's properties.\n\t     */\n\t    Surface.prototype.getProperties = function getProperties() {\n\t        return this.properties;\n\t    };\n\t\n\t    /**\n\t     * Add CSS-style class to the list of classes on this Surface. Note\n\t     *   this will map directly to the HTML property of the actual\n\t     *   corresponding rendered <div>.\n\t     *\n\t     * @method addClass\n\t     * @param {string} className name of class to add\n\t     */\n\t    Surface.prototype.addClass = function addClass(className) {\n\t        if (this.classList.indexOf(className) < 0) {\n\t            this.classList.push(className);\n\t            this._classesDirty = true;\n\t        }\n\t    };\n\t\n\t    /**\n\t     * Remove CSS-style class from the list of classes on this Surface.\n\t     *   Note this will map directly to the HTML property of the actual\n\t     *   corresponding rendered <div>.\n\t     *\n\t     * @method removeClass\n\t     * @param {string} className name of class to remove\n\t     */\n\t    Surface.prototype.removeClass = function removeClass(className) {\n\t        var i = this.classList.indexOf(className);\n\t        if (i >= 0) {\n\t            this._dirtyClasses.push(this.classList.splice(i, 1)[0]);\n\t            this._classesDirty = true;\n\t        }\n\t    };\n\t\n\t    /**\n\t     * Reset class list to provided dictionary.\n\t     * @method setClasses\n\t     * @param {Array.string} classList\n\t     */\n\t    Surface.prototype.setClasses = function setClasses(classList) {\n\t        var i = 0;\n\t        var removal = [];\n\t        for (i = 0; i < this.classList.length; i++) {\n\t            if (classList.indexOf(this.classList[i]) < 0) removal.push(this.classList[i]);\n\t        }\n\t        for (i = 0; i < removal.length; i++) this.removeClass(removal[i]);\n\t        // duplicates are already checked by addClass()\n\t        for (i = 0; i < classList.length; i++) this.addClass(classList[i]);\n\t    };\n\t\n\t    /**\n\t     * Get array of CSS-style classes attached to this div.\n\t     *\n\t     * @method getClasslist\n\t     * @return {Array.string} array of class names\n\t     */\n\t    Surface.prototype.getClassList = function getClassList() {\n\t        return this.classList;\n\t    };\n\t\n\t    /**\n\t     * Set or overwrite inner (HTML) content of this surface. Note that this\n\t     *    causes a re-rendering if the content has changed.\n\t     *\n\t     * @method setContent\n\t     * @param {string} content HTML content\n\t     */\n\t    Surface.prototype.setContent = function setContent(content) {\n\t        if (this.content !== content) {\n\t            this.content = content;\n\t            this._contentDirty = true;\n\t        }\n\t    };\n\t\n\t    /**\n\t     * Return inner (HTML) content of this surface.\n\t     *\n\t     * @method getContent\n\t     *\n\t     * @return {string} inner (HTML) content\n\t     */\n\t    Surface.prototype.getContent = function getContent() {\n\t        return this.content;\n\t    };\n\t\n\t    /**\n\t     * Set options for this surface\n\t     *\n\t     * @method setOptions\n\t     * @param {Object} [options] overrides for default options.  See constructor.\n\t     */\n\t    Surface.prototype.setOptions = function setOptions(options) {\n\t        if (options.size) this.setSize(options.size);\n\t        if (options.classes) this.setClasses(options.classes);\n\t        if (options.properties) this.setProperties(options.properties);\n\t        if (options.content) this.setContent(options.content);\n\t    };\n\t\n\t    //  Attach Famous event handling to document events emanating from target\n\t    //    document element.  This occurs just after deployment to the document.\n\t    //    Calling this enables methods like #on and #pipe.\n\t    function _addEventListeners(target) {\n\t        for (var i in this.eventHandler.listeners) {\n\t            target.addEventListener(i, this.eventForwarder);\n\t        }\n\t    }\n\t\n\t    //  Detach Famous event handling from document events emanating from target\n\t    //  document element.  This occurs just before recall from the document.\n\t    function _removeEventListeners(target) {\n\t        for (var i in this.eventHandler.listeners) {\n\t            target.removeEventListener(i, this.eventForwarder);\n\t        }\n\t    }\n\t\n\t     //  Apply to document all changes from removeClass() since last setup().\n\t    function _cleanupClasses(target) {\n\t        for (var i = 0; i < this._dirtyClasses.length; i++) target.classList.remove(this._dirtyClasses[i]);\n\t        this._dirtyClasses = [];\n\t    }\n\t\n\t    // Apply values of all Famous-managed styles to the document element.\n\t    //  These will be deployed to the document on call to #setup().\n\t    function _applyStyles(target) {\n\t        for (var n in this.properties) {\n\t            target.style[n] = this.properties[n];\n\t        }\n\t    }\n\t\n\t    // Clear all Famous-managed styles from the document element.\n\t    // These will be deployed to the document on call to #setup().\n\t    function _cleanupStyles(target) {\n\t        for (var n in this.properties) {\n\t            target.style[n] = '';\n\t        }\n\t    }\n\t\n\t    /**\n\t     * Return a Matrix's webkit css representation to be used with the\n\t     *    CSS3 -webkit-transform style.\n\t     *    Example: -webkit-transform: matrix3d(1,0,0,0,0,1,0,0,0,0,1,0,716,243,0,1)\n\t     *\n\t     * @method _formatCSSTransform\n\t     * @private\n\t     * @param {FamousMatrix} m matrix\n\t     * @return {string} matrix3d CSS style representation of the transform\n\t     */\n\t    function _formatCSSTransform(m) {\n\t        m[12] = Math.round(m[12] * devicePixelRatio) / devicePixelRatio;\n\t        m[13] = Math.round(m[13] * devicePixelRatio) / devicePixelRatio;\n\t\n\t        var result = 'matrix3d(';\n\t        for (var i = 0; i < 15; i++) {\n\t            result += (m[i] < 0.000001 && m[i] > -0.000001) ? '0,' : m[i] + ',';\n\t        }\n\t        result += m[15] + ')';\n\t        return result;\n\t    }\n\t\n\t    /**\n\t     * Directly apply given FamousMatrix to the document element as the\n\t     *   appropriate webkit CSS style.\n\t     *\n\t     * @method setMatrix\n\t     *\n\t     * @static\n\t     * @private\n\t     * @param {Element} element document element\n\t     * @param {FamousMatrix} matrix\n\t     */\n\t\n\t    var _setMatrix;\n\t    if (navigator.userAgent.toLowerCase().indexOf('firefox') > -1) {\n\t        _setMatrix = function(element, matrix) {\n\t            element.style.zIndex = (matrix[14] * 1000000) | 0;    // fix for Firefox z-buffer issues\n\t            element.style.transform = _formatCSSTransform(matrix);\n\t        };\n\t    }\n\t    else if (usePrefix) {\n\t        _setMatrix = function(element, matrix) {\n\t            element.style.webkitTransform = _formatCSSTransform(matrix);\n\t        };\n\t    }\n\t    else {\n\t        _setMatrix = function(element, matrix) {\n\t            element.style.transform = _formatCSSTransform(matrix);\n\t        };\n\t    }\n\t\n\t    // format origin as CSS percentage string\n\t    function _formatCSSOrigin(origin) {\n\t        return (100 * origin[0]) + '% ' + (100 * origin[1]) + '%';\n\t    }\n\t\n\t     // Directly apply given origin coordinates to the document element as the\n\t     // appropriate webkit CSS style.\n\t    var _setOrigin = usePrefix ? function(element, origin) {\n\t        element.style.webkitTransformOrigin = _formatCSSOrigin(origin);\n\t    } : function(element, origin) {\n\t        element.style.transformOrigin = _formatCSSOrigin(origin);\n\t    };\n\t\n\t     // Shrink given document element until it is effectively invisible.\n\t    var _setInvisible = usePrefix ? function(element) {\n\t        element.style.webkitTransform = 'scale3d(0.0001,0.0001,1)';\n\t        element.style.opacity = 0;\n\t    } : function(element) {\n\t        element.style.transform = 'scale3d(0.0001,0.0001,1)';\n\t        element.style.opacity = 0;\n\t    };\n\t\n\t    function _xyNotEquals(a, b) {\n\t        return (a && b) ? (a[0] !== b[0] || a[1] !== b[1]) : a !== b;\n\t    }\n\t\n\t    /**\n\t     * One-time setup for an element to be ready for commits to document.\n\t     *\n\t     * @private\n\t     * @method setup\n\t     *\n\t     * @param {ElementAllocator} allocator document element pool for this context\n\t     */\n\t    Surface.prototype.setup = function setup(allocator) {\n\t        var target = allocator.allocate(this.elementType);\n\t        if (this.elementClass) {\n\t            if (this.elementClass instanceof Array) {\n\t                for (var i = 0; i < this.elementClass.length; i++) {\n\t                    target.classList.add(this.elementClass[i]);\n\t                }\n\t            }\n\t            else {\n\t                target.classList.add(this.elementClass);\n\t            }\n\t        }\n\t        target.style.display = '';\n\t        _addEventListeners.call(this, target);\n\t        this._currTarget = target;\n\t        this._stylesDirty = true;\n\t        this._classesDirty = true;\n\t        this._sizeDirty = true;\n\t        this._contentDirty = true;\n\t        this._matrix = null;\n\t        this._opacity = undefined;\n\t        this._origin = null;\n\t        this._size = null;\n\t    };\n\t\n\t    /**\n\t     * Apply changes from this component to the corresponding document element.\n\t     * This includes changes to classes, styles, size, content, opacity, origin,\n\t     * and matrix transforms.\n\t     *\n\t     * @private\n\t     * @method commit\n\t     * @param {Context} context commit context\n\t     */\n\t    Surface.prototype.commit = function commit(context) {\n\t        if (!this._currTarget) this.setup(context.allocator);\n\t        var target = this._currTarget;\n\t\n\t        var matrix = context.transform;\n\t        var opacity = context.opacity;\n\t        var origin = context.origin;\n\t        var size = context.size;\n\t\n\t        if (this._classesDirty) {\n\t            _cleanupClasses.call(this, target);\n\t            var classList = this.getClassList();\n\t            for (var i = 0; i < classList.length; i++) target.classList.add(classList[i]);\n\t            this._classesDirty = false;\n\t        }\n\t\n\t        if (this._stylesDirty) {\n\t            _applyStyles.call(this, target);\n\t            this._stylesDirty = false;\n\t        }\n\t\n\t        if (this._contentDirty) {\n\t            this.deploy(target);\n\t            this.eventHandler.emit('deploy');\n\t            this._contentDirty = false;\n\t        }\n\t\n\t        if (this.size) {\n\t            var origSize = size;\n\t            size = [this.size[0], this.size[1]];\n\t            if (size[0] === undefined && origSize[0]) size[0] = origSize[0];\n\t            if (size[1] === undefined && origSize[1]) size[1] = origSize[1];\n\t        }\n\t\n\t        if (size[0] === true) size[0] = target.clientWidth;\n\t        if (size[1] === true) size[1] = target.clientHeight;\n\t\n\t        if (_xyNotEquals(this._size, size)) {\n\t            if (!this._size) this._size = [0, 0];\n\t            this._size[0] = size[0];\n\t            this._size[1] = size[1];\n\t            this._sizeDirty = true;\n\t        }\n\t\n\t        if (!matrix && this._matrix) {\n\t            this._matrix = null;\n\t            this._opacity = 0;\n\t            _setInvisible(target);\n\t            return;\n\t        }\n\t\n\t        if (this._opacity !== opacity) {\n\t            this._opacity = opacity;\n\t            target.style.opacity = (opacity >= 1) ? '0.999999' : opacity;\n\t        }\n\t\n\t        if (_xyNotEquals(this._origin, origin) || Transform.notEquals(this._matrix, matrix) || this._sizeDirty) {\n\t            if (!matrix) matrix = Transform.identity;\n\t            this._matrix = matrix;\n\t            var aaMatrix = matrix;\n\t            if (origin) {\n\t                if (!this._origin) this._origin = [0, 0];\n\t                this._origin[0] = origin[0];\n\t                this._origin[1] = origin[1];\n\t                aaMatrix = Transform.thenMove(matrix, [-this._size[0] * origin[0], -this._size[1] * origin[1], 0]);\n\t                _setOrigin(target, origin);\n\t            }\n\t            _setMatrix(target, aaMatrix);\n\t        }\n\t\n\t        if (this._sizeDirty) {\n\t            if (this._size) {\n\t                target.style.width = (this.size && this.size[0] === true) ? '' : this._size[0] + 'px';\n\t                target.style.height = (this.size && this.size[1] === true) ?  '' : this._size[1] + 'px';\n\t            }\n\t            this._sizeDirty = false;\n\t        }\n\t    };\n\t\n\t    /**\n\t     *  Remove all Famous-relevant attributes from a document element.\n\t     *    This is called by SurfaceManager's detach().\n\t     *    This is in some sense the reverse of .deploy().\n\t     *\n\t     * @private\n\t     * @method cleanup\n\t     * @param {ElementAllocator} allocator\n\t     */\n\t    Surface.prototype.cleanup = function cleanup(allocator) {\n\t        var i = 0;\n\t        var target = this._currTarget;\n\t        this.eventHandler.emit('recall');\n\t        this.recall(target);\n\t        target.style.display = 'none';\n\t        target.style.width = '';\n\t        target.style.height = '';\n\t        this._size = null;\n\t        _cleanupStyles.call(this, target);\n\t        var classList = this.getClassList();\n\t        _cleanupClasses.call(this, target);\n\t        for (i = 0; i < classList.length; i++) target.classList.remove(classList[i]);\n\t        if (this.elementClass) {\n\t            if (this.elementClass instanceof Array) {\n\t                for (i = 0; i < this.elementClass.length; i++) {\n\t                    target.classList.remove(this.elementClass[i]);\n\t                }\n\t            }\n\t            else {\n\t                target.classList.remove(this.elementClass);\n\t            }\n\t        }\n\t        _removeEventListeners.call(this, target);\n\t        this._currTarget = null;\n\t        allocator.deallocate(target);\n\t        _setInvisible(target);\n\t    };\n\t\n\t    /**\n\t     * Place the document element that this component manages into the document.\n\t     *\n\t     * @private\n\t     * @method deploy\n\t     * @param {Node} target document parent of this container\n\t     */\n\t    Surface.prototype.deploy = function deploy(target) {\n\t        var content = this.getContent();\n\t        if (content instanceof Node) {\n\t            while (target.hasChildNodes()) target.removeChild(target.firstChild);\n\t            target.appendChild(content);\n\t        }\n\t        else target.innerHTML = content;\n\t    };\n\t\n\t    /**\n\t     * Remove any contained document content associated with this surface\n\t     *   from the actual document.\n\t     *\n\t     * @private\n\t     * @method recall\n\t     */\n\t    Surface.prototype.recall = function recall(target) {\n\t        var df = document.createDocumentFragment();\n\t        while (target.hasChildNodes()) df.appendChild(target.firstChild);\n\t        this.setContent(df);\n\t    };\n\t\n\t    /**\n\t     *  Get the x and y dimensions of the surface.\n\t     *\n\t     * @method getSize\n\t     * @param {boolean} actual return computed size rather than provided\n\t     * @return {Array.Number} [x,y] size of surface\n\t     */\n\t    Surface.prototype.getSize = function getSize(actual) {\n\t        return actual ? this._size : (this.size || this._size);\n\t    };\n\t\n\t    /**\n\t     * Set x and y dimensions of the surface.\n\t     *\n\t     * @method setSize\n\t     * @param {Array.Number} size as [width, height]\n\t     */\n\t    Surface.prototype.setSize = function setSize(size) {\n\t        this.size = size ? [size[0], size[1]] : null;\n\t        this._sizeDirty = true;\n\t    };\n\t\n\t    module.exports = Surface;\n\t}.call(exports, __webpack_require__, exports, module)), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 4 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;/* This Source Code Form is subject to the terms of the Mozilla Public\n\t * License, v. 2.0. If a copy of the MPL was not distributed with this\n\t * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n\t *\n\t * Owner: mark@famo.us\n\t * @license MPL 2.0\n\t * @copyright Famous Industries, Inc. 2014\n\t */\n\t\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = (function(require, exports, module) {\n\t    var EventHandler = __webpack_require__(6);\n\t    var OptionsManager = __webpack_require__(18);\n\t    var RenderNode = __webpack_require__(26);\n\t\n\t    /**\n\t     * Useful for quickly creating elements within applications\n\t     *   with large event systems.  Consists of a RenderNode paired with\n\t     *   an input EventHandler and an output EventHandler.\n\t     *   Meant to be extended by the developer.\n\t     *\n\t     * @class View\n\t     * @uses EventHandler\n\t     * @uses OptionsManager\n\t     * @uses RenderNode\n\t     * @constructor\n\t     */\n\t    function View(options) {\n\t        this._node = new RenderNode();\n\t\n\t        this._eventInput = new EventHandler();\n\t        this._eventOutput = new EventHandler();\n\t        EventHandler.setInputHandler(this, this._eventInput);\n\t        EventHandler.setOutputHandler(this, this._eventOutput);\n\t\n\t        this.options = Object.create(this.constructor.DEFAULT_OPTIONS || View.DEFAULT_OPTIONS);\n\t        this._optionsManager = new OptionsManager(this.options);\n\t\n\t        if (options) this.setOptions(options);\n\t    }\n\t\n\t    View.DEFAULT_OPTIONS = {}; // no defaults\n\t\n\t    /**\n\t     * Look up options value by key\n\t     * @method getOptions\n\t     *\n\t     * @param {string} key key\n\t     * @return {Object} associated object\n\t     */\n\t    View.prototype.getOptions = function getOptions() {\n\t        return this._optionsManager.value();\n\t    };\n\t\n\t    /*\n\t     *  Set internal options.\n\t     *  No defaults options are set in View.\n\t     *\n\t     *  @method setOptions\n\t     *  @param {Object} options\n\t     */\n\t    View.prototype.setOptions = function setOptions(options) {\n\t        this._optionsManager.patch(options);\n\t    };\n\t\n\t    /**\n\t     * Add a child renderable to the view.\n\t     *   Note: This is meant to be used by an inheriting class\n\t     *   rather than from outside the prototype chain.\n\t     *\n\t     * @method add\n\t     * @return {RenderNode}\n\t     * @protected\n\t     */\n\t    View.prototype.add = function add() {\n\t        return this._node.add.apply(this._node, arguments);\n\t    };\n\t\n\t    /**\n\t     * Alias for add\n\t     * @method _add\n\t     */\n\t    View.prototype._add = View.prototype.add;\n\t\n\t    /**\n\t     * Generate a render spec from the contents of this component.\n\t     *\n\t     * @private\n\t     * @method render\n\t     * @return {number} Render spec for this component\n\t     */\n\t    View.prototype.render = function render() {\n\t        return this._node.render();\n\t    };\n\t\n\t    /**\n\t     * Return size of contained element.\n\t     *\n\t     * @method getSize\n\t     * @return {Array.Number} [width, height]\n\t     */\n\t    View.prototype.getSize = function getSize() {\n\t        if (this._node && this._node.getSize) {\n\t            return this._node.getSize.apply(this._node, arguments) || this.options.size;\n\t        }\n\t        else return this.options.size;\n\t    };\n\t\n\t    module.exports = View;\n\t}.call(exports, __webpack_require__, exports, module)), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 5 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;/* This Source Code Form is subject to the terms of the Mozilla Public\n\t * License, v. 2.0. If a copy of the MPL was not distributed with this\n\t * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n\t *\n\t * Owner: mark@famo.us\n\t * @license MPL 2.0\n\t * @copyright Famous Industries, Inc. 2014\n\t */\n\t\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = (function(require, exports, module) {\n\t    var Modifier = __webpack_require__(17);\n\t    var Transform = __webpack_require__(1);\n\t    var Transitionable = __webpack_require__(14);\n\t    var TransitionableTransform = __webpack_require__(35);\n\t\n\t    /**\n\t     *  A collection of visual changes to be\n\t     *    applied to another renderable component, strongly coupled with the state that defines\n\t     *    those changes. This collection includes a\n\t     *    transform matrix, an opacity constant, a size, an origin specifier, and an alignment specifier.\n\t     *    StateModifier objects can be added to any RenderNode or object\n\t     *    capable of displaying renderables.  The StateModifier's children and descendants\n\t     *    are transformed by the amounts specified in the modifier's properties.\n\t     *\n\t     * @class StateModifier\n\t     * @constructor\n\t     * @param {Object} [options] overrides of default options\n\t     * @param {Transform} [options.transform] affine transformation matrix\n\t     * @param {Number} [options.opacity]\n\t     * @param {Array.Number} [options.origin] origin adjustment\n\t     * @param {Array.Number} [options.align] align adjustment\n\t     * @param {Array.Number} [options.size] size to apply to descendants\n\t     */\n\t    function StateModifier(options) {\n\t        this._transformState = new TransitionableTransform(Transform.identity);\n\t        this._opacityState = new Transitionable(1);\n\t        this._originState = new Transitionable([0, 0]);\n\t        this._alignState = new Transitionable([0, 0]);\n\t        this._sizeState = new Transitionable([0, 0]);\n\t\n\t        this._modifier = new Modifier({\n\t            transform: this._transformState,\n\t            opacity: this._opacityState,\n\t            origin: null,\n\t            align: null,\n\t            size: null\n\t        });\n\t\n\t        this._hasOrigin = false;\n\t        this._hasAlign = false;\n\t        this._hasSize = false;\n\t\n\t        if (options) {\n\t            if (options.transform) this.setTransform(options.transform);\n\t            if (options.opacity !== undefined) this.setOpacity(options.opacity);\n\t            if (options.origin) this.setOrigin(options.origin);\n\t            if (options.align) this.setAlign(options.align);\n\t            if (options.size) this.setSize(options.size);\n\t        }\n\t    }\n\t\n\t    /**\n\t     * Set the transform matrix of this modifier, either statically or\n\t     *   through a provided Transitionable.\n\t     *\n\t     * @method setTransform\n\t     *\n\t     * @param {Transform} transform Transform to transition to.\n\t     * @param {Transitionable} [transition] Valid transitionable object\n\t     * @param {Function} [callback] callback to call after transition completes\n\t     * @return {StateModifier} this\n\t     */\n\t    StateModifier.prototype.setTransform = function setTransform(transform, transition, callback) {\n\t        this._transformState.set(transform, transition, callback);\n\t        return this;\n\t    };\n\t\n\t    /**\n\t     * Set the opacity of this modifier, either statically or\n\t     *   through a provided Transitionable.\n\t     *\n\t     * @method setOpacity\n\t     *\n\t     * @param {Number} opacity Opacity value to transition to.\n\t     * @param {Transitionable} transition Valid transitionable object\n\t     * @param {Function} callback callback to call after transition completes\n\t     * @return {StateModifier} this\n\t     */\n\t    StateModifier.prototype.setOpacity = function setOpacity(opacity, transition, callback) {\n\t        this._opacityState.set(opacity, transition, callback);\n\t        return this;\n\t    };\n\t\n\t    /**\n\t     * Set the origin of this modifier, either statically or\n\t     *   through a provided Transitionable.\n\t     *\n\t     * @method setOrigin\n\t     *\n\t     * @param {Array.Number} origin two element array with values between 0 and 1.\n\t     * @param {Transitionable} transition Valid transitionable object\n\t     * @param {Function} callback callback to call after transition completes\n\t     * @return {StateModifier} this\n\t     */\n\t    StateModifier.prototype.setOrigin = function setOrigin(origin, transition, callback) {\n\t        if (origin === null) {\n\t            if (this._hasOrigin) {\n\t                this._modifier.originFrom(null);\n\t                this._hasOrigin = false;\n\t            }\n\t            return this;\n\t        }\n\t        else if (!this._hasOrigin) {\n\t            this._hasOrigin = true;\n\t            this._modifier.originFrom(this._originState);\n\t        }\n\t        this._originState.set(origin, transition, callback);\n\t        return this;\n\t    };\n\t\n\t    /**\n\t     * Set the alignment of this modifier, either statically or\n\t     *   through a provided Transitionable.\n\t     *\n\t     * @method setAlign\n\t     *\n\t     * @param {Array.Number} align two element array with values between 0 and 1.\n\t     * @param {Transitionable} transition Valid transitionable object\n\t     * @param {Function} callback callback to call after transition completes\n\t     * @return {StateModifier} this\n\t     */\n\t    StateModifier.prototype.setAlign = function setOrigin(align, transition, callback) {\n\t        if (align === null) {\n\t            if (this._hasAlign) {\n\t                this._modifier.alignFrom(null);\n\t                this._hasAlign = false;\n\t            }\n\t            return this;\n\t        }\n\t        else if (!this._hasAlign) {\n\t            this._hasAlign = true;\n\t            this._modifier.alignFrom(this._alignState);\n\t        }\n\t        this._alignState.set(align, transition, callback);\n\t        return this;\n\t    };\n\t\n\t    /**\n\t     * Set the size of this modifier, either statically or\n\t     *   through a provided Transitionable.\n\t     *\n\t     * @method setSize\n\t     *\n\t     * @param {Array.Number} size two element array with values between 0 and 1.\n\t     * @param {Transitionable} transition Valid transitionable object\n\t     * @param {Function} callback callback to call after transition completes\n\t     * @return {StateModifier} this\n\t     */\n\t    StateModifier.prototype.setSize = function setSize(size, transition, callback) {\n\t        if (size === null) {\n\t            if (this._hasSize) {\n\t                this._modifier.sizeFrom(null);\n\t                this._hasSize = false;\n\t            }\n\t            return this;\n\t        }\n\t        else if (!this._hasSize) {\n\t            this._hasSize = true;\n\t            this._modifier.sizeFrom(this._sizeState);\n\t        }\n\t        this._sizeState.set(size, transition, callback);\n\t        return this;\n\t    };\n\t\n\t    /**\n\t     * Stop the transition.\n\t     *\n\t     * @method halt\n\t     */\n\t    StateModifier.prototype.halt = function halt() {\n\t        this._transformState.halt();\n\t        this._opacityState.halt();\n\t        this._originState.halt();\n\t        this._alignState.halt();\n\t        this._sizeState.halt();\n\t    };\n\t\n\t    /**\n\t     * Get the current state of the transform matrix component.\n\t     *\n\t     * @method getTransform\n\t     * @return {Object} transform provider object\n\t     */\n\t    StateModifier.prototype.getTransform = function getTransform() {\n\t        return this._transformState.get();\n\t    };\n\t\n\t    /**\n\t     * Get the destination state of the transform component.\n\t     *\n\t     * @method getFinalTransform\n\t     * @return {Transform} transform matrix\n\t     */\n\t    StateModifier.prototype.getFinalTransform = function getFinalTransform() {\n\t        return this._transformState.getFinal();\n\t    };\n\t\n\t    /**\n\t     * Get the current state of the opacity component.\n\t     *\n\t     * @method getOpacity\n\t     * @return {Object} opacity provider object\n\t     */\n\t    StateModifier.prototype.getOpacity = function getOpacity() {\n\t        return this._opacityState.get();\n\t    };\n\t\n\t    /**\n\t     * Get the current state of the origin component.\n\t     *\n\t     * @method getOrigin\n\t     * @return {Object} origin provider object\n\t     */\n\t    StateModifier.prototype.getOrigin = function getOrigin() {\n\t        return this._hasOrigin ? this._originState.get() : null;\n\t    };\n\t\n\t    /**\n\t     * Get the current state of the align component.\n\t     *\n\t     * @method getAlign\n\t     * @return {Object} align provider object\n\t     */\n\t    StateModifier.prototype.getAlign = function getAlign() {\n\t        return this._hasAlign ? this._alignState.get() : null;\n\t    };\n\t\n\t    /**\n\t     * Get the current state of the size component.\n\t     *\n\t     * @method getSize\n\t     * @return {Object} size provider object\n\t     */\n\t    StateModifier.prototype.getSize = function getSize() {\n\t        return this._hasSize ? this._sizeState.get() : null;\n\t    };\n\t\n\t    /**\n\t     * Return render spec for this StateModifier, applying to the provided\n\t     *    target component.  This is similar to render() for Surfaces.\n\t     *\n\t     * @private\n\t     * @method modify\n\t     *\n\t     * @param {Object} target (already rendered) render spec to\n\t     *    which to apply the transform.\n\t     * @return {Object} render spec for this StateModifier, including the\n\t     *    provided target\n\t     */\n\t    StateModifier.prototype.modify = function modify(target) {\n\t        return this._modifier.modify(target);\n\t    };\n\t\n\t    module.exports = StateModifier;\n\t}.call(exports, __webpack_require__, exports, module)), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 6 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;/* This Source Code Form is subject to the terms of the Mozilla Public\n\t * License, v. 2.0. If a copy of the MPL was not distributed with this\n\t * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n\t *\n\t * Owner: mark@famo.us\n\t * @license MPL 2.0\n\t * @copyright Famous Industries, Inc. 2014\n\t */\n\t\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = (function(require, exports, module) {\n\t    var EventEmitter = __webpack_require__(22);\n\t\n\t    /**\n\t     * EventHandler forwards received events to a set of provided callback functions.\n\t     * It allows events to be captured, processed, and optionally piped through to other event handlers.\n\t     *\n\t     * @class EventHandler\n\t     * @extends EventEmitter\n\t     * @constructor\n\t     */\n\t    function EventHandler() {\n\t        EventEmitter.apply(this, arguments);\n\t\n\t        this.downstream = []; // downstream event handlers\n\t        this.downstreamFn = []; // downstream functions\n\t\n\t        this.upstream = []; // upstream event handlers\n\t        this.upstreamListeners = {}; // upstream listeners\n\t    }\n\t    EventHandler.prototype = Object.create(EventEmitter.prototype);\n\t    EventHandler.prototype.constructor = EventHandler;\n\t\n\t    /**\n\t     * Assign an event handler to receive an object's input events.\n\t     *\n\t     * @method setInputHandler\n\t     * @static\n\t     *\n\t     * @param {Object} object object to mix trigger, subscribe, and unsubscribe functions into\n\t     * @param {EventHandler} handler assigned event handler\n\t     */\n\t    EventHandler.setInputHandler = function setInputHandler(object, handler) {\n\t        object.trigger = handler.trigger.bind(handler);\n\t        if (handler.subscribe && handler.unsubscribe) {\n\t            object.subscribe = handler.subscribe.bind(handler);\n\t            object.unsubscribe = handler.unsubscribe.bind(handler);\n\t        }\n\t    };\n\t\n\t    /**\n\t     * Assign an event handler to receive an object's output events.\n\t     *\n\t     * @method setOutputHandler\n\t     * @static\n\t     *\n\t     * @param {Object} object object to mix pipe, unpipe, on, addListener, and removeListener functions into\n\t     * @param {EventHandler} handler assigned event handler\n\t     */\n\t    EventHandler.setOutputHandler = function setOutputHandler(object, handler) {\n\t        if (handler instanceof EventHandler) handler.bindThis(object);\n\t        object.pipe = handler.pipe.bind(handler);\n\t        object.unpipe = handler.unpipe.bind(handler);\n\t        object.on = handler.on.bind(handler);\n\t        object.addListener = object.on;\n\t        object.removeListener = handler.removeListener.bind(handler);\n\t    };\n\t\n\t    /**\n\t     * Trigger an event, sending to all downstream handlers\n\t     *   listening for provided 'type' key.\n\t     *\n\t     * @method emit\n\t     *\n\t     * @param {string} type event type key (for example, 'click')\n\t     * @param {Object} event event data\n\t     * @return {EventHandler} this\n\t     */\n\t    EventHandler.prototype.emit = function emit(type, event) {\n\t        EventEmitter.prototype.emit.apply(this, arguments);\n\t        var i = 0;\n\t        for (i = 0; i < this.downstream.length; i++) {\n\t            if (this.downstream[i].trigger) this.downstream[i].trigger(type, event);\n\t        }\n\t        for (i = 0; i < this.downstreamFn.length; i++) {\n\t            this.downstreamFn[i](type, event);\n\t        }\n\t        return this;\n\t    };\n\t\n\t    /**\n\t     * Alias for emit\n\t     * @method addListener\n\t     */\n\t    EventHandler.prototype.trigger = EventHandler.prototype.emit;\n\t\n\t    /**\n\t     * Add event handler object to set of downstream handlers.\n\t     *\n\t     * @method pipe\n\t     *\n\t     * @param {EventHandler} target event handler target object\n\t     * @return {EventHandler} passed event handler\n\t     */\n\t    EventHandler.prototype.pipe = function pipe(target) {\n\t        if (target.subscribe instanceof Function) return target.subscribe(this);\n\t\n\t        var downstreamCtx = (target instanceof Function) ? this.downstreamFn : this.downstream;\n\t        var index = downstreamCtx.indexOf(target);\n\t        if (index < 0) downstreamCtx.push(target);\n\t\n\t        if (target instanceof Function) target('pipe', null);\n\t        else if (target.trigger) target.trigger('pipe', null);\n\t\n\t        return target;\n\t    };\n\t\n\t    /**\n\t     * Remove handler object from set of downstream handlers.\n\t     *   Undoes work of \"pipe\".\n\t     *\n\t     * @method unpipe\n\t     *\n\t     * @param {EventHandler} target target handler object\n\t     * @return {EventHandler} provided target\n\t     */\n\t    EventHandler.prototype.unpipe = function unpipe(target) {\n\t        if (target.unsubscribe instanceof Function) return target.unsubscribe(this);\n\t\n\t        var downstreamCtx = (target instanceof Function) ? this.downstreamFn : this.downstream;\n\t        var index = downstreamCtx.indexOf(target);\n\t        if (index >= 0) {\n\t            downstreamCtx.splice(index, 1);\n\t            if (target instanceof Function) target('unpipe', null);\n\t            else if (target.trigger) target.trigger('unpipe', null);\n\t            return target;\n\t        }\n\t        else return false;\n\t    };\n\t\n\t    /**\n\t     * Bind a callback function to an event type handled by this object.\n\t     *\n\t     * @method \"on\"\n\t     *\n\t     * @param {string} type event type key (for example, 'click')\n\t     * @param {function(string, Object)} handler callback\n\t     * @return {EventHandler} this\n\t     */\n\t    EventHandler.prototype.on = function on(type, handler) {\n\t        EventEmitter.prototype.on.apply(this, arguments);\n\t        if (!(type in this.upstreamListeners)) {\n\t            var upstreamListener = this.trigger.bind(this, type);\n\t            this.upstreamListeners[type] = upstreamListener;\n\t            for (var i = 0; i < this.upstream.length; i++) {\n\t                this.upstream[i].on(type, upstreamListener);\n\t            }\n\t        }\n\t        return this;\n\t    };\n\t\n\t    /**\n\t     * Alias for \"on\"\n\t     * @method addListener\n\t     */\n\t    EventHandler.prototype.addListener = EventHandler.prototype.on;\n\t\n\t    /**\n\t     * Listen for events from an upstream event handler.\n\t     *\n\t     * @method subscribe\n\t     *\n\t     * @param {EventEmitter} source source emitter object\n\t     * @return {EventHandler} this\n\t     */\n\t    EventHandler.prototype.subscribe = function subscribe(source) {\n\t        var index = this.upstream.indexOf(source);\n\t        if (index < 0) {\n\t            this.upstream.push(source);\n\t            for (var type in this.upstreamListeners) {\n\t                source.on(type, this.upstreamListeners[type]);\n\t            }\n\t        }\n\t        return this;\n\t    };\n\t\n\t    /**\n\t     * Stop listening to events from an upstream event handler.\n\t     *\n\t     * @method unsubscribe\n\t     *\n\t     * @param {EventEmitter} source source emitter object\n\t     * @return {EventHandler} this\n\t     */\n\t    EventHandler.prototype.unsubscribe = function unsubscribe(source) {\n\t        var index = this.upstream.indexOf(source);\n\t        if (index >= 0) {\n\t            this.upstream.splice(index, 1);\n\t            for (var type in this.upstreamListeners) {\n\t                source.removeListener(type, this.upstreamListeners[type]);\n\t            }\n\t        }\n\t        return this;\n\t    };\n\t\n\t    module.exports = EventHandler;\n\t}.call(exports, __webpack_require__, exports, module)), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 7 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;/* This Source Code Form is subject to the terms of the Mozilla Public\n\t * License, v. 2.0. If a copy of the MPL was not distributed with this\n\t * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n\t *\n\t * Owner: mark@famo.us\n\t * @license MPL 2.0\n\t * @copyright Famous Industries, Inc. 2014\n\t */\n\t// TODO fix func-style\n\t/*eslint func-style: [0, \"declaration\"] */\n\t\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = (function(require, exports, module) {\n\t    /**\n\t     * An internal library to reproduce javascript time-based scheduling.\n\t     *   Using standard javascript setTimeout methods can have a negative performance impact\n\t     *   when combined with the Famous rendering process, so instead require Timer and call\n\t     *   Timer.setTimeout, Timer.setInterval, etc.\n\t     *\n\t     * @class Timer\n\t     * @constructor\n\t     */\n\t    var FamousEngine = __webpack_require__(24);\n\t\n\t    var _event  = 'prerender';\n\t\n\t    var getTime = (window.performance) ?\n\t        function() {\n\t            return window.performance.now();\n\t        }\n\t        : function() {\n\t            return Date.now();\n\t        };\n\t\n\t    /**\n\t     * Add a function to be run on every prerender\n\t     *\n\t     * @method addTimerFunction\n\t     *\n\t     * @param {function} fn function to be run every prerender\n\t     *\n\t     * @return {function} function passed in as parameter\n\t     */\n\t    function addTimerFunction(fn) {\n\t        FamousEngine.on(_event, fn);\n\t        return fn;\n\t    }\n\t\n\t    /**\n\t     * Wraps a function to be invoked after a certain amount of time.\n\t     *  After a set duration has passed, it executes the function and\n\t     *  removes it as a listener to 'prerender'.\n\t     *\n\t     * @method setTimeout\n\t     *\n\t     * @param {function} fn function to be run after a specified duration\n\t     * @param {number} duration milliseconds from now to execute the function\n\t     *\n\t     * @return {function} function passed in as parameter\n\t     */\n\t    function setTimeout(fn, duration) {\n\t        var t = getTime();\n\t        var callback = function() {\n\t            var t2 = getTime();\n\t            if (t2 - t >= duration) {\n\t                fn.apply(this, arguments);\n\t                FamousEngine.removeListener(_event, callback);\n\t            }\n\t        };\n\t        return addTimerFunction(callback);\n\t    }\n\t\n\t    /**\n\t     * Wraps a function to be invoked after a certain amount of time.\n\t     *  After a set duration has passed, it executes the function and\n\t     *  resets the execution time.\n\t     *\n\t     * @method setInterval\n\t     *\n\t     * @param {function} fn function to be run after a specified duration\n\t     * @param {number} duration interval to execute function in milliseconds\n\t     *\n\t     * @return {function} function passed in as parameter\n\t     */\n\t    function setInterval(fn, duration) {\n\t        var t = getTime();\n\t        var callback = function() {\n\t            var t2 = getTime();\n\t            if (t2 - t >= duration) {\n\t                fn.apply(this, arguments);\n\t                t = getTime();\n\t            }\n\t        };\n\t        return addTimerFunction(callback);\n\t    }\n\t\n\t    /**\n\t     * Wraps a function to be invoked after a certain amount of prerender ticks.\n\t     *  Similar use to setTimeout but tied to the engine's run speed.\n\t     *\n\t     * @method after\n\t     *\n\t     * @param {function} fn function to be run after a specified amount of ticks\n\t     * @param {number} numTicks number of prerender frames to wait\n\t     *\n\t     * @return {function} function passed in as parameter\n\t     */\n\t    function after(fn, numTicks) {\n\t        if (numTicks === undefined) return undefined;\n\t        var callback = function() {\n\t            numTicks--;\n\t            if (numTicks <= 0) { //in case numTicks is fraction or negative\n\t                fn.apply(this, arguments);\n\t                clear(callback);\n\t            }\n\t        };\n\t        return addTimerFunction(callback);\n\t    }\n\t\n\t    /**\n\t     * Wraps a function to be continually invoked after a certain amount of prerender ticks.\n\t     *  Similar use to setInterval but tied to the engine's run speed.\n\t     *\n\t     * @method every\n\t     *\n\t     * @param {function} fn function to be run after a specified amount of ticks\n\t     * @param {number} numTicks number of prerender frames to wait\n\t     *\n\t     * @return {function} function passed in as parameter\n\t     */\n\t    function every(fn, numTicks) {\n\t        numTicks = numTicks || 1;\n\t        var initial = numTicks;\n\t        var callback = function() {\n\t            numTicks--;\n\t            if (numTicks <= 0) { //in case numTicks is fraction or negative\n\t                fn.apply(this, arguments);\n\t                numTicks = initial;\n\t            }\n\t        };\n\t        return addTimerFunction(callback);\n\t    }\n\t\n\t    /**\n\t     * Remove a function that gets called every prerender\n\t     *\n\t     * @method clear\n\t     *\n\t     * @param {function} fn event linstener\n\t     */\n\t    function clear(fn) {\n\t        FamousEngine.removeListener(_event, fn);\n\t    }\n\t\n\t    /**\n\t     * Executes a function after a certain amount of time. Makes sure\n\t     *  the function is not run multiple times.\n\t     *\n\t     * @method debounce\n\t     *\n\t     * @param {function} func function to run after certain amount of time\n\t     * @param {number} wait amount of time\n\t     *\n\t     * @return {function} function that is not able to debounce\n\t     */\n\t    function debounce(func, wait) {\n\t        var timeout;\n\t        var ctx;\n\t        var timestamp;\n\t        var result;\n\t        var args;\n\t        return function() {\n\t            ctx = this;\n\t            args = arguments;\n\t            timestamp = getTime();\n\t\n\t            var fn = function() {\n\t                var last = getTime - timestamp;\n\t\n\t                if (last < wait) {\n\t                    timeout = setTimeout(fn, wait - last);\n\t                } else {\n\t                    timeout = null;\n\t                    result = func.apply(ctx, args);\n\t                }\n\t            };\n\t\n\t            if (!timeout) {\n\t                timeout = setTimeout(fn, wait);\n\t            }\n\t\n\t            return result;\n\t        };\n\t    }\n\t\n\t    module.exports = {\n\t        setTimeout : setTimeout,\n\t        setInterval : setInterval,\n\t        debounce : debounce,\n\t        after : after,\n\t        every : every,\n\t        clear : clear\n\t    };\n\t\n\t}.call(exports, __webpack_require__, exports, module)), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 8 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright (c) 2014 Petka Antonov\n\t * \n\t * Permission is hereby granted, free of charge, to any person obtaining a copy\n\t * of this software and associated documentation files (the \"Software\"), to deal\n\t * in the Software without restriction, including without limitation the rights\n\t * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\t * copies of the Software, and to permit persons to whom the Software is\n\t * furnished to do so, subject to the following conditions:</p>\n\t * \n\t * The above copyright notice and this permission notice shall be included in\n\t * all copies or substantial portions of the Software.\n\t * \n\t * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\t * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\t * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE\n\t * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\t * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\t * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n\t * THE SOFTWARE.\n\t * \n\t */\n\t\"use strict\";\n\tvar global = __webpack_require__(21);\n\tvar Objectfreeze = __webpack_require__(19).freeze;\n\tvar util = __webpack_require__(2);\n\tvar inherits = util.inherits;\n\tvar notEnumerableProp = util.notEnumerableProp;\n\tvar Error = global.Error;\n\t\n\tfunction markAsOriginatingFromRejection(e) {\n\t    try {\n\t        notEnumerableProp(e, \"isAsync\", true);\n\t    }\n\t    catch(ignore) {}\n\t}\n\t\n\tfunction originatesFromRejection(e) {\n\t    if (e == null) return false;\n\t    return ((e instanceof RejectionError) ||\n\t        e[\"isAsync\"] === true);\n\t}\n\t\n\tfunction isError(obj) {\n\t    return obj instanceof Error;\n\t}\n\t\n\tfunction canAttach(obj) {\n\t    return isError(obj);\n\t}\n\t\n\tfunction subError(nameProperty, defaultMessage) {\n\t    function SubError(message) {\n\t        if (!(this instanceof SubError)) return new SubError(message);\n\t        this.message = typeof message === \"string\" ? message : defaultMessage;\n\t        this.name = nameProperty;\n\t        if (Error.captureStackTrace) {\n\t            Error.captureStackTrace(this, this.constructor);\n\t        }\n\t    }\n\t    inherits(SubError, Error);\n\t    return SubError;\n\t}\n\t\n\tvar TypeError = global.TypeError;\n\tif (typeof TypeError !== \"function\") {\n\t    TypeError = subError(\"TypeError\", \"type error\");\n\t}\n\tvar RangeError = global.RangeError;\n\tif (typeof RangeError !== \"function\") {\n\t    RangeError = subError(\"RangeError\", \"range error\");\n\t}\n\tvar CancellationError = subError(\"CancellationError\", \"cancellation error\");\n\tvar TimeoutError = subError(\"TimeoutError\", \"timeout error\");\n\t\n\tfunction RejectionError(message) {\n\t    this.name = \"RejectionError\";\n\t    this.message = message;\n\t    this.cause = message;\n\t    this.isAsync = true;\n\t\n\t    if (message instanceof Error) {\n\t        this.message = message.message;\n\t        this.stack = message.stack;\n\t    }\n\t    else if (Error.captureStackTrace) {\n\t        Error.captureStackTrace(this, this.constructor);\n\t    }\n\t\n\t}\n\tinherits(RejectionError, Error);\n\t\n\tvar key = \"__BluebirdErrorTypes__\";\n\tvar errorTypes = global[key];\n\tif (!errorTypes) {\n\t    errorTypes = Objectfreeze({\n\t        CancellationError: CancellationError,\n\t        TimeoutError: TimeoutError,\n\t        RejectionError: RejectionError\n\t    });\n\t    notEnumerableProp(global, key, errorTypes);\n\t}\n\t\n\tmodule.exports = {\n\t    Error: Error,\n\t    TypeError: TypeError,\n\t    RangeError: RangeError,\n\t    CancellationError: errorTypes.CancellationError,\n\t    RejectionError: errorTypes.RejectionError,\n\t    TimeoutError: errorTypes.TimeoutError,\n\t    originatesFromRejection: originatesFromRejection,\n\t    markAsOriginatingFromRejection: markAsOriginatingFromRejection,\n\t    canAttach: canAttach\n\t};\n\n\n/***/ },\n/* 9 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar Utils;\n\t\n\tUtils = __webpack_require__(127);\n\t\n\tmodule.exports = {\n\t  actions: Utils.keyMirror({\n\t    MENU_SELECT: null,\n\t    PEGGBOX_FETCH: null,\n\t    GAME_FETCH: null,\n\t    CARD_ANSWER: null,\n\t    CARD_RATE: null,\n\t    CARD_PICK: null,\n\t    USER_LOGIN: null,\n\t    USER_LOGOUT: null,\n\t    SUBSCRIBER_SUBMIT: null,\n\t    PLAY_CONTINUE: null\n\t  }),\n\t  stores: Utils.keyMirror({\n\t    CHANGE: null,\n\t    CARD_ANSWERED: null,\n\t    CARD_RATED: null,\n\t    UNLOCK_ACHIEVED: null,\n\t    PLAY_CONTINUED: null,\n\t    SUBSCRIBE_PASS: null,\n\t    SUBSCRIBE_FAIL: null\n\t  })\n\t};\n\n\n/***/ },\n/* 10 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/*\r\n\t\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\t\tAuthor Tobias Koppers @sokra\r\n\t*/\r\n\tmodule.exports = function addStyle(cssCode) {\r\n\t\tif(false) {\r\n\t\t\tif(typeof document !== \"object\") throw new Error(\"The style-loader cannot be used in a non-browser environment\");\r\n\t\t}\r\n\t\tvar styleElement = document.createElement(\"style\");\r\n\t\tstyleElement.type = \"text/css\";\r\n\t\tif (styleElement.styleSheet) {\r\n\t\t\tstyleElement.styleSheet.cssText = cssCode;\r\n\t\t} else {\r\n\t\t\tstyleElement.appendChild(document.createTextNode(cssCode));\r\n\t\t}\r\n\t\tvar head = document.getElementsByTagName(\"head\")[0];\r\n\t\thead.appendChild(styleElement);\r\n\t\treturn function() {\r\n\t\t\thead.removeChild(styleElement);\r\n\t\t};\r\n\t}\n\n/***/ },\n/* 11 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;\n\t/* This Source Code Form is subject to the terms of the Mozilla Public\n\t * License, v. 2.0. If a copy of the MPL was not distributed with this\n\t * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n\t *\n\t * Owner: mark@famo.us\n\t * @license MPL 2.0\n\t * @copyright Famous Industries, Inc. 2014\n\t */\n\t\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = (function(require, exports, module) {\n\t    var Surface = __webpack_require__(3);\n\t\n\t    /**\n\t     * A surface containing image content.\n\t     *   This extends the Surface class.\n\t     *\n\t     * @class ImageSurface\n\t     *\n\t     * @extends Surface\n\t     * @constructor\n\t     * @param {Object} [options] overrides of default options\n\t     */\n\t    function ImageSurface(options) {\n\t        this._imageUrl = undefined;\n\t        Surface.apply(this, arguments);\n\t    }\n\t\n\t    ImageSurface.prototype = Object.create(Surface.prototype);\n\t    ImageSurface.prototype.constructor = ImageSurface;\n\t    ImageSurface.prototype.elementType = 'img';\n\t    ImageSurface.prototype.elementClass = 'famous-surface';\n\t\n\t    /**\n\t     * Set content URL.  This will cause a re-rendering.\n\t     * @method setContent\n\t     * @param {string} imageUrl\n\t     */\n\t    ImageSurface.prototype.setContent = function setContent(imageUrl) {\n\t        this._imageUrl = imageUrl;\n\t        this._contentDirty = true;\n\t    };\n\t\n\t    /**\n\t     * Place the document element that this component manages into the document.\n\t     *\n\t     * @private\n\t     * @method deploy\n\t     * @param {Node} target document parent of this container\n\t     */\n\t    ImageSurface.prototype.deploy = function deploy(target) {\n\t        target.src = this._imageUrl || '';\n\t    };\n\t\n\t    /**\n\t     * Remove this component and contained content from the document\n\t     *\n\t     * @private\n\t     * @method recall\n\t     *\n\t     * @param {Node} target node to which the component was deployed\n\t     */\n\t    ImageSurface.prototype.recall = function recall(target) {\n\t        target.src = '';\n\t    };\n\t\n\t    module.exports = ImageSurface;\n\t}.call(exports, __webpack_require__, exports, module)), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 12 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;/* This Source Code Form is subject to the terms of the Mozilla Public\n\t * License, v. 2.0. If a copy of the MPL was not distributed with this\n\t * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n\t *\n\t * Owner: david@famo.us\n\t * @license MPL 2.0\n\t * @copyright Famous Industries, Inc. 2014\n\t */\n\t\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = (function(require, exports, module) {\n\t\n\t    /*\n\t     * A library of curves which map an animation explicitly as a function of time.\n\t     *\n\t     * @class Easing\n\t     */\n\t    var Easing = {\n\t\n\t        /**\n\t         * @property inQuad\n\t         * @static\n\t         */\n\t        inQuad: function(t) {\n\t            return t*t;\n\t        },\n\t\n\t        /**\n\t         * @property outQuad\n\t         * @static\n\t         */\n\t        outQuad: function(t) {\n\t            return -(t-=1)*t+1;\n\t        },\n\t\n\t        /**\n\t         * @property inOutQuad\n\t         * @static\n\t         */\n\t        inOutQuad: function(t) {\n\t            if ((t/=.5) < 1) return .5*t*t;\n\t            return -.5*((--t)*(t-2) - 1);\n\t        },\n\t\n\t        /**\n\t         * @property inCubic\n\t         * @static\n\t         */\n\t        inCubic: function(t) {\n\t            return t*t*t;\n\t        },\n\t\n\t        /**\n\t         * @property outCubic\n\t         * @static\n\t         */\n\t        outCubic: function(t) {\n\t            return ((--t)*t*t + 1);\n\t        },\n\t\n\t        /**\n\t         * @property inOutCubic\n\t         * @static\n\t         */\n\t        inOutCubic: function(t) {\n\t            if ((t/=.5) < 1) return .5*t*t*t;\n\t            return .5*((t-=2)*t*t + 2);\n\t        },\n\t\n\t        /**\n\t         * @property inQuart\n\t         * @static\n\t         */\n\t        inQuart: function(t) {\n\t            return t*t*t*t;\n\t        },\n\t\n\t        /**\n\t         * @property outQuart\n\t         * @static\n\t         */\n\t        outQuart: function(t) {\n\t            return -((--t)*t*t*t - 1);\n\t        },\n\t\n\t        /**\n\t         * @property inOutQuart\n\t         * @static\n\t         */\n\t        inOutQuart: function(t) {\n\t            if ((t/=.5) < 1) return .5*t*t*t*t;\n\t            return -.5 * ((t-=2)*t*t*t - 2);\n\t        },\n\t\n\t        /**\n\t         * @property inQuint\n\t         * @static\n\t         */\n\t        inQuint: function(t) {\n\t            return t*t*t*t*t;\n\t        },\n\t\n\t        /**\n\t         * @property outQuint\n\t         * @static\n\t         */\n\t        outQuint: function(t) {\n\t            return ((--t)*t*t*t*t + 1);\n\t        },\n\t\n\t        /**\n\t         * @property inOutQuint\n\t         * @static\n\t         */\n\t        inOutQuint: function(t) {\n\t            if ((t/=.5) < 1) return .5*t*t*t*t*t;\n\t            return .5*((t-=2)*t*t*t*t + 2);\n\t        },\n\t\n\t        /**\n\t         * @property inSine\n\t         * @static\n\t         */\n\t        inSine: function(t) {\n\t            return -1.0*Math.cos(t * (Math.PI/2)) + 1.0;\n\t        },\n\t\n\t        /**\n\t         * @property outSine\n\t         * @static\n\t         */\n\t        outSine: function(t) {\n\t            return Math.sin(t * (Math.PI/2));\n\t        },\n\t\n\t        /**\n\t         * @property inOutSine\n\t         * @static\n\t         */\n\t        inOutSine: function(t) {\n\t            return -.5*(Math.cos(Math.PI*t) - 1);\n\t        },\n\t\n\t        /**\n\t         * @property inExpo\n\t         * @static\n\t         */\n\t        inExpo: function(t) {\n\t            return (t===0) ? 0.0 : Math.pow(2, 10 * (t - 1));\n\t        },\n\t\n\t        /**\n\t         * @property outExpo\n\t         * @static\n\t         */\n\t        outExpo: function(t) {\n\t            return (t===1.0) ? 1.0 : (-Math.pow(2, -10 * t) + 1);\n\t        },\n\t\n\t        /**\n\t         * @property inOutExpo\n\t         * @static\n\t         */\n\t        inOutExpo: function(t) {\n\t            if (t===0) return 0.0;\n\t            if (t===1.0) return 1.0;\n\t            if ((t/=.5) < 1) return .5 * Math.pow(2, 10 * (t - 1));\n\t            return .5 * (-Math.pow(2, -10 * --t) + 2);\n\t        },\n\t\n\t        /**\n\t         * @property inCirc\n\t         * @static\n\t         */\n\t        inCirc: function(t) {\n\t            return -(Math.sqrt(1 - t*t) - 1);\n\t        },\n\t\n\t        /**\n\t         * @property outCirc\n\t         * @static\n\t         */\n\t        outCirc: function(t) {\n\t            return Math.sqrt(1 - (--t)*t);\n\t        },\n\t\n\t        /**\n\t         * @property inOutCirc\n\t         * @static\n\t         */\n\t        inOutCirc: function(t) {\n\t            if ((t/=.5) < 1) return -.5 * (Math.sqrt(1 - t*t) - 1);\n\t            return .5 * (Math.sqrt(1 - (t-=2)*t) + 1);\n\t        },\n\t\n\t        /**\n\t         * @property inElastic\n\t         * @static\n\t         */\n\t        inElastic: function(t) {\n\t            var s=1.70158;var p=0;var a=1.0;\n\t            if (t===0) return 0.0;  if (t===1) return 1.0;  if (!p) p=.3;\n\t            s = p/(2*Math.PI) * Math.asin(1.0/a);\n\t            return -(a*Math.pow(2,10*(t-=1)) * Math.sin((t-s)*(2*Math.PI)/ p));\n\t        },\n\t\n\t        /**\n\t         * @property outElastic\n\t         * @static\n\t         */\n\t        outElastic: function(t) {\n\t            var s=1.70158;var p=0;var a=1.0;\n\t            if (t===0) return 0.0;  if (t===1) return 1.0;  if (!p) p=.3;\n\t            s = p/(2*Math.PI) * Math.asin(1.0/a);\n\t            return a*Math.pow(2,-10*t) * Math.sin((t-s)*(2*Math.PI)/p) + 1.0;\n\t        },\n\t\n\t        /**\n\t         * @property inOutElastic\n\t         * @static\n\t         */\n\t        inOutElastic: function(t) {\n\t            var s=1.70158;var p=0;var a=1.0;\n\t            if (t===0) return 0.0;  if ((t/=.5)===2) return 1.0;  if (!p) p=(.3*1.5);\n\t            s = p/(2*Math.PI) * Math.asin(1.0/a);\n\t            if (t < 1) return -.5*(a*Math.pow(2,10*(t-=1)) * Math.sin((t-s)*(2*Math.PI)/p));\n\t            return a*Math.pow(2,-10*(t-=1)) * Math.sin((t-s)*(2*Math.PI)/p)*.5 + 1.0;\n\t        },\n\t\n\t        /**\n\t         * @property inBack\n\t         * @static\n\t         */\n\t        inBack: function(t, s) {\n\t            if (s === undefined) s = 1.70158;\n\t            return t*t*((s+1)*t - s);\n\t        },\n\t\n\t        /**\n\t         * @property outBack\n\t         * @static\n\t         */\n\t        outBack: function(t, s) {\n\t            if (s === undefined) s = 1.70158;\n\t            return ((--t)*t*((s+1)*t + s) + 1);\n\t        },\n\t\n\t        /**\n\t         * @property inOutBack\n\t         * @static\n\t         */\n\t        inOutBack: function(t, s) {\n\t            if (s === undefined) s = 1.70158;\n\t            if ((t/=.5) < 1) return .5*(t*t*(((s*=(1.525))+1)*t - s));\n\t            return .5*((t-=2)*t*(((s*=(1.525))+1)*t + s) + 2);\n\t        },\n\t\n\t        /**\n\t         * @property inBounce\n\t         * @static\n\t         */\n\t        inBounce: function(t) {\n\t            return 1.0 - Easing.outBounce(1.0-t);\n\t        },\n\t\n\t        /**\n\t         * @property outBounce\n\t         * @static\n\t         */\n\t        outBounce: function(t) {\n\t            if (t < (1/2.75)) {\n\t                return (7.5625*t*t);\n\t            } else if (t < (2/2.75)) {\n\t                return (7.5625*(t-=(1.5/2.75))*t + .75);\n\t            } else if (t < (2.5/2.75)) {\n\t                return (7.5625*(t-=(2.25/2.75))*t + .9375);\n\t            } else {\n\t                return (7.5625*(t-=(2.625/2.75))*t + .984375);\n\t            }\n\t        },\n\t\n\t        /**\n\t         * @property inOutBounce\n\t         * @static\n\t         */\n\t        inOutBounce: function(t) {\n\t            if (t < .5) return Easing.inBounce(t*2) * .5;\n\t            return Easing.outBounce(t*2-1.0) * .5 + .5;\n\t        }\n\t    };\n\t\n\t    module.exports = Easing;\n\t}.call(exports, __webpack_require__, exports, module)), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 13 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;/* This Source Code Form is subject to the terms of the Mozilla Public\n\t * License, v. 2.0. If a copy of the MPL was not distributed with this\n\t * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n\t *\n\t * Owner: mark@famo.us\n\t * @license MPL 2.0\n\t * @copyright Famous Industries, Inc. 2014\n\t */\n\t\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = (function(require, exports, module) {\n\t    /**\n\t     * This namespace holds standalone functionality.\n\t     *  Currently includes name mapping for transition curves,\n\t     *  name mapping for origin pairs, and the after() function.\n\t     *\n\t     * @class Utility\n\t     * @static\n\t     */\n\t    var Utility = {};\n\t\n\t    /**\n\t     * Table of direction array positions\n\t     *\n\t     * @property {object} Direction\n\t     * @final\n\t     */\n\t    Utility.Direction = {\n\t        X: 0,\n\t        Y: 1,\n\t        Z: 2\n\t    };\n\t\n\t    /**\n\t     * Return wrapper around callback function. Once the wrapper is called N\n\t     *   times, invoke the callback function. Arguments and scope preserved.\n\t     *\n\t     * @method after\n\t     *\n\t     * @param {number} count number of calls before callback function invoked\n\t     * @param {Function} callback wrapped callback function\n\t     *\n\t     * @return {function} wrapped callback with coundown feature\n\t     */\n\t    Utility.after = function after(count, callback) {\n\t        var counter = count;\n\t        return function() {\n\t            counter--;\n\t            if (counter === 0) callback.apply(this, arguments);\n\t        };\n\t    };\n\t\n\t    /**\n\t     * Load a URL and return its contents in a callback\n\t     *\n\t     * @method loadURL\n\t     *\n\t     * @param {string} url URL of object\n\t     * @param {function} callback callback to dispatch with content\n\t     */\n\t    Utility.loadURL = function loadURL(url, callback) {\n\t        var xhr = new XMLHttpRequest();\n\t        xhr.onreadystatechange = function onreadystatechange() {\n\t            if (this.readyState === 4) {\n\t                if (callback) callback(this.responseText);\n\t            }\n\t        };\n\t        xhr.open('GET', url);\n\t        xhr.send();\n\t    };\n\t\n\t    /**\n\t     * Create a document fragment from a string of HTML\n\t     *\n\t     * @method createDocumentFragmentFromHTML\n\t     *\n\t     * @param {string} html HTML to convert to DocumentFragment\n\t     *\n\t     * @return {DocumentFragment} DocumentFragment representing input HTML\n\t     */\n\t    Utility.createDocumentFragmentFromHTML = function createDocumentFragmentFromHTML(html) {\n\t        var element = document.createElement('div');\n\t        element.innerHTML = html;\n\t        var result = document.createDocumentFragment();\n\t        while (element.hasChildNodes()) result.appendChild(element.firstChild);\n\t        return result;\n\t    };\n\t\n\t    module.exports = Utility;\n\t}.call(exports, __webpack_require__, exports, module)), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 14 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;/* This Source Code Form is subject to the terms of the Mozilla Public\n\t * License, v. 2.0. If a copy of the MPL was not distributed with this\n\t * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n\t *\n\t * Owner: david@famo.us\n\t * @license MPL 2.0\n\t * @copyright Famous Industries, Inc. 2014\n\t */\n\t\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = (function(require, exports, module) {\n\t    var MultipleTransition = __webpack_require__(68);\n\t    var TweenTransition = __webpack_require__(69);\n\t\n\t    /**\n\t     * A state maintainer for a smooth transition between\n\t     *    numerically-specified states. Example numeric states include floats or\n\t     *    Transform objects.\n\t     *\n\t     * An initial state is set with the constructor or set(startState). A\n\t     *    corresponding end state and transition are set with set(endState,\n\t     *    transition). Subsequent calls to set(endState, transition) begin at\n\t     *    the last state. Calls to get(timestamp) provide the interpolated state\n\t     *    along the way.\n\t     *\n\t     * Note that there is no event loop here - calls to get() are the only way\n\t     *    to find state projected to the current (or provided) time and are\n\t     *    the only way to trigger callbacks. Usually this kind of object would\n\t     *    be part of the render() path of a visible component.\n\t     *\n\t     * @class Transitionable\n\t     * @constructor\n\t     * @param {number|Array.Number|Object.<number|string, number>} start\n\t     *    beginning state\n\t     */\n\t    function Transitionable(start) {\n\t        this.currentAction = null;\n\t        this.actionQueue = [];\n\t        this.callbackQueue = [];\n\t\n\t        this.state = 0;\n\t        this.velocity = undefined;\n\t        this._callback = undefined;\n\t        this._engineInstance = null;\n\t        this._currentMethod = null;\n\t\n\t        this.set(start);\n\t    }\n\t\n\t    var transitionMethods = {};\n\t\n\t    Transitionable.registerMethod = function registerMethod(name, engineClass) {\n\t        if (!(name in transitionMethods)) {\n\t            transitionMethods[name] = engineClass;\n\t            return true;\n\t        }\n\t        else return false;\n\t    };\n\t\n\t    Transitionable.unregisterMethod = function unregisterMethod(name) {\n\t        if (name in transitionMethods) {\n\t            delete transitionMethods[name];\n\t            return true;\n\t        }\n\t        else return false;\n\t    };\n\t\n\t    function _loadNext() {\n\t        if (this._callback) {\n\t            var callback = this._callback;\n\t            this._callback = undefined;\n\t            callback();\n\t        }\n\t        if (this.actionQueue.length <= 0) {\n\t            this.set(this.get()); // no update required\n\t            return;\n\t        }\n\t        this.currentAction = this.actionQueue.shift();\n\t        this._callback = this.callbackQueue.shift();\n\t\n\t        var method = null;\n\t        var endValue = this.currentAction[0];\n\t        var transition = this.currentAction[1];\n\t        if (transition instanceof Object && transition.method) {\n\t            method = transition.method;\n\t            if (typeof method === 'string') method = transitionMethods[method];\n\t        }\n\t        else {\n\t            method = TweenTransition;\n\t        }\n\t\n\t        if (this._currentMethod !== method) {\n\t            if (!(endValue instanceof Object) || method.SUPPORTS_MULTIPLE === true || endValue.length <= method.SUPPORTS_MULTIPLE) {\n\t                this._engineInstance = new method();\n\t            }\n\t            else {\n\t                this._engineInstance = new MultipleTransition(method);\n\t            }\n\t            this._currentMethod = method;\n\t        }\n\t\n\t        this._engineInstance.reset(this.state, this.velocity);\n\t        if (this.velocity !== undefined) transition.velocity = this.velocity;\n\t        this._engineInstance.set(endValue, transition, _loadNext.bind(this));\n\t    }\n\t\n\t    /**\n\t     * Add transition to end state to the queue of pending transitions. Special\n\t     *    Use: calling without a transition resets the object to that state with\n\t     *    no pending actions\n\t     *\n\t     * @method set\n\t     *\n\t     * @param {number|FamousMatrix|Array.Number|Object.<number, number>} endState\n\t     *    end state to which we interpolate\n\t     * @param {transition=} transition object of type {duration: number, curve:\n\t     *    f[0,1] -> [0,1] or name}. If transition is omitted, change will be\n\t     *    instantaneous.\n\t     * @param {function()=} callback Zero-argument function to call on observed\n\t     *    completion (t=1)\n\t     */\n\t    Transitionable.prototype.set = function set(endState, transition, callback) {\n\t        if (!transition) {\n\t            this.reset(endState);\n\t            if (callback) callback();\n\t            return this;\n\t        }\n\t\n\t        var action = [endState, transition];\n\t        this.actionQueue.push(action);\n\t        this.callbackQueue.push(callback);\n\t        if (!this.currentAction) _loadNext.call(this);\n\t        return this;\n\t    };\n\t\n\t    /**\n\t     * Cancel all transitions and reset to a stable state\n\t     *\n\t     * @method reset\n\t     *\n\t     * @param {number|Array.Number|Object.<number, number>} startState\n\t     *    stable state to set to\n\t     */\n\t    Transitionable.prototype.reset = function reset(startState, startVelocity) {\n\t        this._currentMethod = null;\n\t        this._engineInstance = null;\n\t        this.state = startState;\n\t        this.velocity = startVelocity;\n\t        this.currentAction = null;\n\t        this.actionQueue = [];\n\t        this.callbackQueue = [];\n\t    };\n\t\n\t    /**\n\t     * Add delay action to the pending action queue queue.\n\t     *\n\t     * @method delay\n\t     *\n\t     * @param {number} duration delay time (ms)\n\t     * @param {function} callback Zero-argument function to call on observed\n\t     *    completion (t=1)\n\t     */\n\t    Transitionable.prototype.delay = function delay(duration, callback) {\n\t        this.set(this._engineInstance.get(), {duration: duration,\n\t            curve: function() {\n\t                return 0;\n\t            }},\n\t            callback);\n\t    };\n\t\n\t    /**\n\t     * Get interpolated state of current action at provided time. If the last\n\t     *    action has completed, invoke its callback.\n\t     *\n\t     * @method get\n\t     *\n\t     * @param {number=} timestamp Evaluate the curve at a normalized version of this\n\t     *    time. If omitted, use current time. (Unix epoch time)\n\t     * @return {number|Object.<number|string, number>} beginning state\n\t     *    interpolated to this point in time.\n\t     */\n\t    Transitionable.prototype.get = function get(timestamp) {\n\t        if (this._engineInstance) {\n\t            if (this._engineInstance.getVelocity)\n\t                this.velocity = this._engineInstance.getVelocity();\n\t            this.state = this._engineInstance.get(timestamp);\n\t        }\n\t        return this.state;\n\t    };\n\t\n\t    /**\n\t     * Is there at least one action pending completion?\n\t     *\n\t     * @method isActive\n\t     *\n\t     * @return {boolean}\n\t     */\n\t    Transitionable.prototype.isActive = function isActive() {\n\t        return !!this.currentAction;\n\t    };\n\t\n\t    /**\n\t     * Halt transition at current state and erase all pending actions.\n\t     *\n\t     * @method halt\n\t     */\n\t    Transitionable.prototype.halt = function halt() {\n\t        this.set(this.get());\n\t    };\n\t\n\t    module.exports = Transitionable;\n\t}.call(exports, __webpack_require__, exports, module)), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 15 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar AppDispatcher, Dispatcher, dispatch,\n\t  __hasProp = {}.hasOwnProperty,\n\t  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };\n\t\n\tDispatcher = __webpack_require__(103);\n\t\n\tAppDispatcher = (function(_super) {\n\t  __extends(AppDispatcher, _super);\n\t\n\t  function AppDispatcher() {\n\t    return AppDispatcher.__super__.constructor.apply(this, arguments);\n\t  }\n\t\n\t\n\t  /*\n\t  A bridge function between the views and the dispatcher, marking the action\n\t  as a view action.  Another variant here could be handleServerAction.\n\t  @param  {object} action The data coming from the view.\n\t   */\n\t\n\t  AppDispatcher.prototype.handleViewAction = function(action) {\n\t    return this.dispatch({\n\t      source: 'VIEW_ACTION',\n\t      action: action\n\t    });\n\t  };\n\t\n\t  return AppDispatcher;\n\t\n\t})(Dispatcher);\n\t\n\tdispatch = new AppDispatcher;\n\t\n\tmodule.exports = dispatch;\n\n\n/***/ },\n/* 16 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar Config, Parse;\n\t\n\t__webpack_require__(141);\n\t\n\tConfig = __webpack_require__(37)[\"public\"].parse;\n\t\n\tParse = window.Parse;\n\t\n\tdelete window.Parse;\n\t\n\tParse.initialize(Config.appId, Config.jsKey);\n\t\n\tmodule.exports = Parse;\n\n\n/***/ },\n/* 17 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;/* This Source Code Form is subject to the terms of the Mozilla Public\n\t * License, v. 2.0. If a copy of the MPL was not distributed with this\n\t * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n\t *\n\t * Owner: mark@famo.us\n\t * @license MPL 2.0\n\t * @copyright Famous Industries, Inc. 2014\n\t */\n\t\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = (function(require, exports, module) {\n\t    var Transform = __webpack_require__(1);\n\t\n\t    /* TODO: remove these dependencies when deprecation complete */\n\t    var Transitionable = __webpack_require__(14);\n\t    var TransitionableTransform = __webpack_require__(35);\n\t\n\t    /**\n\t     *\n\t     *  A collection of visual changes to be\n\t     *    applied to another renderable component. This collection includes a\n\t     *    transform matrix, an opacity constant, a size, an origin specifier.\n\t     *    Modifier objects can be added to any RenderNode or object\n\t     *    capable of displaying renderables.  The Modifier's children and descendants\n\t     *    are transformed by the amounts specified in the Modifier's properties.\n\t     *\n\t     * @class Modifier\n\t     * @constructor\n\t     * @param {Object} [options] overrides of default options\n\t     * @param {Transform} [options.transform] affine transformation matrix\n\t     * @param {Number} [options.opacity]\n\t     * @param {Array.Number} [options.origin] origin adjustment\n\t     * @param {Array.Number} [options.size] size to apply to descendants\n\t     */\n\t    function Modifier(options) {\n\t        this._transformGetter = null;\n\t        this._opacityGetter = null;\n\t        this._originGetter = null;\n\t        this._alignGetter = null;\n\t        this._sizeGetter = null;\n\t\n\t        /* TODO: remove this when deprecation complete */\n\t        this._legacyStates = {};\n\t\n\t        this._output = {\n\t            transform: Transform.identity,\n\t            opacity: 1,\n\t            origin: null,\n\t            align: null,\n\t            size: null,\n\t            target: null\n\t        };\n\t\n\t        if (options) {\n\t            if (options.transform) this.transformFrom(options.transform);\n\t            if (options.opacity !== undefined) this.opacityFrom(options.opacity);\n\t            if (options.origin) this.originFrom(options.origin);\n\t            if (options.align) this.alignFrom(options.align);\n\t            if (options.size) this.sizeFrom(options.size);\n\t        }\n\t    }\n\t\n\t    /**\n\t     * Function, object, or static transform matrix which provides the transform.\n\t     *   This is evaluated on every tick of the engine.\n\t     *\n\t     * @method transformFrom\n\t     *\n\t     * @param {Object} transform transform provider object\n\t     * @return {Modifier} this\n\t     */\n\t    Modifier.prototype.transformFrom = function transformFrom(transform) {\n\t        if (transform instanceof Function) this._transformGetter = transform;\n\t        else if (transform instanceof Object && transform.get) this._transformGetter = transform.get.bind(transform);\n\t        else {\n\t            this._transformGetter = null;\n\t            this._output.transform = transform;\n\t        }\n\t        return this;\n\t    };\n\t\n\t    /**\n\t     * Set function, object, or number to provide opacity, in range [0,1].\n\t     *\n\t     * @method opacityFrom\n\t     *\n\t     * @param {Object} opacity provider object\n\t     * @return {Modifier} this\n\t     */\n\t    Modifier.prototype.opacityFrom = function opacityFrom(opacity) {\n\t        if (opacity instanceof Function) this._opacityGetter = opacity;\n\t        else if (opacity instanceof Object && opacity.get) this._opacityGetter = opacity.get.bind(opacity);\n\t        else {\n\t            this._opacityGetter = null;\n\t            this._output.opacity = opacity;\n\t        }\n\t        return this;\n\t    };\n\t\n\t    /**\n\t     * Set function, object, or numerical array to provide origin, as [x,y],\n\t     *   where x and y are in the range [0,1].\n\t     *\n\t     * @method originFrom\n\t     *\n\t     * @param {Object} origin provider object\n\t     * @return {Modifier} this\n\t     */\n\t    Modifier.prototype.originFrom = function originFrom(origin) {\n\t        if (origin instanceof Function) this._originGetter = origin;\n\t        else if (origin instanceof Object && origin.get) this._originGetter = origin.get.bind(origin);\n\t        else {\n\t            this._originGetter = null;\n\t            this._output.origin = origin;\n\t        }\n\t        return this;\n\t    };\n\t\n\t    /**\n\t     * Set function, object, or numerical array to provide align, as [x,y],\n\t     *   where x and y are in the range [0,1].\n\t     *\n\t     * @method alignFrom\n\t     *\n\t     * @param {Object} align provider object\n\t     * @return {Modifier} this\n\t     */\n\t    Modifier.prototype.alignFrom = function alignFrom(align) {\n\t        if (align instanceof Function) this._alignGetter = align;\n\t        else if (align instanceof Object && align.get) this._alignGetter = align.get.bind(align);\n\t        else {\n\t            this._alignGetter = null;\n\t            this._output.align = align;\n\t        }\n\t        return this;\n\t    };\n\t\n\t    /**\n\t     * Set function, object, or numerical array to provide size, as [width, height].\n\t     *\n\t     * @method sizeFrom\n\t     *\n\t     * @param {Object} size provider object\n\t     * @return {Modifier} this\n\t     */\n\t    Modifier.prototype.sizeFrom = function sizeFrom(size) {\n\t        if (size instanceof Function) this._sizeGetter = size;\n\t        else if (size instanceof Object && size.get) this._sizeGetter = size.get.bind(size);\n\t        else {\n\t            this._sizeGetter = null;\n\t            this._output.size = size;\n\t        }\n\t        return this;\n\t    };\n\t\n\t     /**\n\t     * Deprecated: Prefer transformFrom with static Transform, or use a TransitionableTransform.\n\t     * @deprecated\n\t     * @method setTransform\n\t     *\n\t     * @param {Transform} transform Transform to transition to\n\t     * @param {Transitionable} transition Valid transitionable object\n\t     * @param {Function} callback callback to call after transition completes\n\t     * @return {Modifier} this\n\t     */\n\t    Modifier.prototype.setTransform = function setTransform(transform, transition, callback) {\n\t        if (transition || this._legacyStates.transform) {\n\t            if (!this._legacyStates.transform) {\n\t                this._legacyStates.transform = new TransitionableTransform(this._output.transform);\n\t            }\n\t            if (!this._transformGetter) this.transformFrom(this._legacyStates.transform);\n\t\n\t            this._legacyStates.transform.set(transform, transition, callback);\n\t            return this;\n\t        }\n\t        else return this.transformFrom(transform);\n\t    };\n\t\n\t    /**\n\t     * Deprecated: Prefer opacityFrom with static opacity array, or use a Transitionable with that opacity.\n\t     * @deprecated\n\t     * @method setOpacity\n\t     *\n\t     * @param {Number} opacity Opacity value to transition to.\n\t     * @param {Transitionable} transition Valid transitionable object\n\t     * @param {Function} callback callback to call after transition completes\n\t     * @return {Modifier} this\n\t     */\n\t    Modifier.prototype.setOpacity = function setOpacity(opacity, transition, callback) {\n\t        if (transition || this._legacyStates.opacity) {\n\t            if (!this._legacyStates.opacity) {\n\t                this._legacyStates.opacity = new Transitionable(this._output.opacity);\n\t            }\n\t            if (!this._opacityGetter) this.opacityFrom(this._legacyStates.opacity);\n\t\n\t            return this._legacyStates.opacity.set(opacity, transition, callback);\n\t        }\n\t        else return this.opacityFrom(opacity);\n\t    };\n\t\n\t    /**\n\t     * Deprecated: Prefer originFrom with static origin array, or use a Transitionable with that origin.\n\t     * @deprecated\n\t     * @method setOrigin\n\t     *\n\t     * @param {Array.Number} origin two element array with values between 0 and 1.\n\t     * @param {Transitionable} transition Valid transitionable object\n\t     * @param {Function} callback callback to call after transition completes\n\t     * @return {Modifier} this\n\t     */\n\t    Modifier.prototype.setOrigin = function setOrigin(origin, transition, callback) {\n\t        /* TODO: remove this if statement when deprecation complete */\n\t        if (transition || this._legacyStates.origin) {\n\t\n\t            if (!this._legacyStates.origin) {\n\t                this._legacyStates.origin = new Transitionable(this._output.origin || [0, 0]);\n\t            }\n\t            if (!this._originGetter) this.originFrom(this._legacyStates.origin);\n\t\n\t            this._legacyStates.origin.set(origin, transition, callback);\n\t            return this;\n\t        }\n\t        else return this.originFrom(origin);\n\t    };\n\t\n\t    /**\n\t     * Deprecated: Prefer alignFrom with static align array, or use a Transitionable with that align.\n\t     * @deprecated\n\t     * @method setAlign\n\t     *\n\t     * @param {Array.Number} align two element array with values between 0 and 1.\n\t     * @param {Transitionable} transition Valid transitionable object\n\t     * @param {Function} callback callback to call after transition completes\n\t     * @return {Modifier} this\n\t     */\n\t    Modifier.prototype.setAlign = function setAlign(align, transition, callback) {\n\t        /* TODO: remove this if statement when deprecation complete */\n\t        if (transition || this._legacyStates.align) {\n\t\n\t            if (!this._legacyStates.align) {\n\t                this._legacyStates.align = new Transitionable(this._output.align || [0, 0]);\n\t            }\n\t            if (!this._alignGetter) this.alignFrom(this._legacyStates.align);\n\t\n\t            this._legacyStates.align.set(align, transition, callback);\n\t            return this;\n\t        }\n\t        else return this.alignFrom(align);\n\t    };\n\t\n\t    /**\n\t     * Deprecated: Prefer sizeFrom with static origin array, or use a Transitionable with that size.\n\t     * @deprecated\n\t     * @method setSize\n\t     * @param {Array.Number} size two element array of [width, height]\n\t     * @param {Transitionable} transition Valid transitionable object\n\t     * @param {Function} callback callback to call after transition completes\n\t     * @return {Modifier} this\n\t     */\n\t    Modifier.prototype.setSize = function setSize(size, transition, callback) {\n\t        if (size && (transition || this._legacyStates.size)) {\n\t            if (!this._legacyStates.size) {\n\t                this._legacyStates.size = new Transitionable(this._output.size || [0, 0]);\n\t            }\n\t            if (!this._sizeGetter) this.sizeFrom(this._legacyStates.size);\n\t\n\t            this._legacyStates.size.set(size, transition, callback);\n\t            return this;\n\t        }\n\t        else return this.sizeFrom(size);\n\t    };\n\t\n\t    /**\n\t     * Deprecated: Prefer to stop transform in your provider object.\n\t     * @deprecated\n\t     * @method halt\n\t     */\n\t    Modifier.prototype.halt = function halt() {\n\t        if (this._legacyStates.transform) this._legacyStates.transform.halt();\n\t        if (this._legacyStates.opacity) this._legacyStates.opacity.halt();\n\t        if (this._legacyStates.origin) this._legacyStates.origin.halt();\n\t        if (this._legacyStates.align) this._legacyStates.align.halt();\n\t        if (this._legacyStates.size) this._legacyStates.size.halt();\n\t        this._transformGetter = null;\n\t        this._opacityGetter = null;\n\t        this._originGetter = null;\n\t        this._alignGetter = null;\n\t        this._sizeGetter = null;\n\t    };\n\t\n\t    /**\n\t     * Deprecated: Prefer to use your provided transform or output of your transform provider.\n\t     * @deprecated\n\t     * @method getTransform\n\t     * @return {Object} transform provider object\n\t     */\n\t    Modifier.prototype.getTransform = function getTransform() {\n\t        return this._transformGetter();\n\t    };\n\t\n\t    /**\n\t     * Deprecated: Prefer to determine the end state of your transform from your transform provider\n\t     * @deprecated\n\t     * @method getFinalTransform\n\t     * @return {Transform} transform matrix\n\t     */\n\t    Modifier.prototype.getFinalTransform = function getFinalTransform() {\n\t        return this._legacyStates.transform ? this._legacyStates.transform.getFinal() : this._output.transform;\n\t    };\n\t\n\t    /**\n\t     * Deprecated: Prefer to use your provided opacity or output of your opacity provider.\n\t     * @deprecated\n\t     * @method getOpacity\n\t     * @return {Object} opacity provider object\n\t     */\n\t    Modifier.prototype.getOpacity = function getOpacity() {\n\t        return this._opacityGetter();\n\t    };\n\t\n\t    /**\n\t     * Deprecated: Prefer to use your provided origin or output of your origin provider.\n\t     * @deprecated\n\t     * @method getOrigin\n\t     * @return {Object} origin provider object\n\t     */\n\t    Modifier.prototype.getOrigin = function getOrigin() {\n\t        return this._originGetter();\n\t    };\n\t\n\t    /**\n\t     * Deprecated: Prefer to use your provided align or output of your align provider.\n\t     * @deprecated\n\t     * @method getAlign\n\t     * @return {Object} align provider object\n\t     */\n\t    Modifier.prototype.getAlign = function getAlign() {\n\t        return this._alignGetter();\n\t    };\n\t\n\t    /**\n\t     * Deprecated: Prefer to use your provided size or output of your size provider.\n\t     * @deprecated\n\t     * @method getSize\n\t     * @return {Object} size provider object\n\t     */\n\t    Modifier.prototype.getSize = function getSize() {\n\t        return this._sizeGetter ? this._sizeGetter() : this._output.size;\n\t    };\n\t\n\t    // call providers on tick to receive render spec elements to apply\n\t    function _update() {\n\t        if (this._transformGetter) this._output.transform = this._transformGetter();\n\t        if (this._opacityGetter) this._output.opacity = this._opacityGetter();\n\t        if (this._originGetter) this._output.origin = this._originGetter();\n\t        if (this._alignGetter) this._output.align = this._alignGetter();\n\t        if (this._sizeGetter) this._output.size = this._sizeGetter();\n\t    }\n\t\n\t    /**\n\t     * Return render spec for this Modifier, applying to the provided\n\t     *    target component.  This is similar to render() for Surfaces.\n\t     *\n\t     * @private\n\t     * @method modify\n\t     *\n\t     * @param {Object} target (already rendered) render spec to\n\t     *    which to apply the transform.\n\t     * @return {Object} render spec for this Modifier, including the\n\t     *    provided target\n\t     */\n\t    Modifier.prototype.modify = function modify(target) {\n\t        _update.call(this);\n\t        this._output.target = target;\n\t        return this._output;\n\t    };\n\t\n\t    module.exports = Modifier;\n\t}.call(exports, __webpack_require__, exports, module)), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 18 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;/* This Source Code Form is subject to the terms of the Mozilla Public\n\t * License, v. 2.0. If a copy of the MPL was not distributed with this\n\t * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n\t *\n\t * Owner: mark@famo.us\n\t * @license MPL 2.0\n\t * @copyright Famous Industries, Inc. 2014\n\t */\n\t\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = (function(require, exports, module) {\n\t    var EventHandler = __webpack_require__(6);\n\t\n\t    /**\n\t     *  A collection of methods for setting options which can be extended\n\t     *  onto other classes.\n\t     *\n\t     *\n\t     *  **** WARNING ****\n\t     *  You can only pass through objects that will compile into valid JSON.\n\t     *\n\t     *  Valid options:\n\t     *      Strings,\n\t     *      Arrays,\n\t     *      Objects,\n\t     *      Numbers,\n\t     *      Nested Objects,\n\t     *      Nested Arrays.\n\t     *\n\t     *    This excludes:\n\t     *        Document Fragments,\n\t     *        Functions\n\t     * @class OptionsManager\n\t     * @constructor\n\t     * @param {Object} value options dictionary\n\t     */\n\t    function OptionsManager(value) {\n\t        this._value = value;\n\t        this.eventOutput = null;\n\t    }\n\t\n\t    /**\n\t     * Create options manager from source dictionary with arguments overriden by patch dictionary.\n\t     *\n\t     * @static\n\t     * @method OptionsManager.patch\n\t     *\n\t     * @param {Object} source source arguments\n\t     * @param {...Object} data argument additions and overwrites\n\t     * @return {Object} source object\n\t     */\n\t    OptionsManager.patch = function patchObject(source, data) {\n\t        var manager = new OptionsManager(source);\n\t        for (var i = 1; i < arguments.length; i++) manager.patch(arguments[i]);\n\t        return source;\n\t    };\n\t\n\t    function _createEventOutput() {\n\t        this.eventOutput = new EventHandler();\n\t        this.eventOutput.bindThis(this);\n\t        EventHandler.setOutputHandler(this, this.eventOutput);\n\t    }\n\t\n\t    /**\n\t     * Create OptionsManager from source with arguments overriden by patches.\n\t     *   Triggers 'change' event on this object's event handler if the state of\n\t     *   the OptionsManager changes as a result.\n\t     *\n\t     * @method patch\n\t     *\n\t     * @param {...Object} arguments list of patch objects\n\t     * @return {OptionsManager} this\n\t     */\n\t    OptionsManager.prototype.patch = function patch() {\n\t        var myState = this._value;\n\t        for (var i = 0; i < arguments.length; i++) {\n\t            var data = arguments[i];\n\t            for (var k in data) {\n\t                if ((k in myState) && (data[k] && data[k].constructor === Object) && (myState[k] && myState[k].constructor === Object)) {\n\t                    if (!myState.hasOwnProperty(k)) myState[k] = Object.create(myState[k]);\n\t                    this.key(k).patch(data[k]);\n\t                    if (this.eventOutput) this.eventOutput.emit('change', {id: k, value: this.key(k).value()});\n\t                }\n\t                else this.set(k, data[k]);\n\t            }\n\t        }\n\t        return this;\n\t    };\n\t\n\t    /**\n\t     * Alias for patch\n\t     *\n\t     * @method setOptions\n\t     *\n\t     */\n\t    OptionsManager.prototype.setOptions = OptionsManager.prototype.patch;\n\t\n\t    /**\n\t     * Return OptionsManager based on sub-object retrieved by key\n\t     *\n\t     * @method key\n\t     *\n\t     * @param {string} identifier key\n\t     * @return {OptionsManager} new options manager with the value\n\t     */\n\t    OptionsManager.prototype.key = function key(identifier) {\n\t        var result = new OptionsManager(this._value[identifier]);\n\t        if (!(result._value instanceof Object) || result._value instanceof Array) result._value = {};\n\t        return result;\n\t    };\n\t\n\t    /**\n\t     * Look up value by key\n\t     * @method get\n\t     *\n\t     * @param {string} key key\n\t     * @return {Object} associated object\n\t     */\n\t    OptionsManager.prototype.get = function get(key) {\n\t        return this._value[key];\n\t    };\n\t\n\t    /**\n\t     * Alias for get\n\t     * @method getOptions\n\t     */\n\t    OptionsManager.prototype.getOptions = OptionsManager.prototype.get;\n\t\n\t    /**\n\t     * Set key to value.  Outputs 'change' event if a value is overwritten.\n\t     *\n\t     * @method set\n\t     *\n\t     * @param {string} key key string\n\t     * @param {Object} value value object\n\t     * @return {OptionsManager} new options manager based on the value object\n\t     */\n\t    OptionsManager.prototype.set = function set(key, value) {\n\t        var originalValue = this.get(key);\n\t        this._value[key] = value;\n\t        if (this.eventOutput && value !== originalValue) this.eventOutput.emit('change', {id: key, value: value});\n\t        return this;\n\t    };\n\t\n\t    /**\n\t     * Return entire object contents of this OptionsManager.\n\t     *\n\t     * @method value\n\t     *\n\t     * @return {Object} current state of options\n\t     */\n\t    OptionsManager.prototype.value = function value() {\n\t        return this._value;\n\t    };\n\t\n\t    /**\n\t     * Bind a callback function to an event type handled by this object.\n\t     *\n\t     * @method \"on\"\n\t     *\n\t     * @param {string} type event type key (for example, 'change')\n\t     * @param {function(string, Object)} handler callback\n\t     * @return {EventHandler} this\n\t     */\n\t    OptionsManager.prototype.on = function on() {\n\t        _createEventOutput.call(this);\n\t        return this.on.apply(this, arguments);\n\t    };\n\t\n\t    /**\n\t     * Unbind an event by type and handler.\n\t     *   This undoes the work of \"on\".\n\t     *\n\t     * @method removeListener\n\t     *\n\t     * @param {string} type event type key (for example, 'change')\n\t     * @param {function} handler function object to remove\n\t     * @return {EventHandler} internal event handler object (for chaining)\n\t     */\n\t    OptionsManager.prototype.removeListener = function removeListener() {\n\t        _createEventOutput.call(this);\n\t        return this.removeListener.apply(this, arguments);\n\t    };\n\t\n\t    /**\n\t     * Add event handler object to set of downstream handlers.\n\t     *\n\t     * @method pipe\n\t     *\n\t     * @param {EventHandler} target event handler target object\n\t     * @return {EventHandler} passed event handler\n\t     */\n\t    OptionsManager.prototype.pipe = function pipe() {\n\t        _createEventOutput.call(this);\n\t        return this.pipe.apply(this, arguments);\n\t    };\n\t\n\t    /**\n\t     * Remove handler object from set of downstream handlers.\n\t     * Undoes work of \"pipe\"\n\t     *\n\t     * @method unpipe\n\t     *\n\t     * @param {EventHandler} target target handler object\n\t     * @return {EventHandler} provided target\n\t     */\n\t    OptionsManager.prototype.unpipe = function unpipe() {\n\t        _createEventOutput.call(this);\n\t        return this.unpipe.apply(this, arguments);\n\t    };\n\t\n\t    module.exports = OptionsManager;\n\t}.call(exports, __webpack_require__, exports, module)), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 19 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright (c) 2014 Petka Antonov\n\t * \n\t * Permission is hereby granted, free of charge, to any person obtaining a copy\n\t * of this software and associated documentation files (the \"Software\"), to deal\n\t * in the Software without restriction, including without limitation the rights\n\t * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\t * copies of the Software, and to permit persons to whom the Software is\n\t * furnished to do so, subject to the following conditions:</p>\n\t * \n\t * The above copyright notice and this permission notice shall be included in\n\t * all copies or substantial portions of the Software.\n\t * \n\t * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\t * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\t * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE\n\t * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\t * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\t * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n\t * THE SOFTWARE.\n\t * \n\t */\n\tvar isES5 = (function(){\n\t    \"use strict\";\n\t    return this === void 0;\n\t})();\n\t\n\tif (isES5) {\n\t    module.exports = {\n\t        freeze: Object.freeze,\n\t        defineProperty: Object.defineProperty,\n\t        keys: Object.keys,\n\t        getPrototypeOf: Object.getPrototypeOf,\n\t        isArray: Array.isArray,\n\t        isES5: isES5\n\t    };\n\t}\n\t\n\telse {\n\t    var has = {}.hasOwnProperty;\n\t    var str = {}.toString;\n\t    var proto = {}.constructor.prototype;\n\t\n\t    var ObjectKeys = function ObjectKeys(o) {\n\t        var ret = [];\n\t        for (var key in o) {\n\t            if (has.call(o, key)) {\n\t                ret.push(key);\n\t            }\n\t        }\n\t        return ret;\n\t    }\n\t\n\t    var ObjectDefineProperty = function ObjectDefineProperty(o, key, desc) {\n\t        o[key] = desc.value;\n\t        return o;\n\t    }\n\t\n\t    var ObjectFreeze = function ObjectFreeze(obj) {\n\t        return obj;\n\t    }\n\t\n\t    var ObjectGetPrototypeOf = function ObjectGetPrototypeOf(obj) {\n\t        try {\n\t            return Object(obj).constructor.prototype;\n\t        }\n\t        catch (e) {\n\t            return proto;\n\t        }\n\t    }\n\t\n\t    var ArrayIsArray = function ArrayIsArray(obj) {\n\t        try {\n\t            return str.call(obj) === \"[object Array]\";\n\t        }\n\t        catch(e) {\n\t            return false;\n\t        }\n\t    }\n\t\n\t    module.exports = {\n\t        isArray: ArrayIsArray,\n\t        keys: ObjectKeys,\n\t        defineProperty: ObjectDefineProperty,\n\t        freeze: ObjectFreeze,\n\t        getPrototypeOf: ObjectGetPrototypeOf,\n\t        isES5: isES5\n\t    };\n\t}\n\n\n/***/ },\n/* 20 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright (c) 2014 Petka Antonov\n\t * \n\t * Permission is hereby granted, free of charge, to any person obtaining a copy\n\t * of this software and associated documentation files (the \"Software\"), to deal\n\t * in the Software without restriction, including without limitation the rights\n\t * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\t * copies of the Software, and to permit persons to whom the Software is\n\t * furnished to do so, subject to the following conditions:</p>\n\t * \n\t * The above copyright notice and this permission notice shall be included in\n\t * all copies or substantial portions of the Software.\n\t * \n\t * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\t * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\t * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE\n\t * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\t * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\t * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n\t * THE SOFTWARE.\n\t * \n\t */\n\t\"use strict\";\n\tvar schedule = __webpack_require__(94);\n\tvar Queue = __webpack_require__(91);\n\tvar errorObj = __webpack_require__(2).errorObj;\n\tvar tryCatch1 = __webpack_require__(2).tryCatch1;\n\tvar process = __webpack_require__(21).process;\n\t\n\tfunction Async() {\n\t    this._isTickUsed = false;\n\t    this._length = 0;\n\t    this._lateBuffer = new Queue();\n\t    this._functionBuffer = new Queue(25000 * 3);\n\t    var self = this;\n\t    this.consumeFunctionBuffer = function Async$consumeFunctionBuffer() {\n\t        self._consumeFunctionBuffer();\n\t    };\n\t}\n\t\n\tAsync.prototype.haveItemsQueued = function Async$haveItemsQueued() {\n\t    return this._length > 0;\n\t};\n\t\n\tAsync.prototype.invokeLater = function Async$invokeLater(fn, receiver, arg) {\n\t    if (process !== void 0 &&\n\t        process.domain != null &&\n\t        !fn.domain) {\n\t        fn = process.domain.bind(fn);\n\t    }\n\t    this._lateBuffer.push(fn, receiver, arg);\n\t    this._queueTick();\n\t};\n\t\n\tAsync.prototype.invoke = function Async$invoke(fn, receiver, arg) {\n\t    if (process !== void 0 &&\n\t        process.domain != null &&\n\t        !fn.domain) {\n\t        fn = process.domain.bind(fn);\n\t    }\n\t    var functionBuffer = this._functionBuffer;\n\t    functionBuffer.push(fn, receiver, arg);\n\t    this._length = functionBuffer.length();\n\t    this._queueTick();\n\t};\n\t\n\tAsync.prototype._consumeFunctionBuffer =\n\tfunction Async$_consumeFunctionBuffer() {\n\t    var functionBuffer = this._functionBuffer;\n\t    while(functionBuffer.length() > 0) {\n\t        var fn = functionBuffer.shift();\n\t        var receiver = functionBuffer.shift();\n\t        var arg = functionBuffer.shift();\n\t        fn.call(receiver, arg);\n\t    }\n\t    this._reset();\n\t    this._consumeLateBuffer();\n\t};\n\t\n\tAsync.prototype._consumeLateBuffer = function Async$_consumeLateBuffer() {\n\t    var buffer = this._lateBuffer;\n\t    while(buffer.length() > 0) {\n\t        var fn = buffer.shift();\n\t        var receiver = buffer.shift();\n\t        var arg = buffer.shift();\n\t        var res = tryCatch1(fn, receiver, arg);\n\t        if (res === errorObj) {\n\t            this._queueTick();\n\t            if (fn.domain != null) {\n\t                fn.domain.emit(\"error\", res.e);\n\t            }\n\t            else {\n\t                throw res.e;\n\t            }\n\t        }\n\t    }\n\t};\n\t\n\tAsync.prototype._queueTick = function Async$_queue() {\n\t    if (!this._isTickUsed) {\n\t        schedule(this.consumeFunctionBuffer);\n\t        this._isTickUsed = true;\n\t    }\n\t};\n\t\n\tAsync.prototype._reset = function Async$_reset() {\n\t    this._isTickUsed = false;\n\t    this._length = 0;\n\t};\n\t\n\tmodule.exports = new Async();\n\n\n/***/ },\n/* 21 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {/**\n\t * Copyright (c) 2014 Petka Antonov\n\t * \n\t * Permission is hereby granted, free of charge, to any person obtaining a copy\n\t * of this software and associated documentation files (the \"Software\"), to deal\n\t * in the Software without restriction, including without limitation the rights\n\t * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\t * copies of the Software, and to permit persons to whom the Software is\n\t * furnished to do so, subject to the following conditions:</p>\n\t * \n\t * The above copyright notice and this permission notice shall be included in\n\t * all copies or substantial portions of the Software.\n\t * \n\t * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\t * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\t * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE\n\t * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\t * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\t * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n\t * THE SOFTWARE.\n\t * \n\t */\n\tmodule.exports = (function() {\n\t    if (this !== void 0) return this;\n\t    try {return global;}\n\t    catch(e) {}\n\t    try {return window;}\n\t    catch(e) {}\n\t    try {return self;}\n\t    catch(e) {}\n\t})();\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ },\n/* 22 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;/* This Source Code Form is subject to the terms of the Mozilla Public\n\t * License, v. 2.0. If a copy of the MPL was not distributed with this\n\t * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n\t *\n\t * Owner: mark@famo.us\n\t * @license MPL 2.0\n\t * @copyright Famous Industries, Inc. 2014\n\t */\n\t\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = (function(require, exports, module) {\n\t    /**\n\t     * EventEmitter represents a channel for events.\n\t     *\n\t     * @class EventEmitter\n\t     * @constructor\n\t     */\n\t    function EventEmitter() {\n\t        this.listeners = {};\n\t        this._owner = this;\n\t    }\n\t\n\t    /**\n\t     * Trigger an event, sending to all downstream handlers\n\t     *   listening for provided 'type' key.\n\t     *\n\t     * @method emit\n\t     *\n\t     * @param {string} type event type key (for example, 'click')\n\t     * @param {Object} event event data\n\t     * @return {EventHandler} this\n\t     */\n\t    EventEmitter.prototype.emit = function emit(type, event) {\n\t        var handlers = this.listeners[type];\n\t        if (handlers) {\n\t            for (var i = 0; i < handlers.length; i++) {\n\t                handlers[i].call(this._owner, event);\n\t            }\n\t        }\n\t        return this;\n\t    };\n\t\n\t    /**\n\t     * Bind a callback function to an event type handled by this object.\n\t     *\n\t     * @method \"on\"\n\t     *\n\t     * @param {string} type event type key (for example, 'click')\n\t     * @param {function(string, Object)} handler callback\n\t     * @return {EventHandler} this\n\t     */\n\t   EventEmitter.prototype.on = function on(type, handler) {\n\t        if (!(type in this.listeners)) this.listeners[type] = [];\n\t        var index = this.listeners[type].indexOf(handler);\n\t        if (index < 0) this.listeners[type].push(handler);\n\t        return this;\n\t    };\n\t\n\t    /**\n\t     * Alias for \"on\".\n\t     * @method addListener\n\t     */\n\t    EventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\t\n\t   /**\n\t     * Unbind an event by type and handler.\n\t     *   This undoes the work of \"on\".\n\t     *\n\t     * @method removeListener\n\t     *\n\t     * @param {string} type event type key (for example, 'click')\n\t     * @param {function} handler function object to remove\n\t     * @return {EventEmitter} this\n\t     */\n\t    EventEmitter.prototype.removeListener = function removeListener(type, handler) {\n\t        var index = this.listeners[type].indexOf(handler);\n\t        if (index >= 0) this.listeners[type].splice(index, 1);\n\t        return this;\n\t    };\n\t\n\t    /**\n\t     * Call event handlers with this set to owner.\n\t     *\n\t     * @method bindThis\n\t     *\n\t     * @param {Object} owner object this EventEmitter belongs to\n\t     */\n\t    EventEmitter.prototype.bindThis = function bindThis(owner) {\n\t        this._owner = owner;\n\t    };\n\t\n\t    module.exports = EventEmitter;\n\t}.call(exports, __webpack_require__, exports, module)), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 23 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;\n\t/* This Source Code Form is subject to the terms of the Mozilla Public\n\t * License, v. 2.0. If a copy of the MPL was not distributed with this\n\t * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n\t *\n\t * Owner: mark@famo.us\n\t * @license MPL 2.0\n\t * @copyright Famous Industries, Inc. 2014\n\t */\n\t\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = (function(require, exports, module) {\n\t    var Surface = __webpack_require__(3);\n\t    var Context = __webpack_require__(34);\n\t\n\t    /**\n\t     * ContainerSurface is an object designed to contain surfaces and\n\t     *   set properties to be applied to all of them at once.\n\t     *   This extends the Surface class.\n\t     *   A container surface will enforce these properties on the\n\t     *   surfaces it contains:\n\t     *\n\t     *   size (clips contained surfaces to its own width and height);\n\t     *\n\t     *   origin;\n\t     *\n\t     *   its own opacity and transform, which will be automatically\n\t     *   applied to  all Surfaces contained directly and indirectly.\n\t     *\n\t     * @class ContainerSurface\n\t     * @extends Surface\n\t     * @constructor\n\t     * @param {Array.Number} [options.size] [width, height] in pixels\n\t     * @param {Array.string} [options.classes] CSS classes to set on all inner content\n\t     * @param {Array} [options.properties] string dictionary of HTML attributes to set on target div\n\t     * @param {string} [options.content] inner (HTML) content of surface (should not be used)\n\t     */\n\t    function ContainerSurface(options) {\n\t        Surface.call(this, options);\n\t        this._container = document.createElement('div');\n\t        this._container.classList.add('famous-group');\n\t        this._container.classList.add('famous-container-group');\n\t        this._shouldRecalculateSize = false;\n\t        this.context = new Context(this._container);\n\t        this.setContent(this._container);\n\t    }\n\t\n\t    ContainerSurface.prototype = Object.create(Surface.prototype);\n\t    ContainerSurface.prototype.constructor = ContainerSurface;\n\t    ContainerSurface.prototype.elementType = 'div';\n\t    ContainerSurface.prototype.elementClass = 'famous-surface';\n\t\n\t    /**\n\t     * Add renderables to this object's render tree\n\t     *\n\t     * @method add\n\t     *\n\t     * @param {Object} obj renderable object\n\t     * @return {RenderNode} RenderNode wrapping this object, if not already a RenderNode\n\t     */\n\t    ContainerSurface.prototype.add = function add() {\n\t        return this.context.add.apply(this.context, arguments);\n\t    };\n\t\n\t    /**\n\t     * Return spec for this surface.  Note: Can result in a size recalculation.\n\t     *\n\t     * @private\n\t     * @method render\n\t     *\n\t     * @return {Object} render spec for this surface (spec id)\n\t     */\n\t    ContainerSurface.prototype.render = function render() {\n\t        if (this._sizeDirty) this._shouldRecalculateSize = true;\n\t        return Surface.prototype.render.apply(this, arguments);\n\t    };\n\t\n\t    /**\n\t     * Place the document element this component manages into the document.\n\t     *\n\t     * @private\n\t     * @method deploy\n\t     * @param {Node} target document parent of this container\n\t     */\n\t    ContainerSurface.prototype.deploy = function deploy() {\n\t        this._shouldRecalculateSize = true;\n\t        return Surface.prototype.deploy.apply(this, arguments);\n\t    };\n\t\n\t    /**\n\t     * Apply changes from this component to the corresponding document element.\n\t     * This includes changes to classes, styles, size, content, opacity, origin,\n\t     * and matrix transforms.\n\t     *\n\t     * @private\n\t     * @method commit\n\t     * @param {Context} context commit context\n\t     * @param {Transform} transform unused TODO\n\t     * @param {Number} opacity  unused TODO\n\t     * @param {Array.Number} origin unused TODO\n\t     * @param {Array.Number} size unused TODO\n\t     * @return {undefined} TODO returns an undefined value\n\t     */\n\t    ContainerSurface.prototype.commit = function commit(context, transform, opacity, origin, size) {\n\t        var previousSize = this._size ? [this._size[0], this._size[1]] : null;\n\t        var result = Surface.prototype.commit.apply(this, arguments);\n\t        if (this._shouldRecalculateSize || (previousSize && (this._size[0] !== previousSize[0] || this._size[1] !== previousSize[1]))) {\n\t            this.context.setSize();\n\t            this._shouldRecalculateSize = false;\n\t        }\n\t        this.context.update();\n\t        return result;\n\t    };\n\t\n\t    module.exports = ContainerSurface;\n\t}.call(exports, __webpack_require__, exports, module)), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 24 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;/* This Source Code Form is subject to the terms of the Mozilla Public\n\t * License, v. 2.0. If a copy of the MPL was not distributed with this\n\t * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n\t *\n\t * Owner: mark@famo.us\n\t * @license MPL 2.0\n\t * @copyright Famous Industries, Inc. 2014\n\t */\n\t\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = (function(require, exports, module) {\n\t\n\t    /**\n\t     * The singleton object initiated upon process\n\t     *   startup which manages all active Context instances, runs\n\t     *   the render dispatch loop, and acts as a listener and dispatcher\n\t     *   for events.  All methods are therefore static.\n\t     *\n\t     *   On static initialization, window.requestAnimationFrame is called with\n\t     *     the event loop function.\n\t     *\n\t     *   Note: Any window in which Engine runs will prevent default\n\t     *     scrolling behavior on the 'touchmove' event.\n\t     *\n\t     * @static\n\t     * @class Engine\n\t     */\n\t    var Context = __webpack_require__(34);\n\t    var EventHandler = __webpack_require__(6);\n\t    var OptionsManager = __webpack_require__(18);\n\t\n\t    var Engine = {};\n\t\n\t    var contexts = [];\n\t    var nextTickQueue = [];\n\t    var deferQueue = [];\n\t\n\t    var lastTime = Date.now();\n\t    var frameTime;\n\t    var frameTimeLimit;\n\t    var loopEnabled = true;\n\t    var eventForwarders = {};\n\t    var eventHandler = new EventHandler();\n\t\n\t    var options = {\n\t        containerType: 'div',\n\t        containerClass: 'famous-container',\n\t        fpsCap: undefined,\n\t        runLoop: true\n\t    };\n\t    var optionsManager = new OptionsManager(options);\n\t\n\t    /** @const */\n\t    var MAX_DEFER_FRAME_TIME = 10;\n\t\n\t    /**\n\t     * Inside requestAnimationFrame loop, step() is called, which:\n\t     *   calculates current FPS (throttling loop if it is over limit set in setFPSCap),\n\t     *   emits dataless 'prerender' event on start of loop,\n\t     *   calls in order any one-shot functions registered by nextTick on last loop,\n\t     *   calls Context.update on all Context objects registered,\n\t     *   and emits dataless 'postrender' event on end of loop.\n\t     *\n\t     * @static\n\t     * @private\n\t     * @method step\n\t     */\n\t    Engine.step = function step() {\n\t        var currentTime = Date.now();\n\t\n\t        // skip frame if we're over our framerate cap\n\t        if (frameTimeLimit && currentTime - lastTime < frameTimeLimit) return;\n\t\n\t        var i = 0;\n\t\n\t        frameTime = currentTime - lastTime;\n\t        lastTime = currentTime;\n\t\n\t        eventHandler.emit('prerender');\n\t\n\t        // empty the queue\n\t        for (i = 0; i < nextTickQueue.length; i++) nextTickQueue[i].call(this);\n\t        nextTickQueue.splice(0);\n\t\n\t        // limit total execution time for deferrable functions\n\t        while (deferQueue.length && (Date.now() - currentTime) < MAX_DEFER_FRAME_TIME) {\n\t            deferQueue.shift().call(this);\n\t        }\n\t\n\t        for (i = 0; i < contexts.length; i++) contexts[i].update();\n\t\n\t        eventHandler.emit('postrender');\n\t    };\n\t\n\t    // engage requestAnimationFrame\n\t    function loop() {\n\t        if (options.runLoop) {\n\t            Engine.step();\n\t            requestAnimationFrame(loop);\n\t        }\n\t        else loopEnabled = false;\n\t    }\n\t    requestAnimationFrame(loop);\n\t\n\t    //\n\t    // Upon main document window resize (unless on an \"input\" HTML element):\n\t    //   scroll to the top left corner of the window,\n\t    //   and for each managed Context: emit the 'resize' event and update its size.\n\t    // @param {Object=} event document event\n\t    //\n\t    function handleResize(event) {\n\t        for (var i = 0; i < contexts.length; i++) {\n\t            contexts[i].emit('resize');\n\t        }\n\t        eventHandler.emit('resize');\n\t    }\n\t    window.addEventListener('resize', handleResize, false);\n\t    handleResize();\n\t\n\t    // prevent scrolling via browser\n\t    window.addEventListener('touchmove', function(event) {\n\t        event.preventDefault();\n\t    }, true);\n\t\n\t    /**\n\t     * Add event handler object to set of downstream handlers.\n\t     *\n\t     * @method pipe\n\t     *\n\t     * @param {EventHandler} target event handler target object\n\t     * @return {EventHandler} passed event handler\n\t     */\n\t    Engine.pipe = function pipe(target) {\n\t        if (target.subscribe instanceof Function) return target.subscribe(Engine);\n\t        else return eventHandler.pipe(target);\n\t    };\n\t\n\t    /**\n\t     * Remove handler object from set of downstream handlers.\n\t     *   Undoes work of \"pipe\".\n\t     *\n\t     * @method unpipe\n\t     *\n\t     * @param {EventHandler} target target handler object\n\t     * @return {EventHandler} provided target\n\t     */\n\t    Engine.unpipe = function unpipe(target) {\n\t        if (target.unsubscribe instanceof Function) return target.unsubscribe(Engine);\n\t        else return eventHandler.unpipe(target);\n\t    };\n\t\n\t    /**\n\t     * Bind a callback function to an event type handled by this object.\n\t     *\n\t     * @static\n\t     * @method \"on\"\n\t     *\n\t     * @param {string} type event type key (for example, 'click')\n\t     * @param {function(string, Object)} handler callback\n\t     * @return {EventHandler} this\n\t     */\n\t    Engine.on = function on(type, handler) {\n\t        if (!(type in eventForwarders)) {\n\t            eventForwarders[type] = eventHandler.emit.bind(eventHandler, type);\n\t            if (document.body) {\n\t                document.body.addEventListener(type, eventForwarders[type]);\n\t            }\n\t            else {\n\t                Engine.nextTick(function(type, forwarder) {\n\t                    document.body.addEventListener(type, forwarder);\n\t                }.bind(this, type, eventForwarders[type]));\n\t            }\n\t        }\n\t        return eventHandler.on(type, handler);\n\t    };\n\t\n\t    /**\n\t     * Trigger an event, sending to all downstream handlers\n\t     *   listening for provided 'type' key.\n\t     *\n\t     * @method emit\n\t     *\n\t     * @param {string} type event type key (for example, 'click')\n\t     * @param {Object} event event data\n\t     * @return {EventHandler} this\n\t     */\n\t    Engine.emit = function emit(type, event) {\n\t        return eventHandler.emit(type, event);\n\t    };\n\t\n\t    /**\n\t     * Unbind an event by type and handler.\n\t     *   This undoes the work of \"on\".\n\t     *\n\t     * @static\n\t     * @method removeListener\n\t     *\n\t     * @param {string} type event type key (for example, 'click')\n\t     * @param {function} handler function object to remove\n\t     * @return {EventHandler} internal event handler object (for chaining)\n\t     */\n\t    Engine.removeListener = function removeListener(type, handler) {\n\t        return eventHandler.removeListener(type, handler);\n\t    };\n\t\n\t    /**\n\t     * Return the current calculated frames per second of the Engine.\n\t     *\n\t     * @static\n\t     * @method getFPS\n\t     *\n\t     * @return {Number} calculated fps\n\t     */\n\t    Engine.getFPS = function getFPS() {\n\t        return 1000 / frameTime;\n\t    };\n\t\n\t    /**\n\t     * Set the maximum fps at which the system should run. If internal render\n\t     *    loop is called at a greater frequency than this FPSCap, Engine will\n\t     *    throttle render and update until this rate is achieved.\n\t     *\n\t     * @static\n\t     * @method setFPSCap\n\t     *\n\t     * @param {Number} fps maximum frames per second\n\t     */\n\t    Engine.setFPSCap = function setFPSCap(fps) {\n\t        frameTimeLimit = Math.floor(1000 / fps);\n\t    };\n\t\n\t    /**\n\t     * Return engine options.\n\t     *\n\t     * @static\n\t     * @method getOptions\n\t     * @param {string} key\n\t     * @return {Object} engine options\n\t     */\n\t    Engine.getOptions = function getOptions() {\n\t        return optionsManager.getOptions.apply(optionsManager, arguments);\n\t    };\n\t\n\t    /**\n\t     * Set engine options\n\t     *\n\t     * @static\n\t     * @method setOptions\n\t     *\n\t     * @param {Object} [options] overrides of default options\n\t     * @param {Number} [options.fpsCap]  maximum fps at which the system should run\n\t     * @param {boolean} [options.runLoop=true] whether the run loop should continue\n\t     * @param {string} [options.containerType=\"div\"] type of container element.  Defaults to 'div'.\n\t     * @param {string} [options.containerClass=\"famous-container\"] type of container element.  Defaults to 'famous-container'.\n\t     */\n\t    Engine.setOptions = function setOptions(options) {\n\t        return optionsManager.setOptions.apply(optionsManager, arguments);\n\t    };\n\t\n\t    /**\n\t     * Creates a new Context for rendering and event handling with\n\t     *    provided document element as top of each tree. This will be tracked by the\n\t     *    process-wide Engine.\n\t     *\n\t     * @static\n\t     * @method createContext\n\t     *\n\t     * @param {Node} el will be top of Famo.us document element tree\n\t     * @return {Context} new Context within el\n\t     */\n\t    Engine.createContext = function createContext(el) {\n\t        var needMountContainer = false;\n\t        if (!el) {\n\t            el = document.createElement(options.containerType);\n\t            el.classList.add(options.containerClass);\n\t            needMountContainer = true;\n\t        }\n\t        var context = new Context(el);\n\t        Engine.registerContext(context);\n\t        if (needMountContainer) {\n\t            Engine.nextTick(function(context, el) {\n\t                document.body.appendChild(el);\n\t                context.emit('resize');\n\t            }.bind(this, context, el));\n\t        }\n\t        return context;\n\t    };\n\t\n\t    /**\n\t     * Registers an existing context to be updated within the run loop.\n\t     *\n\t     * @static\n\t     * @method registerContext\n\t     *\n\t     * @param {Context} context Context to register\n\t     * @return {FamousContext} provided context\n\t     */\n\t    Engine.registerContext = function registerContext(context) {\n\t        contexts.push(context);\n\t        return context;\n\t    };\n\t\n\t    /**\n\t     * Queue a function to be executed on the next tick of the\n\t     *    Engine.\n\t     *\n\t     * @static\n\t     * @method nextTick\n\t     *\n\t     * @param {function(Object)} fn function accepting window object\n\t     */\n\t    Engine.nextTick = function nextTick(fn) {\n\t        nextTickQueue.push(fn);\n\t    };\n\t\n\t    /**\n\t     * Queue a function to be executed sometime soon, at a time that is\n\t     *    unlikely to affect frame rate.\n\t     *\n\t     * @static\n\t     * @method defer\n\t     *\n\t     * @param {Function} fn\n\t     */\n\t    Engine.defer = function defer(fn) {\n\t        deferQueue.push(fn);\n\t    };\n\t\n\t    optionsManager.on('change', function(data) {\n\t        if (data.id === 'fpsCap') Engine.setFPSCap(data.value);\n\t        else if (data.id === 'runLoop') {\n\t            // kick off the loop only if it was stopped\n\t            if (!loopEnabled && data.value) {\n\t                loopEnabled = true;\n\t                requestAnimationFrame(loop);\n\t            }\n\t        }\n\t    });\n\t\n\t    module.exports = Engine;\n\t}.call(exports, __webpack_require__, exports, module)), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 25 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;/* This Source Code Form is subject to the terms of the Mozilla Public\n\t * License, v. 2.0. If a copy of the MPL was not distributed with this\n\t * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n\t *\n\t * Owner: mark@famo.us\n\t * @license MPL 2.0\n\t * @copyright Famous Industries, Inc. 2014\n\t */\n\t\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = (function(require, exports, module) {\n\t    /**\n\t     * A singleton that maintains a global registry of Surfaces.\n\t     *   Private.\n\t     *\n\t     * @private\n\t     * @static\n\t     * @class Entity\n\t     */\n\t\n\t    var entities = [];\n\t\n\t    /**\n\t     * Get entity from global index.\n\t     *\n\t     * @private\n\t     * @method get\n\t     * @param {Number} id entity reigstration id\n\t     * @return {Surface} entity in the global index\n\t     */\n\t    function get(id) {\n\t        return entities[id];\n\t    }\n\t\n\t    /**\n\t     * Overwrite entity in the global index\n\t     *\n\t     * @private\n\t     * @method set\n\t     * @param {Number} id entity reigstration id\n\t     * @return {Surface} entity to add to the global index\n\t     */\n\t    function set(id, entity) {\n\t        entities[id] = entity;\n\t    }\n\t\n\t    /**\n\t     * Add entity to global index\n\t     *\n\t     * @private\n\t     * @method register\n\t     * @param {Surface} entity to add to global index\n\t     * @return {Number} new id\n\t     */\n\t    function register(entity) {\n\t        var id = entities.length;\n\t        set(id, entity);\n\t        return id;\n\t    }\n\t\n\t    /**\n\t     * Remove entity from global index\n\t     *\n\t     * @private\n\t     * @method unregister\n\t     * @param {Number} id entity reigstration id\n\t     */\n\t    function unregister(id) {\n\t        set(id, null);\n\t    }\n\t\n\t    module.exports = {\n\t        register: register,\n\t        unregister: unregister,\n\t        get: get,\n\t        set: set\n\t    };\n\t}.call(exports, __webpack_require__, exports, module)), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 26 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;/* This Source Code Form is subject to the terms of the Mozilla Public\n\t * License, v. 2.0. If a copy of the MPL was not distributed with this\n\t * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n\t *\n\t * Owner: mark@famo.us\n\t * @license MPL 2.0\n\t * @copyright Famous Industries, Inc. 2014\n\t */\n\t\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = (function(require, exports, module) {\n\t    var Entity = __webpack_require__(25);\n\t    var SpecParser = __webpack_require__(61);\n\t\n\t    /**\n\t     * A wrapper for inserting a renderable component (like a Modifer or\n\t     *   Surface) into the render tree.\n\t     *\n\t     * @class RenderNode\n\t     * @constructor\n\t     *\n\t     * @param {Object} object Target renderable component\n\t     */\n\t    function RenderNode(object) {\n\t        this._object = null;\n\t        this._child = null;\n\t        this._hasMultipleChildren = false;\n\t        this._isRenderable = false;\n\t        this._isModifier = false;\n\t\n\t        this._resultCache = {};\n\t        this._prevResults = {};\n\t\n\t        this._childResult = null;\n\t\n\t        if (object) this.set(object);\n\t    }\n\t\n\t    /**\n\t     * Append a renderable to the list of this node's children.\n\t     *   This produces a new RenderNode in the tree.\n\t     *   Note: Does not double-wrap if child is a RenderNode already.\n\t     *\n\t     * @method add\n\t     * @param {Object} child renderable object\n\t     * @return {RenderNode} new render node wrapping child\n\t     */\n\t    RenderNode.prototype.add = function add(child) {\n\t        var childNode = (child instanceof RenderNode) ? child : new RenderNode(child);\n\t        if (this._child instanceof Array) this._child.push(childNode);\n\t        else if (this._child) {\n\t            this._child = [this._child, childNode];\n\t            this._hasMultipleChildren = true;\n\t            this._childResult = []; // to be used later\n\t        }\n\t        else this._child = childNode;\n\t\n\t        return childNode;\n\t    };\n\t\n\t    /**\n\t     * Return the single wrapped object.  Returns null if this node has multiple child nodes.\n\t     *\n\t     * @method get\n\t     *\n\t     * @return {Ojbect} contained renderable object\n\t     */\n\t    RenderNode.prototype.get = function get() {\n\t        return this._object || (this._hasMultipleChildren ? null : (this._child ? this._child.get() : null));\n\t    };\n\t\n\t    /**\n\t     * Overwrite the list of children to contain the single provided object\n\t     *\n\t     * @method set\n\t     * @param {Object} child renderable object\n\t     * @return {RenderNode} this render node, or child if it is a RenderNode\n\t     */\n\t    RenderNode.prototype.set = function set(child) {\n\t        this._childResult = null;\n\t        this._hasMultipleChildren = false;\n\t        this._isRenderable = child.render ? true : false;\n\t        this._isModifier = child.modify ? true : false;\n\t        this._object = child;\n\t        this._child = null;\n\t        if (child instanceof RenderNode) return child;\n\t        else return this;\n\t    };\n\t\n\t    /**\n\t     * Get render size of contained object.\n\t     *\n\t     * @method getSize\n\t     * @return {Array.Number} size of this or size of single child.\n\t     */\n\t    RenderNode.prototype.getSize = function getSize() {\n\t        var result = null;\n\t        var target = this.get();\n\t        if (target && target.getSize) result = target.getSize();\n\t        if (!result && this._child && this._child.getSize) result = this._child.getSize();\n\t        return result;\n\t    };\n\t\n\t    // apply results of rendering this subtree to the document\n\t    function _applyCommit(spec, context, cacheStorage) {\n\t        var result = SpecParser.parse(spec, context);\n\t        var keys = Object.keys(result);\n\t        for (var i = 0; i < keys.length; i++) {\n\t            var id = keys[i];\n\t            var childNode = Entity.get(id);\n\t            var commitParams = result[id];\n\t            commitParams.allocator = context.allocator;\n\t            var commitResult = childNode.commit(commitParams);\n\t            if (commitResult) _applyCommit(commitResult, context, cacheStorage);\n\t            else cacheStorage[id] = commitParams;\n\t        }\n\t    }\n\t\n\t    /**\n\t     * Commit the content change from this node to the document.\n\t     *\n\t     * @private\n\t     * @method commit\n\t     * @param {Context} context render context\n\t     */\n\t    RenderNode.prototype.commit = function commit(context) {\n\t        // free up some divs from the last loop\n\t        var prevKeys = Object.keys(this._prevResults);\n\t        for (var i = 0; i < prevKeys.length; i++) {\n\t            var id = prevKeys[i];\n\t            if (this._resultCache[id] === undefined) {\n\t                var object = Entity.get(id);\n\t                if (object.cleanup) object.cleanup(context.allocator);\n\t            }\n\t        }\n\t\n\t        this._prevResults = this._resultCache;\n\t        this._resultCache = {};\n\t        _applyCommit(this.render(), context, this._resultCache);\n\t    };\n\t\n\t    /**\n\t     * Generate a render spec from the contents of the wrapped component.\n\t     *\n\t     * @private\n\t     * @method render\n\t     *\n\t     * @return {Object} render specification for the component subtree\n\t     *    only under this node.\n\t     */\n\t    RenderNode.prototype.render = function render() {\n\t        if (this._isRenderable) return this._object.render();\n\t\n\t        var result = null;\n\t        if (this._hasMultipleChildren) {\n\t            result = this._childResult;\n\t            var children = this._child;\n\t            for (var i = 0; i < children.length; i++) {\n\t                result[i] = children[i].render();\n\t            }\n\t        }\n\t        else if (this._child) result = this._child.render();\n\t\n\t        return this._isModifier ? this._object.modify(result) : result;\n\t    };\n\t\n\t    module.exports = RenderNode;\n\t}.call(exports, __webpack_require__, exports, module)), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 27 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;/* This Source Code Form is subject to the terms of the Mozilla Public\n\t * License, v. 2.0. If a copy of the MPL was not distributed with this\n\t * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n\t *\n\t * Owner: david@famo.us\n\t * @license MPL 2.0\n\t * @copyright Famous Industries, Inc. 2014\n\t */\n\t\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = (function(require, exports, module) {\n\t\n\t    /**\n\t     * Three-element floating point vector.\n\t     *\n\t     * @class Vector\n\t     * @constructor\n\t     *\n\t     * @param {number} x x element value\n\t     * @param {number} y y element value\n\t     * @param {number} z z element value\n\t     */\n\t    function Vector(x,y,z) {\n\t        if (arguments.length === 1) this.set(x);\n\t        else {\n\t            this.x = x || 0;\n\t            this.y = y || 0;\n\t            this.z = z || 0;\n\t        }\n\t        return this;\n\t    }\n\t\n\t    var _register = new Vector(0,0,0);\n\t\n\t    /**\n\t     * Add this element-wise to another Vector, element-wise.\n\t     *   Note: This sets the internal result register, so other references to that vector will change.\n\t     *\n\t     * @method add\n\t     * @param {Vector} v addend\n\t     * @return {Vector} vector sum\n\t     */\n\t    Vector.prototype.add = function add(v) {\n\t        return _setXYZ.call(_register,\n\t            this.x + v.x,\n\t            this.y + v.y,\n\t            this.z + v.z\n\t        );\n\t    };\n\t\n\t    /**\n\t     * Subtract another vector from this vector, element-wise.\n\t     *   Note: This sets the internal result register, so other references to that vector will change.\n\t     *\n\t     * @method sub\n\t     * @param {Vector} v subtrahend\n\t     * @return {Vector} vector difference\n\t     */\n\t    Vector.prototype.sub = function sub(v) {\n\t        return _setXYZ.call(_register,\n\t            this.x - v.x,\n\t            this.y - v.y,\n\t            this.z - v.z\n\t        );\n\t    };\n\t\n\t    /**\n\t     * Scale Vector by floating point r.\n\t     *   Note: This sets the internal result register, so other references to that vector will change.\n\t     *\n\t     * @method mult\n\t     *\n\t     * @param {number} r scalar\n\t     * @return {Vector} vector result\n\t     */\n\t    Vector.prototype.mult = function mult(r) {\n\t        return _setXYZ.call(_register,\n\t            r * this.x,\n\t            r * this.y,\n\t            r * this.z\n\t        );\n\t    };\n\t\n\t    /**\n\t     * Scale Vector by floating point 1/r.\n\t     *   Note: This sets the internal result register, so other references to that vector will change.\n\t     *\n\t     * @method div\n\t     *\n\t     * @param {number} r scalar\n\t     * @return {Vector} vector result\n\t     */\n\t    Vector.prototype.div = function div(r) {\n\t        return this.mult(1 / r);\n\t    };\n\t\n\t    /**\n\t     * Given another vector v, return cross product (v)x(this).\n\t     *   Note: This sets the internal result register, so other references to that vector will change.\n\t     *\n\t     * @method cross\n\t     * @param {Vector} v Left Hand Vector\n\t     * @return {Vector} vector result\n\t     */\n\t    Vector.prototype.cross = function cross(v) {\n\t        var x = this.x;\n\t        var y = this.y;\n\t        var z = this.z;\n\t        var vx = v.x;\n\t        var vy = v.y;\n\t        var vz = v.z;\n\t\n\t        return _setXYZ.call(_register,\n\t            z * vy - y * vz,\n\t            x * vz - z * vx,\n\t            y * vx - x * vy\n\t        );\n\t    };\n\t\n\t    /**\n\t     * Component-wise equality test between this and Vector v.\n\t     * @method equals\n\t     * @param {Vector} v vector to compare\n\t     * @return {boolean}\n\t     */\n\t    Vector.prototype.equals = function equals(v) {\n\t        return (v.x === this.x && v.y === this.y && v.z === this.z);\n\t    };\n\t\n\t    /**\n\t     * Rotate clockwise around x-axis by theta radians.\n\t     *   Note: This sets the internal result register, so other references to that vector will change.\n\t     * @method rotateX\n\t     * @param {number} theta radians\n\t     * @return {Vector} rotated vector\n\t     */\n\t    Vector.prototype.rotateX = function rotateX(theta) {\n\t        var x = this.x;\n\t        var y = this.y;\n\t        var z = this.z;\n\t\n\t        var cosTheta = Math.cos(theta);\n\t        var sinTheta = Math.sin(theta);\n\t\n\t        return _setXYZ.call(_register,\n\t            x,\n\t            y * cosTheta - z * sinTheta,\n\t            y * sinTheta + z * cosTheta\n\t        );\n\t    };\n\t\n\t    /**\n\t     * Rotate clockwise around y-axis by theta radians.\n\t     *   Note: This sets the internal result register, so other references to that vector will change.\n\t     * @method rotateY\n\t     * @param {number} theta radians\n\t     * @return {Vector} rotated vector\n\t     */\n\t    Vector.prototype.rotateY = function rotateY(theta) {\n\t        var x = this.x;\n\t        var y = this.y;\n\t        var z = this.z;\n\t\n\t        var cosTheta = Math.cos(theta);\n\t        var sinTheta = Math.sin(theta);\n\t\n\t        return _setXYZ.call(_register,\n\t            z * sinTheta + x * cosTheta,\n\t            y,\n\t            z * cosTheta - x * sinTheta\n\t        );\n\t    };\n\t\n\t    /**\n\t     * Rotate clockwise around z-axis by theta radians.\n\t     *   Note: This sets the internal result register, so other references to that vector will change.\n\t     * @method rotateZ\n\t     * @param {number} theta radians\n\t     * @return {Vector} rotated vector\n\t     */\n\t    Vector.prototype.rotateZ = function rotateZ(theta) {\n\t        var x = this.x;\n\t        var y = this.y;\n\t        var z = this.z;\n\t\n\t        var cosTheta = Math.cos(theta);\n\t        var sinTheta = Math.sin(theta);\n\t\n\t        return _setXYZ.call(_register,\n\t            x * cosTheta - y * sinTheta,\n\t            x * sinTheta + y * cosTheta,\n\t            z\n\t        );\n\t    };\n\t\n\t    /**\n\t     * Return dot product of this with a second Vector\n\t     * @method dot\n\t     * @param {Vector} v second vector\n\t     * @return {number} dot product\n\t     */\n\t    Vector.prototype.dot = function dot(v) {\n\t        return this.x * v.x + this.y * v.y + this.z * v.z;\n\t    };\n\t\n\t    /**\n\t     * Return squared length of this vector\n\t     * @method normSquared\n\t     * @return {number} squared length\n\t     */\n\t    Vector.prototype.normSquared = function normSquared() {\n\t        return this.dot(this);\n\t    };\n\t\n\t    /**\n\t     * Return length of this vector\n\t     * @method norm\n\t     * @return {number} length\n\t     */\n\t    Vector.prototype.norm = function norm() {\n\t        return Math.sqrt(this.normSquared());\n\t    };\n\t\n\t    /**\n\t     * Scale Vector to specified length.\n\t     *   If length is less than internal tolerance, set vector to [length, 0, 0].\n\t     *   Note: This sets the internal result register, so other references to that vector will change.\n\t     * @method normalize\n\t     *\n\t     * @param {number} length target length, default 1.0\n\t     * @return {Vector}\n\t     */\n\t    Vector.prototype.normalize = function normalize(length) {\n\t        if (arguments.length === 0) length = 1;\n\t        var norm = this.norm();\n\t\n\t        if (norm > 1e-7) return _setFromVector.call(_register, this.mult(length / norm));\n\t        else return _setXYZ.call(_register, length, 0, 0);\n\t    };\n\t\n\t    /**\n\t     * Make a separate copy of the Vector.\n\t     *\n\t     * @method clone\n\t     *\n\t     * @return {Vector}\n\t     */\n\t    Vector.prototype.clone = function clone() {\n\t        return new Vector(this);\n\t    };\n\t\n\t    /**\n\t     * True if and only if every value is 0 (or falsy)\n\t     *\n\t     * @method isZero\n\t     *\n\t     * @return {boolean}\n\t     */\n\t    Vector.prototype.isZero = function isZero() {\n\t        return !(this.x || this.y || this.z);\n\t    };\n\t\n\t    function _setXYZ(x,y,z) {\n\t        this.x = x;\n\t        this.y = y;\n\t        this.z = z;\n\t        return this;\n\t    }\n\t\n\t    function _setFromArray(v) {\n\t        return _setXYZ.call(this,v[0],v[1],v[2] || 0);\n\t    }\n\t\n\t    function _setFromVector(v) {\n\t        return _setXYZ.call(this, v.x, v.y, v.z);\n\t    }\n\t\n\t    function _setFromNumber(x) {\n\t        return _setXYZ.call(this,x,0,0);\n\t    }\n\t\n\t    /**\n\t     * Set this Vector to the values in the provided Array or Vector.\n\t     *\n\t     * @method set\n\t     * @param {object} v array, Vector, or number\n\t     * @return {Vector} this\n\t     */\n\t    Vector.prototype.set = function set(v) {\n\t        if (v instanceof Array)    return _setFromArray.call(this, v);\n\t        if (v instanceof Vector)   return _setFromVector.call(this, v);\n\t        if (typeof v === 'number') return _setFromNumber.call(this, v);\n\t    };\n\t\n\t    Vector.prototype.setXYZ = function(x,y,z) {\n\t        return _setXYZ.apply(this, arguments);\n\t    };\n\t\n\t    Vector.prototype.set1D = function(x) {\n\t        return _setFromNumber.call(this, x);\n\t    };\n\t\n\t    /**\n\t     * Put result of last internal register calculation in specified output vector.\n\t     *\n\t     * @method put\n\t     * @param {Vector} v destination vector\n\t     * @return {Vector} destination vector\n\t     */\n\t\n\t    Vector.prototype.put = function put(v) {\n\t        _setFromVector.call(v, _register);\n\t    };\n\t\n\t    /**\n\t     * Set this vector to [0,0,0]\n\t     *\n\t     * @method clear\n\t     */\n\t    Vector.prototype.clear = function clear() {\n\t        return _setXYZ.call(this,0,0,0);\n\t    };\n\t\n\t    /**\n\t     * Scale this Vector down to specified \"cap\" length.\n\t     *   If Vector shorter than cap, or cap is Infinity, do nothing.\n\t     *   Note: This sets the internal result register, so other references to that vector will change.\n\t     *\n\t     * @method cap\n\t     * @return {Vector} capped vector\n\t     */\n\t    Vector.prototype.cap = function cap(cap) {\n\t        if (cap === Infinity) return _setFromVector.call(_register, this);\n\t        var norm = this.norm();\n\t        if (norm > cap) return _setFromVector.call(_register, this.mult(cap / norm));\n\t        else return _setFromVector.call(_register, this);\n\t    };\n\t\n\t    /**\n\t     * Return projection of this Vector onto another.\n\t     *   Note: This sets the internal result register, so other references to that vector will change.\n\t     *\n\t     * @method project\n\t     * @param {Vector} n vector to project upon\n\t     * @return {Vector} projected vector\n\t     */\n\t    Vector.prototype.project = function project(n) {\n\t        return n.mult(this.dot(n));\n\t    };\n\t\n\t    /**\n\t     * Reflect this Vector across provided vector.\n\t     *   Note: This sets the internal result register, so other references to that vector will change.\n\t     *\n\t     * @method reflectAcross\n\t     * @param {Vector} n vector to reflect across\n\t     * @return {Vector} reflected vector\n\t     */\n\t    Vector.prototype.reflectAcross = function reflectAcross(n) {\n\t        n.normalize().put(n);\n\t        return _setFromVector(_register, this.sub(this.project(n).mult(2)));\n\t    };\n\t\n\t    /**\n\t     * Convert Vector to three-element array.\n\t     *\n\t     * @method get\n\t     * @return {array<number>} three-element array\n\t     */\n\t    Vector.prototype.get = function get() {\n\t        return [this.x, this.y, this.z];\n\t    };\n\t\n\t    Vector.prototype.get1D = function() {\n\t        return this.x;\n\t    };\n\t\n\t    module.exports = Vector;\n\t\n\t}.call(exports, __webpack_require__, exports, module)), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 28 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;/* This Source Code Form is subject to the terms of the Mozilla Public\n\t * License, v. 2.0. If a copy of the MPL was not distributed with this\n\t * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n\t *\n\t * Owner: felix@famo.us\n\t * @license MPL 2.0\n\t * @copyright Famous Industries, Inc. 2014\n\t */\n\t\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = (function(require, exports, module) {\n\t    var PhysicsEngine = __webpack_require__(40);\n\t    var Particle = __webpack_require__(41);\n\t    var Drag = __webpack_require__(66);\n\t    var Spring = __webpack_require__(43);\n\t\n\t    var EventHandler = __webpack_require__(6);\n\t    var OptionsManager = __webpack_require__(18);\n\t    var ViewSequence = __webpack_require__(39);\n\t    var Scroller = __webpack_require__(71);\n\t    var Utility = __webpack_require__(13);\n\t\n\t    var GenericSync = __webpack_require__(62);\n\t    var ScrollSync = __webpack_require__(63);\n\t    var TouchSync = __webpack_require__(64);\n\t    GenericSync.register({scroll : ScrollSync, touch : TouchSync});\n\t\n\t    /**\n\t     * Scrollview will lay out a collection of renderables sequentially in the specified direction, and will\n\t     * allow you to scroll through them with mousewheel or touch events.\n\t     * @class Scrollview\n\t     * @constructor\n\t     * @param {Options} [options] An object of configurable options.\n\t     * @param {Number} [options.direction=Utility.Direction.Y] Using the direction helper found in the famous Utility\n\t     * module, this option will lay out the Scrollview instance's renderables either horizontally\n\t     * (x) or vertically (y). Utility's direction is essentially either zero (X) or one (Y), so feel free\n\t     * to just use integers as well.\n\t     * @param {Boolean} [options.rails=true] When true, Scrollview's genericSync will only process input in it's primary access.\n\t     * @param {Number} [clipSize=undefined] The size of the area (in pixels) that Scrollview will display content in.\n\t     * @param {Number} [margin=undefined] The size of the area (in pixels) that Scrollview will process renderables' associated calculations in.\n\t     * @param {Number} [friction=0.001] Input resistance proportional to the velocity of the input.\n\t     * Controls the feel of the Scrollview instance at low velocities.\n\t     * @param {Number} [drag=0.0001] Input resistance proportional to the square of the velocity of the input.\n\t     * Affects Scrollview instance more prominently at high velocities.\n\t     * @param {Number} [edgeGrip=0.5] A coefficient for resistance against after-touch momentum.\n\t     * @param {Number} [egePeriod=300] Sets the period on the spring that handles the physics associated\n\t     * with hitting the end of a scrollview.\n\t     * @param {Number} [edgeDamp=1] Sets the damping on the spring that handles the physics associated\n\t     * with hitting the end of a scrollview.\n\t     * @param {Boolean} [paginated=false] A paginated scrollview will scroll through items discretely\n\t     * rather than continously.\n\t     * @param {Number} [pagePeriod=500] Sets the period on the spring that handles the physics associated\n\t     * with pagination.\n\t     * @param {Number} [pageDamp=0.8] Sets the damping on the spring that handles the physics associated\n\t     * with pagination.\n\t     * @param {Number} [pageStopSpeed=Infinity] The threshold for determining the amount of velocity\n\t     * required to trigger pagination. The lower the threshold, the easier it is to scroll continuosly.\n\t     * @param {Number} [pageSwitchSpeed=1] The threshold for momentum-based velocity pagination.\n\t     * @param {Number} [speedLimit=10] The highest scrolling speed you can reach.\n\t     */\n\t    function Scrollview(options) {\n\t        this.options = Object.create(Scrollview.DEFAULT_OPTIONS);\n\t        this._optionsManager = new OptionsManager(this.options);\n\t\n\t        this._node = null;\n\t\n\t        this._physicsEngine = new PhysicsEngine();\n\t        this._particle = new Particle();\n\t        this._physicsEngine.addBody(this._particle);\n\t\n\t        this.spring = new Spring({anchor: [0, 0, 0]});\n\t\n\t        this.drag = new Drag({forceFunction: Drag.FORCE_FUNCTIONS.QUADRATIC});\n\t        this.friction = new Drag({forceFunction: Drag.FORCE_FUNCTIONS.LINEAR});\n\t\n\t        this.sync = new GenericSync(['scroll', 'touch'], {direction : this.options.direction});\n\t\n\t        this._eventInput = new EventHandler();\n\t        this._eventOutput = new EventHandler();\n\t\n\t        this._eventInput.pipe(this.sync);\n\t        this.sync.pipe(this._eventInput);\n\t\n\t        EventHandler.setInputHandler(this, this._eventInput);\n\t        EventHandler.setOutputHandler(this, this._eventOutput);\n\t\n\t        this._touchCount = 0;\n\t        this._springState = 0;\n\t        this._onEdge = 0; // -1 for top, 1 for bottom\n\t        this._pageSpringPosition = 0;\n\t        this._edgeSpringPosition = 0;\n\t        this._touchVelocity = undefined;\n\t        this._earlyEnd = false;\n\t        this._needsPaginationCheck = false;\n\t\n\t        this._scroller = new Scroller();\n\t        this._scroller.positionFrom(this.getPosition.bind(this));\n\t\n\t        this.setOptions(options);\n\t\n\t        _bindEvents.call(this);\n\t    }\n\t\n\t    /** @const */\n\t    var TOLERANCE = 0.5;\n\t\n\t    Scrollview.DEFAULT_OPTIONS = {\n\t        direction: Utility.Direction.Y,\n\t        rails: true,\n\t        friction: 0.001,\n\t        drag: 0.0001,\n\t        edgeGrip: 0.5,\n\t        edgePeriod: 300,\n\t        edgeDamp: 1,\n\t        margin: 1000,       // mostly safe\n\t        paginated: false,\n\t        pagePeriod: 500,\n\t        pageDamp: 0.8,\n\t        pageStopSpeed: 10,\n\t        pageSwitchSpeed: 0.5,\n\t        speedLimit: 10,\n\t        groupScroll: false\n\t    };\n\t\n\t    /** @enum */\n\t    var SpringStates = {\n\t        NONE: 0,\n\t        EDGE: 1,\n\t        PAGE: 2\n\t    };\n\t\n\t    function _handleStart(event) {\n\t        this._touchCount = event.count;\n\t        if (event.count === undefined) this._touchCount = 1;\n\t\n\t        _detachAgents.call(this);\n\t        this.setVelocity(0);\n\t        this._touchVelocity = 0;\n\t        this._earlyEnd = false;\n\t    }\n\t\n\t    function _handleMove(event) {\n\t        var velocity = -event.velocity;\n\t        var delta = -event.delta;\n\t\n\t        if (this._onEdge && event.slip) {\n\t            if ((velocity < 0 && this._onEdge < 0) || (velocity > 0 && this._onEdge > 0)) {\n\t                if (!this._earlyEnd) {\n\t                    _handleEnd.call(this, event);\n\t                    this._earlyEnd = true;\n\t                }\n\t            }\n\t            else if (this._earlyEnd && (Math.abs(velocity) > Math.abs(this.getVelocity()))) {\n\t                _handleStart.call(this, event);\n\t            }\n\t        }\n\t        if (this._earlyEnd) return;\n\t        this._touchVelocity = velocity;\n\t\n\t        if (event.slip) this.setVelocity(velocity);\n\t        else this.setPosition(this.getPosition() + delta);\n\t    }\n\t\n\t    function _handleEnd(event) {\n\t        this._touchCount = event.count || 0;\n\t        if (!this._touchCount) {\n\t            _detachAgents.call(this);\n\t            if (this._onEdge) _setSpring.call(this, this._edgeSpringPosition, SpringStates.EDGE);\n\t            _attachAgents.call(this);\n\t            var velocity = -event.velocity;\n\t            var speedLimit = this.options.speedLimit;\n\t            if (event.slip) speedLimit *= this.options.edgeGrip;\n\t            if (velocity < -speedLimit) velocity = -speedLimit;\n\t            else if (velocity > speedLimit) velocity = speedLimit;\n\t            this.setVelocity(velocity);\n\t            this._touchVelocity = undefined;\n\t            this._needsPaginationCheck = true;\n\t        }\n\t    }\n\t\n\t    function _bindEvents() {\n\t        this._eventInput.bindThis(this);\n\t        this._eventInput.on('start', _handleStart);\n\t        this._eventInput.on('update', _handleMove);\n\t        this._eventInput.on('end', _handleEnd);\n\t\n\t        this._scroller.on('edgeHit', function(data) {\n\t            this._edgeSpringPosition = data.position;\n\t        }.bind(this));\n\t    }\n\t\n\t    function _attachAgents() {\n\t        if (this._springState) this._physicsEngine.attach([this.spring], this._particle);\n\t        else this._physicsEngine.attach([this.drag, this.friction], this._particle);\n\t    }\n\t\n\t    function _detachAgents() {\n\t        this._springState = SpringStates.NONE;\n\t        this._physicsEngine.detachAll();\n\t    }\n\t\n\t    function _nodeSizeForDirection(node) {\n\t        var direction = this.options.direction;\n\t        var nodeSize = (node.getSize() || this._scroller.getSize())[direction];\n\t        if (!nodeSize) nodeSize = this._scroller.getSize()[direction];\n\t        return nodeSize;\n\t    }\n\t\n\t    function _handleEdge(edgeDetected) {\n\t        if (!this._onEdge && edgeDetected) {\n\t            this.sync.setOptions({scale: this.options.edgeGrip});\n\t            if (!this._touchCount && this._springState !== SpringStates.EDGE) {\n\t                _setSpring.call(this, this._edgeSpringPosition, SpringStates.EDGE);\n\t            }\n\t        }\n\t        else if (this._onEdge && !edgeDetected) {\n\t            this.sync.setOptions({scale: 1});\n\t            if (this._springState && Math.abs(this.getVelocity()) < 0.001) {\n\t                // reset agents, detaching the spring\n\t                _detachAgents.call(this);\n\t                _attachAgents.call(this);\n\t            }\n\t        }\n\t        this._onEdge = edgeDetected;\n\t    }\n\t\n\t    function _handlePagination() {\n\t        if (!this._needsPaginationCheck) return;\n\t\n\t        if (this._touchCount) return;\n\t        if (this._springState === SpringStates.EDGE) return;\n\t\n\t        var velocity = this.getVelocity();\n\t        if (Math.abs(velocity) >= this.options.pageStopSpeed) return;\n\t\n\t        var position = this.getPosition();\n\t        var velocitySwitch = Math.abs(velocity) > this.options.pageSwitchSpeed;\n\t\n\t        // parameters to determine when to switch\n\t        var nodeSize = _nodeSizeForDirection.call(this, this._node);\n\t        var positionNext = position > 0.5 * nodeSize;\n\t        var velocityNext = velocity > 0;\n\t\n\t        if ((positionNext && !velocitySwitch) || (velocitySwitch && velocityNext)) this.goToNextPage();\n\t        else _setSpring.call(this, 0, SpringStates.PAGE);\n\t\n\t        this._needsPaginationCheck = false;\n\t    }\n\t\n\t    function _setSpring(position, springState) {\n\t        var springOptions;\n\t        if (springState === SpringStates.EDGE) {\n\t            this._edgeSpringPosition = position;\n\t            springOptions = {\n\t                anchor: [this._edgeSpringPosition, 0, 0],\n\t                period: this.options.edgePeriod,\n\t                dampingRatio: this.options.edgeDamp\n\t            };\n\t        }\n\t        else if (springState === SpringStates.PAGE) {\n\t            this._pageSpringPosition = position;\n\t            springOptions = {\n\t                anchor: [this._pageSpringPosition, 0, 0],\n\t                period: this.options.pagePeriod,\n\t                dampingRatio: this.options.pageDamp\n\t            };\n\t        }\n\t\n\t        this.spring.setOptions(springOptions);\n\t        if (springState && !this._springState) {\n\t            _detachAgents.call(this);\n\t            this._springState = springState;\n\t            _attachAgents.call(this);\n\t        }\n\t        this._springState = springState;\n\t    }\n\t\n\t    function _normalizeState() {\n\t        var position = this.getPosition();\n\t        var nodeSize = _nodeSizeForDirection.call(this, this._node);\n\t        var nextNode = this._node.getNext();\n\t\n\t        while (position > nodeSize + TOLERANCE && nextNode) {\n\t            _shiftOrigin.call(this, -nodeSize);\n\t            position -= nodeSize;\n\t            this._scroller.sequenceFrom(nextNode);\n\t            this._node = nextNode;\n\t            nextNode = this._node.getNext();\n\t            nodeSize = _nodeSizeForDirection.call(this, this._node);\n\t        }\n\t\n\t        var previousNode = this._node.getPrevious();\n\t        var previousNodeSize;\n\t\n\t        while (position < -TOLERANCE && previousNode) {\n\t            previousNodeSize = _nodeSizeForDirection.call(this, previousNode);\n\t            this._scroller.sequenceFrom(previousNode);\n\t            this._node = previousNode;\n\t            _shiftOrigin.call(this, previousNodeSize);\n\t            position += previousNodeSize;\n\t            previousNode = this._node.getPrevious();\n\t        }\n\t    }\n\t\n\t    function _shiftOrigin(amount) {\n\t        this._edgeSpringPosition += amount;\n\t        this._pageSpringPosition += amount;\n\t        this.setPosition(this.getPosition() + amount);\n\t        if (this._springState === SpringStates.EDGE) {\n\t            this.spring.setOptions({anchor: [this._edgeSpringPosition, 0, 0]});\n\t        }\n\t        else if (this._springState === SpringStates.PAGE) {\n\t            this.spring.setOptions({anchor: [this._pageSpringPosition, 0, 0]});\n\t        }\n\t    }\n\t\n\t    Scrollview.prototype.outputFrom = function outputFrom() {\n\t        return this._scroller.outputFrom.apply(this._scroller, arguments);\n\t    };\n\t\n\t    /**\n\t     * Returns the position associated with the Scrollview instance's current node\n\t     *  (generally the node currently at the top).\n\t     * @method getPosition\n\t     * @param {number} [node] If specified, returns the position of the node at that index in the\n\t     * Scrollview instance's currently managed collection.\n\t     * @return {number} The position of either the specified node, or the Scrollview's current Node,\n\t     * in pixels translated.\n\t     */\n\t    Scrollview.prototype.getPosition = function getPosition() {\n\t        return this._particle.getPosition1D();\n\t    };\n\t\n\t    /**\n\t     * Sets position of the physics particle that controls Scrollview instance's \"position\"\n\t     * @method setPosition\n\t     * @param {number} x The amount of pixels you want your scrollview to progress by.\n\t     */\n\t    Scrollview.prototype.setPosition = function setPosition(x) {\n\t        this._particle.setPosition1D(x);\n\t    };\n\t\n\t    /**\n\t     * Returns the Scrollview instance's velocity.\n\t     * @method getVelocity\n\t     * @return {Number} The velocity.\n\t     */\n\t\n\t    Scrollview.prototype.getVelocity = function getVelocity() {\n\t        return this._touchCount ? this._touchVelocity : this._particle.getVelocity1D();\n\t    };\n\t\n\t    /**\n\t     * Sets the Scrollview instance's velocity. Until affected by input or another call of setVelocity\n\t     *  the Scrollview instance will scroll at the passed-in velocity.\n\t     * @method setVelocity\n\t     * @param {number} v TThe magnitude of the velocity.\n\t     */\n\t    Scrollview.prototype.setVelocity = function setVelocity(v) {\n\t        this._particle.setVelocity1D(v);\n\t    };\n\t\n\t    /**\n\t     * Patches the Scrollview instance's options with the passed-in ones.\n\t     * @method setOptions\n\t     * @param {Options} options An object of configurable options for the Scrollview instance.\n\t     */\n\t    Scrollview.prototype.setOptions = function setOptions(options) {\n\t        if (options) {\n\t            if (options.direction !== undefined) {\n\t                if (options.direction === 'x') options.direction = Utility.Direction.X;\n\t                else if (options.direction === 'y') options.direction = Utility.Direction.Y;\n\t            }\n\t\n\t            this._scroller.setOptions(options);\n\t            this._optionsManager.setOptions(options);\n\t        }\n\t\n\t        this.drag.setOptions({strength: this.options.drag});\n\t        this.friction.setOptions({strength: this.options.friction});\n\t\n\t        this.spring.setOptions({\n\t            period: this.options.edgePeriod,\n\t            dampingRatio: this.options.edgeDamp\n\t        });\n\t\n\t        this.sync.setOptions({\n\t            rails: this.options.rails,\n\t            direction: (this.options.direction === Utility.Direction.X) ? GenericSync.DIRECTION_X : GenericSync.DIRECTION_Y\n\t        });\n\t    };\n\t\n\t    /**\n\t     * goToPreviousPage paginates your Scrollview instance backwards by one item.\n\t     * @method goToPreviousPage\n\t     * @return {ViewSequence} The previous node.\n\t     */\n\t    Scrollview.prototype.goToPreviousPage = function goToPreviousPage() {\n\t        if (!this._node) return null;\n\t        var previousNode = this._node.getPrevious();\n\t        if (previousNode) {\n\t            var currentPosition = this.getPosition();\n\t            var previousNodeSize = _nodeSizeForDirection.call(this, previousNode);\n\t            this._scroller.sequenceFrom(previousNode);\n\t            this._node = previousNode;\n\t            var previousSpringPosition = (currentPosition < TOLERANCE) ? -previousNodeSize : 0;\n\t            _setSpring.call(this, previousSpringPosition, SpringStates.PAGE);\n\t            _shiftOrigin.call(this, previousNodeSize);\n\t        }\n\t        this._eventOutput.emit('pageChange', {direction: -1});\n\t        return previousNode;\n\t    };\n\t\n\t    /**\n\t     * goToNextPage paginates your Scrollview instance forwards by one item.\n\t     * @method goToNextPage\n\t     * @return {ViewSequence} The next node.\n\t     */\n\t    Scrollview.prototype.goToNextPage = function goToNextPage() {\n\t        if (!this._node) return null;\n\t        var nextNode = this._node.getNext();\n\t        if (nextNode) {\n\t            var currentPosition = this.getPosition();\n\t            var currentNodeSize = _nodeSizeForDirection.call(this, this._node);\n\t            var nextNodeSize = _nodeSizeForDirection.call(this, nextNode);\n\t            this._scroller.sequenceFrom(nextNode);\n\t            this._node = nextNode;\n\t            var nextSpringPosition = (currentPosition > currentNodeSize - TOLERANCE) ? currentNodeSize + nextNodeSize : currentNodeSize;\n\t            _setSpring.call(this, nextSpringPosition, SpringStates.PAGE);\n\t            _shiftOrigin.call(this, -currentNodeSize);\n\t        }\n\t        this._eventOutput.emit('pageChange', {direction: 1});\n\t        return nextNode;\n\t    };\n\t\n\t    /**\n\t     * Sets the collection of renderables under the Scrollview instance's control, by\n\t     *  setting its current node to the passed in ViewSequence. If you\n\t     *  pass in an array, the Scrollview instance will set its node as a ViewSequence instantiated with\n\t     *  the passed-in array.\n\t     *\n\t     * @method sequenceFrom\n\t     * @param {Array|ViewSequence} node Either an array of renderables or a Famous viewSequence.\n\t     */\n\t    Scrollview.prototype.sequenceFrom = function sequenceFrom(node) {\n\t        if (node instanceof Array) node = new ViewSequence({array: node});\n\t        this._node = node;\n\t        return this._scroller.sequenceFrom(node);\n\t    };\n\t\n\t    /**\n\t     * Returns the width and the height of the Scrollview instance.\n\t     *\n\t     * @method getSize\n\t     * @return {Array} A two value array of the Scrollview instance's current width and height (in that order).\n\t     */\n\t    Scrollview.prototype.getSize = function getSize() {\n\t        return this._scroller.getSize.apply(this._scroller, arguments);\n\t    };\n\t\n\t    /**\n\t     * Generate a render spec from the contents of this component.\n\t     *\n\t     * @private\n\t     * @method render\n\t     * @return {number} Render spec for this component\n\t     */\n\t    Scrollview.prototype.render = function render() {\n\t        if (!this._node) return null;\n\t\n\t        _normalizeState.call(this);\n\t        _handleEdge.call(this, this._scroller.onEdge());\n\t        if (this.options.paginated) _handlePagination.call(this);\n\t\n\t        return this._scroller.render();\n\t    };\n\t\n\t    module.exports = Scrollview;\n\t}.call(exports, __webpack_require__, exports, module)), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 29 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright (c) 2014 Petka Antonov\n\t * \n\t * Permission is hereby granted, free of charge, to any person obtaining a copy\n\t * of this software and associated documentation files (the \"Software\"), to deal\n\t * in the Software without restriction, including without limitation the rights\n\t * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\t * copies of the Software, and to permit persons to whom the Software is\n\t * furnished to do so, subject to the following conditions:</p>\n\t * \n\t * The above copyright notice and this permission notice shall be included in\n\t * all copies or substantial portions of the Software.\n\t * \n\t * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\t * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\t * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE\n\t * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\t * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\t * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n\t * THE SOFTWARE.\n\t * \n\t */\n\t\"use strict\";\n\tmodule.exports = function(Promise) {\n\tvar TypeError = __webpack_require__(8).TypeError;\n\t\n\tfunction apiRejection(msg) {\n\t    var error = new TypeError(msg);\n\t    var ret = Promise.rejected(error);\n\t    var parent = ret._peekContext();\n\t    if (parent != null) {\n\t        parent._attachExtraTrace(error);\n\t    }\n\t    return ret;\n\t}\n\t\n\treturn apiRejection;\n\t};\n\n\n/***/ },\n/* 30 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar AppDispatcher, Constants, MenuActions;\n\t\n\tAppDispatcher = __webpack_require__(15);\n\t\n\tConstants = __webpack_require__(9).actions;\n\t\n\tMenuActions = {\n\t  selectMenuItem: function(pageID) {\n\t    return AppDispatcher.handleViewAction({\n\t      actionType: Constants.MENU_SELECT,\n\t      pageID: pageID\n\t    });\n\t  }\n\t};\n\t\n\tmodule.exports = MenuActions;\n\n\n/***/ },\n/* 31 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar AppDispatcher, Constants, PlayActions;\n\t\n\tAppDispatcher = __webpack_require__(15);\n\t\n\tConstants = __webpack_require__(9);\n\t\n\tPlayActions = {\n\t  load: function(game) {\n\t    return AppDispatcher.handleViewAction({\n\t      actionType: Constants.actions.GAME_FETCH,\n\t      gameID: game\n\t    });\n\t  },\n\t  answer: function(choice) {\n\t    return AppDispatcher.handleViewAction({\n\t      actionType: Constants.actions.CARD_ANSWER,\n\t      choice: choice\n\t    });\n\t  },\n\t  rate: function(rating) {\n\t    return AppDispatcher.handleViewAction({\n\t      actionType: Constants.actions.CARD_RATE,\n\t      rating: rating\n\t    });\n\t  },\n\t  pick: function(card) {\n\t    return AppDispatcher.handleViewAction({\n\t      actionType: Constants.actions.CARD_PICK,\n\t      cardID: card\n\t    });\n\t  },\n\t  \"continue\": function() {\n\t    return AppDispatcher.handleViewAction({\n\t      actionType: Constants.actions.PLAY_CONTINUE\n\t    });\n\t  }\n\t};\n\t\n\tmodule.exports = PlayActions;\n\n\n/***/ },\n/* 32 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar AppDispatcher, Constants, UserActions;\n\t\n\tAppDispatcher = __webpack_require__(15);\n\t\n\tConstants = __webpack_require__(9);\n\t\n\tUserActions = {\n\t  login: function() {\n\t    return AppDispatcher.handleViewAction({\n\t      actionType: Constants.actions.USER_LOGIN\n\t    });\n\t  },\n\t  logout: function() {\n\t    return AppDispatcher.handleViewAction({\n\t      actionType: Constants.actions.USER_LOGOUT\n\t    });\n\t  },\n\t  subscribe: function(email) {\n\t    return AppDispatcher.handleViewAction({\n\t      actionType: Constants.actions.SUBSCRIBER_SUBMIT,\n\t      email: email\n\t    });\n\t  }\n\t};\n\t\n\tmodule.exports = UserActions;\n\n\n/***/ },\n/* 33 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar AppDispatcher, Constants, EventEmitter, Parse, UserStore, user,\n\t  __hasProp = {}.hasOwnProperty,\n\t  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };\n\t\n\tEventEmitter = __webpack_require__(22);\n\t\n\tConstants = __webpack_require__(9);\n\t\n\tAppDispatcher = __webpack_require__(15);\n\t\n\tParse = __webpack_require__(16);\n\t\n\tUserStore = (function(_super) {\n\t  __extends(UserStore, _super);\n\t\n\t  function UserStore() {\n\t    return UserStore.__super__.constructor.apply(this, arguments);\n\t  }\n\t\n\t  UserStore.prototype._subscribed = false;\n\t\n\t  UserStore.prototype.login = function() {\n\t    return Parse.FacebookUtils.logIn(null, {\n\t      success: (function(_this) {\n\t        return function(user) {\n\t          FB.api(\"/me\", \"get\", function(res) {\n\t            return user.save({\n\t              avatar_url: \"https://graph.facebook.com/\" + (user.get('authData').facebook.id) + \"/picture\",\n\t              first_name: res.first_name,\n\t              last_name: res.last_name,\n\t              gender: res.gender\n\t            }, {\n\t              wait: false,\n\t              error: function() {\n\t                debugger;\n\t              },\n\t              success: function() {\n\t                return _this.emit(Constants.stores.CHANGE);\n\t              }\n\t            });\n\t          });\n\t          if (!user.existed()) {\n\t            return console.log('User signed up and logged in through Facebook!');\n\t          } else {\n\t            return console.log('User logged in through Facebook!');\n\t          }\n\t        };\n\t      })(this),\n\t      error: (function(_this) {\n\t        return function(user, error) {\n\t          console.log(\"UserStore.login Error: \" + user + \" - \" + error);\n\t          _this.emit(Constants.stores.CHANGE);\n\t          return Parse.User.logOut();\n\t        };\n\t      })(this)\n\t    });\n\t  };\n\t\n\t  UserStore.prototype.subscribe = function(email) {\n\t    var Subscriber, subscriber;\n\t    Subscriber = Parse.Object.extend(\"Subscriber\");\n\t    subscriber = new Subscriber();\n\t    subscriber.set(\"email\", email);\n\t    return subscriber.save(null, {\n\t      success: (function(_this) {\n\t        return function(subscriber) {\n\t          _this._subscribed = true;\n\t          _this.emit(Constants.stores.SUBSCRIBE_PASS);\n\t          console.log(\"Subscriber created with objectId: \" + subscriber.id);\n\t        };\n\t      })(this),\n\t      error: function(subscriber, error) {\n\t        this._subscribed = false;\n\t        this.emit(Constants.stores.SUBSCRIBE_FAIL);\n\t        console.log(\"Failed to create subscriber, with error code: \" + error.description);\n\t      }\n\t    });\n\t  };\n\t\n\t  UserStore.prototype.logout = function() {\n\t    Parse.User.logOut();\n\t    return this.emit(Constants.stores.CHANGE);\n\t  };\n\t\n\t  UserStore.prototype.getUser = function() {\n\t    return Parse.User.current();\n\t  };\n\t\n\t  UserStore.prototype.getName = function(part) {\n\t    if (Parse.User.current()) {\n\t      return Parse.User.current().get(\"\" + part + \"_name\");\n\t    }\n\t  };\n\t\n\t  UserStore.prototype.getAvatar = function(type) {\n\t    if (Parse.User.current()) {\n\t      return Parse.User.current().get('avatar_url') + (\"?type=\" + type);\n\t    }\n\t  };\n\t\n\t  UserStore.prototype.getLoggedIn = function() {\n\t    if (Parse.User.current()) {\n\t      return true;\n\t    } else {\n\t      return false;\n\t    }\n\t  };\n\t\n\t  UserStore.prototype.getSubscriptionStatus = function() {\n\t    return this._subscribed;\n\t  };\n\t\n\t  return UserStore;\n\t\n\t})(EventEmitter);\n\t\n\tuser = new UserStore;\n\t\n\tAppDispatcher.register(function(payload) {\n\t  var action;\n\t  action = payload.action;\n\t  switch (action.actionType) {\n\t    case Constants.actions.USER_LOGIN:\n\t      return user.login();\n\t    case Constants.actions.USER_LOGOUT:\n\t      return user.logout();\n\t    case Constants.actions.SUBSCRIBER_SUBMIT:\n\t      return user.subscribe(action.email);\n\t  }\n\t});\n\t\n\tmodule.exports = user;\n\n\n/***/ },\n/* 34 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;/* This Source Code Form is subject to the terms of the Mozilla Public\n\t * License, v. 2.0. If a copy of the MPL was not distributed with this\n\t * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n\t *\n\t * Owner: mark@famo.us\n\t * @license MPL 2.0\n\t * @copyright Famous Industries, Inc. 2014\n\t */\n\t\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = (function(require, exports, module) {\n\t    var RenderNode = __webpack_require__(26);\n\t    var EventHandler = __webpack_require__(6);\n\t    var ElementAllocator = __webpack_require__(59);\n\t    var Transform = __webpack_require__(1);\n\t    var Transitionable = __webpack_require__(14);\n\t\n\t    var _originZeroZero = [0, 0];\n\t\n\t    function _getElementSize(element) {\n\t        return [element.clientWidth, element.clientHeight];\n\t    }\n\t\n\t    /**\n\t     * The top-level container for a Famous-renderable piece of the document.\n\t     *   It is directly updated by the process-wide Engine object, and manages one\n\t     *   render tree root, which can contain other renderables.\n\t     *\n\t     * @class Context\n\t     * @constructor\n\t     * @private\n\t     * @param {Node} container Element in which content will be inserted\n\t     */\n\t    function Context(container) {\n\t        this.container = container;\n\t        this._allocator = new ElementAllocator(container);\n\t\n\t        this._node = new RenderNode();\n\t        this._eventOutput = new EventHandler();\n\t        this._size = _getElementSize(this.container);\n\t\n\t        this._perspectiveState = new Transitionable(0);\n\t        this._perspective = undefined;\n\t\n\t        this._nodeContext = {\n\t            allocator: this._allocator,\n\t            transform: Transform.identity,\n\t            opacity: 1,\n\t            origin: _originZeroZero,\n\t            align: null,\n\t            size: this._size\n\t        };\n\t\n\t        this._eventOutput.on('resize', function() {\n\t            this.setSize(_getElementSize(this.container));\n\t        }.bind(this));\n\t\n\t    }\n\t\n\t    // Note: Unused\n\t    Context.prototype.getAllocator = function getAllocator() {\n\t        return this._allocator;\n\t    };\n\t\n\t    /**\n\t     * Add renderables to this Context's render tree.\n\t     *\n\t     * @method add\n\t     *\n\t     * @param {Object} obj renderable object\n\t     * @return {RenderNode} RenderNode wrapping this object, if not already a RenderNode\n\t     */\n\t    Context.prototype.add = function add(obj) {\n\t        return this._node.add(obj);\n\t    };\n\t\n\t    /**\n\t     * Move this Context to another containing document element.\n\t     *\n\t     * @method migrate\n\t     *\n\t     * @param {Node} container Element to which content will be migrated\n\t     */\n\t    Context.prototype.migrate = function migrate(container) {\n\t        if (container === this.container) return;\n\t        this.container = container;\n\t        this._allocator.migrate(container);\n\t    };\n\t\n\t    /**\n\t     * Gets viewport size for Context.\n\t     *\n\t     * @method getSize\n\t     *\n\t     * @return {Array.Number} viewport size as [width, height]\n\t     */\n\t    Context.prototype.getSize = function getSize() {\n\t        return this._size;\n\t    };\n\t\n\t    /**\n\t     * Sets viewport size for Context.\n\t     *\n\t     * @method setSize\n\t     *\n\t     * @param {Array.Number} size [width, height].  If unspecified, use size of root document element.\n\t     */\n\t    Context.prototype.setSize = function setSize(size) {\n\t        if (!size) size = _getElementSize(this.container);\n\t        this._size[0] = size[0];\n\t        this._size[1] = size[1];\n\t    };\n\t\n\t    /**\n\t     * Commit this Context's content changes to the document.\n\t     *\n\t     * @private\n\t     * @method update\n\t     * @param {Object} contextParameters engine commit specification\n\t     */\n\t    Context.prototype.update = function update(contextParameters) {\n\t        if (contextParameters) {\n\t            if (contextParameters.transform) this._nodeContext.transform = contextParameters.transform;\n\t            if (contextParameters.opacity) this._nodeContext.opacity = contextParameters.opacity;\n\t            if (contextParameters.origin) this._nodeContext.origin = contextParameters.origin;\n\t            if (contextParameters.align) this._nodeContext.align = contextParameters.align;\n\t            if (contextParameters.size) this._nodeContext.size = contextParameters.size;\n\t        }\n\t        var perspective = this._perspectiveState.get();\n\t        if (perspective !== this._perspective) {\n\t            this.container.style.perspective = perspective ? perspective.toFixed() + 'px' : '';\n\t            this.container.style.webkitPerspective = perspective ? perspective.toFixed() : '';\n\t            this._perspective = perspective;\n\t        }\n\t\n\t        this._node.commit(this._nodeContext);\n\t    };\n\t\n\t    /**\n\t     * Get current perspective of this context in pixels.\n\t     *\n\t     * @method getPerspective\n\t     * @return {Number} depth perspective in pixels\n\t     */\n\t    Context.prototype.getPerspective = function getPerspective() {\n\t        return this._perspectiveState.get();\n\t    };\n\t\n\t    /**\n\t     * Set current perspective of this context in pixels.\n\t     *\n\t     * @method setPerspective\n\t     * @param {Number} perspective in pixels\n\t     * @param {Object} [transition] Transitionable object for applying the change\n\t     * @param {function(Object)} callback function called on completion of transition\n\t     */\n\t    Context.prototype.setPerspective = function setPerspective(perspective, transition, callback) {\n\t        return this._perspectiveState.set(perspective, transition, callback);\n\t    };\n\t\n\t    /**\n\t     * Trigger an event, sending to all downstream handlers\n\t     *   listening for provided 'type' key.\n\t     *\n\t     * @method emit\n\t     *\n\t     * @param {string} type event type key (for example, 'click')\n\t     * @param {Object} event event data\n\t     * @return {EventHandler} this\n\t     */\n\t    Context.prototype.emit = function emit(type, event) {\n\t        return this._eventOutput.emit(type, event);\n\t    };\n\t\n\t    /**\n\t     * Bind a callback function to an event type handled by this object.\n\t     *\n\t     * @method \"on\"\n\t     *\n\t     * @param {string} type event type key (for example, 'click')\n\t     * @param {function(string, Object)} handler callback\n\t     * @return {EventHandler} this\n\t     */\n\t    Context.prototype.on = function on(type, handler) {\n\t        return this._eventOutput.on(type, handler);\n\t    };\n\t\n\t    /**\n\t     * Unbind an event by type and handler.\n\t     *   This undoes the work of \"on\".\n\t     *\n\t     * @method removeListener\n\t     *\n\t     * @param {string} type event type key (for example, 'click')\n\t     * @param {function} handler function object to remove\n\t     * @return {EventHandler} internal event handler object (for chaining)\n\t     */\n\t    Context.prototype.removeListener = function removeListener(type, handler) {\n\t        return this._eventOutput.removeListener(type, handler);\n\t    };\n\t\n\t    /**\n\t     * Add event handler object to set of downstream handlers.\n\t     *\n\t     * @method pipe\n\t     *\n\t     * @param {EventHandler} target event handler target object\n\t     * @return {EventHandler} passed event handler\n\t     */\n\t    Context.prototype.pipe = function pipe(target) {\n\t        return this._eventOutput.pipe(target);\n\t    };\n\t\n\t    /**\n\t     * Remove handler object from set of downstream handlers.\n\t     *   Undoes work of \"pipe\".\n\t     *\n\t     * @method unpipe\n\t     *\n\t     * @param {EventHandler} target target handler object\n\t     * @return {EventHandler} provided target\n\t     */\n\t    Context.prototype.unpipe = function unpipe(target) {\n\t        return this._eventOutput.unpipe(target);\n\t    };\n\t\n\t    module.exports = Context;\n\t}.call(exports, __webpack_require__, exports, module)), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 35 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;/* This Source Code Form is subject to the terms of the Mozilla Public\n\t * License, v. 2.0. If a copy of the MPL was not distributed with this\n\t * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n\t *\n\t * Owner: david@famo.us\n\t * @license MPL 2.0\n\t * @copyright Famous Industries, Inc. 2014\n\t */\n\t\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = (function(require, exports, module) {\n\t    var Transitionable = __webpack_require__(14);\n\t    var Transform = __webpack_require__(1);\n\t    var Utility = __webpack_require__(13);\n\t\n\t    /**\n\t     * A class for transitioning the state of a Transform by transitioning\n\t     * its translate, scale, skew and rotate components independently.\n\t     *\n\t     * @class TransitionableTransform\n\t     * @constructor\n\t     *\n\t     * @param [transform=Transform.identity] {Transform} The initial transform state\n\t     */\n\t    function TransitionableTransform(transform) {\n\t        this._final = Transform.identity.slice();\n\t        this.translate = new Transitionable([0, 0, 0]);\n\t        this.rotate = new Transitionable([0, 0, 0]);\n\t        this.skew = new Transitionable([0, 0, 0]);\n\t        this.scale = new Transitionable([1, 1, 1]);\n\t\n\t        if (transform) this.set(transform);\n\t    }\n\t\n\t    function _build() {\n\t        return Transform.build({\n\t            translate: this.translate.get(),\n\t            rotate: this.rotate.get(),\n\t            skew: this.skew.get(),\n\t            scale: this.scale.get()\n\t        });\n\t    }\n\t\n\t    /**\n\t     * An optimized way of setting only the translation component of a Transform\n\t     *\n\t     * @method setTranslate\n\t     * @chainable\n\t     *\n\t     * @param translate {Array}     New translation state\n\t     * @param [transition] {Object} Transition definition\n\t     * @param [callback] {Function} Callback\n\t     * @return {TransitionableTransform}\n\t     */\n\t    TransitionableTransform.prototype.setTranslate = function setTranslate(translate, transition, callback) {\n\t        this.translate.set(translate, transition, callback);\n\t        this._final = this._final.slice();\n\t        this._final[12] = translate[0];\n\t        this._final[13] = translate[1];\n\t        if (translate[2] !== undefined) this._final[14] = translate[2];\n\t        return this;\n\t    };\n\t\n\t    /**\n\t     * An optimized way of setting only the scale component of a Transform\n\t     *\n\t     * @method setTranslate\n\t     * @chainable\n\t     *\n\t     * @param scale {Array}         New scale state\n\t     * @param [transition] {Object} Transition definition\n\t     * @param [callback] {Function} Callback\n\t     * @return {TransitionableTransform}\n\t     */\n\t    TransitionableTransform.prototype.setScale = function setScale(scale, transition, callback) {\n\t        this.scale.set(scale, transition, callback);\n\t        this._final = this._final.slice();\n\t        this._final[0] = scale[0];\n\t        this._final[5] = scale[1];\n\t        if (scale[2] !== undefined) this._final[10] = scale[2];\n\t        return this;\n\t    };\n\t\n\t    /**\n\t     * An optimized way of setting only the rotational component of a Transform\n\t     *\n\t     * @method setTranslate\n\t     * @chainable\n\t     *\n\t     * @param eulerAngles {Array}   Euler angles for new rotation state\n\t     * @param [transition] {Object} Transition definition\n\t     * @param [callback] {Function} Callback\n\t     * @return {TransitionableTransform}\n\t     */\n\t    TransitionableTransform.prototype.setRotate = function setRotate(eulerAngles, transition, callback) {\n\t        this.rotate.set(eulerAngles, transition, callback);\n\t        this._final = _build.call(this);\n\t        this._final = Transform.build({\n\t            translate: this.translate.get(),\n\t            rotate: eulerAngles,\n\t            scale: this.scale.get(),\n\t            skew: this.skew.get()\n\t        });\n\t        return this;\n\t    };\n\t\n\t    /**\n\t     * An optimized way of setting only the skew component of a Transform\n\t     *\n\t     * @method setTranslate\n\t     * @chainable\n\t     *\n\t     * @param skewAngles {Array}    New skew state\n\t     * @param [transition] {Object} Transition definition\n\t     * @param [callback] {Function} Callback\n\t     * @return {TransitionableTransform}\n\t     */\n\t    TransitionableTransform.prototype.setSkew = function setSkew(skewAngles, transition, callback) {\n\t        this.skew.set(skewAngles, transition, callback);\n\t        this._final = Transform.build({\n\t            translate: this.translate.get(),\n\t            rotate: this.rotate.get(),\n\t            scale: this.scale.get(),\n\t            skew: skewAngles\n\t        });\n\t        return this;\n\t    };\n\t\n\t    /**\n\t     * Setter for a TransitionableTransform with optional parameters to transition\n\t     * between Transforms\n\t     *\n\t     * @method setTranslate\n\t     * @chainable\n\t     *\n\t     * @param transform {Array}     New transform state\n\t     * @param [transition] {Object} Transition definition\n\t     * @param [callback] {Function} Callback\n\t     * @return {TransitionableTransform}\n\t     */\n\t    TransitionableTransform.prototype.set = function set(transform, transition, callback) {\n\t        this._final = transform;\n\t        var components = Transform.interpret(transform);\n\t\n\t        var _callback = callback ? Utility.after(4, callback) : null;\n\t        this.translate.set(components.translate, transition, _callback);\n\t        this.rotate.set(components.rotate, transition, _callback);\n\t        this.skew.set(components.skew, transition, _callback);\n\t        this.scale.set(components.scale, transition, _callback);\n\t        return this;\n\t    };\n\t\n\t    /**\n\t     * Sets the default transition to use for transitioning betwen Transform states\n\t     *\n\t     * @method setDefaultTransition\n\t     *\n\t     * @param transition {Object} Transition definition\n\t     */\n\t    TransitionableTransform.prototype.setDefaultTransition = function setDefaultTransition(transition) {\n\t        this.translate.setDefault(transition);\n\t        this.rotate.setDefault(transition);\n\t        this.skew.setDefault(transition);\n\t        this.scale.setDefault(transition);\n\t    };\n\t\n\t    /**\n\t     * Getter. Returns the current state of the Transform\n\t     *\n\t     * @method get\n\t     *\n\t     * @return {Transform}\n\t     */\n\t    TransitionableTransform.prototype.get = function get() {\n\t        if (this.isActive()) {\n\t            return _build.call(this);\n\t        }\n\t        else return this._final;\n\t    };\n\t\n\t    /**\n\t     * Get the destination state of the Transform\n\t     *\n\t     * @method getFinal\n\t     *\n\t     * @return Transform {Transform}\n\t     */\n\t    TransitionableTransform.prototype.getFinal = function getFinal() {\n\t        return this._final;\n\t    };\n\t\n\t    /**\n\t     * Determine if the TransitionalTransform is currently transitioning\n\t     *\n\t     * @method isActive\n\t     *\n\t     * @return {Boolean}\n\t     */\n\t    TransitionableTransform.prototype.isActive = function isActive() {\n\t        return this.translate.isActive() || this.rotate.isActive() || this.scale.isActive() || this.skew.isActive();\n\t    };\n\t\n\t    /**\n\t     * Halts the transition\n\t     *\n\t     * @method halt\n\t     */\n\t    TransitionableTransform.prototype.halt = function halt() {\n\t        this._final = this.get();\n\t        this.translate.halt();\n\t        this.rotate.halt();\n\t        this.skew.halt();\n\t        this.scale.halt();\n\t    };\n\t\n\t    module.exports = TransitionableTransform;\n\t}.call(exports, __webpack_require__, exports, module)), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 36 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar ListItemView, StateModifier, Surface, Transform, View,\n\t  __hasProp = {}.hasOwnProperty,\n\t  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };\n\t\n\t__webpack_require__(38);\n\t\n\tView = __webpack_require__(4);\n\t\n\tTransform = __webpack_require__(1);\n\t\n\tSurface = __webpack_require__(3);\n\t\n\tStateModifier = __webpack_require__(5);\n\t\n\tListItemView = (function(_super) {\n\t  __extends(ListItemView, _super);\n\t\n\t  ListItemView.DEFAULT_OPTIONS = {\n\t    itemID: null,\n\t    message: null,\n\t    pic: null,\n\t    height: 100\n\t  };\n\t\n\t  function ListItemView(options) {\n\t    ListItemView.__super__.constructor.apply(this, arguments);\n\t    this.init();\n\t  }\n\t\n\t  ListItemView.prototype.init = function() {\n\t    return this.build();\n\t  };\n\t\n\t  ListItemView.prototype.build = function() {\n\t    var item, itemModifier, message;\n\t    message = this.options.get(\"message\");\n\t    item = new Surface({\n\t      size: [window.innerWidth, this.options.height],\n\t      content: message,\n\t      properties: {\n\t        width: window.innerWidth\n\t      },\n\t      classes: ['peggbox__item']\n\t    });\n\t    item.pipe(this._eventOutput);\n\t    item.on('click', (function(_this) {\n\t      return function() {\n\t        return _this._eventOutput.emit('selectItem', _this);\n\t      };\n\t    })(this));\n\t    item.on('mousedown', (function(_this) {\n\t      return function(options) {\n\t        return _this._eventOutput.emit('scroll', _this);\n\t      };\n\t    })(this));\n\t    itemModifier = new StateModifier;\n\t    return this.add(itemModifier).add(item);\n\t  };\n\t\n\t  return ListItemView;\n\t\n\t})(View);\n\t\n\tmodule.exports = ListItemView;\n\n\n/***/ },\n/* 37 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = {\n\t  \"public\": __webpack_require__(125)\n\t};\n\n\n/***/ },\n/* 38 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// style-loader: Adds some css to the DOM by adding a <style> tag\n\tvar dispose = __webpack_require__(10)\n\t\t// The css code:\n\t\t(__webpack_require__(136))\n\tif(false) {\n\t\tmodule.hot.accept();\n\t\tmodule.hot.dispose(dispose);\n\t}\n\n/***/ },\n/* 39 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;/* This Source Code Form is subject to the terms of the Mozilla Public\n\t * License, v. 2.0. If a copy of the MPL was not distributed with this\n\t * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n\t *\n\t * Owner: mark@famo.us\n\t * @license MPL 2.0\n\t * @copyright Famous Industries, Inc. 2014\n\t */\n\t\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = (function(require, exports, module) {\n\t\n\t    /**\n\t     * Helper object used to iterate through items sequentially. Used in\n\t     *   views that deal with layout.  A ViewSequence object conceptually points\n\t     *   to a node in a linked list.\n\t     *\n\t     * @class ViewSequence\n\t     *\n\t     * @constructor\n\t     * @param {Object|Array} options Options object, or content array.\n\t     * @param {Number} [options.index] starting index.\n\t     * @param {Number} [options.array] Array of elements to populate the ViewSequence\n\t     * @param {Object} [options._] Optional backing store (internal\n\t     * @param {Boolean} [options.loop] Whether to wrap when accessing elements just past the end\n\t     *   (or beginning) of the sequence.\n\t     */\n\t    function ViewSequence(options) {\n\t        if (!options) options = [];\n\t        if (options instanceof Array) options = {array: options};\n\t\n\t        this._ = null;\n\t        this.index = options.index || 0;\n\t\n\t        if (options.array) this._ = new (this.constructor.Backing)(options.array);\n\t        else if (options._) this._ = options._;\n\t\n\t        if (this.index === this._.firstIndex) this._.firstNode = this;\n\t        if (this.index === this._.firstIndex + this._.array.length - 1) this._.lastNode = this;\n\t\n\t        if (options.loop !== undefined) this._.loop = options.loop;\n\t\n\t        this._previousNode = null;\n\t        this._nextNode = null;\n\t    }\n\t\n\t    // constructor for internal storage\n\t    ViewSequence.Backing = function Backing(array) {\n\t        this.array = array;\n\t        this.firstIndex = 0;\n\t        this.loop = false;\n\t        this.firstNode = null;\n\t        this.lastNode = null;\n\t    };\n\t\n\t    // Get value \"i\" slots away from the first index.\n\t    ViewSequence.Backing.prototype.getValue = function getValue(i) {\n\t        var _i = i - this.firstIndex;\n\t        if (_i < 0 || _i >= this.array.length) return null;\n\t        return this.array[_i];\n\t    };\n\t\n\t    // Set value \"i\" slots away from the first index.\n\t    ViewSequence.Backing.prototype.setValue = function setValue(i, value) {\n\t        this.array[i - this.firstIndex] = value;\n\t    };\n\t\n\t    // After splicing into the backing store, restore the indexes of each node correctly.\n\t    ViewSequence.Backing.prototype.reindex = function reindex(start, removeCount, insertCount) {\n\t        if (!this.array[0]) return;\n\t\n\t        var i = 0;\n\t        var index = this.firstIndex;\n\t        var indexShiftAmount = insertCount - removeCount;\n\t        var node = this.firstNode;\n\t\n\t        // find node to begin\n\t        while (index < start - 1) {\n\t            node = node.getNext();\n\t            index++;\n\t        }\n\t        // skip removed nodes\n\t        var spliceStartNode = node;\n\t        for (i = 0; i < removeCount; i++) {\n\t            node = node.getNext();\n\t            if (node) node._previousNode = spliceStartNode;\n\t        }\n\t        var spliceResumeNode = node ? node.getNext() : null;\n\t        // generate nodes for inserted items\n\t        spliceStartNode._nextNode = null;\n\t        node = spliceStartNode;\n\t        for (i = 0; i < insertCount; i++) node = node.getNext();\n\t        index += insertCount;\n\t        // resume the chain\n\t        if (node !== spliceResumeNode) {\n\t            node._nextNode = spliceResumeNode;\n\t            if (spliceResumeNode) spliceResumeNode._previousNode = node;\n\t        }\n\t        if (spliceResumeNode) {\n\t            node = spliceResumeNode;\n\t            index++;\n\t            while (node && index < this.array.length + this.firstIndex) {\n\t                if (node._nextNode) node.index += indexShiftAmount;\n\t                else node.index = index;\n\t                node = node.getNext();\n\t                index++;\n\t            }\n\t        }\n\t    };\n\t\n\t    /**\n\t     * Return ViewSequence node previous to this node in the list, respecting looping if applied.\n\t     *\n\t     * @method getPrevious\n\t     * @return {ViewSequence} previous node.\n\t     */\n\t    ViewSequence.prototype.getPrevious = function getPrevious() {\n\t        if (this.index === this._.firstIndex) {\n\t            if (this._.loop) {\n\t                this._previousNode = this._.lastNode || new (this.constructor)({_: this._, index: this._.firstIndex + this._.array.length - 1});\n\t                this._previousNode._nextNode = this;\n\t            }\n\t            else {\n\t                this._previousNode = null;\n\t            }\n\t        }\n\t        else if (!this._previousNode) {\n\t            this._previousNode = new (this.constructor)({_: this._, index: this.index - 1});\n\t            this._previousNode._nextNode = this;\n\t        }\n\t        return this._previousNode;\n\t    };\n\t\n\t    /**\n\t     * Return ViewSequence node next after this node in the list, respecting looping if applied.\n\t     *\n\t     * @method getNext\n\t     * @return {ViewSequence} previous node.\n\t     */\n\t    ViewSequence.prototype.getNext = function getNext() {\n\t        if (this.index === this._.firstIndex + this._.array.length - 1) {\n\t            if (this._.loop) {\n\t                this._nextNode = this._.firstNode || new (this.constructor)({_: this._, index: this._.firstIndex});\n\t                this._nextNode._previousNode = this;\n\t            }\n\t            else {\n\t                this._nextNode = null;\n\t            }\n\t        }\n\t        else if (!this._nextNode) {\n\t            this._nextNode = new (this.constructor)({_: this._, index: this.index + 1});\n\t            this._nextNode._previousNode = this;\n\t        }\n\t        return this._nextNode;\n\t    };\n\t\n\t    /**\n\t     * Return index of this ViewSequence node.\n\t     *\n\t     * @method getIndex\n\t     * @return {Number} index\n\t     */\n\t    ViewSequence.prototype.getIndex = function getIndex() {\n\t        return this.index;\n\t    };\n\t\n\t    /**\n\t     * Return printable version of this ViewSequence node.\n\t     *\n\t     * @method toString\n\t     * @return {string} this index as a string\n\t     */\n\t    ViewSequence.prototype.toString = function toString() {\n\t        return '' + this.index;\n\t    };\n\t\n\t    /**\n\t     * Add one or more objects to the beginning of the sequence.\n\t     *\n\t     * @method unshift\n\t     * @param {...Object} value arguments array of objects\n\t     */\n\t    ViewSequence.prototype.unshift = function unshift(value) {\n\t        this._.array.unshift.apply(this._.array, arguments);\n\t        this._.firstIndex -= arguments.length;\n\t    };\n\t\n\t    /**\n\t     * Add one or more objects to the end of the sequence.\n\t     *\n\t     * @method push\n\t     * @param {...Object} value arguments array of objects\n\t     */\n\t    ViewSequence.prototype.push = function push(value) {\n\t        this._.array.push.apply(this._.array, arguments);\n\t    };\n\t\n\t    /**\n\t     * Remove objects from the sequence\n\t     *\n\t     * @method splice\n\t     * @param {Number} index starting index for removal\n\t     * @param {Number} howMany how many elements to remove\n\t     * @param {...Object} value arguments array of objects\n\t     */\n\t    ViewSequence.prototype.splice = function splice(index, howMany) {\n\t        var values = Array.prototype.slice.call(arguments, 2);\n\t        this._.array.splice.apply(this._.array, [index - this._.firstIndex, howMany].concat(values));\n\t        this._.reindex(index, howMany, values.length);\n\t    };\n\t\n\t    /**\n\t     * Exchange this element's sequence position with another's.\n\t     *\n\t     * @method swap\n\t     * @param {ViewSequence} other element to swap with.\n\t     */\n\t    ViewSequence.prototype.swap = function swap(other) {\n\t        var otherValue = other.get();\n\t        var myValue = this.get();\n\t        this._.setValue(this.index, otherValue);\n\t        this._.setValue(other.index, myValue);\n\t\n\t        var myPrevious = this._previousNode;\n\t        var myNext = this._nextNode;\n\t        var myIndex = this.index;\n\t        var otherPrevious = other._previousNode;\n\t        var otherNext = other._nextNode;\n\t        var otherIndex = other.index;\n\t\n\t        this.index = otherIndex;\n\t        this._previousNode = (otherPrevious === this) ? other : otherPrevious;\n\t        if (this._previousNode) this._previousNode._nextNode = this;\n\t        this._nextNode = (otherNext === this) ? other : otherNext;\n\t        if (this._nextNode) this._nextNode._previousNode = this;\n\t\n\t        other.index = myIndex;\n\t        other._previousNode = (myPrevious === other) ? this : myPrevious;\n\t        if (other._previousNode) other._previousNode._nextNode = other;\n\t        other._nextNode = (myNext === other) ? this : myNext;\n\t        if (other._nextNode) other._nextNode._previousNode = other;\n\t\n\t        if (this.index === this._.firstIndex) this._.firstNode = this;\n\t        else if (this.index === this._.firstIndex + this._.array.length - 1) this._.lastNode = this;\n\t        if (other.index === this._.firstIndex) this._.firstNode = other;\n\t        else if (other.index === this._.firstIndex + this._.array.length - 1) this._.lastNode = other;\n\t    };\n\t\n\t   /**\n\t     * Return value of this ViewSequence node.\n\t     *\n\t     * @method get\n\t     * @return {Object} value of thiss\n\t     */\n\t    ViewSequence.prototype.get = function get() {\n\t        return this._.getValue(this.index);\n\t    };\n\t\n\t   /**\n\t     * Call getSize() on the contained View.\n\t     *\n\t     * @method getSize\n\t     * @return {Array.Number} [width, height]\n\t     */\n\t    ViewSequence.prototype.getSize = function getSize() {\n\t        var target = this.get();\n\t        return target ? target.getSize() : null;\n\t    };\n\t\n\t    /**\n\t     * Generate a render spec from the contents of this component.\n\t     * Specifically, this will render the value at the current index.\n\t     * @private\n\t     * @method render\n\t     * @return {number} Render spec for this component\n\t     */\n\t    ViewSequence.prototype.render = function render() {\n\t        var target = this.get();\n\t        return target ? target.render.apply(target, arguments) : null;\n\t    };\n\t\n\t    module.exports = ViewSequence;\n\t}.call(exports, __webpack_require__, exports, module)), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 40 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;/* This Source Code Form is subject to the terms of the Mozilla Public\n\t * License, v. 2.0. If a copy of the MPL was not distributed with this\n\t * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n\t *\n\t * @license MPL 2.0\n\t * @copyright Famous Industries, Inc. 2014\n\t */\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = (function(require, exports, module) {\n\t    var EventHandler = __webpack_require__(6);\n\t\n\t    /**\n\t     * The Physics Engine is responsible for mediating Bodies and their\n\t     * interaction with forces and constraints. The Physics Engine handles the\n\t     * logic of adding and removing bodies, updating their state of the over\n\t     * time.\n\t     *\n\t     * @class PhysicsEngine\n\t     * @constructor\n\t     * @param options {Object} options\n\t     */\n\t    function PhysicsEngine(options) {\n\t        this.options = Object.create(PhysicsEngine.DEFAULT_OPTIONS);\n\t        if (options) this.setOptions(options);\n\t\n\t        this._particles      = [];   //list of managed particles\n\t        this._bodies         = [];   //list of managed bodies\n\t        this._agents         = {};   //hash of managed agents\n\t        this._forces         = [];   //list of IDs of agents that are forces\n\t        this._constraints    = [];   //list of IDs of agents that are constraints\n\t\n\t        this._buffer         = 0.0;\n\t        this._prevTime       = now();\n\t        this._isSleeping     = false;\n\t        this._eventHandler   = null;\n\t        this._currAgentId    = 0;\n\t        this._hasBodies      = false;\n\t    }\n\t\n\t    var TIMESTEP = 17;\n\t    var MIN_TIME_STEP = 17;\n\t    var MAX_TIME_STEP = 1000 / 120;\n\t\n\t    /**\n\t     * @property PhysicsEngine.DEFAULT_OPTIONS\n\t     * @type Object\n\t     * @protected\n\t     * @static\n\t     */\n\t    PhysicsEngine.DEFAULT_OPTIONS = {\n\t\n\t        /**\n\t         * The number of iterations the engine takes to resolve constraints\n\t         * @attribute constraintSteps\n\t         * @type Number\n\t         */\n\t        constraintSteps : 1,\n\t\n\t        /**\n\t         * The energy threshold before the Engine stops updating\n\t         * @attribute sleepTolerance\n\t         * @type Number\n\t         */\n\t        sleepTolerance  : 1e-7\n\t    };\n\t\n\t    var now = (function() {\n\t        return Date.now;\n\t    })();\n\t\n\t    /**\n\t     * Options setter\n\t     * @method setOptions\n\t     * @param options {Object}\n\t     */\n\t    PhysicsEngine.prototype.setOptions = function setOptions(opts) {\n\t        for (var key in opts) if (this.options[key]) this.options[key] = opts[key];\n\t    };\n\t\n\t    /**\n\t     * Method to add a physics body to the engine. Necessary to update the\n\t     * body over time.\n\t     *\n\t     * @method addBody\n\t     * @param body {Body}\n\t     * @return body {Body}\n\t     */\n\t    PhysicsEngine.prototype.addBody = function addBody(body) {\n\t        body._engine = this;\n\t        if (body.isBody) {\n\t            this._bodies.push(body);\n\t            this._hasBodies = true;\n\t        }\n\t        else this._particles.push(body);\n\t        return body;\n\t    };\n\t\n\t    /**\n\t     * Remove a body from the engine. Detaches body from all forces and\n\t     * constraints.\n\t     *\n\t     * @method removeBody\n\t     * @param body {Body}\n\t     */\n\t    PhysicsEngine.prototype.removeBody = function removeBody(body) {\n\t        var array = (body.isBody) ? this._bodies : this._particles;\n\t        var index = array.indexOf(body);\n\t        if (index > -1) {\n\t            for (var i = 0; i < Object.keys(this._agents).length; i++) this.detachFrom(i, body);\n\t            array.splice(index,1);\n\t        }\n\t        if (this.getBodies().length === 0) this._hasBodies = false;\n\t    };\n\t\n\t    function _mapAgentArray(agent) {\n\t        if (agent.applyForce)      return this._forces;\n\t        if (agent.applyConstraint) return this._constraints;\n\t    }\n\t\n\t    function _attachOne(agent, targets, source) {\n\t        if (targets === undefined) targets = this.getParticlesAndBodies();\n\t        if (!(targets instanceof Array)) targets = [targets];\n\t\n\t        this._agents[this._currAgentId] = {\n\t            agent   : agent,\n\t            targets : targets,\n\t            source  : source\n\t        };\n\t\n\t        _mapAgentArray.call(this, agent).push(this._currAgentId);\n\t        return this._currAgentId++;\n\t    }\n\t\n\t    /**\n\t     * Attaches a force or constraint to a Body. Returns an AgentId of the\n\t     * attached agent which can be used to detach the agent.\n\t     *\n\t     * @method attach\n\t     * @param agent {Agent|Array.Agent} A force, constraint, or array of them.\n\t     * @param [targets=All] {Body|Array.Body} The Body or Bodies affected by the agent\n\t     * @param [source] {Body} The source of the agent\n\t     * @return AgentId {Number}\n\t     */\n\t    PhysicsEngine.prototype.attach = function attach(agents, targets, source) {\n\t        if (agents instanceof Array) {\n\t            var agentIDs = [];\n\t            for (var i = 0; i < agents.length; i++)\n\t                agentIDs[i] = _attachOne.call(this, agents[i], targets, source);\n\t            return agentIDs;\n\t        }\n\t        else return _attachOne.call(this, agents, targets, source);\n\t    };\n\t\n\t    /**\n\t     * Append a body to the targets of a previously defined physics agent.\n\t     *\n\t     * @method attachTo\n\t     * @param agentID {AgentId} The agentId of a previously defined agent\n\t     * @param target {Body} The Body affected by the agent\n\t     */\n\t    PhysicsEngine.prototype.attachTo = function attachTo(agentID, target) {\n\t        _getBoundAgent.call(this, agentID).targets.push(target);\n\t    };\n\t\n\t    /**\n\t     * Undoes PhysicsEngine.attach. Removes an agent and its associated\n\t     * effect on its affected Bodies.\n\t     *\n\t     * @method detach\n\t     * @param agentID {AgentId} The agentId of a previously defined agent\n\t     */\n\t    PhysicsEngine.prototype.detach = function detach(id) {\n\t        // detach from forces/constraints array\n\t        var agent = this.getAgent(id);\n\t        var agentArray = _mapAgentArray.call(this, agent);\n\t        var index = agentArray.indexOf(id);\n\t        agentArray.splice(index,1);\n\t\n\t        // detach agents array\n\t        delete this._agents[id];\n\t    };\n\t\n\t    /**\n\t     * Remove a single Body from a previously defined agent.\n\t     *\n\t     * @method detach\n\t     * @param agentID {AgentId} The agentId of a previously defined agent\n\t     * @param target {Body} The body to remove from the agent\n\t     */\n\t    PhysicsEngine.prototype.detachFrom = function detachFrom(id, target) {\n\t        var boundAgent = _getBoundAgent.call(this, id);\n\t        if (boundAgent.source === target) this.detach(id);\n\t        else {\n\t            var targets = boundAgent.targets;\n\t            var index = targets.indexOf(target);\n\t            if (index > -1) targets.splice(index,1);\n\t        }\n\t    };\n\t\n\t    /**\n\t     * A convenience method to give the Physics Engine a clean slate of\n\t     * agents. Preserves all added Body objects.\n\t     *\n\t     * @method detachAll\n\t     */\n\t    PhysicsEngine.prototype.detachAll = function detachAll() {\n\t        this._agents        = {};\n\t        this._forces        = [];\n\t        this._constraints   = [];\n\t        this._currAgentId   = 0;\n\t    };\n\t\n\t    function _getBoundAgent(id) {\n\t        return this._agents[id];\n\t    }\n\t\n\t    /**\n\t     * Returns the corresponding agent given its agentId.\n\t     *\n\t     * @method getAgent\n\t     * @param id {AgentId}\n\t     */\n\t    PhysicsEngine.prototype.getAgent = function getAgent(id) {\n\t        return _getBoundAgent.call(this, id).agent;\n\t    };\n\t\n\t    /**\n\t     * Returns all particles that are currently managed by the Physics Engine.\n\t     *\n\t     * @method getParticles\n\t     * @return particles {Array.Particles}\n\t     */\n\t    PhysicsEngine.prototype.getParticles = function getParticles() {\n\t        return this._particles;\n\t    };\n\t\n\t    /**\n\t     * Returns all bodies, except particles, that are currently managed by the Physics Engine.\n\t     *\n\t     * @method getBodies\n\t     * @return bodies {Array.Bodies}\n\t     */\n\t    PhysicsEngine.prototype.getBodies = function getBodies() {\n\t        return this._bodies;\n\t    };\n\t\n\t    /**\n\t     * Returns all bodies that are currently managed by the Physics Engine.\n\t     *\n\t     * @method getBodies\n\t     * @return bodies {Array.Bodies}\n\t     */\n\t    PhysicsEngine.prototype.getParticlesAndBodies = function getParticlesAndBodies() {\n\t        return this.getParticles().concat(this.getBodies());\n\t    };\n\t\n\t    /**\n\t     * Iterates over every Particle and applies a function whose first\n\t     * argument is the Particle\n\t     *\n\t     * @method forEachParticle\n\t     * @param fn {Function} Function to iterate over\n\t     * @param [dt] {Number} Delta time\n\t     */\n\t    PhysicsEngine.prototype.forEachParticle = function forEachParticle(fn, dt) {\n\t        var particles = this.getParticles();\n\t        for (var index = 0, len = particles.length; index < len; index++)\n\t            fn.call(this, particles[index], dt);\n\t    };\n\t\n\t    /**\n\t     * Iterates over every Body that isn't a Particle and applies\n\t     * a function whose first argument is the Body\n\t     *\n\t     * @method forEachBody\n\t     * @param fn {Function} Function to iterate over\n\t     * @param [dt] {Number} Delta time\n\t     */\n\t    PhysicsEngine.prototype.forEachBody = function forEachBody(fn, dt) {\n\t        if (!this._hasBodies) return;\n\t        var bodies = this.getBodies();\n\t        for (var index = 0, len = bodies.length; index < len; index++)\n\t            fn.call(this, bodies[index], dt);\n\t    };\n\t\n\t    /**\n\t     * Iterates over every Body and applies a function whose first\n\t     * argument is the Body\n\t     *\n\t     * @method forEach\n\t     * @param fn {Function} Function to iterate over\n\t     * @param [dt] {Number} Delta time\n\t     */\n\t    PhysicsEngine.prototype.forEach = function forEach(fn, dt) {\n\t        this.forEachParticle(fn, dt);\n\t        this.forEachBody(fn, dt);\n\t    };\n\t\n\t    function _updateForce(index) {\n\t        var boundAgent = _getBoundAgent.call(this, this._forces[index]);\n\t        boundAgent.agent.applyForce(boundAgent.targets, boundAgent.source);\n\t    }\n\t\n\t    function _updateForces() {\n\t        for (var index = this._forces.length - 1; index > -1; index--)\n\t            _updateForce.call(this, index);\n\t    }\n\t\n\t    function _updateConstraint(index, dt) {\n\t        var boundAgent = this._agents[this._constraints[index]];\n\t        return boundAgent.agent.applyConstraint(boundAgent.targets, boundAgent.source, dt);\n\t    }\n\t\n\t    function _updateConstraints(dt) {\n\t        var iteration = 0;\n\t        while (iteration < this.options.constraintSteps) {\n\t            for (var index = this._constraints.length - 1; index > -1; index--)\n\t                _updateConstraint.call(this, index, dt);\n\t            iteration++;\n\t        }\n\t    }\n\t\n\t    function _updateVelocities(particle, dt) {\n\t        particle.integrateVelocity(dt);\n\t    }\n\t\n\t    function _updateAngularVelocities(body, dt) {\n\t        body.integrateAngularMomentum(dt);\n\t        body.updateAngularVelocity();\n\t    }\n\t\n\t    function _updateOrientations(body, dt) {\n\t        body.integrateOrientation(dt);\n\t    }\n\t\n\t    function _updatePositions(particle, dt) {\n\t        particle.integratePosition(dt);\n\t        particle.emit('update', particle);\n\t    }\n\t\n\t    function _integrate(dt) {\n\t        _updateForces.call(this, dt);\n\t        this.forEach(_updateVelocities, dt);\n\t        this.forEachBody(_updateAngularVelocities, dt);\n\t        _updateConstraints.call(this, dt);\n\t        this.forEachBody(_updateOrientations, dt);\n\t        this.forEach(_updatePositions, dt);\n\t    }\n\t\n\t    function _getEnergyParticles() {\n\t        var energy = 0.0;\n\t        var particleEnergy = 0.0;\n\t        this.forEach(function(particle) {\n\t            particleEnergy = particle.getEnergy();\n\t            energy += particleEnergy;\n\t            if (particleEnergy < particle.sleepTolerance) particle.sleep();\n\t        });\n\t        return energy;\n\t    }\n\t\n\t    function _getEnergyForces() {\n\t        var energy = 0;\n\t        for (var index = this._forces.length - 1; index > -1; index--)\n\t            energy += this._forces[index].getEnergy() || 0.0;\n\t        return energy;\n\t    }\n\t\n\t    function _getEnergyConstraints() {\n\t        var energy = 0;\n\t        for (var index = this._constraints.length - 1; index > -1; index--)\n\t            energy += this._constraints[index].getEnergy() || 0.0;\n\t        return energy;\n\t    }\n\t\n\t    /**\n\t     * Calculates the kinetic energy of all Body objects and potential energy\n\t     * of all attached agents.\n\t     *\n\t     * TODO: implement.\n\t     * @method getEnergy\n\t     * @return energy {Number}\n\t     */\n\t    PhysicsEngine.prototype.getEnergy = function getEnergy() {\n\t        return _getEnergyParticles.call(this) + _getEnergyForces.call(this) + _getEnergyConstraints.call(this);\n\t    };\n\t\n\t    /**\n\t     * Updates all Body objects managed by the physics engine over the\n\t     * time duration since the last time step was called.\n\t     *\n\t     * @method step\n\t     */\n\t    PhysicsEngine.prototype.step = function step() {\n\t//        if (this.getEnergy() < this.options.sleepTolerance) {\n\t//            this.sleep();\n\t//            return;\n\t//        };\n\t\n\t        //set current frame's time\n\t        var currTime = now();\n\t\n\t        //milliseconds elapsed since last frame\n\t        var dtFrame = currTime - this._prevTime;\n\t\n\t        this._prevTime = currTime;\n\t\n\t        if (dtFrame < MIN_TIME_STEP) return;\n\t        if (dtFrame > MAX_TIME_STEP) dtFrame = MAX_TIME_STEP;\n\t\n\t        //robust integration\n\t//        this._buffer += dtFrame;\n\t//        while (this._buffer > this._timestep){\n\t//            _integrate.call(this, this._timestep);\n\t//            this._buffer -= this._timestep;\n\t//        };\n\t//        _integrate.call(this, this._buffer);\n\t//        this._buffer = 0.0;\n\t        _integrate.call(this, TIMESTEP);\n\t\n\t//        this.emit('update', this);\n\t    };\n\t\n\t    /**\n\t     * Tells whether the Physics Engine is sleeping or awake.\n\t     * @method isSleeping\n\t     * @return {Boolean}\n\t     */\n\t    PhysicsEngine.prototype.isSleeping = function isSleeping() {\n\t        return this._isSleeping;\n\t    };\n\t\n\t    /**\n\t     * Stops the Physics Engine from updating. Emits an 'end' event.\n\t     * @method sleep\n\t     */\n\t    PhysicsEngine.prototype.sleep = function sleep() {\n\t        this.emit('end', this);\n\t        this._isSleeping = true;\n\t    };\n\t\n\t    /**\n\t     * Starts the Physics Engine from updating. Emits an 'start' event.\n\t     * @method wake\n\t     */\n\t    PhysicsEngine.prototype.wake = function wake() {\n\t        this._prevTime = now();\n\t        this.emit('start', this);\n\t        this._isSleeping = false;\n\t    };\n\t\n\t    PhysicsEngine.prototype.emit = function emit(type, data) {\n\t        if (this._eventHandler === null) return;\n\t        this._eventHandler.emit(type, data);\n\t    };\n\t\n\t    PhysicsEngine.prototype.on = function on(event, fn) {\n\t        if (this._eventHandler === null) this._eventHandler = new EventHandler();\n\t        this._eventHandler.on(event, fn);\n\t    };\n\t\n\t    module.exports = PhysicsEngine;\n\t}.call(exports, __webpack_require__, exports, module)), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 41 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;/* This Source Code Form is subject to the terms of the Mozilla Public\n\t * License, v. 2.0. If a copy of the MPL was not distributed with this\n\t * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n\t *\n\t * Owner: david@famo.us\n\t * @license MPL 2.0\n\t * @copyright Famous Industries, Inc. 2014\n\t */\n\t\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = (function(require, exports, module) {\n\t    var Vector = __webpack_require__(27);\n\t    var Transform = __webpack_require__(1);\n\t    var EventHandler = __webpack_require__(6);\n\t    var Integrator = __webpack_require__(67);\n\t\n\t    /**\n\t     * A point body that is controlled by the Physics Engine. A particle has\n\t     *   position and velocity states that are updated by the Physics Engine.\n\t     *   Ultimately, a particle is a _special type of modifier, and can be added to\n\t     *   the Famous render tree like any other modifier.\n\t     *\n\t     * @constructor\n\t     * @class Particle\n\t     * @uses EventHandler\n\t     * @uses Modifier\n\t     * @extensionfor Body\n\t     * @param {Options} [options] An object of configurable options.\n\t     * @param {Array} [options.position] The position of the particle.\n\t     * @param {Array} [options.velocity] The velocity of the particle.\n\t     * @param {Number} [options.mass] The mass of the particle.\n\t     * @param {Hexadecimal} [options.axis] The axis a particle can move along. Can be bitwise ORed e.g., Particle.AXES.X, Particle.AXES.X | Particle.AXES.Y\n\t     *\n\t     */\n\t     function Particle(options) {\n\t        options = options || {};\n\t\n\t        // registers\n\t        this.position = new Vector();\n\t        this.velocity = new Vector();\n\t        this.force    = new Vector();\n\t\n\t        var defaults  = Particle.DEFAULT_OPTIONS;\n\t\n\t        // set vectors\n\t        this.setPosition(options.position || defaults.position);\n\t        this.setVelocity(options.velocity || defaults.velocity);\n\t        this.force.set(options.force || [0,0,0]);\n\t\n\t        // set scalars\n\t        this.mass = (options.mass !== undefined)\n\t            ? options.mass\n\t            : defaults.mass;\n\t\n\t        this.axis = (options.axis !== undefined)\n\t            ? options.axis\n\t            : defaults.axis;\n\t\n\t        this.inverseMass = 1 / this.mass;\n\t\n\t        // state variables\n\t        this._isSleeping     = false;\n\t        this._engine         = null;\n\t        this._eventOutput    = null;\n\t        this._positionGetter = null;\n\t\n\t        this.transform = Transform.identity.slice();\n\t\n\t        // cached _spec\n\t        this._spec = {\n\t            transform : this.transform,\n\t            target    : null\n\t        };\n\t    }\n\t\n\t    Particle.DEFAULT_OPTIONS = {\n\t        position : [0,0,0],\n\t        velocity : [0,0,0],\n\t        mass : 1,\n\t        axis : undefined\n\t    };\n\t\n\t    /**\n\t     * Kinetic energy threshold needed to update the body\n\t     *\n\t     * @property SLEEP_TOLERANCE\n\t     * @type Number\n\t     * @static\n\t     * @default 1e-7\n\t     */\n\t    Particle.SLEEP_TOLERANCE = 1e-7;\n\t\n\t    /**\n\t     * Axes by which a body can translate\n\t     *\n\t     * @property AXES\n\t     * @type Hexadecimal\n\t     * @static\n\t     * @default 1e-7\n\t     */\n\t    Particle.AXES = {\n\t        X : 0x00, // hexadecimal for 0\n\t        Y : 0x01, // hexadecimal for 1\n\t        Z : 0x02  // hexadecimal for 2\n\t    };\n\t\n\t    // Integrator for updating the particle's state\n\t    // TODO: make this a singleton\n\t    Particle.INTEGRATOR = new Integrator();\n\t\n\t    //Catalogue of outputted events\n\t    var _events = {\n\t        start  : 'start',\n\t        update : 'update',\n\t        end    : 'end'\n\t    };\n\t\n\t    // Cached timing function\n\t    var now = (function() {\n\t        return Date.now;\n\t    })();\n\t\n\t    /**\n\t     * Stops the particle from updating\n\t     * @method sleep\n\t     */\n\t    Particle.prototype.sleep = function sleep() {\n\t        if (this._isSleeping) return;\n\t        this.emit(_events.end, this);\n\t        this._isSleeping = true;\n\t    };\n\t\n\t    /**\n\t     * Starts the particle update\n\t     * @method wake\n\t     */\n\t    Particle.prototype.wake = function wake() {\n\t        if (!this._isSleeping) return;\n\t        this.emit(_events.start, this);\n\t        this._isSleeping = false;\n\t        this._prevTime = now();\n\t    };\n\t\n\t    /**\n\t     * @attribute isBody\n\t     * @type Boolean\n\t     * @static\n\t     */\n\t    Particle.prototype.isBody = false;\n\t\n\t    /**\n\t     * Basic setter for position\n\t     * @method getPosition\n\t     * @param position {Array|Vector}\n\t     */\n\t    Particle.prototype.setPosition = function setPosition(position) {\n\t        this.position.set(position);\n\t    };\n\t\n\t    /**\n\t     * 1-dimensional setter for position\n\t     * @method setPosition1D\n\t     * @param value {Number}\n\t     */\n\t    Particle.prototype.setPosition1D = function setPosition1D(x) {\n\t        this.position.x = x;\n\t    };\n\t\n\t    /**\n\t     * Basic getter function for position\n\t     * @method getPosition\n\t     * @return position {Array}\n\t     */\n\t    Particle.prototype.getPosition = function getPosition() {\n\t        if (this._positionGetter instanceof Function)\n\t            this.setPosition(this._positionGetter());\n\t\n\t        this._engine.step();\n\t\n\t        return this.position.get();\n\t    };\n\t\n\t    /**\n\t     * 1-dimensional getter for position\n\t     * @method getPosition1D\n\t     * @return value {Number}\n\t     */\n\t    Particle.prototype.getPosition1D = function getPosition1D() {\n\t        this._engine.step();\n\t        return this.position.x;\n\t    };\n\t\n\t    /**\n\t     * Defines the position from outside the Physics Engine\n\t     * @method positionFrom\n\t     * @param positionGetter {Function}\n\t     */\n\t    Particle.prototype.positionFrom = function positionFrom(positionGetter) {\n\t        this._positionGetter = positionGetter;\n\t    };\n\t\n\t    /**\n\t     * Basic setter function for velocity Vector\n\t     * @method setVelocity\n\t     * @function\n\t     */\n\t    Particle.prototype.setVelocity = function setVelocity(velocity) {\n\t        this.velocity.set(velocity);\n\t        this.wake();\n\t    };\n\t\n\t    /**\n\t     * 1-dimensional setter for velocity\n\t     * @method setVelocity1D\n\t     * @param velocity {Number}\n\t     */\n\t    Particle.prototype.setVelocity1D = function setVelocity1D(x) {\n\t        this.velocity.x = x;\n\t        this.wake();\n\t    };\n\t\n\t    /**\n\t     * Basic getter function for velocity Vector\n\t     * @method getVelocity\n\t     * @return velocity {Array}\n\t     */\n\t    Particle.prototype.getVelocity = function getVelocity() {\n\t        return this.velocity.get();\n\t    };\n\t\n\t    /**\n\t     * 1-dimensional getter for velocity\n\t     * @method getVelocity1D\n\t     * @return velocity {Number}\n\t     */\n\t    Particle.prototype.getVelocity1D = function getVelocity1D() {\n\t        return this.velocity.x;\n\t    };\n\t\n\t    /**\n\t     * Basic setter function for mass quantity\n\t     * @method setMass\n\t     * @param mass {Number} mass\n\t     */\n\t    Particle.prototype.setMass = function setMass(mass) {\n\t        this.mass = mass;\n\t        this.inverseMass = 1 / mass;\n\t    };\n\t\n\t    /**\n\t     * Basic getter function for mass quantity\n\t     * @method getMass\n\t     * @return mass {Number}\n\t     */\n\t    Particle.prototype.getMass = function getMass() {\n\t        return this.mass;\n\t    };\n\t\n\t    /**\n\t     * Reset position and velocity\n\t     * @method reset\n\t     * @param position {Array|Vector}\n\t     * @param velocity {Array|Vector}\n\t     */\n\t    Particle.prototype.reset = function reset(position, velocity) {\n\t        this.setPosition(position || [0,0,0]);\n\t        this.setVelocity(velocity || [0,0,0]);\n\t    };\n\t\n\t    /**\n\t     * Add force vector to existing internal force Vector\n\t     * @method applyForce\n\t     * @param force {Vector}\n\t     */\n\t    Particle.prototype.applyForce = function applyForce(force) {\n\t        if (force.isZero()) return;\n\t        this.force.add(force).put(this.force);\n\t        this.wake();\n\t    };\n\t\n\t    /**\n\t     * Add impulse (change in velocity) Vector to this Vector's velocity.\n\t     * @method applyImpulse\n\t     * @param impulse {Vector}\n\t     */\n\t    Particle.prototype.applyImpulse = function applyImpulse(impulse) {\n\t        if (impulse.isZero()) return;\n\t        var velocity = this.velocity;\n\t        velocity.add(impulse.mult(this.inverseMass)).put(velocity);\n\t    };\n\t\n\t    /**\n\t     * Update a particle's velocity from its force accumulator\n\t     * @method integrateVelocity\n\t     * @param dt {Number} Time differential\n\t     */\n\t    Particle.prototype.integrateVelocity = function integrateVelocity(dt) {\n\t        Particle.INTEGRATOR.integrateVelocity(this, dt);\n\t    };\n\t\n\t    /**\n\t     * Update a particle's position from its velocity\n\t     * @method integratePosition\n\t     * @param dt {Number} Time differential\n\t     */\n\t    Particle.prototype.integratePosition = function integratePosition(dt) {\n\t        Particle.INTEGRATOR.integratePosition(this, dt);\n\t    };\n\t\n\t    /**\n\t     * Update the position and velocity of the particle\n\t     * @method _integrate\n\t     * @protected\n\t     * @param dt {Number} Time differential\n\t     */\n\t    Particle.prototype._integrate = function _integrate(dt) {\n\t        this.integrateVelocity(dt);\n\t        this.integratePosition(dt);\n\t    };\n\t\n\t    /**\n\t     * Get kinetic energy of the particle.\n\t     * @method getEnergy\n\t     * @function\n\t     */\n\t    Particle.prototype.getEnergy = function getEnergy() {\n\t        return 0.5 * this.mass * this.velocity.normSquared();\n\t    };\n\t\n\t    /**\n\t     * Generate transform from the current position state\n\t     * @method getTransform\n\t     * @return Transform {Transform}\n\t     */\n\t    Particle.prototype.getTransform = function getTransform() {\n\t        this._engine.step();\n\t\n\t        var position = this.position;\n\t        var axis = this.axis;\n\t        var transform = this.transform;\n\t\n\t        if (axis !== undefined) {\n\t            if (axis & ~Particle.AXES.X) {\n\t                position.x = 0;\n\t            }\n\t            if (axis & ~Particle.AXES.Y) {\n\t                position.y = 0;\n\t            }\n\t            if (axis & ~Particle.AXES.Z) {\n\t                position.z = 0;\n\t            }\n\t        }\n\t\n\t        transform[12] = position.x;\n\t        transform[13] = position.y;\n\t        transform[14] = position.z;\n\t\n\t        return transform;\n\t    };\n\t\n\t    /**\n\t     * The modify interface of a Modifier\n\t     * @method modify\n\t     * @param target {Spec}\n\t     * @return Spec {Spec}\n\t     */\n\t    Particle.prototype.modify = function modify(target) {\n\t        var _spec = this._spec;\n\t        _spec.transform = this.getTransform();\n\t        _spec.target = target;\n\t        return _spec;\n\t    };\n\t\n\t    // private\n\t    function _createEventOutput() {\n\t        this._eventOutput = new EventHandler();\n\t        this._eventOutput.bindThis(this);\n\t        //overrides on/removeListener/pipe/unpipe methods\n\t        EventHandler.setOutputHandler(this, this._eventOutput);\n\t    }\n\t\n\t    Particle.prototype.emit = function emit(type, data) {\n\t        if (!this._eventOutput) return;\n\t        this._eventOutput.emit(type, data);\n\t    };\n\t\n\t    Particle.prototype.on = function on() {\n\t        _createEventOutput.call(this);\n\t        return this.on.apply(this, arguments);\n\t    };\n\t    Particle.prototype.removeListener = function removeListener() {\n\t        _createEventOutput.call(this);\n\t        return this.removeListener.apply(this, arguments);\n\t    };\n\t    Particle.prototype.pipe = function pipe() {\n\t        _createEventOutput.call(this);\n\t        return this.pipe.apply(this, arguments);\n\t    };\n\t    Particle.prototype.unpipe = function unpipe() {\n\t        _createEventOutput.call(this);\n\t        return this.unpipe.apply(this, arguments);\n\t    };\n\t\n\t    module.exports = Particle;\n\t}.call(exports, __webpack_require__, exports, module)), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 42 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;/* This Source Code Form is subject to the terms of the Mozilla Public\n\t * License, v. 2.0. If a copy of the MPL was not distributed with this\n\t * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n\t *\n\t * Owner: david@famo.us\n\t * @license MPL 2.0\n\t * @copyright Famous Industries, Inc. 2014\n\t */\n\t\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = (function(require, exports, module) {\n\t    var Vector = __webpack_require__(27);\n\t    var EventHandler = __webpack_require__(6);\n\t\n\t    /**\n\t     * Force base class.\n\t     *\n\t     * @class Force\n\t     * @uses EventHandler\n\t     * @constructor\n\t     */\n\t    function Force(force) {\n\t        this.force = new Vector(force);\n\t        this._energy = 0.0;\n\t        this._eventOutput = null;\n\t    }\n\t\n\t    /**\n\t     * Basic setter for options\n\t     *\n\t     * @method setOptions\n\t     * @param options {Objects}\n\t     */\n\t    Force.prototype.setOptions = function setOptions(options) {\n\t        for (var key in options) this.options[key] = options[key];\n\t    };\n\t\n\t    /**\n\t     * Adds a force to a physics body's force accumulator.\n\t     *\n\t     * @method applyForce\n\t     * @param body {Body}\n\t     */\n\t    Force.prototype.applyForce = function applyForce(body) {\n\t        body.applyForce(this.force);\n\t    };\n\t\n\t    /**\n\t     * Getter for a force's potential energy.\n\t     *\n\t     * @method getEnergy\n\t     * @return energy {Number}\n\t     */\n\t    Force.prototype.getEnergy = function getEnergy() {\n\t        return this._energy;\n\t    };\n\t\n\t    /*\n\t     * Setter for a force's potential energy.\n\t     *\n\t     * @method setEnergy\n\t     * @param energy {Number}\n\t     */\n\t    Force.prototype.setEnergy = function setEnergy(energy) {\n\t        this._energy = energy;\n\t    };\n\t\n\t    function _createEventOutput() {\n\t        this._eventOutput = new EventHandler();\n\t        this._eventOutput.bindThis(this);\n\t        EventHandler.setOutputHandler(this, this._eventOutput);\n\t    }\n\t\n\t    Force.prototype.on = function on() {\n\t        _createEventOutput.call(this);\n\t        return this.on.apply(this, arguments);\n\t    };\n\t    Force.prototype.addListener = function addListener() {\n\t        _createEventOutput.call(this);\n\t        return this.addListener.apply(this, arguments);\n\t    };\n\t    Force.prototype.pipe = function pipe() {\n\t        _createEventOutput.call(this);\n\t        return this.pipe.apply(this, arguments);\n\t    };\n\t    Force.prototype.removeListener = function removeListener() {\n\t        return this.removeListener.apply(this, arguments);\n\t    };\n\t    Force.prototype.unpipe = function unpipe() {\n\t        return this.unpipe.apply(this, arguments);\n\t    };\n\t\n\t    module.exports = Force;\n\t}.call(exports, __webpack_require__, exports, module)), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 43 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;/* This Source Code Form is subject to the terms of the Mozilla Public\n\t * License, v. 2.0. If a copy of the MPL was not distributed with this\n\t * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n\t *\n\t * Owner: david@famo.us\n\t * @license MPL 2.0\n\t * @copyright Famous Industries, Inc. 2014\n\t */\n\t\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = (function(require, exports, module) {\n\t    var Force = __webpack_require__(42);\n\t    var Vector = __webpack_require__(27);\n\t\n\t    /**\n\t     *  A force that moves a physics body to a location with a spring motion.\n\t     *    The body can be moved to another physics body, or an anchor point.\n\t     *\n\t     *  @class Spring\n\t     *  @constructor\n\t     *  @extends Force\n\t     *  @param {Object} options options to set on drag\n\t     */\n\t    function Spring(options) {\n\t        this.options = Object.create(this.constructor.DEFAULT_OPTIONS);\n\t        if (options) this.setOptions(options);\n\t\n\t        //registers\n\t        this.disp = new Vector(0,0,0);\n\t\n\t        _init.call(this);\n\t        Force.call(this);\n\t    }\n\t\n\t    Spring.prototype = Object.create(Force.prototype);\n\t    Spring.prototype.constructor = Spring;\n\t\n\t    /** @const */ var pi = Math.PI;\n\t\n\t    /**\n\t     * @property Spring.FORCE_FUNCTIONS\n\t     * @type Object\n\t     * @protected\n\t     * @static\n\t     */\n\t    Spring.FORCE_FUNCTIONS = {\n\t\n\t        /**\n\t         * A FENE (Finitely Extensible Nonlinear Elastic) spring force\n\t         *      see: http://en.wikipedia.org/wiki/FENE\n\t         * @attribute FENE\n\t         * @type Function\n\t         * @param {Number} dist current distance target is from source body\n\t         * @param {Number} rMax maximum range of influence\n\t         * @return {Number} unscaled force\n\t         */\n\t        FENE : function(dist, rMax) {\n\t            var rMaxSmall = rMax * .99;\n\t            var r = Math.max(Math.min(dist, rMaxSmall), -rMaxSmall);\n\t            return r / (1 - r * r/(rMax * rMax));\n\t        },\n\t\n\t        /**\n\t         * A Hookean spring force, linear in the displacement\n\t         *      see: http://en.wikipedia.org/wiki/FENE\n\t         * @attribute FENE\n\t         * @type Function\n\t         * @param {Number} dist current distance target is from source body\n\t         * @return {Number} unscaled force\n\t         */\n\t        HOOK : function(dist) {\n\t            return dist;\n\t        }\n\t    };\n\t\n\t    /**\n\t     * @property Spring.DEFAULT_OPTIONS\n\t     * @type Object\n\t     * @protected\n\t     * @static\n\t     */\n\t    Spring.DEFAULT_OPTIONS = {\n\t\n\t        /**\n\t         * The amount of time in milliseconds taken for one complete oscillation\n\t         * when there is no damping\n\t         *    Range : [150, Infinity]\n\t         * @attribute period\n\t         * @type Number\n\t         * @default 300\n\t         */\n\t        period        : 300,\n\t\n\t        /**\n\t         * The damping of the spring.\n\t         *    Range : [0, 1]\n\t         *    0 = no damping, and the spring will oscillate forever\n\t         *    1 = critically damped (the spring will never oscillate)\n\t         * @attribute dampingRatio\n\t         * @type Number\n\t         * @default 0.1\n\t         */\n\t        dampingRatio : 0.1,\n\t\n\t        /**\n\t         * The rest length of the spring\n\t         *    Range : [0, Infinity]\n\t         * @attribute length\n\t         * @type Number\n\t         * @default 0\n\t         */\n\t        length : 0,\n\t\n\t        /**\n\t         * The maximum length of the spring (for a FENE spring)\n\t         *    Range : [0, Infinity]\n\t         * @attribute length\n\t         * @type Number\n\t         * @default Infinity\n\t         */\n\t        maxLength : Infinity,\n\t\n\t        /**\n\t         * The location of the spring's anchor, if not another physics body\n\t         *\n\t         * @attribute anchor\n\t         * @type Array\n\t         * @optional\n\t         */\n\t        anchor : undefined,\n\t\n\t        /**\n\t         * The type of spring force\n\t         * @attribute forceFunction\n\t         * @type Function\n\t         */\n\t        forceFunction : Spring.FORCE_FUNCTIONS.HOOK\n\t    };\n\t\n\t    function _setForceFunction(fn) {\n\t        this.forceFunction = fn;\n\t    }\n\t\n\t    function _calcStiffness() {\n\t        var options = this.options;\n\t        options.stiffness = Math.pow(2 * pi / options.period, 2);\n\t    }\n\t\n\t    function _calcDamping() {\n\t        var options = this.options;\n\t        options.damping = 4 * pi * options.dampingRatio / options.period;\n\t    }\n\t\n\t    function _calcEnergy(strength, dist) {\n\t        return 0.5 * strength * dist * dist;\n\t    }\n\t\n\t    function _init() {\n\t        _setForceFunction.call(this, this.options.forceFunction);\n\t        _calcStiffness.call(this);\n\t        _calcDamping.call(this);\n\t    }\n\t\n\t    /**\n\t     * Basic options setter\n\t     *\n\t     * @method setOptions\n\t     * @param options {Objects}\n\t     */\n\t    Spring.prototype.setOptions = function setOptions(options) {\n\t        if (options.anchor !== undefined) {\n\t            if (options.anchor.position instanceof Vector) this.options.anchor = options.anchor.position;\n\t            if (options.anchor   instanceof Vector)  this.options.anchor = options.anchor;\n\t            if (options.anchor   instanceof Array)  this.options.anchor = new Vector(options.anchor);\n\t        }\n\t        if (options.period !== undefined) this.options.period = options.period;\n\t        if (options.dampingRatio !== undefined) this.options.dampingRatio = options.dampingRatio;\n\t        if (options.length !== undefined) this.options.length = options.length;\n\t        if (options.forceFunction !== undefined) this.options.forceFunction = options.forceFunction;\n\t        if (options.maxLength !== undefined) this.options.maxLength = options.maxLength;\n\t\n\t        _init.call(this);\n\t    };\n\t\n\t    /**\n\t     * Adds a spring force to a physics body's force accumulator.\n\t     *\n\t     * @method applyForce\n\t     * @param targets {Array.Body} Array of bodies to apply force to.\n\t     */\n\t    Spring.prototype.applyForce = function applyForce(targets, source) {\n\t        var force        = this.force;\n\t        var disp         = this.disp;\n\t        var options      = this.options;\n\t\n\t        var stiffness    = options.stiffness;\n\t        var damping      = options.damping;\n\t        var restLength   = options.length;\n\t        var lMax         = options.maxLength;\n\t        var anchor       = options.anchor || source.position;\n\t\n\t        for (var i = 0; i < targets.length; i++) {\n\t            var target = targets[i];\n\t            var p2 = target.position;\n\t            var v2 = target.velocity;\n\t\n\t            anchor.sub(p2).put(disp);\n\t            var dist = disp.norm() - restLength;\n\t\n\t            if (dist === 0) return;\n\t\n\t            //if dampingRatio specified, then override strength and damping\n\t            var m      = target.mass;\n\t            stiffness *= m;\n\t            damping   *= m;\n\t\n\t            disp.normalize(stiffness * this.forceFunction(dist, lMax))\n\t                .put(force);\n\t\n\t            if (damping)\n\t                if (source) force.add(v2.sub(source.velocity).mult(-damping)).put(force);\n\t                else force.add(v2.mult(-damping)).put(force);\n\t\n\t            target.applyForce(force);\n\t            if (source) source.applyForce(force.mult(-1));\n\t\n\t            this.setEnergy(_calcEnergy(stiffness, dist));\n\t        }\n\t    };\n\t\n\t    /**\n\t     * Calculates the potential energy of the spring.\n\t     *\n\t     * @method getEnergy\n\t     * @param target {Body}     The physics body attached to the spring\n\t     * @return energy {Number}\n\t     */\n\t    Spring.prototype.getEnergy = function getEnergy(target) {\n\t        var options        = this.options;\n\t        var restLength  = options.length;\n\t        var anchor      = options.anchor;\n\t        var strength    = options.stiffness;\n\t\n\t        var dist = anchor.sub(target.position).norm() - restLength;\n\t        return 0.5 * strength * dist * dist;\n\t    };\n\t\n\t    /**\n\t     * Sets the anchor to a new position\n\t     *\n\t     * @method setAnchor\n\t     * @param anchor {Array}    New anchor of the spring\n\t     */\n\t    Spring.prototype.setAnchor = function setAnchor(anchor) {\n\t        if (!this.options.anchor) this.options.anchor = new Vector();\n\t        this.options.anchor.set(anchor);\n\t    };\n\t\n\t    module.exports = Spring;\n\t}.call(exports, __webpack_require__, exports, module)), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 44 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;/* This Source Code Form is subject to the terms of the Mozilla Public\n\t * License, v. 2.0. If a copy of the MPL was not distributed with this\n\t * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n\t *\n\t * Owner: david@famo.us\n\t * @license MPL 2.0\n\t * @copyright Famous Industries, Inc. 2014\n\t */\n\t\n\t/*global console*/\n\t\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = (function(require, exports, module) {\n\t    var PE = __webpack_require__(40);\n\t    var Particle = __webpack_require__(41);\n\t    var Spring = __webpack_require__(43);\n\t    var Vector = __webpack_require__(27);\n\t\n\t    /**\n\t     * SpringTransition is a method of transitioning between two values (numbers,\n\t     * or arrays of numbers) with a bounce. The transition will overshoot the target\n\t     * state depending on the parameters of the transition.\n\t     *\n\t     * @class SpringTransition\n\t     * @constructor\n\t     *\n\t     * @param {Number|Array} [state=0] Initial state\n\t     */\n\t    function SpringTransition(state) {\n\t        state = state || 0;\n\t        this.endState  = new Vector(state);\n\t        this.initState = new Vector();\n\t\n\t        this._dimensions       = undefined;\n\t        this._restTolerance    = 1e-10;\n\t        this._absRestTolerance = this._restTolerance;\n\t        this._callback         = undefined;\n\t\n\t        this.PE       = new PE();\n\t        this.spring   = new Spring({anchor : this.endState});\n\t        this.particle = new Particle();\n\t\n\t        this.PE.addBody(this.particle);\n\t        this.PE.attach(this.spring, this.particle);\n\t    }\n\t\n\t    SpringTransition.SUPPORTS_MULTIPLE = 3;\n\t\n\t    /**\n\t     * @property SpringTransition.DEFAULT_OPTIONS\n\t     * @type Object\n\t     * @protected\n\t     * @static\n\t     */\n\t    SpringTransition.DEFAULT_OPTIONS = {\n\t\n\t        /**\n\t         * The amount of time in milliseconds taken for one complete oscillation\n\t         * when there is no damping\n\t         *    Range : [0, Infinity]\n\t         *\n\t         * @attribute period\n\t         * @type Number\n\t         * @default 300\n\t         */\n\t        period : 300,\n\t\n\t        /**\n\t         * The damping of the snap.\n\t         *    Range : [0, 1]\n\t         *    0 = no damping, and the spring will oscillate forever\n\t         *    1 = critically damped (the spring will never oscillate)\n\t         *\n\t         * @attribute dampingRatio\n\t         * @type Number\n\t         * @default 0.5\n\t         */\n\t        dampingRatio : 0.5,\n\t\n\t        /**\n\t         * The initial velocity of the transition.\n\t         *\n\t         * @attribute velocity\n\t         * @type Number|Array\n\t         * @default 0\n\t         */\n\t        velocity : 0\n\t    };\n\t\n\t    function _getEnergy() {\n\t        return this.particle.getEnergy() + this.spring.getEnergy(this.particle);\n\t    }\n\t\n\t    function _setParticlePosition(p) {\n\t        this.particle.setPosition(p);\n\t    }\n\t\n\t    function _setParticleVelocity(v) {\n\t        this.particle.setVelocity(v);\n\t    }\n\t\n\t    function _getParticlePosition() {\n\t        return (this._dimensions === 0)\n\t            ? this.particle.getPosition1D()\n\t            : this.particle.getPosition();\n\t    }\n\t\n\t    function _getParticleVelocity() {\n\t        return (this._dimensions === 0)\n\t            ? this.particle.getVelocity1D()\n\t            : this.particle.getVelocity();\n\t    }\n\t\n\t    function _setCallback(callback) {\n\t        this._callback = callback;\n\t    }\n\t\n\t    function _wake() {\n\t        this.PE.wake();\n\t    }\n\t\n\t    function _sleep() {\n\t        this.PE.sleep();\n\t    }\n\t\n\t    function _update() {\n\t        if (this.PE.isSleeping()) {\n\t            if (this._callback) {\n\t                var cb = this._callback;\n\t                this._callback = undefined;\n\t                cb();\n\t            }\n\t            return;\n\t        }\n\t\n\t        if (_getEnergy.call(this) < this._absRestTolerance) {\n\t            _setParticlePosition.call(this, this.endState);\n\t            _setParticleVelocity.call(this, [0,0,0]);\n\t            _sleep.call(this);\n\t        }\n\t    }\n\t\n\t    function _setupDefinition(definition) {\n\t        // TODO fix no-console error\n\t        /* eslint no-console: 0 */\n\t        var defaults = SpringTransition.DEFAULT_OPTIONS;\n\t        if (definition.period === undefined)       definition.period       = defaults.period;\n\t        if (definition.dampingRatio === undefined) definition.dampingRatio = defaults.dampingRatio;\n\t        if (definition.velocity === undefined)     definition.velocity     = defaults.velocity;\n\t\n\t        if (definition.period < 150) {\n\t            definition.period = 150;\n\t            console.warn('The period of a SpringTransition is capped at 150 ms. Use a SnapTransition for faster transitions');\n\t        }\n\t\n\t        //setup spring\n\t        this.spring.setOptions({\n\t            period       : definition.period,\n\t            dampingRatio : definition.dampingRatio\n\t        });\n\t\n\t        //setup particle\n\t        _setParticleVelocity.call(this, definition.velocity);\n\t    }\n\t\n\t    function _setAbsoluteRestTolerance() {\n\t        var distance = this.endState.sub(this.initState).normSquared();\n\t        this._absRestTolerance = (distance === 0)\n\t            ? this._restTolerance\n\t            : this._restTolerance * distance;\n\t    }\n\t\n\t    function _setTarget(target) {\n\t        this.endState.set(target);\n\t        _setAbsoluteRestTolerance.call(this);\n\t    }\n\t\n\t    /**\n\t     * Resets the position and velocity\n\t     *\n\t     * @method reset\n\t     *\n\t     * @param {Number|Array.Number} pos positional state\n\t     * @param {Number|Array} vel velocity\n\t     */\n\t    SpringTransition.prototype.reset = function reset(pos, vel) {\n\t        this._dimensions = (pos instanceof Array)\n\t            ? pos.length\n\t            : 0;\n\t\n\t        this.initState.set(pos);\n\t        _setParticlePosition.call(this, pos);\n\t        _setTarget.call(this, pos);\n\t        if (vel) _setParticleVelocity.call(this, vel);\n\t        _setCallback.call(this, undefined);\n\t    };\n\t\n\t    /**\n\t     * Getter for velocity\n\t     *\n\t     * @method getVelocity\n\t     *\n\t     * @return {Number|Array} velocity\n\t     */\n\t    SpringTransition.prototype.getVelocity = function getVelocity() {\n\t        return _getParticleVelocity.call(this);\n\t    };\n\t\n\t    /**\n\t     * Setter for velocity\n\t     *\n\t     * @method setVelocity\n\t     *\n\t     * @return {Number|Array} velocity\n\t     */\n\t    SpringTransition.prototype.setVelocity = function setVelocity(v) {\n\t        this.call(this, _setParticleVelocity(v));\n\t    };\n\t\n\t    /**\n\t     * Detects whether a transition is in progress\n\t     *\n\t     * @method isActive\n\t     *\n\t     * @return {Boolean}\n\t     */\n\t    SpringTransition.prototype.isActive = function isActive() {\n\t        return !this.PE.isSleeping();\n\t    };\n\t\n\t    /**\n\t     * Halt the transition\n\t     *\n\t     * @method halt\n\t     */\n\t    SpringTransition.prototype.halt = function halt() {\n\t        this.set(this.get());\n\t    };\n\t\n\t    /**\n\t     * Get the current position of the transition\n\t     *\n\t     * @method get\n\t     *\n\t     * @return {Number|Array} state\n\t     */\n\t    SpringTransition.prototype.get = function get() {\n\t        _update.call(this);\n\t        return _getParticlePosition.call(this);\n\t    };\n\t\n\t    /**\n\t     * Set the end position and transition, with optional callback on completion.\n\t     *\n\t     * @method set\n\t     *\n\t     * @param  {Number|Array} endState Final state\n\t     * @param {Object}  definition  Transition definition\n\t     * @param  {Function} callback Callback\n\t     */\n\t    SpringTransition.prototype.set = function set(endState, definition, callback) {\n\t        if (!definition) {\n\t            this.reset(endState);\n\t            if (callback) callback();\n\t            return;\n\t        }\n\t\n\t        this._dimensions = (endState instanceof Array)\n\t            ? endState.length\n\t            : 0;\n\t\n\t        _wake.call(this);\n\t        _setupDefinition.call(this, definition);\n\t        _setTarget.call(this, endState);\n\t        _setCallback.call(this, callback);\n\t    };\n\t\n\t    module.exports = SpringTransition;\n\t}.call(exports, __webpack_require__, exports, module)), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 45 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_RESULT__ = (function(require, exports, module) {\n\t    var Transform = __webpack_require__(1);\n\t    var Modifier = __webpack_require__(17);\n\t    var RenderNode = __webpack_require__(26);\n\t    var Utility = __webpack_require__(13);\n\t    var OptionsManager = __webpack_require__(18);\n\t    var Transitionable = __webpack_require__(14);\n\t    var TransitionableTransform = __webpack_require__(35);\n\t\n\t    /**\n\t     * Lightbox, using transitions, shows and hides different renderables. Lightbox can essentially be\n\t     * thought of as RenderController with a stateful implementation and interface.\n\t     *\n\t     * @class Lightbox\n\t     * @constructor\n\t     * @param {Options} [options] An object of configurable options.\n\t     * @param {Transform} [options.inTransform] The transform at the start of transitioning in a shown renderable.\n\t     * @param {Transform} [options.outTransform] The transform at the end of transitioning out a renderable.\n\t     * @param {Transform} [options.showTransform] The transform applied to your shown renderable in its state of equilibrium.\n\t     * @param {Number} [options.inOpacity] A number between one and zero that defines the state of a shown renderables opacity upon initially\n\t     * being transitioned in.\n\t     * @param {Number} [options.outOpacity] A number between one and zero that defines the state of a shown renderables opacity upon being\n\t     * fully transitioned out.\n\t     * @param {Number} [options.showOpacity] A number between one and zero that defines the state of a shown renderables opacity\n\t     * once succesfully transitioned in.\n\t     * @param {Array<Number>} [options.inOrigin] A two value array of numbers between one and zero that defines the state of a shown renderables\n\t     * origin upon intially being transitioned in.\n\t     * @param {Array<Number>} [options.outOrigin] A two value array of numbers between one and zero that defines the state of a shown renderable\n\t     * once fully hidden.\n\t     * @param {Array<Number>} [options.showOrigin] A two value array of numbers between one and zero that defines the state of a shown renderables\n\t     * origin upon succesfully being shown.\n\t     * @param {Transition} [options.inTransition=true] The transition in charge of showing a renderable.\n\t     * @param {Transition} [options.outTransition=true]  The transition in charge of removing your previous renderable when\n\t     * you show a new one, or hiding your current renderable.\n\t     * @param {Boolean} [options.overlap=false] When showing a new renderable, overlap determines if the\n\t     *   out transition of the old one executes concurrently with the in transition of the new one,\n\t      *  or synchronously beforehand.\n\t     */\n\t    function Lightbox(options) {\n\t        this.options = Object.create(Lightbox.DEFAULT_OPTIONS);\n\t        this._optionsManager = new OptionsManager(this.options);\n\t\n\t        if (options) this.setOptions(options);\n\t\n\t        this._showing = false;\n\t        this.nodes = [];\n\t        this.transforms = [];\n\t        this.states = [];\n\t    }\n\t\n\t    Lightbox.DEFAULT_OPTIONS = {\n\t        inTransform: Transform.scale(0.001, 0.001, 0.001),\n\t        inOpacity: 0,\n\t        inOrigin: [0.5, 0.5],\n\t        outTransform: Transform.scale(0.001, 0.001, 0.001),\n\t        outOpacity: 0,\n\t        outOrigin: [0.5, 0.5],\n\t        showTransform: Transform.identity,\n\t        showOpacity: 1,\n\t        showOrigin: [0.5, 0.5],\n\t        inTransition: true,\n\t        outTransition: true,\n\t        overlap: false\n\t    };\n\t\n\t    /**\n\t     * Patches the Lightbox instance's options with the passed-in ones.\n\t     *\n\t     * @method setOptions\n\t     * @param {Options} options An object of configurable options for the Lightbox instance.\n\t     */\n\t    Lightbox.prototype.setOptions = function setOptions(options) {\n\t        return this._optionsManager.setOptions(options);\n\t    };\n\t\n\t   /**\n\t     * Show displays the targeted renderable with a transition and an optional callback to\n\t     *  execute afterwards.\n\t     * @method show\n\t     * @param {Object} renderable The renderable you want to show.\n\t     * @param {Transition} [transition] Overwrites the default transition in to display the\n\t     * passed-in renderable.\n\t     * @param {function} [callback] Executes after transitioning in the renderable.\n\t     */\n\t    Lightbox.prototype.show = function show(renderable, transition, callback) {\n\t        if (!renderable) {\n\t            return this.hide(callback);\n\t        }\n\t\n\t        if (transition instanceof Function) {\n\t            callback = transition;\n\t            transition = undefined;\n\t        }\n\t\n\t        if (this._showing) {\n\t            if (this.options.overlap) this.hide();\n\t            else {\n\t                return this.hide(this.show.bind(this, renderable, transition, callback));\n\t            }\n\t        }\n\t        this._showing = true;\n\t\n\t        var stateItem = {\n\t            transform: new TransitionableTransform(this.options.inTransform),\n\t            origin: new Transitionable(this.options.inOrigin),\n\t            opacity: new Transitionable(this.options.inOpacity)\n\t        };\n\t\n\t        var transform = new Modifier({\n\t            transform: stateItem.transform,\n\t            opacity: stateItem.opacity,\n\t            origin: stateItem.origin\n\t        });\n\t        var node = new RenderNode();\n\t        node.add(transform).add(renderable);\n\t        this.nodes.push(node);\n\t        this.states.push(stateItem);\n\t        this.transforms.push(transform);\n\t\n\t        var _cb = callback ? Utility.after(3, callback) : undefined;\n\t\n\t        if (!transition) transition = this.options.inTransition;\n\t        stateItem.transform.set(this.options.showTransform, transition, _cb);\n\t        stateItem.opacity.set(this.options.showOpacity, transition, _cb);\n\t        stateItem.origin.set(this.options.showOrigin, transition, _cb);\n\t    };\n\t\n\t    /**\n\t     * Hide hides the currently displayed renderable with an out transition.\n\t     * @method hide\n\t     * @param {Transition} [transition] Overwrites the default transition in to hide the\n\t     * currently controlled renderable.\n\t     * @param {function} [callback] Executes after transitioning out the renderable.\n\t     */\n\t    Lightbox.prototype.hide = function hide(transition, callback) {\n\t        if (!this._showing) return;\n\t        this._showing = false;\n\t\n\t        if (transition instanceof Function) {\n\t            callback = transition;\n\t            transition = undefined;\n\t        }\n\t\n\t        var node = this.nodes[this.nodes.length - 1];\n\t        var transform = this.transforms[this.transforms.length - 1];\n\t        var stateItem = this.states[this.states.length - 1];\n\t        var _cb = Utility.after(3, function() {\n\t            this.nodes.splice(this.nodes.indexOf(node), 1);\n\t            this.states.splice(this.states.indexOf(stateItem), 1);\n\t            this.transforms.splice(this.transforms.indexOf(transform), 1);\n\t            if (callback) callback.call(this);\n\t        }.bind(this));\n\t\n\t        if (!transition) transition = this.options.outTransition;\n\t        stateItem.transform.set(this.options.outTransform, transition, _cb);\n\t        stateItem.opacity.set(this.options.outOpacity, transition, _cb);\n\t        stateItem.origin.set(this.options.outOrigin, transition, _cb);\n\t    };\n\t\n\t    /**\n\t     * Generate a render spec from the contents of this component.\n\t     *\n\t     * @private\n\t     * @method render\n\t     * @return {number} Render spec for this component\n\t     */\n\t    Lightbox.prototype.render = function render() {\n\t        var result = [];\n\t        for (var i = 0; i < this.nodes.length; i++) {\n\t            result.push(this.nodes[i].render());\n\t        }\n\t        return result;\n\t    };\n\t\n\t    module.exports = Lightbox;\n\t}.call(exports, __webpack_require__, exports, module)), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 46 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright (c) 2014 Petka Antonov\n\t * \n\t * Permission is hereby granted, free of charge, to any person obtaining a copy\n\t * of this software and associated documentation files (the \"Software\"), to deal\n\t * in the Software without restriction, including without limitation the rights\n\t * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\t * copies of the Software, and to permit persons to whom the Software is\n\t * furnished to do so, subject to the following conditions:</p>\n\t * \n\t * The above copyright notice and this permission notice shall be included in\n\t * all copies or substantial portions of the Software.\n\t * \n\t * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\t * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\t * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE\n\t * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\t * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\t * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n\t * THE SOFTWARE.\n\t * \n\t */\n\t\"use strict\";\n\tvar util = __webpack_require__(2);\n\tvar maybeWrapAsError = util.maybeWrapAsError;\n\tvar errors = __webpack_require__(8);\n\tvar TimeoutError = errors.TimeoutError;\n\tvar RejectionError = errors.RejectionError;\n\tvar async = __webpack_require__(20);\n\tvar haveGetters = util.haveGetters;\n\tvar es5 = __webpack_require__(19);\n\t\n\tfunction isUntypedError(obj) {\n\t    return obj instanceof Error &&\n\t        es5.getPrototypeOf(obj) === Error.prototype;\n\t}\n\t\n\tfunction wrapAsRejectionError(obj) {\n\t    var ret;\n\t    if (isUntypedError(obj)) {\n\t        ret = new RejectionError(obj);\n\t    }\n\t    else {\n\t        ret = obj;\n\t    }\n\t    errors.markAsOriginatingFromRejection(ret);\n\t    return ret;\n\t}\n\t\n\tfunction nodebackForPromise(promise) {\n\t    function PromiseResolver$_callback(err, value) {\n\t        if (promise === null) return;\n\t\n\t        if (err) {\n\t            var wrapped = wrapAsRejectionError(maybeWrapAsError(err));\n\t            promise._attachExtraTrace(wrapped);\n\t            promise._reject(wrapped);\n\t        }\n\t        else {\n\t            if (arguments.length > 2) {\n\t                var $_len = arguments.length;var args = new Array($_len - 1); for(var $_i = 1; $_i < $_len; ++$_i) {args[$_i - 1] = arguments[$_i];}\n\t                promise._fulfill(args);\n\t            }\n\t            else {\n\t                promise._fulfill(value);\n\t            }\n\t        }\n\t\n\t        promise = null;\n\t    }\n\t    return PromiseResolver$_callback;\n\t}\n\t\n\t\n\tvar PromiseResolver;\n\tif (!haveGetters) {\n\t    PromiseResolver = function PromiseResolver(promise) {\n\t        this.promise = promise;\n\t        this.asCallback = nodebackForPromise(promise);\n\t        this.callback = this.asCallback;\n\t    };\n\t}\n\telse {\n\t    PromiseResolver = function PromiseResolver(promise) {\n\t        this.promise = promise;\n\t    };\n\t}\n\tif (haveGetters) {\n\t    var prop = {\n\t        get: function() {\n\t            return nodebackForPromise(this.promise);\n\t        }\n\t    };\n\t    es5.defineProperty(PromiseResolver.prototype, \"asCallback\", prop);\n\t    es5.defineProperty(PromiseResolver.prototype, \"callback\", prop);\n\t}\n\t\n\tPromiseResolver._nodebackForPromise = nodebackForPromise;\n\t\n\tPromiseResolver.prototype.toString = function PromiseResolver$toString() {\n\t    return \"[object PromiseResolver]\";\n\t};\n\t\n\tPromiseResolver.prototype.resolve =\n\tPromiseResolver.prototype.fulfill = function PromiseResolver$resolve(value) {\n\t    var promise = this.promise;\n\t    if ((promise === void 0) || (promise._tryFollow === void 0)) {\n\t        throw new TypeError(\"Illegal invocation, resolver resolve/reject must be called within a resolver context. Consider using the promise constructor instead.\");\n\t    }\n\t    if (promise._tryFollow(value)) {\n\t        return;\n\t    }\n\t    async.invoke(promise._fulfill, promise, value);\n\t};\n\t\n\tPromiseResolver.prototype.reject = function PromiseResolver$reject(reason) {\n\t    var promise = this.promise;\n\t    if ((promise === void 0) || (promise._attachExtraTrace === void 0)) {\n\t        throw new TypeError(\"Illegal invocation, resolver resolve/reject must be called within a resolver context. Consider using the promise constructor instead.\");\n\t    }\n\t    errors.markAsOriginatingFromRejection(reason);\n\t    var trace = errors.canAttach(reason) ? reason : new Error(reason + \"\");\n\t    promise._attachExtraTrace(trace);\n\t    async.invoke(promise._reject, promise, reason);\n\t    if (trace !== reason) {\n\t        async.invoke(this._setCarriedStackTrace, this, trace);\n\t    }\n\t};\n\t\n\tPromiseResolver.prototype.progress =\n\tfunction PromiseResolver$progress(value) {\n\t    async.invoke(this.promise._progress, this.promise, value);\n\t};\n\t\n\tPromiseResolver.prototype.cancel = function PromiseResolver$cancel() {\n\t    async.invoke(this.promise.cancel, this.promise, void 0);\n\t};\n\t\n\tPromiseResolver.prototype.timeout = function PromiseResolver$timeout() {\n\t    this.reject(new TimeoutError(\"timeout\"));\n\t};\n\t\n\tPromiseResolver.prototype.isResolved = function PromiseResolver$isResolved() {\n\t    return this.promise.isResolved();\n\t};\n\t\n\tPromiseResolver.prototype.toJSON = function PromiseResolver$toJSON() {\n\t    return this.promise.toJSON();\n\t};\n\t\n\tPromiseResolver.prototype._setCarriedStackTrace =\n\tfunction PromiseResolver$_setCarriedStackTrace(trace) {\n\t    if (this.promise.isRejected()) {\n\t        this.promise._setCarriedStackTrace(trace);\n\t    }\n\t};\n\t\n\tmodule.exports = PromiseResolver;\n\n\n/***/ },\n/* 47 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright (c) 2014 Petka Antonov\n\t * \n\t * Permission is hereby granted, free of charge, to any person obtaining a copy\n\t * of this software and associated documentation files (the \"Software\"), to deal\n\t * in the Software without restriction, including without limitation the rights\n\t * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\t * copies of the Software, and to permit persons to whom the Software is\n\t * furnished to do so, subject to the following conditions:</p>\n\t * \n\t * The above copyright notice and this permission notice shall be included in\n\t * all copies or substantial portions of the Software.\n\t * \n\t * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\t * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\t * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE\n\t * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\t * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\t * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n\t * THE SOFTWARE.\n\t * \n\t */\n\t\"use strict\";\n\tmodule.exports = function (PromiseArray) {\n\tvar util = __webpack_require__(2);\n\tvar RangeError = __webpack_require__(8).RangeError;\n\tvar inherits = util.inherits;\n\tvar isArray = util.isArray;\n\t\n\tfunction SomePromiseArray(values, boundTo) {\n\t    this.constructor$(values, boundTo);\n\t    this._howMany = 0;\n\t    this._unwrap = false;\n\t    this._initialized = false;\n\t}\n\tinherits(SomePromiseArray, PromiseArray);\n\t\n\tSomePromiseArray.prototype._init = function SomePromiseArray$_init() {\n\t    if (!this._initialized) {\n\t        return;\n\t    }\n\t    if (this._howMany === 0) {\n\t        this._resolve([]);\n\t        return;\n\t    }\n\t    this._init$(void 0, -2);\n\t    var isArrayResolved = isArray(this._values);\n\t    this._holes = isArrayResolved ? this._values.length - this.length() : 0;\n\t\n\t    if (!this._isResolved() &&\n\t        isArrayResolved &&\n\t        this._howMany > this._canPossiblyFulfill()) {\n\t        var message = \"(Promise.some) input array contains less than \" +\n\t                        this._howMany  + \" promises\";\n\t        this._reject(new RangeError(message));\n\t    }\n\t};\n\t\n\tSomePromiseArray.prototype.init = function SomePromiseArray$init() {\n\t    this._initialized = true;\n\t    this._init();\n\t};\n\t\n\tSomePromiseArray.prototype.setUnwrap = function SomePromiseArray$setUnwrap() {\n\t    this._unwrap = true;\n\t};\n\t\n\tSomePromiseArray.prototype.howMany = function SomePromiseArray$howMany() {\n\t    return this._howMany;\n\t};\n\t\n\tSomePromiseArray.prototype.setHowMany =\n\tfunction SomePromiseArray$setHowMany(count) {\n\t    if (this._isResolved()) return;\n\t    this._howMany = count;\n\t};\n\t\n\tSomePromiseArray.prototype._promiseFulfilled =\n\tfunction SomePromiseArray$_promiseFulfilled(value) {\n\t    if (this._isResolved()) return;\n\t    this._addFulfilled(value);\n\t    if (this._fulfilled() === this.howMany()) {\n\t        this._values.length = this.howMany();\n\t        if (this.howMany() === 1 && this._unwrap) {\n\t            this._resolve(this._values[0]);\n\t        }\n\t        else {\n\t            this._resolve(this._values);\n\t        }\n\t    }\n\t\n\t};\n\tSomePromiseArray.prototype._promiseRejected =\n\tfunction SomePromiseArray$_promiseRejected(reason) {\n\t    if (this._isResolved()) return;\n\t    this._addRejected(reason);\n\t    if (this.howMany() > this._canPossiblyFulfill()) {\n\t        if (this._values.length === this.length()) {\n\t            this._reject([]);\n\t        }\n\t        else {\n\t            this._reject(this._values.slice(this.length() + this._holes));\n\t        }\n\t    }\n\t};\n\t\n\tSomePromiseArray.prototype._fulfilled = function SomePromiseArray$_fulfilled() {\n\t    return this._totalResolved;\n\t};\n\t\n\tSomePromiseArray.prototype._rejected = function SomePromiseArray$_rejected() {\n\t    return this._values.length - this.length() - this._holes;\n\t};\n\t\n\tSomePromiseArray.prototype._addRejected =\n\tfunction SomePromiseArray$_addRejected(reason) {\n\t    this._values.push(reason);\n\t};\n\t\n\tSomePromiseArray.prototype._addFulfilled =\n\tfunction SomePromiseArray$_addFulfilled(value) {\n\t    this._values[this._totalResolved++] = value;\n\t};\n\t\n\tSomePromiseArray.prototype._canPossiblyFulfill =\n\tfunction SomePromiseArray$_canPossiblyFulfill() {\n\t    return this.length() - this._rejected();\n\t};\n\t\n\treturn SomePromiseArray;\n\t};\n\n\n/***/ },\n/* 48 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar AppDispatcher, AppStateStore, Constants, EventEmitter, appstate,\n\t  __hasProp = {}.hasOwnProperty,\n\t  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };\n\t\n\tEventEmitter = __webpack_require__(22);\n\t\n\tConstants = __webpack_require__(9);\n\t\n\tAppDispatcher = __webpack_require__(15);\n\t\n\tAppStateStore = (function(_super) {\n\t  __extends(AppStateStore, _super);\n\t\n\t  function AppStateStore() {\n\t    return AppStateStore.__super__.constructor.apply(this, arguments);\n\t  }\n\t\n\t  AppStateStore.prototype._currentPageID = 'play';\n\t\n\t  AppStateStore.prototype.changePage = function(pageID) {\n\t    this._currentPageID = pageID;\n\t    return this.emit(Constants.stores.CHANGE);\n\t  };\n\t\n\t  AppStateStore.prototype.getCurrentPageID = function() {\n\t    return this._currentPageID;\n\t  };\n\t\n\t  return AppStateStore;\n\t\n\t})(EventEmitter);\n\t\n\tappstate = new AppStateStore;\n\t\n\tAppDispatcher.register(function(payload) {\n\t  var action;\n\t  action = payload.action;\n\t  switch (action.actionType) {\n\t    case Constants.actions.MENU_SELECT:\n\t      return appstate.changePage(action.pageID);\n\t  }\n\t});\n\t\n\tmodule.exports = appstate;\n\n\n/***/ },\n/* 49 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar AppDispatcher, Constants, EventEmitter, Parse, PlayStore, play,\n\t  __hasProp = {}.hasOwnProperty,\n\t  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };\n\t\n\tEventEmitter = __webpack_require__(22);\n\t\n\tConstants = __webpack_require__(9);\n\t\n\tAppDispatcher = __webpack_require__(15);\n\t\n\tParse = __webpack_require__(16);\n\t\n\tPlayStore = (function(_super) {\n\t  __extends(PlayStore, _super);\n\t\n\t  function PlayStore() {\n\t    return PlayStore.__super__.constructor.apply(this, arguments);\n\t  }\n\t\n\t  PlayStore.prototype._game = null;\n\t\n\t  PlayStore.prototype._card = null;\n\t\n\t  PlayStore.prototype.fetchGame = function(gameID) {\n\t    var Sets, query;\n\t    Sets = Parse.Object.extend(\"Sets\");\n\t    query = new Parse.Query(Sets);\n\t    query.equalTo(\"approved\", null);\n\t    return query.find({\n\t      success: (function(_this) {\n\t        return function(results) {\n\t          _this._game = results;\n\t          _this.emit(Constants.stores.CHANGE);\n\t        };\n\t      })(this),\n\t      error: function(error) {\n\t        console.log(\"Error: \" + error.code + \" \" + error.message);\n\t      }\n\t    });\n\t  };\n\t\n\t  PlayStore.prototype.saveAnswer = function(choice) {\n\t    console.log(\"choice: \" + choice);\n\t    return this.emit(Constants.stores.CARD_ANSWERED);\n\t  };\n\t\n\t  PlayStore.prototype.saveRating = function(rating) {\n\t    console.log(\"rating: \" + rating);\n\t    if (this._card === \"qZxzk3ipSd\") {\n\t      this.emit(Constants.stores.UNLOCK_ACHIEVED);\n\t    }\n\t    return this.emit(Constants.stores.CARD_RATED);\n\t  };\n\t\n\t  PlayStore.prototype.saveStatusAck = function() {\n\t    console.log(\"yep\");\n\t    return this.emit(Constants.stores.PLAY_CONTINUED);\n\t  };\n\t\n\t  PlayStore.prototype.savePlay = function(cardID) {\n\t    console.log(\"cardID: \" + cardID);\n\t    return this._card = cardID;\n\t  };\n\t\n\t  PlayStore.prototype.getGame = function() {\n\t    return this._game;\n\t  };\n\t\n\t  return PlayStore;\n\t\n\t})(EventEmitter);\n\t\n\tplay = new PlayStore;\n\t\n\tAppDispatcher.register(function(payload) {\n\t  var action;\n\t  action = payload.action;\n\t  switch (action.actionType) {\n\t    case Constants.actions.GAME_FETCH:\n\t      return play.fetchGame(action.gameID);\n\t    case Constants.actions.CARD_ANSWER:\n\t      return play.saveAnswer(action.choice);\n\t    case Constants.actions.CARD_RATE:\n\t      return play.saveRating(action.rating);\n\t    case Constants.actions.CARD_PICK:\n\t      return play.savePlay(action.cardID);\n\t    case Constants.actions.PLAY_CONTINUE:\n\t      return play.saveStatusAck();\n\t  }\n\t});\n\t\n\tmodule.exports = play;\n\n\n/***/ },\n/* 50 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar ActivityView, ContainerSurface, ListItemView, Scrollview, View,\n\t  __hasProp = {}.hasOwnProperty,\n\t  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };\n\t\n\t__webpack_require__(38);\n\t\n\tView = __webpack_require__(4);\n\t\n\tContainerSurface = __webpack_require__(23);\n\t\n\tScrollview = __webpack_require__(28);\n\t\n\tListItemView = __webpack_require__(36);\n\t\n\tActivityView = (function(_super) {\n\t  __extends(ActivityView, _super);\n\t\n\t  ActivityView.DEFAULT_OPTIONS = {\n\t    itemDensity: null\n\t  };\n\t\n\t  function ActivityView() {\n\t    ActivityView.__super__.constructor.apply(this, arguments);\n\t    this.init();\n\t  }\n\t\n\t  ActivityView.prototype.init = function() {\n\t    return this.items = [];\n\t  };\n\t\n\t  ActivityView.prototype.load = function(data) {\n\t    var container, i, item, scrollview, surfaces;\n\t    this.items = data;\n\t    surfaces = [];\n\t    scrollview = new Scrollview({\n\t      size: [window.innerWidth, window.innerHeight]\n\t    });\n\t    scrollview.sequenceFrom(surfaces);\n\t    i = 0;\n\t    while (i < this.items.length) {\n\t      item = new ListItemView(this.items[i]);\n\t      item.on('scroll', (function(_this) {\n\t        return function() {\n\t          return _this._eventOutput.emit('scroll');\n\t        };\n\t      })(this));\n\t      item.pipe(scrollview);\n\t      surfaces.push(item);\n\t      i++;\n\t    }\n\t    container = new ContainerSurface({\n\t      size: [void 0, void 0],\n\t      properties: {\n\t        overflow: \"hidden\"\n\t      }\n\t    });\n\t    container.add(scrollview);\n\t    return this.add(container);\n\t  };\n\t\n\t  return ActivityView;\n\t\n\t})(View);\n\t\n\tmodule.exports = ActivityView;\n\n\n/***/ },\n/* 51 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// style-loader: Adds some css to the DOM by adding a <style> tag\n\tvar dispose = __webpack_require__(10)\n\t\t// The css code:\n\t\t(__webpack_require__(130))\n\tif(false) {\n\t\tmodule.hot.accept();\n\t\tmodule.hot.dispose(dispose);\n\t}\n\n/***/ },\n/* 52 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// style-loader: Adds some css to the DOM by adding a <style> tag\n\tvar dispose = __webpack_require__(10)\n\t\t// The css code:\n\t\t(__webpack_require__(131))\n\tif(false) {\n\t\tmodule.hot.accept();\n\t\tmodule.hot.dispose(dispose);\n\t}\n\n/***/ },\n/* 53 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// style-loader: Adds some css to the DOM by adding a <style> tag\n\tvar dispose = __webpack_require__(10)\n\t\t// The css code:\n\t\t(__webpack_require__(134))\n\tif(false) {\n\t\tmodule.hot.accept();\n\t\tmodule.hot.dispose(dispose);\n\t}\n\n/***/ },\n/* 54 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// style-loader: Adds some css to the DOM by adding a <style> tag\n\tvar dispose = __webpack_require__(10)\n\t\t// The css code:\n\t\t(__webpack_require__(139))\n\tif(false) {\n\t\tmodule.hot.accept();\n\t\tmodule.hot.dispose(dispose);\n\t}\n\n/***/ },\n/* 55 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// shim for using process in browser\n\t\n\tvar process = module.exports = {};\n\t\n\tprocess.nextTick = (function () {\n\t    var canSetImmediate = typeof window !== 'undefined'\n\t    && window.setImmediate;\n\t    var canPost = typeof window !== 'undefined'\n\t    && window.postMessage && window.addEventListener\n\t    ;\n\t\n\t    if (canSetImmediate) {\n\t        return function (f) { return window.setImmediate(f) };\n\t    }\n\t\n\t    if (canPost) {\n\t        var queue = [];\n\t        window.addEventListener('message', function (ev) {\n\t            var source = ev.source;\n\t            if ((source === window || source === null) && ev.data === 'process-tick') {\n\t                ev.stopPropagation();\n\t                if (queue.length > 0) {\n\t                    var fn = queue.shift();\n\t                    fn();\n\t                }\n\t            }\n\t        }, true);\n\t\n\t        return function nextTick(fn) {\n\t            queue.push(fn);\n\t            window.postMessage('process-tick', '*');\n\t        };\n\t    }\n\t\n\t    return function nextTick(fn) {\n\t        setTimeout(fn, 0);\n\t    };\n\t})();\n\t\n\tprocess.title = 'browser';\n\tprocess.browser = true;\n\tprocess.env = {};\n\tprocess.argv = [];\n\t\n\tfunction noop() {}\n\t\n\tprocess.on = noop;\n\tprocess.addListener = noop;\n\tprocess.once = noop;\n\tprocess.off = noop;\n\tprocess.removeListener = noop;\n\tprocess.removeAllListeners = noop;\n\tprocess.emit = noop;\n\t\n\tprocess.binding = function (name) {\n\t    throw new Error('process.binding is not supported');\n\t}\n\t\n\t// TODO(shtylman)\n\tprocess.cwd = function () { return '/' };\n\tprocess.chdir = function (dir) {\n\t    throw new Error('process.chdir is not supported');\n\t};\n\n\n/***/ },\n/* 56 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\n\t/*\n\t * classList.js: Cross-browser full element.classList implementation.\n\t * 2011-06-15\n\t *\n\t * By Eli Grey, http://eligrey.com\n\t * Public Domain.\n\t * NO WARRANTY EXPRESSED OR IMPLIED. USE AT YOUR OWN RISK.\n\t */\n\t\n\t/*global self, document, DOMException */\n\t\n\t/*! @source http://purl.eligrey.com/github/classList.js/blob/master/classList.js*/\n\t\n\tif (typeof document !== \"undefined\" && !(\"classList\" in document.createElement(\"a\"))) {\n\t\n\t(function (view) {\n\t\n\t\"use strict\";\n\t\n\tvar\n\t      classListProp = \"classList\"\n\t    , protoProp = \"prototype\"\n\t    , elemCtrProto = (view.HTMLElement || view.Element)[protoProp]\n\t    , objCtr = Object\n\t    , strTrim = String[protoProp].trim || function () {\n\t        return this.replace(/^\\s+|\\s+$/g, \"\");\n\t    }\n\t    , arrIndexOf = Array[protoProp].indexOf || function (item) {\n\t        var\n\t              i = 0\n\t            , len = this.length\n\t        ;\n\t        for (; i < len; i++) {\n\t            if (i in this && this[i] === item) {\n\t                return i;\n\t            }\n\t        }\n\t        return -1;\n\t    }\n\t    // Vendors: please allow content code to instantiate DOMExceptions\n\t    , DOMEx = function (type, message) {\n\t        this.name = type;\n\t        this.code = DOMException[type];\n\t        this.message = message;\n\t    }\n\t    , checkTokenAndGetIndex = function (classList, token) {\n\t        if (token === \"\") {\n\t            throw new DOMEx(\n\t                  \"SYNTAX_ERR\"\n\t                , \"An invalid or illegal string was specified\"\n\t            );\n\t        }\n\t        if (/\\s/.test(token)) {\n\t            throw new DOMEx(\n\t                  \"INVALID_CHARACTER_ERR\"\n\t                , \"String contains an invalid character\"\n\t            );\n\t        }\n\t        return arrIndexOf.call(classList, token);\n\t    }\n\t    , ClassList = function (elem) {\n\t        var\n\t              trimmedClasses = strTrim.call(elem.className)\n\t            , classes = trimmedClasses ? trimmedClasses.split(/\\s+/) : []\n\t            , i = 0\n\t            , len = classes.length\n\t        ;\n\t        for (; i < len; i++) {\n\t            this.push(classes[i]);\n\t        }\n\t        this._updateClassName = function () {\n\t            elem.className = this.toString();\n\t        };\n\t    }\n\t    , classListProto = ClassList[protoProp] = []\n\t    , classListGetter = function () {\n\t        return new ClassList(this);\n\t    }\n\t;\n\t// Most DOMException implementations don't allow calling DOMException's toString()\n\t// on non-DOMExceptions. Error's toString() is sufficient here.\n\tDOMEx[protoProp] = Error[protoProp];\n\tclassListProto.item = function (i) {\n\t    return this[i] || null;\n\t};\n\tclassListProto.contains = function (token) {\n\t    token += \"\";\n\t    return checkTokenAndGetIndex(this, token) !== -1;\n\t};\n\tclassListProto.add = function (token) {\n\t    token += \"\";\n\t    if (checkTokenAndGetIndex(this, token) === -1) {\n\t        this.push(token);\n\t        this._updateClassName();\n\t    }\n\t};\n\tclassListProto.remove = function (token) {\n\t    token += \"\";\n\t    var index = checkTokenAndGetIndex(this, token);\n\t    if (index !== -1) {\n\t        this.splice(index, 1);\n\t        this._updateClassName();\n\t    }\n\t};\n\tclassListProto.toggle = function (token) {\n\t    token += \"\";\n\t    if (checkTokenAndGetIndex(this, token) === -1) {\n\t        this.add(token);\n\t    } else {\n\t        this.remove(token);\n\t    }\n\t};\n\tclassListProto.toString = function () {\n\t    return this.join(\" \");\n\t};\n\t\n\tif (objCtr.defineProperty) {\n\t    var classListPropDesc = {\n\t          get: classListGetter\n\t        , enumerable: true\n\t        , configurable: true\n\t    };\n\t    try {\n\t        objCtr.defineProperty(elemCtrProto, classListProp, classListPropDesc);\n\t    } catch (ex) { // IE 8 doesn't support enumerable:true\n\t        if (ex.number === -0x7FF5EC54) {\n\t            classListPropDesc.enumerable = false;\n\t            objCtr.defineProperty(elemCtrProto, classListProp, classListPropDesc);\n\t        }\n\t    }\n\t} else if (objCtr[protoProp].__defineGetter__) {\n\t    elemCtrProto.__defineGetter__(classListProp, classListGetter);\n\t}\n\t\n\t}(self));\n\t\n\t}\n\n\n/***/ },\n/* 57 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tif (!Function.prototype.bind) {\n\t    Function.prototype.bind = function (oThis) {\n\t        if (typeof this !== \"function\") {\n\t            // closest thing possible to the ECMAScript 5 internal IsCallable function\n\t            throw new TypeError(\"Function.prototype.bind - what is trying to be bound is not callable\");\n\t        }\n\t\n\t        var aArgs = Array.prototype.slice.call(arguments, 1),\n\t        fToBind = this,\n\t        fNOP = function () {},\n\t        fBound = function () {\n\t            return fToBind.apply(this instanceof fNOP && oThis\n\t                ? this\n\t                : oThis,\n\t                aArgs.concat(Array.prototype.slice.call(arguments)));\n\t        };\n\t\n\t        fNOP.prototype = this.prototype;\n\t        fBound.prototype = new fNOP();\n\t\n\t        return fBound;\n\t    };\n\t}\n\n\n/***/ },\n/* 58 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// adds requestAnimationFrame functionality\n\t// Source: http://strd6.com/2011/05/better-window-requestanimationframe-shim/\n\t\n\twindow.requestAnimationFrame || (window.requestAnimationFrame =\n\t  window.webkitRequestAnimationFrame ||\n\t  window.mozRequestAnimationFrame    ||\n\t  window.oRequestAnimationFrame      ||\n\t  window.msRequestAnimationFrame     ||\n\t  function(callback, element) {\n\t    return window.setTimeout(function() {\n\t      callback(+new Date());\n\t  }, 1000 / 60);\n\t});\n\n\n/***/ },\n/* 59 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;/* This Source Code Form is subject to the terms of the Mozilla Public\n\t * License, v. 2.0. If a copy of the MPL was not distributed with this\n\t * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n\t *\n\t * Owner: mark@famo.us\n\t * @license MPL 2.0\n\t * @copyright Famous Industries, Inc. 2014\n\t */\n\t\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = (function(require, exports, module) {\n\t\n\t    /**\n\t     * Internal helper object to Context that handles the process of\n\t     *   creating and allocating DOM elements within a managed div.\n\t     *   Private.\n\t     *\n\t     * @class ElementAllocator\n\t     * @constructor\n\t     * @private\n\t     * @param {Node} container document element in which Famo.us content will be inserted\n\t     */\n\t    function ElementAllocator(container) {\n\t        if (!container) container = document.createDocumentFragment();\n\t        this.container = container;\n\t        this.detachedNodes = {};\n\t        this.nodeCount = 0;\n\t    }\n\t\n\t    /**\n\t     * Move the document elements from their original container to a new one.\n\t     *\n\t     * @private\n\t     * @method migrate\n\t     *\n\t     * @param {Node} container document element to which Famo.us content will be migrated\n\t     */\n\t    ElementAllocator.prototype.migrate = function migrate(container) {\n\t        var oldContainer = this.container;\n\t        if (container === oldContainer) return;\n\t\n\t        if (oldContainer instanceof DocumentFragment) {\n\t            container.appendChild(oldContainer);\n\t        }\n\t        else {\n\t            while (oldContainer.hasChildNodes()) {\n\t                container.appendChild(oldContainer.removeChild(oldContainer.firstChild));\n\t            }\n\t        }\n\t\n\t        this.container = container;\n\t    };\n\t\n\t    /**\n\t     * Allocate an element of specified type from the pool.\n\t     *\n\t     * @private\n\t     * @method allocate\n\t     *\n\t     * @param {string} type type of element, e.g. 'div'\n\t     * @return {Node} allocated document element\n\t     */\n\t    ElementAllocator.prototype.allocate = function allocate(type) {\n\t        type = type.toLowerCase();\n\t        if (!(type in this.detachedNodes)) this.detachedNodes[type] = [];\n\t        var nodeStore = this.detachedNodes[type];\n\t        var result;\n\t        if (nodeStore.length > 0) {\n\t            result = nodeStore.pop();\n\t        }\n\t        else {\n\t            result = document.createElement(type);\n\t            this.container.appendChild(result);\n\t        }\n\t        this.nodeCount++;\n\t        return result;\n\t    };\n\t\n\t    /**\n\t     * De-allocate an element of specified type to the pool.\n\t     *\n\t     * @private\n\t     * @method deallocate\n\t     *\n\t     * @param {Node} element document element to deallocate\n\t     */\n\t    ElementAllocator.prototype.deallocate = function deallocate(element) {\n\t        var nodeType = element.nodeName.toLowerCase();\n\t        var nodeStore = this.detachedNodes[nodeType];\n\t        nodeStore.push(element);\n\t        this.nodeCount--;\n\t    };\n\t\n\t    /**\n\t     * Get count of total allocated nodes in the document.\n\t     *\n\t     * @private\n\t     * @method getNodeCount\n\t     *\n\t     * @return {Number} total node count\n\t     */\n\t    ElementAllocator.prototype.getNodeCount = function getNodeCount() {\n\t        return this.nodeCount;\n\t    };\n\t\n\t    module.exports = ElementAllocator;\n\t}.call(exports, __webpack_require__, exports, module)), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 60 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;/* This Source Code Form is subject to the terms of the Mozilla Public\n\t * License, v. 2.0. If a copy of the MPL was not distributed with this\n\t * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n\t *\n\t * Owner: mark@famo.us\n\t * @license MPL 2.0\n\t * @copyright Famous Industries, Inc. 2014\n\t */\n\t\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = (function(require, exports, module) {\n\t    var Context = __webpack_require__(34);\n\t    var Transform = __webpack_require__(1);\n\t    var Surface = __webpack_require__(3);\n\t\n\t    /**\n\t     * A Context designed to contain surfaces and set properties\n\t     *   to be applied to all of them at once.\n\t     *   This is primarily used for specific performance improvements in the rendering engine.\n\t     *   Private.\n\t     *\n\t     * @private\n\t     * @class Group\n\t     * @extends Surface\n\t     * @constructor\n\t     * @param {Object} [options] Surface options array (see Surface})\n\t     */\n\t    function Group(options) {\n\t        Surface.call(this, options);\n\t        this._shouldRecalculateSize = false;\n\t        this._container = document.createDocumentFragment();\n\t        this.context = new Context(this._container);\n\t        this.setContent(this._container);\n\t        this._groupSize = [undefined, undefined];\n\t    }\n\t\n\t    /** @const */\n\t    Group.SIZE_ZERO = [0, 0];\n\t\n\t    Group.prototype = Object.create(Surface.prototype);\n\t    Group.prototype.elementType = 'div';\n\t    Group.prototype.elementClass = 'famous-group';\n\t\n\t    /**\n\t     * Add renderables to this component's render tree.\n\t     *\n\t     * @method add\n\t     * @private\n\t     * @param {Object} obj renderable object\n\t     * @return {RenderNode} Render wrapping provided object, if not already a RenderNode\n\t     */\n\t    Group.prototype.add = function add() {\n\t        return this.context.add.apply(this.context, arguments);\n\t    };\n\t\n\t    /**\n\t     * Generate a render spec from the contents of this component.\n\t     *\n\t     * @private\n\t     * @method render\n\t     * @return {Number} Render spec for this component\n\t     */\n\t    Group.prototype.render = function render() {\n\t        return Surface.prototype.render.call(this);\n\t    };\n\t\n\t    /**\n\t     * Place the document element this component manages into the document.\n\t     *\n\t     * @private\n\t     * @method deploy\n\t     * @param {Node} target document parent of this container\n\t     */\n\t    Group.prototype.deploy = function deploy(target) {\n\t        this.context.migrate(target);\n\t    };\n\t\n\t    /**\n\t     * Remove this component and contained content from the document\n\t     *\n\t     * @private\n\t     * @method recall\n\t     *\n\t     * @param {Node} target node to which the component was deployed\n\t     */\n\t    Group.prototype.recall = function recall(target) {\n\t        this._container = document.createDocumentFragment();\n\t        this.context.migrate(this._container);\n\t    };\n\t\n\t    /**\n\t     * Apply changes from this component to the corresponding document element.\n\t     *\n\t     * @private\n\t     * @method commit\n\t     *\n\t     * @param {Object} context update spec passed in from above in the render tree.\n\t     */\n\t    Group.prototype.commit = function commit(context) {\n\t        var transform = context.transform;\n\t        var origin = context.origin;\n\t        var opacity = context.opacity;\n\t        var size = context.size;\n\t        var result = Surface.prototype.commit.call(this, {\n\t            allocator: context.allocator,\n\t            transform: Transform.thenMove(transform, [-origin[0] * size[0], -origin[1] * size[1], 0]),\n\t            opacity: opacity,\n\t            origin: origin,\n\t            size: Group.SIZE_ZERO\n\t        });\n\t        if (size[0] !== this._groupSize[0] || size[1] !== this._groupSize[1]) {\n\t            this._groupSize[0] = size[0];\n\t            this._groupSize[1] = size[1];\n\t            this.context.setSize(size);\n\t        }\n\t        this.context.update({\n\t            transform: Transform.translate(-origin[0] * size[0], -origin[1] * size[1], 0),\n\t            origin: origin,\n\t            size: size\n\t        });\n\t        return result;\n\t    };\n\t\n\t    module.exports = Group;\n\t}.call(exports, __webpack_require__, exports, module)), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 61 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;\n\t/* This Source Code Form is subject to the terms of the Mozilla Public\n\t * License, v. 2.0. If a copy of the MPL was not distributed with this\n\t * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n\t *\n\t * Owner: mark@famo.us\n\t * @license MPL 2.0\n\t * @copyright Famous Industries, Inc. 2014\n\t */\n\t\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = (function(require, exports, module) {\n\t    var Transform = __webpack_require__(1);\n\t\n\t    /**\n\t     *\n\t     * This object translates the rendering instructions (\"render specs\")\n\t     *   that renderable components generate into document update\n\t     *   instructions (\"update specs\").  Private.\n\t     *\n\t     * @private\n\t     * @class SpecParser\n\t     * @constructor\n\t     */\n\t    function SpecParser() {\n\t        this.result = {};\n\t    }\n\t    SpecParser._instance = new SpecParser();\n\t\n\t    /**\n\t     * Convert a render spec coming from the context's render chain to an\n\t     *    update spec for the update chain. This is the only major entry point\n\t     *    for a consumer of this class.\n\t     *\n\t     * @method parse\n\t     * @static\n\t     * @private\n\t     *\n\t     * @param {renderSpec} spec input render spec\n\t     * @param {Object} context context to do the parse in\n\t     * @return {Object} the resulting update spec (if no callback\n\t     *   specified, else none)\n\t     */\n\t    SpecParser.parse = function parse(spec, context) {\n\t        return SpecParser._instance.parse(spec, context);\n\t    };\n\t\n\t    /**\n\t     * Convert a renderSpec coming from the context's render chain to an update\n\t     *    spec for the update chain. This is the only major entrypoint for a\n\t     *    consumer of this class.\n\t     *\n\t     * @method parse\n\t     *\n\t     * @private\n\t     * @param {renderSpec} spec input render spec\n\t     * @param {Context} context\n\t     * @return {updateSpec} the resulting update spec\n\t     */\n\t    SpecParser.prototype.parse = function parse(spec, context) {\n\t        this.reset();\n\t        this._parseSpec(spec, context, Transform.identity);\n\t        return this.result;\n\t    };\n\t\n\t    /**\n\t     * Prepare SpecParser for re-use (or first use) by setting internal state\n\t     *  to blank.\n\t     *\n\t     * @private\n\t     * @method reset\n\t     */\n\t    SpecParser.prototype.reset = function reset() {\n\t        this.result = {};\n\t    };\n\t\n\t    // Multiply matrix M by vector v\n\t    function _vecInContext(v, m) {\n\t        return [\n\t            v[0] * m[0] + v[1] * m[4] + v[2] * m[8],\n\t            v[0] * m[1] + v[1] * m[5] + v[2] * m[9],\n\t            v[0] * m[2] + v[1] * m[6] + v[2] * m[10]\n\t        ];\n\t    }\n\t\n\t    var _originZeroZero = [0, 0];\n\t\n\t    // From the provided renderSpec tree, recursively compose opacities,\n\t    //    origins, transforms, and sizes corresponding to each surface id from\n\t    //    the provided renderSpec tree structure. On completion, those\n\t    //    properties of 'this' object should be ready to use to build an\n\t    //    updateSpec.\n\t    SpecParser.prototype._parseSpec = function _parseSpec(spec, parentContext, sizeContext) {\n\t        var id;\n\t        var target;\n\t        var transform;\n\t        var opacity;\n\t        var origin;\n\t        var align;\n\t        var size;\n\t\n\t        if (typeof spec === 'number') {\n\t            id = spec;\n\t            transform = parentContext.transform;\n\t            align = parentContext.align || parentContext.origin;\n\t            if (parentContext.size && align && (align[0] || align[1])) {\n\t                var alignAdjust = [align[0] * parentContext.size[0], align[1] * parentContext.size[1], 0];\n\t                transform = Transform.thenMove(transform, _vecInContext(alignAdjust, sizeContext));\n\t            }\n\t            this.result[id] = {\n\t                transform: transform,\n\t                opacity: parentContext.opacity,\n\t                origin: parentContext.origin || _originZeroZero,\n\t                align: parentContext.align || parentContext.origin || _originZeroZero,\n\t                size: parentContext.size\n\t            };\n\t        }\n\t        else if (!spec) { // placed here so 0 will be cached earlier\n\t            return;\n\t        }\n\t        else if (spec instanceof Array) {\n\t            for (var i = 0; i < spec.length; i++) {\n\t                this._parseSpec(spec[i], parentContext, sizeContext);\n\t            }\n\t        }\n\t        else {\n\t            target = spec.target;\n\t            transform = parentContext.transform;\n\t            opacity = parentContext.opacity;\n\t            origin = parentContext.origin;\n\t            align = parentContext.align;\n\t            size = parentContext.size;\n\t            var nextSizeContext = sizeContext;\n\t\n\t            if (spec.opacity !== undefined) opacity = parentContext.opacity * spec.opacity;\n\t            if (spec.transform) transform = Transform.multiply(parentContext.transform, spec.transform);\n\t            if (spec.origin) {\n\t                origin = spec.origin;\n\t                nextSizeContext = parentContext.transform;\n\t            }\n\t            if (spec.align) align = spec.align;\n\t            if (spec.size) {\n\t                var parentSize = parentContext.size;\n\t                size = [\n\t                    spec.size[0] !== undefined ? spec.size[0] : parentSize[0],\n\t                    spec.size[1] !== undefined ? spec.size[1] : parentSize[1]\n\t                ];\n\t                if (parentSize) {\n\t                    if (!align) align = origin;\n\t                    if (align && (align[0] || align[1])) transform = Transform.thenMove(transform, _vecInContext([align[0] * parentSize[0], align[1] * parentSize[1], 0], sizeContext));\n\t                    if (origin && (origin[0] || origin[1])) transform = Transform.moveThen([-origin[0] * size[0], -origin[1] * size[1], 0], transform);\n\t                }\n\t                nextSizeContext = parentContext.transform;\n\t                origin = null;\n\t                align = null;\n\t            }\n\t\n\t            this._parseSpec(target, {\n\t                transform: transform,\n\t                opacity: opacity,\n\t                origin: origin,\n\t                align: align,\n\t                size: size\n\t            }, nextSizeContext);\n\t        }\n\t    };\n\t\n\t    module.exports = SpecParser;\n\t}.call(exports, __webpack_require__, exports, module)), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 62 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;/* This Source Code Form is subject to the terms of the Mozilla Public\n\t * License, v. 2.0. If a copy of the MPL was not distributed with this\n\t * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n\t *\n\t * Owner: mark@famo.us\n\t * @license MPL 2.0\n\t * @copyright Famous Industries, Inc. 2014\n\t */\n\t\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = (function(require, exports, module) {\n\t    var EventHandler = __webpack_require__(6);\n\t\n\t    /**\n\t     * Combines multiple types of sync classes (e.g. mouse, touch,\n\t     *  scrolling) into one standardized interface for inclusion in widgets.\n\t     *\n\t     *  Sync classes are first registered with a key, and then can be accessed\n\t     *  globally by key.\n\t     *\n\t     *  Emits 'start', 'update' and 'end' events as a union of the sync class\n\t     *  providers.\n\t     *\n\t     * @class GenericSync\n\t     * @constructor\n\t     * @param syncs {Object|Array} object with fields {sync key : sync options}\n\t     *    or an array of registered sync keys\n\t     * @param [options] {Object|Array} options object to set on all syncs\n\t     */\n\t    function GenericSync(syncs, options) {\n\t        this._eventInput = new EventHandler();\n\t        this._eventOutput = new EventHandler();\n\t\n\t        EventHandler.setInputHandler(this, this._eventInput);\n\t        EventHandler.setOutputHandler(this, this._eventOutput);\n\t\n\t        this._syncs = {};\n\t        if (syncs) this.addSync(syncs);\n\t        if (options) this.setOptions(options);\n\t    }\n\t\n\t    GenericSync.DIRECTION_X = 0;\n\t    GenericSync.DIRECTION_Y = 1;\n\t    GenericSync.DIRECTION_Z = 2;\n\t\n\t    // Global registry of sync classes. Append only.\n\t    var registry = {};\n\t\n\t    /**\n\t     * Register a global sync class with an identifying key\n\t     *\n\t     * @static\n\t     * @method register\n\t     *\n\t     * @param syncObject {Object} an object of {sync key : sync options} fields\n\t     */\n\t    GenericSync.register = function register(syncObject) {\n\t        for (var key in syncObject){\n\t            if (registry[key]){\n\t                if (registry[key] === syncObject[key]) return; // redundant registration\n\t                else throw new Error('this key is registered to a different sync class');\n\t            }\n\t            else registry[key] = syncObject[key];\n\t        }\n\t    };\n\t\n\t    /**\n\t     * Helper to set options on all sync instances\n\t     *\n\t     * @method setOptions\n\t     * @param options {Object} options object\n\t     */\n\t    GenericSync.prototype.setOptions = function(options) {\n\t        for (var key in this._syncs){\n\t            this._syncs[key].setOptions(options);\n\t        }\n\t    };\n\t\n\t    /**\n\t     * Pipe events to a sync class\n\t     *\n\t     * @method pipeSync\n\t     * @param key {String} identifier for sync class\n\t     */\n\t    GenericSync.prototype.pipeSync = function pipeToSync(key) {\n\t        var sync = this._syncs[key];\n\t        this._eventInput.pipe(sync);\n\t        sync.pipe(this._eventOutput);\n\t    };\n\t\n\t    /**\n\t     * Unpipe events from a sync class\n\t     *\n\t     * @method unpipeSync\n\t     * @param key {String} identifier for sync class\n\t     */\n\t    GenericSync.prototype.unpipeSync = function unpipeFromSync(key) {\n\t        var sync = this._syncs[key];\n\t        this._eventInput.unpipe(sync);\n\t        sync.unpipe(this._eventOutput);\n\t    };\n\t\n\t    function _addSingleSync(key, options) {\n\t        if (!registry[key]) return;\n\t        this._syncs[key] = new (registry[key])(options);\n\t        this.pipeSync(key);\n\t    }\n\t\n\t    /**\n\t     * Add a sync class to from the registered classes\n\t     *\n\t     * @method addSync\n\t     * @param syncs {Object|Array.String} an array of registered sync keys\n\t     *    or an object with fields {sync key : sync options}\n\t     */\n\t    GenericSync.prototype.addSync = function addSync(syncs) {\n\t        if (syncs instanceof Array)\n\t            for (var i = 0; i < syncs.length; i++)\n\t                _addSingleSync.call(this, syncs[i]);\n\t        else if (syncs instanceof Object)\n\t            for (var key in syncs)\n\t                _addSingleSync.call(this, key, syncs[key]);\n\t    };\n\t\n\t    module.exports = GenericSync;\n\t}.call(exports, __webpack_require__, exports, module)), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 63 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;/* This Source Code Form is subject to the terms of the Mozilla Public\n\t * License, v. 2.0. If a copy of the MPL was not distributed with this\n\t * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n\t *\n\t * Owner: mark@famo.us\n\t * @license MPL 2.0\n\t * @copyright Famous Industries, Inc. 2014\n\t */\n\t\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = (function(require, exports, module) {\n\t    var EventHandler = __webpack_require__(6);\n\t    var Engine = __webpack_require__(24);\n\t\n\t    /**\n\t     * Handles piped in mousewheel events.\n\t     *   Emits 'start', 'update', and 'end' events with payloads including:\n\t     *   delta: change since last position,\n\t     *   position: accumulated deltas,\n\t     *   velocity: speed of change in pixels per ms,\n\t     *   slip: true (unused).\n\t     *\n\t     *   Can be used as delegate of GenericSync.\n\t     *\n\t     * @class ScrollSync\n\t     * @constructor\n\t     * @param {Object} [options] overrides of default options\n\t     * @param {Number} [options.direction] Pay attention to x changes (ScrollSync.DIRECTION_X),\n\t     *   y changes (ScrollSync.DIRECTION_Y) or both (undefined)\n\t     * @param {Number} [options.minimumEndSpeed] End speed calculation floors at this number, in pixels per ms\n\t     * @param {boolean} [options.rails] whether to snap position calculations to nearest axis\n\t     * @param {Number | Array.Number} [options.scale] scale outputs in by scalar or pair of scalars\n\t     * @param {Number} [options.stallTime] reset time for velocity calculation in ms\n\t     */\n\t    function ScrollSync(options) {\n\t        this.options = Object.create(ScrollSync.DEFAULT_OPTIONS);\n\t        if (options) this.setOptions(options);\n\t\n\t        this._payload = {\n\t            delta    : null,\n\t            position : null,\n\t            velocity : null,\n\t            slip     : true\n\t        };\n\t\n\t        this._eventInput = new EventHandler();\n\t        this._eventOutput = new EventHandler();\n\t\n\t        EventHandler.setInputHandler(this, this._eventInput);\n\t        EventHandler.setOutputHandler(this, this._eventOutput);\n\t\n\t        this._position = (this.options.direction === undefined) ? [0,0] : 0;\n\t        this._prevTime = undefined;\n\t        this._prevVel = undefined;\n\t        this._eventInput.on('mousewheel', _handleMove.bind(this));\n\t        this._eventInput.on('wheel', _handleMove.bind(this));\n\t        this._inProgress = false;\n\t        this._loopBound = false;\n\t    }\n\t\n\t    ScrollSync.DEFAULT_OPTIONS = {\n\t        direction: undefined,\n\t        minimumEndSpeed: Infinity,\n\t        rails: false,\n\t        scale: 1,\n\t        stallTime: 50,\n\t        lineHeight: 40\n\t    };\n\t\n\t    ScrollSync.DIRECTION_X = 0;\n\t    ScrollSync.DIRECTION_Y = 1;\n\t\n\t    var MINIMUM_TICK_TIME = 8;\n\t\n\t    var _now = Date.now;\n\t\n\t    function _newFrame() {\n\t        if (this._inProgress && (_now() - this._prevTime) > this.options.stallTime) {\n\t            this._position = (this.options.direction === undefined) ? [0,0] : 0;\n\t            this._inProgress = false;\n\t\n\t            var finalVel = (Math.abs(this._prevVel) >= this.options.minimumEndSpeed)\n\t                ? this._prevVel\n\t                : 0;\n\t\n\t            var payload = this._payload;\n\t            payload.position = this._position;\n\t            payload.velocity = finalVel;\n\t            payload.slip = true;\n\t\n\t            this._eventOutput.emit('end', payload);\n\t        }\n\t    }\n\t\n\t    function _handleMove(event) {\n\t        event.preventDefault();\n\t\n\t        if (!this._inProgress) {\n\t            this._inProgress = true;\n\t\n\t            payload = this._payload;\n\t            payload.slip = true;\n\t            payload.position = this._position;\n\t            payload.clientX = event.clientX;\n\t            payload.clientY = event.clientY;\n\t            payload.offsetX = event.offsetX;\n\t            payload.offsetY = event.offsetY;\n\t            this._eventOutput.emit('start', payload);\n\t            if (!this._loopBound) {\n\t                Engine.on('prerender', _newFrame.bind(this));\n\t                this._loopBound = true;\n\t            }\n\t        }\n\t\n\t        var currTime = _now();\n\t        var prevTime = this._prevTime || currTime;\n\t\n\t        var diffX = (event.wheelDeltaX !== undefined) ? event.wheelDeltaX : -event.deltaX;\n\t        var diffY = (event.wheelDeltaY !== undefined) ? event.wheelDeltaY : -event.deltaY;\n\t\n\t        if (event.deltaMode === 1) { // units in lines, not pixels\n\t            diffX *= this.options.lineHeight;\n\t            diffY *= this.options.lineHeight;\n\t        }\n\t\n\t        if (this.options.rails) {\n\t            if (Math.abs(diffX) > Math.abs(diffY)) diffY = 0;\n\t            else diffX = 0;\n\t        }\n\t\n\t        var diffTime = Math.max(currTime - prevTime, MINIMUM_TICK_TIME); // minimum tick time\n\t\n\t        var velX = diffX / diffTime;\n\t        var velY = diffY / diffTime;\n\t\n\t        var scale = this.options.scale;\n\t        var nextVel;\n\t        var nextDelta;\n\t\n\t        if (this.options.direction === ScrollSync.DIRECTION_X) {\n\t            nextDelta = scale * diffX;\n\t            nextVel = scale * velX;\n\t            this._position += nextDelta;\n\t        }\n\t        else if (this.options.direction === ScrollSync.DIRECTION_Y) {\n\t            nextDelta = scale * diffY;\n\t            nextVel = scale * velY;\n\t            this._position += nextDelta;\n\t        }\n\t        else {\n\t            nextDelta = [scale * diffX, scale * diffY];\n\t            nextVel = [scale * velX, scale * velY];\n\t            this._position[0] += nextDelta[0];\n\t            this._position[1] += nextDelta[1];\n\t        }\n\t\n\t        var payload = this._payload;\n\t        payload.delta    = nextDelta;\n\t        payload.velocity = nextVel;\n\t        payload.position = this._position;\n\t        payload.slip     = true;\n\t\n\t        this._eventOutput.emit('update', payload);\n\t\n\t        this._prevTime = currTime;\n\t        this._prevVel = nextVel;\n\t    }\n\t\n\t    /**\n\t     * Return entire options dictionary, including defaults.\n\t     *\n\t     * @method getOptions\n\t     * @return {Object} configuration options\n\t     */\n\t    ScrollSync.prototype.getOptions = function getOptions() {\n\t        return this.options;\n\t    };\n\t\n\t    /**\n\t     * Set internal options, overriding any default options\n\t     *\n\t     * @method setOptions\n\t     *\n\t     * @param {Object} [options] overrides of default options\n\t     * @param {Number} [options.minimimEndSpeed] If final velocity smaller than this, round down to 0.\n\t     * @param {Number} [options.stallTime] ms of non-motion before 'end' emitted\n\t     * @param {Number} [options.rails] whether to constrain to nearest axis.\n\t     * @param {Number} [options.direction] ScrollSync.DIRECTION_X, DIRECTION_Y -\n\t     *    pay attention to one specific direction.\n\t     * @param {Number} [options.scale] constant factor to scale velocity output\n\t     */\n\t    ScrollSync.prototype.setOptions = function setOptions(options) {\n\t        if (options.direction !== undefined) this.options.direction = options.direction;\n\t        if (options.minimumEndSpeed !== undefined) this.options.minimumEndSpeed = options.minimumEndSpeed;\n\t        if (options.rails !== undefined) this.options.rails = options.rails;\n\t        if (options.scale !== undefined) this.options.scale = options.scale;\n\t        if (options.stallTime !== undefined) this.options.stallTime = options.stallTime;\n\t    };\n\t\n\t    module.exports = ScrollSync;\n\t}.call(exports, __webpack_require__, exports, module)), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 64 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;/* This Source Code Form is subject to the terms of the Mozilla Public\n\t * License, v. 2.0. If a copy of the MPL was not distributed with this\n\t * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n\t *\n\t * Owner: mark@famo.us\n\t * @license MPL 2.0\n\t * @copyright Famous Industries, Inc. 2014\n\t */\n\t\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = (function(require, exports, module) {\n\t    var TouchTracker = __webpack_require__(65);\n\t    var EventHandler = __webpack_require__(6);\n\t\n\t    /**\n\t     * Handles piped in touch events. Emits 'start', 'update', and 'events'\n\t     *   events with position, velocity, acceleration, and touch id.\n\t     *   Useful for dealing with inputs on touch devices.\n\t     *\n\t     *\n\t     * @class TouchSync\n\t     * @constructor\n\t     *\n\t     * @param [options] {Object}             default options overrides\n\t     * @param [options.direction] {Number}   read from a particular axis\n\t     * @param [options.rails] {Boolean}      read from axis with greatest differential\n\t     * @param [options.scale] {Number}       constant factor to scale velocity output\n\t     */\n\t    function TouchSync(options) {\n\t        this.options =  Object.create(TouchSync.DEFAULT_OPTIONS);\n\t        if (options) this.setOptions(options);\n\t\n\t        this._eventOutput = new EventHandler();\n\t        this._touchTracker = new TouchTracker();\n\t\n\t        EventHandler.setOutputHandler(this, this._eventOutput);\n\t        EventHandler.setInputHandler(this, this._touchTracker);\n\t\n\t        this._touchTracker.on('trackstart', _handleStart.bind(this));\n\t        this._touchTracker.on('trackmove', _handleMove.bind(this));\n\t        this._touchTracker.on('trackend', _handleEnd.bind(this));\n\t\n\t        this._payload = {\n\t            delta    : null,\n\t            position : null,\n\t            velocity : null,\n\t            clientX  : undefined,\n\t            clientY  : undefined,\n\t            count    : 0,\n\t            touch    : undefined\n\t        };\n\t\n\t        this._position = null; // to be deprecated\n\t    }\n\t\n\t    TouchSync.DEFAULT_OPTIONS = {\n\t        direction: undefined,\n\t        rails: false,\n\t        scale: 1\n\t    };\n\t\n\t    TouchSync.DIRECTION_X = 0;\n\t    TouchSync.DIRECTION_Y = 1;\n\t\n\t    var MINIMUM_TICK_TIME = 8;\n\t\n\t    function _clearPayload() {\n\t        var payload = this._payload;\n\t        payload.position = null;\n\t        payload.velocity = null;\n\t        payload.clientX  = undefined;\n\t        payload.clientY  = undefined;\n\t        payload.count    = undefined;\n\t        payload.touch    = undefined;\n\t    }\n\t\n\t    // handle 'trackstart'\n\t    function _handleStart(data) {\n\t        _clearPayload.call(this);\n\t\n\t        this._position = (this.options.direction !== undefined) ? 0 : [0, 0];\n\t\n\t        var payload = this._payload;\n\t        payload.count = data.count;\n\t        payload.touch = data.identifier;\n\t\n\t        this._eventOutput.emit('start', payload);\n\t    }\n\t\n\t    // handle 'trackmove'\n\t    function _handleMove(data) {\n\t        var history = data.history;\n\t\n\t        var currHistory = history[history.length - 1];\n\t        var prevHistory = history[history.length - 2];\n\t\n\t        var prevTime = prevHistory.timestamp;\n\t        var currTime = currHistory.timestamp;\n\t\n\t        var diffX = currHistory.x - prevHistory.x;\n\t        var diffY = currHistory.y - prevHistory.y;\n\t\n\t        if (this.options.rails) {\n\t            if (Math.abs(diffX) > Math.abs(diffY)) diffY = 0;\n\t            else diffX = 0;\n\t        }\n\t\n\t        var diffTime = Math.max(currTime - prevTime, MINIMUM_TICK_TIME);\n\t\n\t        var velX = diffX / diffTime;\n\t        var velY = diffY / diffTime;\n\t\n\t        var scale = this.options.scale;\n\t        var nextVel;\n\t        var nextDelta;\n\t\n\t        if (this.options.direction === TouchSync.DIRECTION_X) {\n\t            nextDelta = scale * diffX;\n\t            nextVel = scale * velX;\n\t            this._position += nextDelta;\n\t        }\n\t        else if (this.options.direction === TouchSync.DIRECTION_Y) {\n\t            nextDelta = scale * diffY;\n\t            nextVel = scale * velY;\n\t            this._position += nextDelta;\n\t        }\n\t        else {\n\t            nextDelta = [scale * diffX, scale * diffY];\n\t            nextVel = [scale * velX, scale * velY];\n\t            this._position[0] += nextDelta[0];\n\t            this._position[1] += nextDelta[1];\n\t        }\n\t\n\t        var payload = this._payload;\n\t        payload.delta    = nextDelta;\n\t        payload.velocity = nextVel;\n\t        payload.position = this._position;\n\t        payload.clientX  = data.x;\n\t        payload.clientY  = data.y;\n\t        payload.count    = data.count;\n\t        payload.touch    = data.identifier;\n\t\n\t        this._eventOutput.emit('update', payload);\n\t    }\n\t\n\t    // handle 'trackend'\n\t    function _handleEnd(data) {\n\t        var nextVel = (this.options.direction !== undefined) ? 0 : [0, 0];\n\t        var history = data.history;\n\t        var count = data.count;\n\t        if (history.length > 1) {\n\t            var currHistory = history[history.length - 1];\n\t            var prevHistory = history[history.length - 2];\n\t\n\t            var prevTime = prevHistory.timestamp;\n\t            var currTime = currHistory.timestamp;\n\t\n\t            var diffX = currHistory.x - prevHistory.x;\n\t            var diffY = currHistory.y - prevHistory.y;\n\t\n\t            if (this.options.rails) {\n\t                if (Math.abs(diffX) > Math.abs(diffY)) diffY = 0;\n\t                else diffX = 0;\n\t            }\n\t\n\t            var diffTime = Math.max(currTime - prevTime, MINIMUM_TICK_TIME);\n\t            var velX = diffX / diffTime;\n\t            var velY = diffY / diffTime;\n\t            var scale = this.options.scale;\n\t\n\t            if (this.options.direction === TouchSync.DIRECTION_X) nextVel = scale * velX;\n\t            else if (this.options.direction === TouchSync.DIRECTION_Y) nextVel = scale * velY;\n\t            else nextVel = [scale * velX, scale * velY];\n\t        }\n\t\n\t        var payload = this._payload;\n\t        payload.velocity = nextVel;\n\t        payload.clientX  = data.x;\n\t        payload.clientY  = data.y;\n\t        payload.count    = count;\n\t        payload.touch    = data.identifier;\n\t\n\t        this._eventOutput.emit('end', payload);\n\t    }\n\t\n\t    /**\n\t     * Set internal options, overriding any default options\n\t     *\n\t     * @method setOptions\n\t     *\n\t     * @param [options] {Object}             default options overrides\n\t     * @param [options.direction] {Number}   read from a particular axis\n\t     * @param [options.rails] {Boolean}      read from axis with greatest differential\n\t     * @param [options.scale] {Number}       constant factor to scale velocity output\n\t     */\n\t    TouchSync.prototype.setOptions = function setOptions(options) {\n\t        if (options.direction !== undefined) this.options.direction = options.direction;\n\t        if (options.rails !== undefined) this.options.rails = options.rails;\n\t        if (options.scale !== undefined) this.options.scale = options.scale;\n\t    };\n\t\n\t    /**\n\t     * Return entire options dictionary, including defaults.\n\t     *\n\t     * @method getOptions\n\t     * @return {Object} configuration options\n\t     */\n\t    TouchSync.prototype.getOptions = function getOptions() {\n\t        return this.options;\n\t    };\n\t\n\t    module.exports = TouchSync;\n\t}.call(exports, __webpack_require__, exports, module)), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 65 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;/* This Source Code Form is subject to the terms of the Mozilla Public\n\t * License, v. 2.0. If a copy of the MPL was not distributed with this\n\t * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n\t *\n\t * Owner: mark@famo.us\n\t * @license MPL 2.0\n\t * @copyright Famous Industries, Inc. 2014\n\t */\n\t\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = (function(require, exports, module) {\n\t    var EventHandler = __webpack_require__(6);\n\t\n\t    var _now = Date.now;\n\t\n\t    function _timestampTouch(touch, event, history) {\n\t        return {\n\t            x: touch.clientX,\n\t            y: touch.clientY,\n\t            identifier : touch.identifier,\n\t            origin: event.origin,\n\t            timestamp: _now(),\n\t            count: event.touches.length,\n\t            history: history\n\t        };\n\t    }\n\t\n\t    function _handleStart(event) {\n\t        for (var i = 0; i < event.changedTouches.length; i++) {\n\t            var touch = event.changedTouches[i];\n\t            var data = _timestampTouch(touch, event, null);\n\t            this.eventOutput.emit('trackstart', data);\n\t            if (!this.selective && !this.touchHistory[touch.identifier]) this.track(data);\n\t        }\n\t    }\n\t\n\t    function _handleMove(event) {\n\t        for (var i = 0; i < event.changedTouches.length; i++) {\n\t            var touch = event.changedTouches[i];\n\t            var history = this.touchHistory[touch.identifier];\n\t            if (history) {\n\t                var data = _timestampTouch(touch, event, history);\n\t                this.touchHistory[touch.identifier].push(data);\n\t                this.eventOutput.emit('trackmove', data);\n\t            }\n\t        }\n\t    }\n\t\n\t    function _handleEnd(event) {\n\t        for (var i = 0; i < event.changedTouches.length; i++) {\n\t            var touch = event.changedTouches[i];\n\t            var history = this.touchHistory[touch.identifier];\n\t            if (history) {\n\t                var data = _timestampTouch(touch, event, history);\n\t                this.eventOutput.emit('trackend', data);\n\t                delete this.touchHistory[touch.identifier];\n\t            }\n\t        }\n\t    }\n\t\n\t    function _handleUnpipe() {\n\t        for (var i in this.touchHistory) {\n\t            var history = this.touchHistory[i];\n\t            this.eventOutput.emit('trackend', {\n\t                touch: history[history.length - 1].touch,\n\t                timestamp: Date.now(),\n\t                count: 0,\n\t                history: history\n\t            });\n\t            delete this.touchHistory[i];\n\t        }\n\t    }\n\t\n\t    /**\n\t     * Helper to TouchSync – tracks piped in touch events, organizes touch\n\t     *   events by ID, and emits track events back to TouchSync.\n\t     *   Emits 'trackstart', 'trackmove', and 'trackend' events upstream.\n\t     *\n\t     * @class TouchTracker\n\t     * @constructor\n\t     * @param {Boolean} selective if false, save state for each touch.\n\t     */\n\t    function TouchTracker(selective) {\n\t        this.selective = selective;\n\t        this.touchHistory = {};\n\t\n\t        this.eventInput = new EventHandler();\n\t        this.eventOutput = new EventHandler();\n\t\n\t        EventHandler.setInputHandler(this, this.eventInput);\n\t        EventHandler.setOutputHandler(this, this.eventOutput);\n\t\n\t        this.eventInput.on('touchstart', _handleStart.bind(this));\n\t        this.eventInput.on('touchmove', _handleMove.bind(this));\n\t        this.eventInput.on('touchend', _handleEnd.bind(this));\n\t        this.eventInput.on('touchcancel', _handleEnd.bind(this));\n\t        this.eventInput.on('unpipe', _handleUnpipe.bind(this));\n\t    }\n\t\n\t    /**\n\t     * Record touch data, if selective is false.\n\t     * @private\n\t     * @method track\n\t     * @param {Object} data touch data\n\t     */\n\t    TouchTracker.prototype.track = function track(data) {\n\t        this.touchHistory[data.identifier] = [data];\n\t    };\n\t\n\t    module.exports = TouchTracker;\n\t}.call(exports, __webpack_require__, exports, module)), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 66 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;/* This Source Code Form is subject to the terms of the Mozilla Public\n\t * License, v. 2.0. If a copy of the MPL was not distributed with this\n\t * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n\t *\n\t * Owner: david@famo.us\n\t * @license MPL 2.0\n\t * @copyright Famous Industries, Inc. 2014\n\t */\n\t\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = (function(require, exports, module) {\n\t    var Force = __webpack_require__(42);\n\t\n\t    /**\n\t     * Drag is a force that opposes velocity. Attach it to the physics engine\n\t     * to slow down a physics body in motion.\n\t     *\n\t     * @class Drag\n\t     * @constructor\n\t     * @extends Force\n\t     * @param {Object} options options to set on drag\n\t     */\n\t    function Drag(options) {\n\t        this.options = Object.create(this.constructor.DEFAULT_OPTIONS);\n\t        if (options) this.setOptions(options);\n\t\n\t        Force.call(this);\n\t    }\n\t\n\t    Drag.prototype = Object.create(Force.prototype);\n\t    Drag.prototype.constructor = Drag;\n\t\n\t    /**\n\t     * @property Drag.FORCE_FUNCTIONS\n\t     * @type Object\n\t     * @protected\n\t     * @static\n\t     */\n\t    Drag.FORCE_FUNCTIONS = {\n\t\n\t        /**\n\t         * A drag force proportional to the velocity\n\t         * @attribute LINEAR\n\t         * @type Function\n\t         * @param {Vector} velocity\n\t         * @return {Vector} drag force\n\t         */\n\t        LINEAR : function(velocity) {\n\t            return velocity;\n\t        },\n\t\n\t        /**\n\t         * A drag force proportional to the square of the velocity\n\t         * @attribute QUADRATIC\n\t         * @type Function\n\t         * @param {Vector} velocity\n\t         * @return {Vector} drag force\n\t         */\n\t        QUADRATIC : function(velocity) {\n\t            return velocity.mult(velocity.norm());\n\t        }\n\t    };\n\t\n\t    /**\n\t     * @property Drag.DEFAULT_OPTIONS\n\t     * @type Object\n\t     * @protected\n\t     * @static\n\t     */\n\t    Drag.DEFAULT_OPTIONS = {\n\t\n\t        /**\n\t         * The strength of the force\n\t         *    Range : [0, 0.1]\n\t         * @attribute strength\n\t         * @type Number\n\t         * @default 0.01\n\t         */\n\t        strength : 0.01,\n\t\n\t        /**\n\t         * The type of opposing force\n\t         * @attribute forceFunction\n\t         * @type Function\n\t         */\n\t        forceFunction : Drag.FORCE_FUNCTIONS.LINEAR\n\t    };\n\t\n\t    /**\n\t     * Adds a drag force to a physics body's force accumulator.\n\t     *\n\t     * @method applyForce\n\t     * @param targets {Array.Body} Array of bodies to apply drag force to.\n\t     */\n\t    Drag.prototype.applyForce = function applyForce(targets) {\n\t        var strength        = this.options.strength;\n\t        var forceFunction   = this.options.forceFunction;\n\t        var force           = this.force;\n\t        for (var index = 0; index < targets.length; index++) {\n\t            var particle = targets[index];\n\t            forceFunction(particle.velocity).mult(-strength).put(force);\n\t            particle.applyForce(force);\n\t        }\n\t    };\n\t\n\t    /**\n\t     * Basic options setter\n\t     *\n\t     * @method setOptions\n\t     * @param {Objects} options\n\t     */\n\t    Drag.prototype.setOptions = function setOptions(options) {\n\t        for (var key in options) this.options[key] = options[key];\n\t    };\n\t\n\t    module.exports = Drag;\n\t}.call(exports, __webpack_require__, exports, module)), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 67 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;/* This Source Code Form is subject to the terms of the Mozilla Public\n\t * License, v. 2.0. If a copy of the MPL was not distributed with this\n\t * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n\t *\n\t * Owner: david@famo.us\n\t * @license MPL 2.0\n\t * @copyright Famous Industries, Inc. 2014\n\t */\n\t\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = (function(require, exports, module) {\n\t    var OptionsManager = __webpack_require__(18);\n\t\n\t    /**\n\t     * Ordinary Differential Equation (ODE) Integrator.\n\t     * Manages updating a physics body's state over time.\n\t     *\n\t     *  p = position, v = velocity, m = mass, f = force, dt = change in time\n\t     *\n\t     *      v <- v + dt * f / m\n\t     *      p <- p + dt * v\n\t     *\n\t     *  q = orientation, w = angular velocity, L = angular momentum\n\t     *\n\t     *      L <- L + dt * t\n\t     *      q <- q + dt/2 * q * w\n\t     *\n\t     * @class SymplecticEuler\n\t     * @constructor\n\t     * @param {Object} options Options to set\n\t     */\n\t    function SymplecticEuler(options) {\n\t        this.options = Object.create(SymplecticEuler.DEFAULT_OPTIONS);\n\t        this._optionsManager = new OptionsManager(this.options);\n\t\n\t        if (options) this.setOptions(options);\n\t    }\n\t\n\t    /**\n\t     * @property SymplecticEuler.DEFAULT_OPTIONS\n\t     * @type Object\n\t     * @protected\n\t     * @static\n\t     */\n\t    SymplecticEuler.DEFAULT_OPTIONS = {\n\t\n\t        /**\n\t         * The maximum velocity of a physics body\n\t         *      Range : [0, Infinity]\n\t         * @attribute velocityCap\n\t         * @type Number\n\t         */\n\t\n\t        velocityCap : undefined,\n\t\n\t        /**\n\t         * The maximum angular velocity of a physics body\n\t         *      Range : [0, Infinity]\n\t         * @attribute angularVelocityCap\n\t         * @type Number\n\t         */\n\t        angularVelocityCap : undefined\n\t    };\n\t\n\t    /*\n\t     * Setter for options\n\t     *\n\t     * @method setOptions\n\t     * @param {Object} options\n\t     */\n\t    SymplecticEuler.prototype.setOptions = function setOptions(options) {\n\t        this._optionsManager.patch(options);\n\t    };\n\t\n\t    /*\n\t     * Getter for options\n\t     *\n\t     * @method getOptions\n\t     * @return {Object} options\n\t     */\n\t    SymplecticEuler.prototype.getOptions = function getOptions() {\n\t        return this._optionsManager.value();\n\t    };\n\t\n\t    /*\n\t     * Updates the velocity of a physics body from its accumulated force.\n\t     *      v <- v + dt * f / m\n\t     *\n\t     * @method integrateVelocity\n\t     * @param {Body} physics body\n\t     * @param {Number} dt delta time\n\t     */\n\t    SymplecticEuler.prototype.integrateVelocity = function integrateVelocity(body, dt) {\n\t        var v = body.velocity;\n\t        var w = body.inverseMass;\n\t        var f = body.force;\n\t\n\t        if (f.isZero()) return;\n\t\n\t        v.add(f.mult(dt * w)).put(v);\n\t        f.clear();\n\t    };\n\t\n\t    /*\n\t     * Updates the position of a physics body from its velocity.\n\t     *      p <- p + dt * v\n\t     *\n\t     * @method integratePosition\n\t     * @param {Body} physics body\n\t     * @param {Number} dt delta time\n\t     */\n\t    SymplecticEuler.prototype.integratePosition = function integratePosition(body, dt) {\n\t        var p = body.position;\n\t        var v = body.velocity;\n\t\n\t        if (this.options.velocityCap) v.cap(this.options.velocityCap).put(v);\n\t        p.add(v.mult(dt)).put(p);\n\t    };\n\t\n\t    /*\n\t     * Updates the angular momentum of a physics body from its accumuled torque.\n\t     *      L <- L + dt * t\n\t     *\n\t     * @method integrateAngularMomentum\n\t     * @param {Body} physics body (except a particle)\n\t     * @param {Number} dt delta time\n\t     */\n\t    SymplecticEuler.prototype.integrateAngularMomentum = function integrateAngularMomentum(body, dt) {\n\t        var L = body.angularMomentum;\n\t        var t = body.torque;\n\t\n\t        if (t.isZero()) return;\n\t\n\t        if (this.options.angularVelocityCap) t.cap(this.options.angularVelocityCap).put(t);\n\t        L.add(t.mult(dt)).put(L);\n\t        t.clear();\n\t    };\n\t\n\t    /*\n\t     * Updates the orientation of a physics body from its angular velocity.\n\t     *      q <- q + dt/2 * q * w\n\t     *\n\t     * @method integrateOrientation\n\t     * @param {Body} physics body (except a particle)\n\t     * @param {Number} dt delta time\n\t     */\n\t    SymplecticEuler.prototype.integrateOrientation = function integrateOrientation(body, dt) {\n\t        var q = body.orientation;\n\t        var w = body.angularVelocity;\n\t\n\t        if (w.isZero()) return;\n\t        q.add(q.multiply(w).scalarMultiply(0.5 * dt)).put(q);\n\t//        q.normalize.put(q);\n\t    };\n\t\n\t    module.exports = SymplecticEuler;\n\t}.call(exports, __webpack_require__, exports, module)), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 68 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;/* This Source Code Form is subject to the terms of the Mozilla Public\n\t * License, v. 2.0. If a copy of the MPL was not distributed with this\n\t * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n\t *\n\t * Owner: david@famo.us\n\t * @license MPL 2.0\n\t * @copyright Famous Industries, Inc. 2014\n\t */\n\t\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = (function(require, exports, module) {\n\t    var Utility = __webpack_require__(13);\n\t\n\t    /**\n\t     * Transition meta-method to support transitioning multiple\n\t     *   values with scalar-only methods.\n\t     *\n\t     *\n\t     * @class MultipleTransition\n\t     * @constructor\n\t     *\n\t     * @param {Object} method Transionable class to multiplex\n\t     */\n\t    function MultipleTransition(method) {\n\t        this.method = method;\n\t        this._instances = [];\n\t        this.state = [];\n\t    }\n\t\n\t    MultipleTransition.SUPPORTS_MULTIPLE = true;\n\t\n\t    /**\n\t     * Get the state of each transition.\n\t     *\n\t     * @method get\n\t     *\n\t     * @return state {Number|Array} state array\n\t     */\n\t    MultipleTransition.prototype.get = function get() {\n\t        for (var i = 0; i < this._instances.length; i++) {\n\t            this.state[i] = this._instances[i].get();\n\t        }\n\t        return this.state;\n\t    };\n\t\n\t    /**\n\t     * Set the end states with a shared transition, with optional callback.\n\t     *\n\t     * @method set\n\t     *\n\t     * @param {Number|Array} endState Final State.  Use a multi-element argument for multiple transitions.\n\t     * @param {Object} transition Transition definition, shared among all instances\n\t     * @param {Function} callback called when all endStates have been reached.\n\t     */\n\t    MultipleTransition.prototype.set = function set(endState, transition, callback) {\n\t        var _allCallback = Utility.after(endState.length, callback);\n\t        for (var i = 0; i < endState.length; i++) {\n\t            if (!this._instances[i]) this._instances[i] = new (this.method)();\n\t            this._instances[i].set(endState[i], transition, _allCallback);\n\t        }\n\t    };\n\t\n\t    /**\n\t     * Reset all transitions to start state.\n\t     *\n\t     * @method reset\n\t     *\n\t     * @param  {Number|Array} startState Start state\n\t     */\n\t    MultipleTransition.prototype.reset = function reset(startState) {\n\t        for (var i = 0; i < startState.length; i++) {\n\t            if (!this._instances[i]) this._instances[i] = new (this.method)();\n\t            this._instances[i].reset(startState[i]);\n\t        }\n\t    };\n\t\n\t    module.exports = MultipleTransition;\n\t}.call(exports, __webpack_require__, exports, module)), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 69 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;/* This Source Code Form is subject to the terms of the Mozilla Public\n\t * License, v. 2.0. If a copy of the MPL was not distributed with this\n\t * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n\t *\n\t * Owner: david@famo.us\n\t * @license MPL 2.0\n\t * @copyright Famous Industries, Inc. 2014\n\t */\n\t\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = (function(require, exports, module) {\n\t\n\t    /**\n\t     *\n\t     * A state maintainer for a smooth transition between\n\t     *    numerically-specified states.  Example numeric states include floats or\n\t     *    Transfornm objects.\n\t     *\n\t     *    An initial state is set with the constructor or set(startValue). A\n\t     *    corresponding end state and transition are set with set(endValue,\n\t     *    transition). Subsequent calls to set(endValue, transition) begin at\n\t     *    the last state. Calls to get(timestamp) provide the _interpolated state\n\t     *    along the way.\n\t     *\n\t     *   Note that there is no event loop here - calls to get() are the only way\n\t     *    to find out state projected to the current (or provided) time and are\n\t     *    the only way to trigger callbacks. Usually this kind of object would\n\t     *    be part of the render() path of a visible component.\n\t     *\n\t     * @class TweenTransition\n\t     * @constructor\n\t     *\n\t     * @param {Object} options TODO\n\t     *    beginning state\n\t     */\n\t    function TweenTransition(options) {\n\t        this.options = Object.create(TweenTransition.DEFAULT_OPTIONS);\n\t        if (options) this.setOptions(options);\n\t\n\t        this._startTime = 0;\n\t        this._startValue = 0;\n\t        this._updateTime = 0;\n\t        this._endValue = 0;\n\t        this._curve = undefined;\n\t        this._duration = 0;\n\t        this._active = false;\n\t        this._callback = undefined;\n\t        this.state = 0;\n\t        this.velocity = undefined;\n\t    }\n\t\n\t    /**\n\t     * Transition curves mapping independent variable t from domain [0,1] to a\n\t     *    range within [0,1]. Includes functions 'linear', 'easeIn', 'easeOut',\n\t     *    'easeInOut', 'easeOutBounce', 'spring'.\n\t     *\n\t     * @property {object} Curve\n\t     * @final\n\t     */\n\t    TweenTransition.Curves = {\n\t        linear: function(t) {\n\t            return t;\n\t        },\n\t        easeIn: function(t) {\n\t            return t*t;\n\t        },\n\t        easeOut: function(t) {\n\t            return t*(2-t);\n\t        },\n\t        easeInOut: function(t) {\n\t            if (t <= 0.5) return 2*t*t;\n\t            else return -2*t*t + 4*t - 1;\n\t        },\n\t        easeOutBounce: function(t) {\n\t            return t*(3 - 2*t);\n\t        },\n\t        spring: function(t) {\n\t            return (1 - t) * Math.sin(6 * Math.PI * t) + t;\n\t        }\n\t    };\n\t\n\t    TweenTransition.SUPPORTS_MULTIPLE = true;\n\t    TweenTransition.DEFAULT_OPTIONS = {\n\t        curve: TweenTransition.Curves.linear,\n\t        duration: 500,\n\t        speed: 0 /* considered only if positive */\n\t    };\n\t\n\t    var registeredCurves = {};\n\t\n\t    /**\n\t     * Add \"unit\" curve to internal dictionary of registered curves.\n\t     *\n\t     * @method registerCurve\n\t     *\n\t     * @static\n\t     *\n\t     * @param {string} curveName dictionary key\n\t     * @param {unitCurve} curve function of one numeric variable mapping [0,1]\n\t     *    to range inside [0,1]\n\t     * @return {boolean} false if key is taken, else true\n\t     */\n\t    TweenTransition.registerCurve = function registerCurve(curveName, curve) {\n\t        if (!registeredCurves[curveName]) {\n\t            registeredCurves[curveName] = curve;\n\t            return true;\n\t        }\n\t        else {\n\t            return false;\n\t        }\n\t    };\n\t\n\t    /**\n\t     * Remove object with key \"curveName\" from internal dictionary of registered\n\t     *    curves.\n\t     *\n\t     * @method unregisterCurve\n\t     *\n\t     * @static\n\t     *\n\t     * @param {string} curveName dictionary key\n\t     * @return {boolean} false if key has no dictionary value\n\t     */\n\t    TweenTransition.unregisterCurve = function unregisterCurve(curveName) {\n\t        if (registeredCurves[curveName]) {\n\t            delete registeredCurves[curveName];\n\t            return true;\n\t        }\n\t        else {\n\t            return false;\n\t        }\n\t    };\n\t\n\t    /**\n\t     * Retrieve function with key \"curveName\" from internal dictionary of\n\t     *    registered curves. Default curves are defined in the\n\t     *    TweenTransition.Curves array, where the values represent\n\t     *    unitCurve functions.\n\t     *\n\t     * @method getCurve\n\t     *\n\t     * @static\n\t     *\n\t     * @param {string} curveName dictionary key\n\t     * @return {unitCurve} curve function of one numeric variable mapping [0,1]\n\t     *    to range inside [0,1]\n\t     */\n\t    TweenTransition.getCurve = function getCurve(curveName) {\n\t        var curve = registeredCurves[curveName];\n\t        if (curve !== undefined) return curve;\n\t        else throw new Error('curve not registered');\n\t    };\n\t\n\t    /**\n\t     * Retrieve all available curves.\n\t     *\n\t     * @method getCurves\n\t     *\n\t     * @static\n\t     *\n\t     * @return {object} curve functions of one numeric variable mapping [0,1]\n\t     *    to range inside [0,1]\n\t     */\n\t    TweenTransition.getCurves = function getCurves() {\n\t        return registeredCurves;\n\t    };\n\t\n\t     // Interpolate: If a linear function f(0) = a, f(1) = b, then return f(t)\n\t    function _interpolate(a, b, t) {\n\t        return ((1 - t) * a) + (t * b);\n\t    }\n\t\n\t    function _clone(obj) {\n\t        if (obj instanceof Object) {\n\t            if (obj instanceof Array) return obj.slice(0);\n\t            else return Object.create(obj);\n\t        }\n\t        else return obj;\n\t    }\n\t\n\t    // Fill in missing properties in \"transition\" with those in defaultTransition, and\n\t    //   convert internal named curve to function object, returning as new\n\t    //   object.\n\t    function _normalize(transition, defaultTransition) {\n\t        var result = {curve: defaultTransition.curve};\n\t        if (defaultTransition.duration) result.duration = defaultTransition.duration;\n\t        if (defaultTransition.speed) result.speed = defaultTransition.speed;\n\t        if (transition instanceof Object) {\n\t            if (transition.duration !== undefined) result.duration = transition.duration;\n\t            if (transition.curve) result.curve = transition.curve;\n\t            if (transition.speed) result.speed = transition.speed;\n\t        }\n\t        if (typeof result.curve === 'string') result.curve = TweenTransition.getCurve(result.curve);\n\t        return result;\n\t    }\n\t\n\t    /**\n\t     * Set internal options, overriding any default options.\n\t     *\n\t     * @method setOptions\n\t     *\n\t     *\n\t     * @param {Object} options options object\n\t     * @param {Object} [options.curve] function mapping [0,1] to [0,1] or identifier\n\t     * @param {Number} [options.duration] duration in ms\n\t     * @param {Number} [options.speed] speed in pixels per ms\n\t     */\n\t    TweenTransition.prototype.setOptions = function setOptions(options) {\n\t        if (options.curve !== undefined) this.options.curve = options.curve;\n\t        if (options.duration !== undefined) this.options.duration = options.duration;\n\t        if (options.speed !== undefined) this.options.speed = options.speed;\n\t    };\n\t\n\t    /**\n\t     * Add transition to end state to the queue of pending transitions. Special\n\t     *    Use: calling without a transition resets the object to that state with\n\t     *    no pending actions\n\t     *\n\t     * @method set\n\t     *\n\t     *\n\t     * @param {number|FamousMatrix|Array.Number|Object.<number, number>} endValue\n\t     *    end state to which we _interpolate\n\t     * @param {transition=} transition object of type {duration: number, curve:\n\t     *    f[0,1] -> [0,1] or name}. If transition is omitted, change will be\n\t     *    instantaneous.\n\t     * @param {function()=} callback Zero-argument function to call on observed\n\t     *    completion (t=1)\n\t     */\n\t    TweenTransition.prototype.set = function set(endValue, transition, callback) {\n\t        if (!transition) {\n\t            this.reset(endValue);\n\t            if (callback) callback();\n\t            return;\n\t        }\n\t\n\t        this._startValue = _clone(this.get());\n\t        transition = _normalize(transition, this.options);\n\t        if (transition.speed) {\n\t            var startValue = this._startValue;\n\t            if (startValue instanceof Object) {\n\t                var variance = 0;\n\t                for (var i in startValue) variance += (endValue[i] - startValue[i]) * (endValue[i] - startValue[i]);\n\t                transition.duration = Math.sqrt(variance) / transition.speed;\n\t            }\n\t            else {\n\t                transition.duration = Math.abs(endValue - startValue) / transition.speed;\n\t            }\n\t        }\n\t\n\t        this._startTime = Date.now();\n\t        this._endValue = _clone(endValue);\n\t        this._startVelocity = _clone(transition.velocity);\n\t        this._duration = transition.duration;\n\t        this._curve = transition.curve;\n\t        this._active = true;\n\t        this._callback = callback;\n\t    };\n\t\n\t    /**\n\t     * Cancel all transitions and reset to a stable state\n\t     *\n\t     * @method reset\n\t     *\n\t     * @param {number|Array.Number|Object.<number, number>} startValue\n\t     *    starting state\n\t     * @param {number} startVelocity\n\t     *    starting velocity\n\t     */\n\t    TweenTransition.prototype.reset = function reset(startValue, startVelocity) {\n\t        if (this._callback) {\n\t            var callback = this._callback;\n\t            this._callback = undefined;\n\t            callback();\n\t        }\n\t        this.state = _clone(startValue);\n\t        this.velocity = _clone(startVelocity);\n\t        this._startTime = 0;\n\t        this._duration = 0;\n\t        this._updateTime = 0;\n\t        this._startValue = this.state;\n\t        this._startVelocity = this.velocity;\n\t        this._endValue = this.state;\n\t        this._active = false;\n\t    };\n\t\n\t    /**\n\t     * Get current velocity\n\t     *\n\t     * @method getVelocity\n\t     *\n\t     * @returns {Number} velocity\n\t     */\n\t    TweenTransition.prototype.getVelocity = function getVelocity() {\n\t        return this.velocity;\n\t    };\n\t\n\t    /**\n\t     * Get interpolated state of current action at provided time. If the last\n\t     *    action has completed, invoke its callback.\n\t     *\n\t     * @method get\n\t     *\n\t     *\n\t     * @param {number=} timestamp Evaluate the curve at a normalized version of this\n\t     *    time. If omitted, use current time. (Unix epoch time)\n\t     * @return {number|Object.<number|string, number>} beginning state\n\t     *    _interpolated to this point in time.\n\t     */\n\t    TweenTransition.prototype.get = function get(timestamp) {\n\t        this.update(timestamp);\n\t        return this.state;\n\t    };\n\t\n\t    function _calculateVelocity(current, start, curve, duration, t) {\n\t        var velocity;\n\t        var eps = 1e-7;\n\t        var speed = (curve(t) - curve(t - eps)) / eps;\n\t        if (current instanceof Array) {\n\t            velocity = [];\n\t            for (var i = 0; i < current.length; i++){\n\t                if (typeof current[i] === 'number')\n\t                    velocity[i] = speed * (current[i] - start[i]) / duration;\n\t                else\n\t                    velocity[i] = 0;\n\t            }\n\t\n\t        }\n\t        else velocity = speed * (current - start) / duration;\n\t        return velocity;\n\t    }\n\t\n\t    function _calculateState(start, end, t) {\n\t        var state;\n\t        if (start instanceof Array) {\n\t            state = [];\n\t            for (var i = 0; i < start.length; i++) {\n\t                if (typeof start[i] === 'number')\n\t                    state[i] = _interpolate(start[i], end[i], t);\n\t                else\n\t                    state[i] = start[i];\n\t            }\n\t        }\n\t        else state = _interpolate(start, end, t);\n\t        return state;\n\t    }\n\t\n\t    /**\n\t     * Update internal state to the provided timestamp. This may invoke the last\n\t     *    callback and begin a new action.\n\t     *\n\t     * @method update\n\t     *\n\t     *\n\t     * @param {number=} timestamp Evaluate the curve at a normalized version of this\n\t     *    time. If omitted, use current time. (Unix epoch time)\n\t     */\n\t    TweenTransition.prototype.update = function update(timestamp) {\n\t        if (!this._active) {\n\t            if (this._callback) {\n\t                var callback = this._callback;\n\t                this._callback = undefined;\n\t                callback();\n\t            }\n\t            return;\n\t        }\n\t\n\t        if (!timestamp) timestamp = Date.now();\n\t        if (this._updateTime >= timestamp) return;\n\t        this._updateTime = timestamp;\n\t\n\t        var timeSinceStart = timestamp - this._startTime;\n\t        if (timeSinceStart >= this._duration) {\n\t            this.state = this._endValue;\n\t            this.velocity = _calculateVelocity(this.state, this._startValue, this._curve, this._duration, 1);\n\t            this._active = false;\n\t        }\n\t        else if (timeSinceStart < 0) {\n\t            this.state = this._startValue;\n\t            this.velocity = this._startVelocity;\n\t        }\n\t        else {\n\t            var t = timeSinceStart / this._duration;\n\t            this.state = _calculateState(this._startValue, this._endValue, this._curve(t));\n\t            this.velocity = _calculateVelocity(this.state, this._startValue, this._curve, this._duration, t);\n\t        }\n\t    };\n\t\n\t    /**\n\t     * Is there at least one action pending completion?\n\t     *\n\t     * @method isActive\n\t     *\n\t     *\n\t     * @return {boolean}\n\t     */\n\t    TweenTransition.prototype.isActive = function isActive() {\n\t        return this._active;\n\t    };\n\t\n\t    /**\n\t     * Halt transition at current state and erase all pending actions.\n\t     *\n\t     * @method halt\n\t     *\n\t     */\n\t    TweenTransition.prototype.halt = function halt() {\n\t        this.reset(this.get());\n\t    };\n\t\n\t    // Register all the default curves\n\t    TweenTransition.registerCurve('linear', TweenTransition.Curves.linear);\n\t    TweenTransition.registerCurve('easeIn', TweenTransition.Curves.easeIn);\n\t    TweenTransition.registerCurve('easeOut', TweenTransition.Curves.easeOut);\n\t    TweenTransition.registerCurve('easeInOut', TweenTransition.Curves.easeInOut);\n\t    TweenTransition.registerCurve('easeOutBounce', TweenTransition.Curves.easeOutBounce);\n\t    TweenTransition.registerCurve('spring', TweenTransition.Curves.spring);\n\t\n\t    TweenTransition.customCurve = function customCurve(v1, v2) {\n\t        v1 = v1 || 0; v2 = v2 || 0;\n\t        return function(t) {\n\t            return v1*t + (-2*v1 - v2 + 3)*t*t + (v1 + v2 - 2)*t*t*t;\n\t        };\n\t    };\n\t\n\t    module.exports = TweenTransition;\n\t}.call(exports, __webpack_require__, exports, module)), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 70 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;/* This Source Code Form is subject to the terms of the Mozilla Public\n\t * License, v. 2.0. If a copy of the MPL was not distributed with this\n\t * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n\t *\n\t * Owner: felix@famo.us\n\t * @license MPL 2.0\n\t * @copyright Famous Industries, Inc. 2014\n\t */\n\t\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = (function(require, exports, module) {\n\t    var Entity = __webpack_require__(25);\n\t    var RenderNode = __webpack_require__(26);\n\t    var Transform = __webpack_require__(1);\n\t    var OptionsManager = __webpack_require__(18);\n\t\n\t    /**\n\t     * A layout which will arrange three renderables into a header and footer area of defined size,\n\t      and a content area of flexible size.\n\t     * @class HeaderFooterLayout\n\t     * @constructor\n\t     * @param {Options} [options] An object of configurable options.\n\t     * @param {Number} [options.direction=HeaderFooterLayout.DIRECTION_Y] A direction of HeaderFooterLayout.DIRECTION_X\n\t     * lays your HeaderFooterLayout instance horizontally, and a direction of HeaderFooterLayout.DIRECTION_Y\n\t     * lays it out vertically.\n\t     * @param {Number} [options.headerSize=undefined]  The amount of pixels allocated to the header node\n\t     * in the HeaderFooterLayout instance's direction.\n\t     * @param {Number} [options.footerSize=undefined] The amount of pixels allocated to the footer node\n\t     * in the HeaderFooterLayout instance's direction.\n\t     */\n\t    function HeaderFooterLayout(options) {\n\t        this.options = Object.create(HeaderFooterLayout.DEFAULT_OPTIONS);\n\t        this._optionsManager = new OptionsManager(this.options);\n\t        if (options) this.setOptions(options);\n\t\n\t        this._entityId = Entity.register(this);\n\t\n\t        this.header = new RenderNode();\n\t        this.footer = new RenderNode();\n\t        this.content = new RenderNode();\n\t    }\n\t\n\t    /**\n\t     *  When used as a value for your HeaderFooterLayout's direction option, causes it to lay out horizontally.\n\t     *\n\t     *  @attribute DIRECTION_X\n\t     *  @type Number\n\t     *  @static\n\t     *  @default 0\n\t     *  @protected\n\t     */\n\t    HeaderFooterLayout.DIRECTION_X = 0;\n\t\n\t    /**\n\t     *  When used as a value for your HeaderFooterLayout's direction option, causes it to lay out vertically.\n\t     *\n\t     *  @attribute DIRECTION_Y\n\t     *  @type Number\n\t     *  @static\n\t     *  @default 1\n\t     *  @protected\n\t     */\n\t    HeaderFooterLayout.DIRECTION_Y = 1;\n\t\n\t    HeaderFooterLayout.DEFAULT_OPTIONS = {\n\t        direction: HeaderFooterLayout.DIRECTION_Y,\n\t        headerSize: undefined,\n\t        footerSize: undefined,\n\t        defaultHeaderSize: 0,\n\t        defaultFooterSize: 0\n\t    };\n\t\n\t    /**\n\t     * Generate a render spec from the contents of this component.\n\t     *\n\t     * @private\n\t     * @method render\n\t     * @return {Object} Render spec for this component\n\t     */\n\t    HeaderFooterLayout.prototype.render = function render() {\n\t        return this._entityId;\n\t    };\n\t\n\t    /**\n\t     * Patches the HeaderFooterLayout instance's options with the passed-in ones.\n\t     *\n\t     * @method setOptions\n\t     * @param {Options} options An object of configurable options for the HeaderFooterLayout instance.\n\t     */\n\t    HeaderFooterLayout.prototype.setOptions = function setOptions(options) {\n\t        return this._optionsManager.setOptions(options);\n\t    };\n\t\n\t    function _resolveNodeSize(node, defaultSize) {\n\t        var nodeSize = node.getSize();\n\t        return nodeSize ? nodeSize[this.options.direction] : defaultSize;\n\t    }\n\t\n\t    function _outputTransform(offset) {\n\t        if (this.options.direction === HeaderFooterLayout.DIRECTION_X) return Transform.translate(offset, 0, 0);\n\t        else return Transform.translate(0, offset, 0);\n\t    }\n\t\n\t    function _finalSize(directionSize, size) {\n\t        if (this.options.direction === HeaderFooterLayout.DIRECTION_X) return [directionSize, size[1]];\n\t        else return [size[0], directionSize];\n\t    }\n\t\n\t    /**\n\t     * Apply changes from this component to the corresponding document element.\n\t     * This includes changes to classes, styles, size, content, opacity, origin,\n\t     * and matrix transforms.\n\t     *\n\t     * @private\n\t     * @method commit\n\t     * @param {Context} context commit context\n\t     */\n\t    HeaderFooterLayout.prototype.commit = function commit(context) {\n\t        var transform = context.transform;\n\t        var origin = context.origin;\n\t        var size = context.size;\n\t        var opacity = context.opacity;\n\t\n\t        var headerSize = (this.options.headerSize !== undefined) ? this.options.headerSize : _resolveNodeSize.call(this, this.header, this.options.defaultHeaderSize);\n\t        var footerSize = (this.options.footerSize !== undefined) ? this.options.footerSize : _resolveNodeSize.call(this, this.footer, this.options.defaultFooterSize);\n\t        var contentSize = size[this.options.direction] - headerSize - footerSize;\n\t\n\t        if (size) transform = Transform.moveThen([-size[0]*origin[0], -size[1]*origin[1], 0], transform);\n\t\n\t        var result = [\n\t            {\n\t                size: _finalSize.call(this, headerSize, size),\n\t                target: this.header.render()\n\t            },\n\t            {\n\t                transform: _outputTransform.call(this, headerSize),\n\t                size: _finalSize.call(this, contentSize, size),\n\t                target: this.content.render()\n\t            },\n\t            {\n\t                transform: _outputTransform.call(this, headerSize + contentSize),\n\t                size: _finalSize.call(this, footerSize, size),\n\t                target: this.footer.render()\n\t            }\n\t        ];\n\t\n\t        return {\n\t            transform: transform,\n\t            opacity: opacity,\n\t            size: size,\n\t            target: result\n\t        };\n\t    };\n\t\n\t    module.exports = HeaderFooterLayout;\n\t}.call(exports, __webpack_require__, exports, module)), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 71 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_RESULT__ = (function(require, exports, module) {\n\t    var Entity = __webpack_require__(25);\n\t    var Group = __webpack_require__(60);\n\t    var OptionsManager = __webpack_require__(18);\n\t    var Transform = __webpack_require__(1);\n\t    var Utility = __webpack_require__(13);\n\t    var ViewSequence = __webpack_require__(39);\n\t    var EventHandler = __webpack_require__(6);\n\t\n\t    /**\n\t     * Scroller lays out a collection of renderables, and will browse through them based on\n\t     * accessed position. Scroller also broadcasts an 'edgeHit' event, with a position property of the location of the edge,\n\t     * when you've hit the 'edges' of it's renderable collection.\n\t     * @class Scroller\n\t     * @constructor\n\t      * @event error\n\t     * @param {Options} [options] An object of configurable options.\n\t     * @param {Number} [options.direction=Utility.Direction.Y] Using the direction helper found in the famous Utility\n\t     * module, this option will lay out the Scroller instance's renderables either horizontally\n\t     * (x) or vertically (y). Utility's direction is essentially either zero (X) or one (Y), so feel free\n\t     * to just use integers as well.\n\t     * @param {Number} [clipSize=undefined] The size of the area (in pixels) that Scroller will display content in.\n\t     * @param {Number} [margin=undefined] The size of the area (in pixels) that Scroller will process renderables' associated calculations in.\n\t     */\n\t    function Scroller(options) {\n\t        this.options = Object.create(this.constructor.DEFAULT_OPTIONS);\n\t        this._optionsManager = new OptionsManager(this.options);\n\t        if (options) this._optionsManager.setOptions(options);\n\t\n\t        this._node = null;\n\t        this._position = 0;\n\t\n\t        // used for shifting nodes\n\t        this._positionOffset = 0;\n\t\n\t        this._positionGetter = null;\n\t        this._outputFunction = null;\n\t        this._masterOutputFunction = null;\n\t        this.outputFrom();\n\t\n\t        this._onEdge = 0; // -1 for top, 1 for bottom\n\t\n\t        this.group = new Group();\n\t        this.group.add({render: _innerRender.bind(this)});\n\t\n\t        this._entityId = Entity.register(this);\n\t        this._size = [undefined, undefined];\n\t        this._contextSize = [undefined, undefined];\n\t\n\t        this._eventInput = new EventHandler();\n\t        this._eventOutput = new EventHandler();\n\t\n\t        EventHandler.setInputHandler(this, this._eventInput);\n\t        EventHandler.setOutputHandler(this, this._eventOutput);\n\t    }\n\t\n\t    Scroller.DEFAULT_OPTIONS = {\n\t        direction: Utility.Direction.Y,\n\t        margin: 0,\n\t        clipSize: undefined,\n\t        groupScroll: false\n\t    };\n\t\n\t    function _sizeForDir(size) {\n\t        if (!size) size = this._contextSize;\n\t        var dimension = (this.options.direction === Utility.Direction.X) ? 0 : 1;\n\t        return (size[dimension] === undefined) ? this._contextSize[dimension] : size[dimension];\n\t    }\n\t\n\t    function _output(node, offset, target) {\n\t        var size = node.getSize ? node.getSize() : this._contextSize;\n\t        var transform = this._outputFunction(offset);\n\t        target.push({transform: transform, target: node.render()});\n\t        return _sizeForDir.call(this, size);\n\t    }\n\t\n\t    function _getClipSize() {\n\t        if (this.options.clipSize) return this.options.clipSize;\n\t        else return _sizeForDir.call(this, this._contextSize);\n\t    }\n\t\n\t    /**\n\t     * Patches the Scroller instance's options with the passed-in ones.\n\t     * @method setOptions\n\t     * @param {Options} options An object of configurable options for the Scroller instance.\n\t     */\n\t    Scroller.prototype.setOptions = function setOptions(options) {\n\t        this._optionsManager.setOptions(options);\n\t\n\t        if (this.options.groupScroll) {\n\t          this.group.pipe(this._eventOutput);\n\t        }\n\t        else {\n\t          this.group.unpipe(this._eventOutput);\n\t        }\n\t    };\n\t\n\t    /**\n\t     * Tells you if the Scroller instance is on an edge.\n\t     * @method onEdge\n\t     * @return {Boolean} Whether the Scroller instance is on an edge or not.\n\t     */\n\t    Scroller.prototype.onEdge = function onEdge() {\n\t        return this._onEdge;\n\t    };\n\t\n\t    /**\n\t     * Allows you to overwrite the way Scroller lays out it's renderables. Scroller will\n\t     * pass an offset into the function. By default the Scroller instance just translates each node\n\t     * in it's direction by the passed-in offset.\n\t     * Scroller will translate each renderable down\n\t     * @method outputFrom\n\t     * @param {Function} fn A function that takes an offset and returns a transform.\n\t     * @param {Function} [masterFn]\n\t     */\n\t    Scroller.prototype.outputFrom = function outputFrom(fn, masterFn) {\n\t        if (!fn) {\n\t            fn = function(offset) {\n\t                return (this.options.direction === Utility.Direction.X) ? Transform.translate(offset, 0) : Transform.translate(0, offset);\n\t            }.bind(this);\n\t            if (!masterFn) masterFn = fn;\n\t        }\n\t        this._outputFunction = fn;\n\t        this._masterOutputFunction = masterFn ? masterFn : function(offset) {\n\t            return Transform.inverse(fn(-offset));\n\t        };\n\t    };\n\t\n\t    /**\n\t     * The Scroller instance's method for reading from an external position. Scroller uses\n\t     * the external position to actually scroll through it's renderables.\n\t     * @method positionFrom\n\t     * @param {Getter} position Can be either a function that returns a position,\n\t     * or an object with a get method that returns a position.\n\t     */\n\t    Scroller.prototype.positionFrom = function positionFrom(position) {\n\t        if (position instanceof Function) this._positionGetter = position;\n\t        else if (position && position.get) this._positionGetter = position.get.bind(position);\n\t        else {\n\t            this._positionGetter = null;\n\t            this._position = position;\n\t        }\n\t        if (this._positionGetter) this._position = this._positionGetter.call(this);\n\t    };\n\t\n\t    /**\n\t     * Sets the collection of renderables under the Scroller instance's control.\n\t     *\n\t     * @method sequenceFrom\n\t     * @param {Array|ViewSequence} items Either an array of renderables or a Famous viewSequence.\n\t     * @chainable\n\t     */\n\t    Scroller.prototype.sequenceFrom = function sequenceFrom(node) {\n\t        if (node instanceof Array) node = new ViewSequence({array: node});\n\t        this._node = node;\n\t        this._positionOffset = 0;\n\t    };\n\t\n\t    /**\n\t     * Returns the width and the height of the Scroller instance.\n\t     *\n\t     * @method getSize\n\t     * @return {Array} A two value array of the Scroller instance's current width and height (in that order).\n\t     */\n\t    Scroller.prototype.getSize = function getSize(actual) {\n\t        return actual ? this._contextSize : this._size;\n\t    };\n\t\n\t    /**\n\t     * Generate a render spec from the contents of this component.\n\t     *\n\t     * @private\n\t     * @method render\n\t     * @return {number} Render spec for this component\n\t     */\n\t    Scroller.prototype.render = function render() {\n\t        if (!this._node) return null;\n\t        if (this._positionGetter) this._position = this._positionGetter.call(this);\n\t        return this._entityId;\n\t    };\n\t\n\t    /**\n\t     * Apply changes from this component to the corresponding document element.\n\t     * This includes changes to classes, styles, size, content, opacity, origin,\n\t     * and matrix transforms.\n\t     *\n\t     * @private\n\t     * @method commit\n\t     * @param {Context} context commit context\n\t     */\n\t    Scroller.prototype.commit = function commit(context) {\n\t        var transform = context.transform;\n\t        var opacity = context.opacity;\n\t        var origin = context.origin;\n\t        var size = context.size;\n\t\n\t        // reset edge detection on size change\n\t        if (!this.options.clipSize && (size[0] !== this._contextSize[0] || size[1] !== this._contextSize[1])) {\n\t            this._onEdge = 0;\n\t            this._contextSize[0] = size[0];\n\t            this._contextSize[1] = size[1];\n\t\n\t            if (this.options.direction === Utility.Direction.X) {\n\t                this._size[0] = _getClipSize.call(this);\n\t                this._size[1] = undefined;\n\t            }\n\t            else {\n\t                this._size[0] = undefined;\n\t                this._size[1] = _getClipSize.call(this);\n\t            }\n\t        }\n\t\n\t        var scrollTransform = this._masterOutputFunction(-this._position);\n\t\n\t        return {\n\t            transform: Transform.multiply(transform, scrollTransform),\n\t            opacity: opacity,\n\t            origin: origin,\n\t            target: this.group.render()\n\t        };\n\t    };\n\t\n\t    function _normalizeState() {\n\t        var nodeSize = _sizeForDir.call(this, this._node.getSize());\n\t        var nextNode = this._node && this._node.getNext ? this._node.getNext() : null;\n\t        while (nextNode && this._position + this._positionOffset >= nodeSize) {\n\t            this._positionOffset -= nodeSize;\n\t            this._node = nextNode;\n\t            nodeSize = _sizeForDir.call(this, this._node.getSize());\n\t            nextNode = this._node && this._node.getNext ? this._node.getNext() : null;\n\t        }\n\t        var prevNode = this._node && this._node.getPrevious ? this._node.getPrevious() : null;\n\t        while (prevNode && this._position + this._positionOffset < 0) {\n\t            var prevNodeSize = _sizeForDir.call(this, prevNode.getSize());\n\t            this._positionOffset += prevNodeSize;\n\t            this._node = prevNode;\n\t            prevNode = this._node && this._node.getPrevious ? this._node.getPrevious() : null;\n\t        }\n\t    }\n\t\n\t    function _innerRender() {\n\t        var size = null;\n\t        var position = this._position;\n\t        var result = [];\n\t\n\t        this._onEdge = 0;\n\t\n\t        var offset = -this._positionOffset;\n\t        var clipSize = _getClipSize.call(this);\n\t        var currNode = this._node;\n\t        while (currNode && offset - position < clipSize + this.options.margin) {\n\t            offset += _output.call(this, currNode, offset, result);\n\t            currNode = currNode.getNext ? currNode.getNext() : null;\n\t        }\n\t\n\t        var sizeNode = this._node;\n\t        var nodesSize = _sizeForDir.call(this, sizeNode.getSize());\n\t        if (offset < clipSize) {\n\t            while (sizeNode && nodesSize < clipSize) {\n\t                sizeNode = sizeNode.getPrevious();\n\t                if (sizeNode) nodesSize += _sizeForDir.call(this, sizeNode.getSize());\n\t            }\n\t            sizeNode = this._node;\n\t            while (sizeNode && nodesSize < clipSize) {\n\t                sizeNode = sizeNode.getNext();\n\t                if (sizeNode) nodesSize += _sizeForDir.call(this, sizeNode.getSize());\n\t            }\n\t        }\n\t\n\t        var edgeSize = (nodesSize !== undefined && nodesSize < clipSize) ? nodesSize : clipSize;\n\t\n\t        if (!currNode && offset - position <= edgeSize) {\n\t            this._onEdge = 1;\n\t            this._eventOutput.emit('edgeHit', {\n\t                position: offset - edgeSize\n\t            });\n\t        }\n\t        else if (!this._node.getPrevious() && position <= 0) {\n\t            this._onEdge = -1;\n\t            this._eventOutput.emit('edgeHit', {\n\t                position: 0\n\t            });\n\t        }\n\t\n\t        // backwards\n\t        currNode = (this._node && this._node.getPrevious) ? this._node.getPrevious() : null;\n\t        offset = -this._positionOffset;\n\t        if (currNode) {\n\t            size = currNode.getSize ? currNode.getSize() : this._contextSize;\n\t            offset -= _sizeForDir.call(this, size);\n\t        }\n\t\n\t        while (currNode && ((offset - position) > -(_getClipSize.call(this) + this.options.margin))) {\n\t            _output.call(this, currNode, offset, result);\n\t            currNode = currNode.getPrevious ? currNode.getPrevious() : null;\n\t            if (currNode) {\n\t                size = currNode.getSize ? currNode.getSize() : this._contextSize;\n\t                offset -= _sizeForDir.call(this, size);\n\t            }\n\t        }\n\t\n\t        _normalizeState.call(this);\n\t        return result;\n\t    }\n\t\n\t    module.exports = Scroller;\n\t}.call(exports, __webpack_require__, exports, module)), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 72 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright (c) 2014 Petka Antonov\n\t * \n\t * Permission is hereby granted, free of charge, to any person obtaining a copy\n\t * of this software and associated documentation files (the \"Software\"), to deal\n\t * in the Software without restriction, including without limitation the rights\n\t * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\t * copies of the Software, and to permit persons to whom the Software is\n\t * furnished to do so, subject to the following conditions:</p>\n\t * \n\t * The above copyright notice and this permission notice shall be included in\n\t * all copies or substantial portions of the Software.\n\t * \n\t * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\t * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\t * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE\n\t * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\t * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\t * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n\t * THE SOFTWARE.\n\t * \n\t */\n\t\"use strict\";\n\tmodule.exports = function(Promise, Promise$_CreatePromiseArray, PromiseArray) {\n\t\n\tvar SomePromiseArray = __webpack_require__(47)(PromiseArray);\n\tfunction Promise$_Any(promises, useBound) {\n\t    var ret = Promise$_CreatePromiseArray(\n\t        promises,\n\t        SomePromiseArray,\n\t        useBound === true && promises._isBound()\n\t            ? promises._boundTo\n\t            : void 0\n\t   );\n\t    var promise = ret.promise();\n\t    if (promise.isRejected()) {\n\t        return promise;\n\t    }\n\t    ret.setHowMany(1);\n\t    ret.setUnwrap();\n\t    ret.init();\n\t    return promise;\n\t}\n\t\n\tPromise.any = function Promise$Any(promises) {\n\t    return Promise$_Any(promises, false);\n\t};\n\t\n\tPromise.prototype.any = function Promise$any() {\n\t    return Promise$_Any(this, true);\n\t};\n\t\n\t};\n\n\n/***/ },\n/* 73 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright (c) 2014 Petka Antonov\n\t * \n\t * Permission is hereby granted, free of charge, to any person obtaining a copy\n\t * of this software and associated documentation files (the \"Software\"), to deal\n\t * in the Software without restriction, including without limitation the rights\n\t * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\t * copies of the Software, and to permit persons to whom the Software is\n\t * furnished to do so, subject to the following conditions:</p>\n\t * \n\t * The above copyright notice and this permission notice shall be included in\n\t * all copies or substantial portions of the Software.\n\t * \n\t * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\t * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\t * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE\n\t * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\t * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\t * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n\t * THE SOFTWARE.\n\t * \n\t */\n\t\"use strict\";\n\tvar Promise = __webpack_require__(85)();\n\tmodule.exports = Promise;\n\n/***/ },\n/* 74 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright (c) 2014 Petka Antonov\n\t * \n\t * Permission is hereby granted, free of charge, to any person obtaining a copy\n\t * of this software and associated documentation files (the \"Software\"), to deal\n\t * in the Software without restriction, including without limitation the rights\n\t * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\t * copies of the Software, and to permit persons to whom the Software is\n\t * furnished to do so, subject to the following conditions:</p>\n\t * \n\t * The above copyright notice and this permission notice shall be included in\n\t * all copies or substantial portions of the Software.\n\t * \n\t * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\t * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\t * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE\n\t * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\t * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\t * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n\t * THE SOFTWARE.\n\t * \n\t */\n\t\"use strict\";\n\tmodule.exports = function(Promise) {\n\tPromise.prototype.call = function Promise$call(propertyName) {\n\t    var $_len = arguments.length;var args = new Array($_len - 1); for(var $_i = 1; $_i < $_len; ++$_i) {args[$_i - 1] = arguments[$_i];}\n\t\n\t    return this._then(function(obj) {\n\t            return obj[propertyName].apply(obj, args);\n\t        },\n\t        void 0,\n\t        void 0,\n\t        void 0,\n\t        void 0\n\t   );\n\t};\n\t\n\tfunction Promise$getter(obj) {\n\t    var prop = typeof this === \"string\"\n\t        ? this\n\t        : (\"\" + this);\n\t    return obj[prop];\n\t}\n\tPromise.prototype.get = function Promise$get(propertyName) {\n\t    return this._then(\n\t        Promise$getter,\n\t        void 0,\n\t        void 0,\n\t        propertyName,\n\t        void 0\n\t   );\n\t};\n\t};\n\n\n/***/ },\n/* 75 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright (c) 2014 Petka Antonov\n\t * \n\t * Permission is hereby granted, free of charge, to any person obtaining a copy\n\t * of this software and associated documentation files (the \"Software\"), to deal\n\t * in the Software without restriction, including without limitation the rights\n\t * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\t * copies of the Software, and to permit persons to whom the Software is\n\t * furnished to do so, subject to the following conditions:</p>\n\t * \n\t * The above copyright notice and this permission notice shall be included in\n\t * all copies or substantial portions of the Software.\n\t * \n\t * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\t * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\t * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE\n\t * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\t * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\t * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n\t * THE SOFTWARE.\n\t * \n\t */\n\t\"use strict\";\n\tmodule.exports = function(Promise, INTERNAL) {\n\tvar errors = __webpack_require__(8);\n\tvar async = __webpack_require__(20);\n\tvar CancellationError = errors.CancellationError;\n\t\n\tPromise.prototype._cancel = function Promise$_cancel() {\n\t    if (!this.isCancellable()) return this;\n\t    var parent;\n\t    var promiseToReject = this;\n\t    while ((parent = promiseToReject._cancellationParent) !== void 0 &&\n\t        parent.isCancellable()) {\n\t        promiseToReject = parent;\n\t    }\n\t    var err = new CancellationError();\n\t    promiseToReject._attachExtraTrace(err);\n\t    promiseToReject._rejectUnchecked(err);\n\t};\n\t\n\tPromise.prototype.cancel = function Promise$cancel() {\n\t    if (!this.isCancellable()) return this;\n\t    async.invokeLater(this._cancel, this, void 0);\n\t    return this;\n\t};\n\t\n\tPromise.prototype.cancellable = function Promise$cancellable() {\n\t    if (this._cancellable()) return this;\n\t    this._setCancellable();\n\t    this._cancellationParent = void 0;\n\t    return this;\n\t};\n\t\n\tPromise.prototype.uncancellable = function Promise$uncancellable() {\n\t    var ret = new Promise(INTERNAL);\n\t    ret._setTrace(this);\n\t    ret._follow(this);\n\t    ret._unsetCancellable();\n\t    if (this._isBound()) ret._setBoundTo(this._boundTo);\n\t    return ret;\n\t};\n\t\n\tPromise.prototype.fork =\n\tfunction Promise$fork(didFulfill, didReject, didProgress) {\n\t    var ret = this._then(didFulfill, didReject, didProgress,\n\t                         void 0, void 0);\n\t\n\t    ret._setCancellable();\n\t    ret._cancellationParent = void 0;\n\t    return ret;\n\t};\n\t};\n\n\n/***/ },\n/* 76 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright (c) 2014 Petka Antonov\n\t * \n\t * Permission is hereby granted, free of charge, to any person obtaining a copy\n\t * of this software and associated documentation files (the \"Software\"), to deal\n\t * in the Software without restriction, including without limitation the rights\n\t * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\t * copies of the Software, and to permit persons to whom the Software is\n\t * furnished to do so, subject to the following conditions:</p>\n\t * \n\t * The above copyright notice and this permission notice shall be included in\n\t * all copies or substantial portions of the Software.\n\t * \n\t * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\t * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\t * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE\n\t * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\t * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\t * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n\t * THE SOFTWARE.\n\t * \n\t */\n\t\"use strict\";\n\tmodule.exports = function() {\n\tvar inherits = __webpack_require__(2).inherits;\n\tvar defineProperty = __webpack_require__(19).defineProperty;\n\t\n\tvar rignore = new RegExp(\n\t    \"\\\\b(?:[a-zA-Z0-9.]+\\\\$_\\\\w+|\" +\n\t    \"tryCatch(?:1|2|Apply)|new \\\\w*PromiseArray|\" +\n\t    \"\\\\w*PromiseArray\\\\.\\\\w*PromiseArray|\" +\n\t    \"setTimeout|CatchFilter\\\\$_\\\\w+|makeNodePromisified|processImmediate|\" +\n\t    \"process._tickCallback|nextTick|Async\\\\$\\\\w+)\\\\b\"\n\t);\n\t\n\tvar rtraceline = null;\n\tvar formatStack = null;\n\t\n\tfunction formatNonError(obj) {\n\t    var str;\n\t    if (typeof obj === \"function\") {\n\t        str = \"[function \" +\n\t            (obj.name || \"anonymous\") +\n\t            \"]\";\n\t    }\n\t    else {\n\t        str = obj.toString();\n\t        var ruselessToString = /\\[object [a-zA-Z0-9$_]+\\]/;\n\t        if (ruselessToString.test(str)) {\n\t            try {\n\t                var newStr = JSON.stringify(obj);\n\t                str = newStr;\n\t            }\n\t            catch(e) {\n\t\n\t            }\n\t        }\n\t        if (str.length === 0) {\n\t            str = \"(empty array)\";\n\t        }\n\t    }\n\t    return (\"(<\" + snip(str) + \">, no stack trace)\");\n\t}\n\t\n\tfunction snip(str) {\n\t    var maxChars = 41;\n\t    if (str.length < maxChars) {\n\t        return str;\n\t    }\n\t    return str.substr(0, maxChars - 3) + \"...\";\n\t}\n\t\n\tfunction CapturedTrace(ignoreUntil, isTopLevel) {\n\t    this.captureStackTrace(CapturedTrace, isTopLevel);\n\t\n\t}\n\tinherits(CapturedTrace, Error);\n\t\n\tCapturedTrace.prototype.captureStackTrace =\n\tfunction CapturedTrace$captureStackTrace(ignoreUntil, isTopLevel) {\n\t    captureStackTrace(this, ignoreUntil, isTopLevel);\n\t};\n\t\n\tCapturedTrace.possiblyUnhandledRejection =\n\tfunction CapturedTrace$PossiblyUnhandledRejection(reason) {\n\t    if (typeof console === \"object\") {\n\t        var message;\n\t        if (typeof reason === \"object\" || typeof reason === \"function\") {\n\t            var stack = reason.stack;\n\t            message = \"Possibly unhandled \" + formatStack(stack, reason);\n\t        }\n\t        else {\n\t            message = \"Possibly unhandled \" + String(reason);\n\t        }\n\t        if (typeof console.error === \"function\" ||\n\t            typeof console.error === \"object\") {\n\t            console.error(message);\n\t        }\n\t        else if (typeof console.log === \"function\" ||\n\t            typeof console.log === \"object\") {\n\t            console.log(message);\n\t        }\n\t    }\n\t};\n\t\n\tCapturedTrace.combine = function CapturedTrace$Combine(current, prev) {\n\t    var curLast = current.length - 1;\n\t    for (var i = prev.length - 1; i >= 0; --i) {\n\t        var line = prev[i];\n\t        if (current[curLast] === line) {\n\t            current.pop();\n\t            curLast--;\n\t        }\n\t        else {\n\t            break;\n\t        }\n\t    }\n\t\n\t    current.push(\"From previous event:\");\n\t    var lines = current.concat(prev);\n\t\n\t    var ret = [];\n\t\n\t    for (var i = 0, len = lines.length; i < len; ++i) {\n\t\n\t        if ((rignore.test(lines[i]) ||\n\t            (i > 0 && !rtraceline.test(lines[i])) &&\n\t            lines[i] !== \"From previous event:\")\n\t       ) {\n\t            continue;\n\t        }\n\t        ret.push(lines[i]);\n\t    }\n\t    return ret;\n\t};\n\t\n\tCapturedTrace.isSupported = function CapturedTrace$IsSupported() {\n\t    return typeof captureStackTrace === \"function\";\n\t};\n\t\n\tvar captureStackTrace = (function stackDetection() {\n\t    if (typeof Error.stackTraceLimit === \"number\" &&\n\t        typeof Error.captureStackTrace === \"function\") {\n\t        rtraceline = /^\\s*at\\s*/;\n\t        formatStack = function(stack, error) {\n\t            if (typeof stack === \"string\") return stack;\n\t\n\t            if (error.name !== void 0 &&\n\t                error.message !== void 0) {\n\t                return error.name + \". \" + error.message;\n\t            }\n\t            return formatNonError(error);\n\t\n\t\n\t        };\n\t        var captureStackTrace = Error.captureStackTrace;\n\t        return function CapturedTrace$_captureStackTrace(\n\t            receiver, ignoreUntil) {\n\t            captureStackTrace(receiver, ignoreUntil);\n\t        };\n\t    }\n\t    var err = new Error();\n\t\n\t    if (typeof err.stack === \"string\" &&\n\t        typeof \"\".startsWith === \"function\" &&\n\t        (err.stack.startsWith(\"stackDetection@\")) &&\n\t        stackDetection.name === \"stackDetection\") {\n\t\n\t        defineProperty(Error, \"stackTraceLimit\", {\n\t            writable: true,\n\t            enumerable: false,\n\t            configurable: false,\n\t            value: 25\n\t        });\n\t        rtraceline = /@/;\n\t        var rline = /[@\\n]/;\n\t\n\t        formatStack = function(stack, error) {\n\t            if (typeof stack === \"string\") {\n\t                return (error.name + \". \" + error.message + \"\\n\" + stack);\n\t            }\n\t\n\t            if (error.name !== void 0 &&\n\t                error.message !== void 0) {\n\t                return error.name + \". \" + error.message;\n\t            }\n\t            return formatNonError(error);\n\t        };\n\t\n\t        return function captureStackTrace(o) {\n\t            var stack = new Error().stack;\n\t            var split = stack.split(rline);\n\t            var len = split.length;\n\t            var ret = \"\";\n\t            for (var i = 0; i < len; i += 2) {\n\t                ret += split[i];\n\t                ret += \"@\";\n\t                ret += split[i + 1];\n\t                ret += \"\\n\";\n\t            }\n\t            o.stack = ret;\n\t        };\n\t    }\n\t    else {\n\t        formatStack = function(stack, error) {\n\t            if (typeof stack === \"string\") return stack;\n\t\n\t            if ((typeof error === \"object\" ||\n\t                typeof error === \"function\") &&\n\t                error.name !== void 0 &&\n\t                error.message !== void 0) {\n\t                return error.name + \". \" + error.message;\n\t            }\n\t            return formatNonError(error);\n\t        };\n\t\n\t        return null;\n\t    }\n\t})();\n\t\n\treturn CapturedTrace;\n\t};\n\n\n/***/ },\n/* 77 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright (c) 2014 Petka Antonov\n\t * \n\t * Permission is hereby granted, free of charge, to any person obtaining a copy\n\t * of this software and associated documentation files (the \"Software\"), to deal\n\t * in the Software without restriction, including without limitation the rights\n\t * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\t * copies of the Software, and to permit persons to whom the Software is\n\t * furnished to do so, subject to the following conditions:</p>\n\t * \n\t * The above copyright notice and this permission notice shall be included in\n\t * all copies or substantial portions of the Software.\n\t * \n\t * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\t * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\t * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE\n\t * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\t * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\t * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n\t * THE SOFTWARE.\n\t * \n\t */\n\t\"use strict\";\n\tmodule.exports = function(NEXT_FILTER) {\n\tvar util = __webpack_require__(2);\n\tvar errors = __webpack_require__(8);\n\tvar tryCatch1 = util.tryCatch1;\n\tvar errorObj = util.errorObj;\n\tvar keys = __webpack_require__(19).keys;\n\tvar TypeError = errors.TypeError;\n\t\n\tfunction CatchFilter(instances, callback, promise) {\n\t    this._instances = instances;\n\t    this._callback = callback;\n\t    this._promise = promise;\n\t}\n\t\n\tfunction CatchFilter$_safePredicate(predicate, e) {\n\t    var safeObject = {};\n\t    var retfilter = tryCatch1(predicate, safeObject, e);\n\t\n\t    if (retfilter === errorObj) return retfilter;\n\t\n\t    var safeKeys = keys(safeObject);\n\t    if (safeKeys.length) {\n\t        errorObj.e = new TypeError(\n\t            \"Catch filter must inherit from Error \"\n\t          + \"or be a simple predicate function\");\n\t        return errorObj;\n\t    }\n\t    return retfilter;\n\t}\n\t\n\tCatchFilter.prototype.doFilter = function CatchFilter$_doFilter(e) {\n\t    var cb = this._callback;\n\t    var promise = this._promise;\n\t    var boundTo = promise._isBound() ? promise._boundTo : void 0;\n\t    for (var i = 0, len = this._instances.length; i < len; ++i) {\n\t        var item = this._instances[i];\n\t        var itemIsErrorType = item === Error ||\n\t            (item != null && item.prototype instanceof Error);\n\t\n\t        if (itemIsErrorType && e instanceof item) {\n\t            var ret = tryCatch1(cb, boundTo, e);\n\t            if (ret === errorObj) {\n\t                NEXT_FILTER.e = ret.e;\n\t                return NEXT_FILTER;\n\t            }\n\t            return ret;\n\t        } else if (typeof item === \"function\" && !itemIsErrorType) {\n\t            var shouldHandle = CatchFilter$_safePredicate(item, e);\n\t            if (shouldHandle === errorObj) {\n\t                var trace = errors.canAttach(errorObj.e)\n\t                    ? errorObj.e\n\t                    : new Error(errorObj.e + \"\");\n\t                this._promise._attachExtraTrace(trace);\n\t                e = errorObj.e;\n\t                break;\n\t            } else if (shouldHandle) {\n\t                var ret = tryCatch1(cb, boundTo, e);\n\t                if (ret === errorObj) {\n\t                    NEXT_FILTER.e = ret.e;\n\t                    return NEXT_FILTER;\n\t                }\n\t                return ret;\n\t            }\n\t        }\n\t    }\n\t    NEXT_FILTER.e = e;\n\t    return NEXT_FILTER;\n\t};\n\t\n\treturn CatchFilter;\n\t};\n\n\n/***/ },\n/* 78 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright (c) 2014 Petka Antonov\n\t * \n\t * Permission is hereby granted, free of charge, to any person obtaining a copy\n\t * of this software and associated documentation files (the \"Software\"), to deal\n\t * in the Software without restriction, including without limitation the rights\n\t * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\t * copies of the Software, and to permit persons to whom the Software is\n\t * furnished to do so, subject to the following conditions:</p>\n\t * \n\t * The above copyright notice and this permission notice shall be included in\n\t * all copies or substantial portions of the Software.\n\t * \n\t * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\t * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\t * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE\n\t * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\t * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\t * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n\t * THE SOFTWARE.\n\t * \n\t */\n\t\"use strict\";\n\tvar util = __webpack_require__(2);\n\tvar isPrimitive = util.isPrimitive;\n\tvar wrapsPrimitiveReceiver = util.wrapsPrimitiveReceiver;\n\t\n\tmodule.exports = function(Promise) {\n\tvar returner = function Promise$_returner() {\n\t    return this;\n\t};\n\tvar thrower = function Promise$_thrower() {\n\t    throw this;\n\t};\n\t\n\tvar wrapper = function Promise$_wrapper(value, action) {\n\t    if (action === 1) {\n\t        return function Promise$_thrower() {\n\t            throw value;\n\t        };\n\t    }\n\t    else if (action === 2) {\n\t        return function Promise$_returner() {\n\t            return value;\n\t        };\n\t    }\n\t};\n\t\n\t\n\tPromise.prototype[\"return\"] =\n\tPromise.prototype.thenReturn =\n\tfunction Promise$thenReturn(value) {\n\t    if (wrapsPrimitiveReceiver && isPrimitive(value)) {\n\t        return this._then(\n\t            wrapper(value, 2),\n\t            void 0,\n\t            void 0,\n\t            void 0,\n\t            void 0\n\t       );\n\t    }\n\t    return this._then(returner, void 0, void 0, value, void 0);\n\t};\n\t\n\tPromise.prototype[\"throw\"] =\n\tPromise.prototype.thenThrow =\n\tfunction Promise$thenThrow(reason) {\n\t    if (wrapsPrimitiveReceiver && isPrimitive(reason)) {\n\t        return this._then(\n\t            wrapper(reason, 1),\n\t            void 0,\n\t            void 0,\n\t            void 0,\n\t            void 0\n\t       );\n\t    }\n\t    return this._then(thrower, void 0, void 0, reason, void 0);\n\t};\n\t};\n\n\n/***/ },\n/* 79 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright (c) 2014 Petka Antonov\n\t * \n\t * Permission is hereby granted, free of charge, to any person obtaining a copy\n\t * of this software and associated documentation files (the \"Software\"), to deal\n\t * in the Software without restriction, including without limitation the rights\n\t * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\t * copies of the Software, and to permit persons to whom the Software is\n\t * furnished to do so, subject to the following conditions:</p>\n\t * \n\t * The above copyright notice and this permission notice shall be included in\n\t * all copies or substantial portions of the Software.\n\t * \n\t * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\t * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\t * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE\n\t * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\t * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\t * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n\t * THE SOFTWARE.\n\t * \n\t */\n\t\"use strict\";\n\tmodule.exports = function(Promise) {\n\tvar isArray = __webpack_require__(2).isArray;\n\t\n\tfunction Promise$_filter(booleans) {\n\t    var values = this instanceof Promise ? this._settledValue : this;\n\t    var len = values.length;\n\t    var ret = new Array(len);\n\t    var j = 0;\n\t\n\t    for (var i = 0; i < len; ++i) {\n\t        if (booleans[i]) ret[j++] = values[i];\n\t\n\t    }\n\t    ret.length = j;\n\t    return ret;\n\t}\n\t\n\tvar ref = {ref: null};\n\tPromise.filter = function Promise$Filter(promises, fn) {\n\t    return Promise.map(promises, fn, ref)\n\t                  ._then(Promise$_filter, void 0, void 0, ref.ref, void 0);\n\t};\n\t\n\tPromise.prototype.filter = function Promise$filter(fn) {\n\t    return this.map(fn, ref)\n\t               ._then(Promise$_filter, void 0, void 0, ref.ref, void 0);\n\t};\n\t};\n\n\n/***/ },\n/* 80 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright (c) 2014 Petka Antonov\n\t * \n\t * Permission is hereby granted, free of charge, to any person obtaining a copy\n\t * of this software and associated documentation files (the \"Software\"), to deal\n\t * in the Software without restriction, including without limitation the rights\n\t * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\t * copies of the Software, and to permit persons to whom the Software is\n\t * furnished to do so, subject to the following conditions:</p>\n\t * \n\t * The above copyright notice and this permission notice shall be included in\n\t * all copies or substantial portions of the Software.\n\t * \n\t * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\t * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\t * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE\n\t * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\t * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\t * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n\t * THE SOFTWARE.\n\t * \n\t */\n\t\"use strict\";\n\tmodule.exports = function(Promise, NEXT_FILTER) {\n\tvar util = __webpack_require__(2);\n\tvar wrapsPrimitiveReceiver = util.wrapsPrimitiveReceiver;\n\tvar isPrimitive = util.isPrimitive;\n\tvar thrower = util.thrower;\n\t\n\t\n\tfunction returnThis() {\n\t    return this;\n\t}\n\tfunction throwThis() {\n\t    throw this;\n\t}\n\tfunction return$(r) {\n\t    return function Promise$_returner() {\n\t        return r;\n\t    };\n\t}\n\tfunction throw$(r) {\n\t    return function Promise$_thrower() {\n\t        throw r;\n\t    };\n\t}\n\tfunction promisedFinally(ret, reasonOrValue, isFulfilled) {\n\t    var then;\n\t    if (wrapsPrimitiveReceiver && isPrimitive(reasonOrValue)) {\n\t        then = isFulfilled ? return$(reasonOrValue) : throw$(reasonOrValue);\n\t    }\n\t    else {\n\t        then = isFulfilled ? returnThis : throwThis;\n\t    }\n\t    return ret._then(then, thrower, void 0, reasonOrValue, void 0);\n\t}\n\t\n\tfunction finallyHandler(reasonOrValue) {\n\t    var promise = this.promise;\n\t    var handler = this.handler;\n\t\n\t    var ret = promise._isBound()\n\t                    ? handler.call(promise._boundTo)\n\t                    : handler();\n\t\n\t    if (ret !== void 0) {\n\t        var maybePromise = Promise._cast(ret, void 0);\n\t        if (maybePromise instanceof Promise) {\n\t            return promisedFinally(maybePromise, reasonOrValue,\n\t                                    promise.isFulfilled());\n\t        }\n\t    }\n\t\n\t    if (promise.isRejected()) {\n\t        NEXT_FILTER.e = reasonOrValue;\n\t        return NEXT_FILTER;\n\t    }\n\t    else {\n\t        return reasonOrValue;\n\t    }\n\t}\n\t\n\tfunction tapHandler(value) {\n\t    var promise = this.promise;\n\t    var handler = this.handler;\n\t\n\t    var ret = promise._isBound()\n\t                    ? handler.call(promise._boundTo, value)\n\t                    : handler(value);\n\t\n\t    if (ret !== void 0) {\n\t        var maybePromise = Promise._cast(ret, void 0);\n\t        if (maybePromise instanceof Promise) {\n\t            return promisedFinally(maybePromise, value, true);\n\t        }\n\t    }\n\t    return value;\n\t}\n\t\n\tPromise.prototype._passThroughHandler =\n\tfunction Promise$_passThroughHandler(handler, isFinally) {\n\t    if (typeof handler !== \"function\") return this.then();\n\t\n\t    var promiseAndHandler = {\n\t        promise: this,\n\t        handler: handler\n\t    };\n\t\n\t    return this._then(\n\t            isFinally ? finallyHandler : tapHandler,\n\t            isFinally ? finallyHandler : void 0, void 0,\n\t            promiseAndHandler, void 0);\n\t};\n\t\n\tPromise.prototype.lastly =\n\tPromise.prototype[\"finally\"] = function Promise$finally(handler) {\n\t    return this._passThroughHandler(handler, true);\n\t};\n\t\n\tPromise.prototype.tap = function Promise$tap(handler) {\n\t    return this._passThroughHandler(handler, false);\n\t};\n\t};\n\n\n/***/ },\n/* 81 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright (c) 2014 Petka Antonov\n\t * \n\t * Permission is hereby granted, free of charge, to any person obtaining a copy\n\t * of this software and associated documentation files (the \"Software\"), to deal\n\t * in the Software without restriction, including without limitation the rights\n\t * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\t * copies of the Software, and to permit persons to whom the Software is\n\t * furnished to do so, subject to the following conditions:</p>\n\t * \n\t * The above copyright notice and this permission notice shall be included in\n\t * all copies or substantial portions of the Software.\n\t * \n\t * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\t * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\t * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE\n\t * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\t * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\t * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n\t * THE SOFTWARE.\n\t * \n\t */\n\t\"use strict\";\n\tmodule.exports = function(Promise, apiRejection, INTERNAL) {\n\tvar PromiseSpawn = __webpack_require__(87)(Promise, INTERNAL);\n\tvar errors = __webpack_require__(8);\n\tvar TypeError = errors.TypeError;\n\tvar deprecated = __webpack_require__(2).deprecated;\n\t\n\tPromise.coroutine = function Promise$Coroutine(generatorFunction) {\n\t    if (typeof generatorFunction !== \"function\") {\n\t        throw new TypeError(\"generatorFunction must be a function\");\n\t    }\n\t    var PromiseSpawn$ = PromiseSpawn;\n\t    return function () {\n\t        var generator = generatorFunction.apply(this, arguments);\n\t        var spawn = new PromiseSpawn$(void 0, void 0);\n\t        spawn._generator = generator;\n\t        spawn._next(void 0);\n\t        return spawn.promise();\n\t    };\n\t};\n\t\n\tPromise.coroutine.addYieldHandler = PromiseSpawn.addYieldHandler;\n\t\n\tPromise.spawn = function Promise$Spawn(generatorFunction) {\n\t    deprecated(\"Promise.spawn is deprecated. Use Promise.coroutine instead.\");\n\t    if (typeof generatorFunction !== \"function\") {\n\t        return apiRejection(\"generatorFunction must be a function\");\n\t    }\n\t    var spawn = new PromiseSpawn(generatorFunction, this);\n\t    var ret = spawn.promise();\n\t    spawn._run(Promise.spawn);\n\t    return ret;\n\t};\n\t};\n\n\n/***/ },\n/* 82 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright (c) 2014 Petka Antonov\n\t * \n\t * Permission is hereby granted, free of charge, to any person obtaining a copy\n\t * of this software and associated documentation files (the \"Software\"), to deal\n\t * in the Software without restriction, including without limitation the rights\n\t * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\t * copies of the Software, and to permit persons to whom the Software is\n\t * furnished to do so, subject to the following conditions:</p>\n\t * \n\t * The above copyright notice and this permission notice shall be included in\n\t * all copies or substantial portions of the Software.\n\t * \n\t * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\t * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\t * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE\n\t * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\t * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\t * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n\t * THE SOFTWARE.\n\t * \n\t */\n\t\"use strict\";\n\tmodule.exports = function(Promise, PromiseArray, INTERNAL, apiRejection) {\n\t\n\tvar all = Promise.all;\n\tvar util = __webpack_require__(2);\n\tvar canAttach = __webpack_require__(8).canAttach;\n\tvar isArray = util.isArray;\n\tvar _cast = Promise._cast;\n\t\n\tfunction unpack(values) {\n\t    return Promise$_Map(values, this[0], this[1], this[2]);\n\t}\n\t\n\tfunction Promise$_Map(promises, fn, useBound, ref) {\n\t    if (typeof fn !== \"function\") {\n\t        return apiRejection(\"fn must be a function\");\n\t    }\n\t\n\t    var receiver = void 0;\n\t    if (useBound === true) {\n\t        if (promises._isBound()) {\n\t            receiver = promises._boundTo;\n\t        }\n\t    }\n\t    else if (useBound !== false) {\n\t        receiver = useBound;\n\t    }\n\t\n\t    var shouldUnwrapItems = ref !== void 0;\n\t    if (shouldUnwrapItems) ref.ref = promises;\n\t\n\t    if (promises instanceof Promise) {\n\t        var pack = [fn, receiver, ref];\n\t        return promises._then(unpack, void 0, void 0, pack, void 0);\n\t    }\n\t    else if (!isArray(promises)) {\n\t        return apiRejection(\"expecting an array, a promise or a thenable\");\n\t    }\n\t\n\t    var promise = new Promise(INTERNAL);\n\t    if (receiver !== void 0) promise._setBoundTo(receiver);\n\t    promise._setTrace(void 0);\n\t\n\t    var mapping = new Mapping(promise,\n\t                                fn,\n\t                                promises,\n\t                                receiver,\n\t                                shouldUnwrapItems);\n\t    mapping.init();\n\t    return promise;\n\t}\n\t\n\tvar pending = {};\n\tfunction Mapping(promise, callback, items, receiver, shouldUnwrapItems) {\n\t    this.shouldUnwrapItems = shouldUnwrapItems;\n\t    this.index = 0;\n\t    this.items = items;\n\t    this.callback = callback;\n\t    this.receiver = receiver;\n\t    this.promise = promise;\n\t    this.result = new Array(items.length);\n\t}\n\tutil.inherits(Mapping, PromiseArray);\n\t\n\tMapping.prototype.init = function Mapping$init() {\n\t    var items = this.items;\n\t    var len = items.length;\n\t    var result = this.result;\n\t    var isRejected = false;\n\t    for (var i = 0; i < len; ++i) {\n\t        var maybePromise = _cast(items[i], void 0);\n\t        if (maybePromise instanceof Promise) {\n\t            if (maybePromise.isPending()) {\n\t                result[i] = pending;\n\t                maybePromise._proxyPromiseArray(this, i);\n\t            }\n\t            else if (maybePromise.isFulfilled()) {\n\t                result[i] = maybePromise.value();\n\t            }\n\t            else {\n\t                maybePromise._unsetRejectionIsUnhandled();\n\t                if (!isRejected) {\n\t                    this.reject(maybePromise.reason());\n\t                    isRejected = true;\n\t                }\n\t            }\n\t        }\n\t        else {\n\t            result[i] = maybePromise;\n\t        }\n\t    }\n\t    if (!isRejected) this.iterate();\n\t};\n\t\n\tMapping.prototype.isResolved = function Mapping$isResolved() {\n\t    return this.promise === null;\n\t};\n\t\n\tMapping.prototype._promiseProgressed =\n\tfunction Mapping$_promiseProgressed(value) {\n\t    if (this.isResolved()) return;\n\t    this.promise._progress(value);\n\t};\n\t\n\tMapping.prototype._promiseFulfilled =\n\tfunction Mapping$_promiseFulfilled(value, index) {\n\t    if (this.isResolved()) return;\n\t    this.result[index] = value;\n\t    if (this.shouldUnwrapItems) this.items[index] = value;\n\t    if (this.index === index) this.iterate();\n\t};\n\t\n\tMapping.prototype._promiseRejected =\n\tfunction Mapping$_promiseRejected(reason) {\n\t    this.reject(reason);\n\t};\n\t\n\tMapping.prototype.reject = function Mapping$reject(reason) {\n\t    if (this.isResolved()) return;\n\t    var trace = canAttach(reason) ? reason : new Error(reason + \"\");\n\t    this.promise._attachExtraTrace(trace);\n\t    this.promise._reject(reason, trace);\n\t};\n\t\n\tMapping.prototype.iterate = function Mapping$iterate() {\n\t    var i = this.index;\n\t    var items = this.items;\n\t    var result = this.result;\n\t    var len = items.length;\n\t    var result = this.result;\n\t    var receiver = this.receiver;\n\t    var callback = this.callback;\n\t\n\t    for (; i < len; ++i) {\n\t        var value = result[i];\n\t        if (value === pending) {\n\t            this.index = i;\n\t            return;\n\t        }\n\t        try { result[i] = callback.call(receiver, value, i, len); }\n\t        catch (e) { return this.reject(e); }\n\t    }\n\t    this.promise._follow(all(result));\n\t    this.items = this.result = this.callback = this.promise = null;\n\t};\n\t\n\tPromise.prototype.map = function Promise$map(fn, ref) {\n\t    return Promise$_Map(this, fn, true, ref);\n\t};\n\t\n\tPromise.map = function Promise$Map(promises, fn, ref) {\n\t    return Promise$_Map(promises, fn, false, ref);\n\t};\n\t};\n\n\n/***/ },\n/* 83 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright (c) 2014 Petka Antonov\n\t * \n\t * Permission is hereby granted, free of charge, to any person obtaining a copy\n\t * of this software and associated documentation files (the \"Software\"), to deal\n\t * in the Software without restriction, including without limitation the rights\n\t * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\t * copies of the Software, and to permit persons to whom the Software is\n\t * furnished to do so, subject to the following conditions:</p>\n\t * \n\t * The above copyright notice and this permission notice shall be included in\n\t * all copies or substantial portions of the Software.\n\t * \n\t * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\t * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\t * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE\n\t * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\t * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\t * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n\t * THE SOFTWARE.\n\t * \n\t */\n\t\"use strict\";\n\tmodule.exports = function(Promise) {\n\tvar util = __webpack_require__(2);\n\tvar async = __webpack_require__(20);\n\tvar tryCatch2 = util.tryCatch2;\n\tvar tryCatch1 = util.tryCatch1;\n\tvar errorObj = util.errorObj;\n\t\n\tfunction thrower(r) {\n\t    throw r;\n\t}\n\t\n\tfunction Promise$_successAdapter(val, receiver) {\n\t    var nodeback = this;\n\t    var ret = val === void 0\n\t        ? tryCatch1(nodeback, receiver, null)\n\t        : tryCatch2(nodeback, receiver, null, val);\n\t    if (ret === errorObj) {\n\t        async.invokeLater(thrower, void 0, ret.e);\n\t    }\n\t}\n\tfunction Promise$_errorAdapter(reason, receiver) {\n\t    var nodeback = this;\n\t    var ret = tryCatch1(nodeback, receiver, reason);\n\t    if (ret === errorObj) {\n\t        async.invokeLater(thrower, void 0, ret.e);\n\t    }\n\t}\n\t\n\tPromise.prototype.nodeify = function Promise$nodeify(nodeback) {\n\t    if (typeof nodeback == \"function\") {\n\t        this._then(\n\t            Promise$_successAdapter,\n\t            Promise$_errorAdapter,\n\t            void 0,\n\t            nodeback,\n\t            this._isBound() ? this._boundTo : null\n\t        );\n\t    }\n\t    return this;\n\t};\n\t};\n\n\n/***/ },\n/* 84 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright (c) 2014 Petka Antonov\n\t * \n\t * Permission is hereby granted, free of charge, to any person obtaining a copy\n\t * of this software and associated documentation files (the \"Software\"), to deal\n\t * in the Software without restriction, including without limitation the rights\n\t * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\t * copies of the Software, and to permit persons to whom the Software is\n\t * furnished to do so, subject to the following conditions:</p>\n\t * \n\t * The above copyright notice and this permission notice shall be included in\n\t * all copies or substantial portions of the Software.\n\t * \n\t * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\t * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\t * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE\n\t * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\t * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\t * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n\t * THE SOFTWARE.\n\t * \n\t */\n\t\"use strict\";\n\tmodule.exports = function(Promise, isPromiseArrayProxy) {\n\tvar util = __webpack_require__(2);\n\tvar async = __webpack_require__(20);\n\tvar errors = __webpack_require__(8);\n\tvar tryCatch1 = util.tryCatch1;\n\tvar errorObj = util.errorObj;\n\t\n\tPromise.prototype.progressed = function Promise$progressed(handler) {\n\t    return this._then(void 0, void 0, handler, void 0, void 0);\n\t};\n\t\n\tPromise.prototype._progress = function Promise$_progress(progressValue) {\n\t    if (this._isFollowingOrFulfilledOrRejected()) return;\n\t    this._progressUnchecked(progressValue);\n\t\n\t};\n\t\n\tPromise.prototype._progressHandlerAt =\n\tfunction Promise$_progressHandlerAt(index) {\n\t    if (index === 0) return this._progressHandler0;\n\t    return this[index + 2 - 5];\n\t};\n\t\n\tPromise.prototype._doProgressWith =\n\tfunction Promise$_doProgressWith(progression) {\n\t    var progressValue = progression.value;\n\t    var handler = progression.handler;\n\t    var promise = progression.promise;\n\t    var receiver = progression.receiver;\n\t\n\t    this._pushContext();\n\t    var ret = tryCatch1(handler, receiver, progressValue);\n\t    this._popContext();\n\t\n\t    if (ret === errorObj) {\n\t        if (ret.e != null &&\n\t            ret.e.name !== \"StopProgressPropagation\") {\n\t            var trace = errors.canAttach(ret.e)\n\t                ? ret.e : new Error(ret.e + \"\");\n\t            promise._attachExtraTrace(trace);\n\t            promise._progress(ret.e);\n\t        }\n\t    }\n\t    else if (ret instanceof Promise) {\n\t        ret._then(promise._progress, null, null, promise, void 0);\n\t    }\n\t    else {\n\t        promise._progress(ret);\n\t    }\n\t};\n\t\n\t\n\tPromise.prototype._progressUnchecked =\n\tfunction Promise$_progressUnchecked(progressValue) {\n\t    if (!this.isPending()) return;\n\t    var len = this._length();\n\t    var progress = this._progress;\n\t    for (var i = 0; i < len; i += 5) {\n\t        var handler = this._progressHandlerAt(i);\n\t        var promise = this._promiseAt(i);\n\t        if (!(promise instanceof Promise)) {\n\t            var receiver = this._receiverAt(i);\n\t            if (typeof handler === \"function\") {\n\t                handler.call(receiver, progressValue, promise);\n\t            }\n\t            else if (receiver instanceof Promise && receiver._isProxied()) {\n\t                receiver._progressUnchecked(progressValue);\n\t            }\n\t            else if (isPromiseArrayProxy(receiver, promise)) {\n\t                receiver._promiseProgressed(progressValue, promise);\n\t            }\n\t            continue;\n\t        }\n\t\n\t        if (typeof handler === \"function\") {\n\t            async.invoke(this._doProgressWith, this, {\n\t                handler: handler,\n\t                promise: promise,\n\t                receiver: this._receiverAt(i),\n\t                value: progressValue\n\t            });\n\t        }\n\t        else {\n\t            async.invoke(progress, promise, progressValue);\n\t        }\n\t    }\n\t};\n\t};\n\n\n/***/ },\n/* 85 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(process) {/**\n\t * Copyright (c) 2014 Petka Antonov\n\t * \n\t * Permission is hereby granted, free of charge, to any person obtaining a copy\n\t * of this software and associated documentation files (the \"Software\"), to deal\n\t * in the Software without restriction, including without limitation the rights\n\t * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\t * copies of the Software, and to permit persons to whom the Software is\n\t * furnished to do so, subject to the following conditions:</p>\n\t * \n\t * The above copyright notice and this permission notice shall be included in\n\t * all copies or substantial portions of the Software.\n\t * \n\t * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\t * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\t * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE\n\t * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\t * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\t * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n\t * THE SOFTWARE.\n\t * \n\t */\n\t\"use strict\";\n\tmodule.exports = function() {\n\tvar global = __webpack_require__(21);\n\tvar util = __webpack_require__(2);\n\tvar async = __webpack_require__(20);\n\tvar errors = __webpack_require__(8);\n\t\n\tvar INTERNAL = function(){};\n\tvar APPLY = {};\n\tvar NEXT_FILTER = {e: null};\n\t\n\tvar PromiseArray = __webpack_require__(86)(Promise, INTERNAL);\n\tvar CapturedTrace = __webpack_require__(76)();\n\tvar CatchFilter = __webpack_require__(77)(NEXT_FILTER);\n\tvar PromiseResolver = __webpack_require__(46);\n\t\n\tvar isArray = util.isArray;\n\t\n\tvar errorObj = util.errorObj;\n\tvar tryCatch1 = util.tryCatch1;\n\tvar tryCatch2 = util.tryCatch2;\n\tvar tryCatchApply = util.tryCatchApply;\n\tvar RangeError = errors.RangeError;\n\tvar TypeError = errors.TypeError;\n\tvar CancellationError = errors.CancellationError;\n\tvar TimeoutError = errors.TimeoutError;\n\tvar RejectionError = errors.RejectionError;\n\tvar originatesFromRejection = errors.originatesFromRejection;\n\tvar markAsOriginatingFromRejection = errors.markAsOriginatingFromRejection;\n\tvar canAttach = errors.canAttach;\n\tvar thrower = util.thrower;\n\tvar apiRejection = __webpack_require__(29)(Promise);\n\t\n\t\n\tvar makeSelfResolutionError = function Promise$_makeSelfResolutionError() {\n\t    return new TypeError(\"circular promise resolution chain\");\n\t};\n\t\n\tfunction isPromise(obj) {\n\t    if (obj === void 0) return false;\n\t    return obj instanceof Promise;\n\t}\n\t\n\tfunction isPromiseArrayProxy(receiver, promiseSlotValue) {\n\t    if (receiver instanceof PromiseArray) {\n\t        return promiseSlotValue >= 0;\n\t    }\n\t    return false;\n\t}\n\t\n\tfunction Promise(resolver) {\n\t    if (typeof resolver !== \"function\") {\n\t        throw new TypeError(\"the promise constructor requires a resolver function\");\n\t    }\n\t    if (this.constructor !== Promise) {\n\t        throw new TypeError(\"the promise constructor cannot be invoked directly\");\n\t    }\n\t    this._bitField = 0;\n\t    this._fulfillmentHandler0 = void 0;\n\t    this._rejectionHandler0 = void 0;\n\t    this._promise0 = void 0;\n\t    this._receiver0 = void 0;\n\t    this._settledValue = void 0;\n\t    this._boundTo = void 0;\n\t    if (resolver !== INTERNAL) this._resolveFromResolver(resolver);\n\t}\n\t\n\tPromise.prototype.bind = function Promise$bind(thisArg) {\n\t    var ret = new Promise(INTERNAL);\n\t    ret._setTrace(this);\n\t    ret._follow(this);\n\t    ret._setBoundTo(thisArg);\n\t    if (this._cancellable()) {\n\t        ret._setCancellable();\n\t        ret._cancellationParent = this;\n\t    }\n\t    return ret;\n\t};\n\t\n\tPromise.prototype.toString = function Promise$toString() {\n\t    return \"[object Promise]\";\n\t};\n\t\n\tPromise.prototype.caught = Promise.prototype[\"catch\"] =\n\tfunction Promise$catch(fn) {\n\t    var len = arguments.length;\n\t    if (len > 1) {\n\t        var catchInstances = new Array(len - 1),\n\t            j = 0, i;\n\t        for (i = 0; i < len - 1; ++i) {\n\t            var item = arguments[i];\n\t            if (typeof item === \"function\") {\n\t                catchInstances[j++] = item;\n\t            }\n\t            else {\n\t                var catchFilterTypeError =\n\t                    new TypeError(\n\t                        \"A catch filter must be an error constructor \"\n\t                        + \"or a filter function\");\n\t\n\t                this._attachExtraTrace(catchFilterTypeError);\n\t                async.invoke(this._reject, this, catchFilterTypeError);\n\t                return;\n\t            }\n\t        }\n\t        catchInstances.length = j;\n\t        fn = arguments[i];\n\t\n\t        this._resetTrace();\n\t        var catchFilter = new CatchFilter(catchInstances, fn, this);\n\t        return this._then(void 0, catchFilter.doFilter, void 0,\n\t            catchFilter, void 0);\n\t    }\n\t    return this._then(void 0, fn, void 0, void 0, void 0);\n\t};\n\t\n\tPromise.prototype.then =\n\tfunction Promise$then(didFulfill, didReject, didProgress) {\n\t    return this._then(didFulfill, didReject, didProgress,\n\t        void 0, void 0);\n\t};\n\t\n\t\n\tPromise.prototype.done =\n\tfunction Promise$done(didFulfill, didReject, didProgress) {\n\t    var promise = this._then(didFulfill, didReject, didProgress,\n\t        void 0, void 0);\n\t    promise._setIsFinal();\n\t};\n\t\n\tPromise.prototype.spread = function Promise$spread(didFulfill, didReject) {\n\t    return this._then(didFulfill, didReject, void 0,\n\t        APPLY, void 0);\n\t};\n\t\n\tPromise.prototype.isCancellable = function Promise$isCancellable() {\n\t    return !this.isResolved() &&\n\t        this._cancellable();\n\t};\n\t\n\tPromise.prototype.toJSON = function Promise$toJSON() {\n\t    var ret = {\n\t        isFulfilled: false,\n\t        isRejected: false,\n\t        fulfillmentValue: void 0,\n\t        rejectionReason: void 0\n\t    };\n\t    if (this.isFulfilled()) {\n\t        ret.fulfillmentValue = this._settledValue;\n\t        ret.isFulfilled = true;\n\t    }\n\t    else if (this.isRejected()) {\n\t        ret.rejectionReason = this._settledValue;\n\t        ret.isRejected = true;\n\t    }\n\t    return ret;\n\t};\n\t\n\tPromise.prototype.all = function Promise$all() {\n\t    return Promise$_all(this, true);\n\t};\n\t\n\t\n\tPromise.is = isPromise;\n\t\n\tfunction Promise$_all(promises, useBound) {\n\t    return Promise$_CreatePromiseArray(\n\t        promises,\n\t        PromiseArray,\n\t        useBound === true && promises._isBound()\n\t            ? promises._boundTo\n\t            : void 0\n\t   ).promise();\n\t}\n\tPromise.all = function Promise$All(promises) {\n\t    return Promise$_all(promises, false);\n\t};\n\t\n\tPromise.join = function Promise$Join() {\n\t    var $_len = arguments.length;var args = new Array($_len); for(var $_i = 0; $_i < $_len; ++$_i) {args[$_i] = arguments[$_i];}\n\t    return Promise$_CreatePromiseArray(args, PromiseArray, void 0).promise();\n\t};\n\t\n\tPromise.resolve = Promise.fulfilled =\n\tfunction Promise$Resolve(value) {\n\t    var ret = new Promise(INTERNAL);\n\t    ret._setTrace(void 0);\n\t    if (ret._tryFollow(value)) {\n\t        return ret;\n\t    }\n\t    ret._cleanValues();\n\t    ret._setFulfilled();\n\t    ret._settledValue = value;\n\t    return ret;\n\t};\n\t\n\tPromise.reject = Promise.rejected = function Promise$Reject(reason) {\n\t    var ret = new Promise(INTERNAL);\n\t    ret._setTrace(void 0);\n\t    markAsOriginatingFromRejection(reason);\n\t    ret._cleanValues();\n\t    ret._setRejected();\n\t    ret._settledValue = reason;\n\t    if (!canAttach(reason)) {\n\t        var trace = new Error(reason + \"\");\n\t        ret._setCarriedStackTrace(trace);\n\t    }\n\t    ret._ensurePossibleRejectionHandled();\n\t    return ret;\n\t};\n\t\n\tPromise.prototype.error = function Promise$_error(fn) {\n\t    return this.caught(originatesFromRejection, fn);\n\t};\n\t\n\tPromise.prototype._resolveFromSyncValue =\n\tfunction Promise$_resolveFromSyncValue(value) {\n\t    if (value === errorObj) {\n\t        this._cleanValues();\n\t        this._setRejected();\n\t        this._settledValue = value.e;\n\t        this._ensurePossibleRejectionHandled();\n\t    }\n\t    else {\n\t        var maybePromise = Promise._cast(value, void 0);\n\t        if (maybePromise instanceof Promise) {\n\t            this._follow(maybePromise);\n\t        }\n\t        else {\n\t            this._cleanValues();\n\t            this._setFulfilled();\n\t            this._settledValue = value;\n\t        }\n\t    }\n\t};\n\t\n\tPromise.method = function Promise$_Method(fn) {\n\t    if (typeof fn !== \"function\") {\n\t        throw new TypeError(\"fn must be a function\");\n\t    }\n\t    return function Promise$_method() {\n\t        var value;\n\t        switch(arguments.length) {\n\t        case 0: value = tryCatch1(fn, this, void 0); break;\n\t        case 1: value = tryCatch1(fn, this, arguments[0]); break;\n\t        case 2: value = tryCatch2(fn, this, arguments[0], arguments[1]); break;\n\t        default:\n\t            var $_len = arguments.length;var args = new Array($_len); for(var $_i = 0; $_i < $_len; ++$_i) {args[$_i] = arguments[$_i];}\n\t            value = tryCatchApply(fn, args, this); break;\n\t        }\n\t        var ret = new Promise(INTERNAL);\n\t        ret._setTrace(void 0);\n\t        ret._resolveFromSyncValue(value);\n\t        return ret;\n\t    };\n\t};\n\t\n\tPromise.attempt = Promise[\"try\"] = function Promise$_Try(fn, args, ctx) {\n\t    if (typeof fn !== \"function\") {\n\t        return apiRejection(\"fn must be a function\");\n\t    }\n\t    var value = isArray(args)\n\t        ? tryCatchApply(fn, args, ctx)\n\t        : tryCatch1(fn, ctx, args);\n\t\n\t    var ret = new Promise(INTERNAL);\n\t    ret._setTrace(void 0);\n\t    ret._resolveFromSyncValue(value);\n\t    return ret;\n\t};\n\t\n\tPromise.defer = Promise.pending = function Promise$Defer() {\n\t    var promise = new Promise(INTERNAL);\n\t    promise._setTrace(void 0);\n\t    return new PromiseResolver(promise);\n\t};\n\t\n\tPromise.bind = function Promise$Bind(thisArg) {\n\t    var ret = new Promise(INTERNAL);\n\t    ret._setTrace(void 0);\n\t    ret._setFulfilled();\n\t    ret._setBoundTo(thisArg);\n\t    return ret;\n\t};\n\t\n\tPromise.cast = function Promise$_Cast(obj) {\n\t    var ret = Promise._cast(obj, void 0);\n\t    if (!(ret instanceof Promise)) {\n\t        return Promise.resolve(ret);\n\t    }\n\t    return ret;\n\t};\n\t\n\tPromise.onPossiblyUnhandledRejection =\n\tfunction Promise$OnPossiblyUnhandledRejection(fn) {\n\t        CapturedTrace.possiblyUnhandledRejection = typeof fn === \"function\"\n\t                                                    ? fn : void 0;\n\t};\n\t\n\tvar unhandledRejectionHandled;\n\tPromise.onUnhandledRejectionHandled =\n\tfunction Promise$onUnhandledRejectionHandled(fn) {\n\t    unhandledRejectionHandled = typeof fn === \"function\" ? fn : void 0;\n\t};\n\t\n\tvar debugging = false || !!(\n\t    typeof process !== \"undefined\" &&\n\t    typeof process.execPath === \"string\" &&\n\t    \"object\" === \"object\" &&\n\t    (({\"NODE_ENV\":\"production\"})[\"BLUEBIRD_DEBUG\"] ||\n\t        ({\"NODE_ENV\":\"production\"})[\"NODE_ENV\"] === \"development\")\n\t);\n\t\n\t\n\tPromise.longStackTraces = function Promise$LongStackTraces() {\n\t    if (async.haveItemsQueued() &&\n\t        debugging === false\n\t   ) {\n\t        throw new Error(\"cannot enable long stack traces after promises have been created\");\n\t    }\n\t    debugging = CapturedTrace.isSupported();\n\t};\n\t\n\tPromise.hasLongStackTraces = function Promise$HasLongStackTraces() {\n\t    return debugging && CapturedTrace.isSupported();\n\t};\n\t\n\tPromise.prototype._setProxyHandlers =\n\tfunction Promise$_setProxyHandlers(receiver, promiseSlotValue) {\n\t    var index = this._length();\n\t\n\t    if (index >= 524287 - 5) {\n\t        index = 0;\n\t        this._setLength(0);\n\t    }\n\t    if (index === 0) {\n\t        this._promise0 = promiseSlotValue;\n\t        this._receiver0 = receiver;\n\t    }\n\t    else {\n\t        var i = index - 5;\n\t        this[i + 3] = promiseSlotValue;\n\t        this[i + 4] = receiver;\n\t        this[i + 0] =\n\t        this[i + 1] =\n\t        this[i + 2] = void 0;\n\t    }\n\t    this._setLength(index + 5);\n\t};\n\t\n\tPromise.prototype._proxyPromiseArray =\n\tfunction Promise$_proxyPromiseArray(promiseArray, index) {\n\t    this._setProxyHandlers(promiseArray, index);\n\t};\n\t\n\tPromise.prototype._proxyPromise = function Promise$_proxyPromise(promise) {\n\t    promise._setProxied();\n\t    this._setProxyHandlers(promise, -1);\n\t};\n\t\n\tPromise.prototype._then =\n\tfunction Promise$_then(\n\t    didFulfill,\n\t    didReject,\n\t    didProgress,\n\t    receiver,\n\t    internalData\n\t) {\n\t    var haveInternalData = internalData !== void 0;\n\t    var ret = haveInternalData ? internalData : new Promise(INTERNAL);\n\t\n\t    if (debugging && !haveInternalData) {\n\t        var haveSameContext = this._peekContext() === this._traceParent;\n\t        ret._traceParent = haveSameContext ? this._traceParent : this;\n\t        ret._setTrace(this);\n\t    }\n\t\n\t    if (!haveInternalData && this._isBound()) {\n\t        ret._setBoundTo(this._boundTo);\n\t    }\n\t\n\t    var callbackIndex =\n\t        this._addCallbacks(didFulfill, didReject, didProgress, ret, receiver);\n\t\n\t    if (!haveInternalData && this._cancellable()) {\n\t        ret._setCancellable();\n\t        ret._cancellationParent = this;\n\t    }\n\t\n\t    if (this.isResolved()) {\n\t        async.invoke(this._queueSettleAt, this, callbackIndex);\n\t    }\n\t\n\t    return ret;\n\t};\n\t\n\tPromise.prototype._length = function Promise$_length() {\n\t    return this._bitField & 524287;\n\t};\n\t\n\tPromise.prototype._isFollowingOrFulfilledOrRejected =\n\tfunction Promise$_isFollowingOrFulfilledOrRejected() {\n\t    return (this._bitField & 939524096) > 0;\n\t};\n\t\n\tPromise.prototype._isFollowing = function Promise$_isFollowing() {\n\t    return (this._bitField & 536870912) === 536870912;\n\t};\n\t\n\tPromise.prototype._setLength = function Promise$_setLength(len) {\n\t    this._bitField = (this._bitField & -524288) |\n\t        (len & 524287);\n\t};\n\t\n\tPromise.prototype._setFulfilled = function Promise$_setFulfilled() {\n\t    this._bitField = this._bitField | 268435456;\n\t};\n\t\n\tPromise.prototype._setRejected = function Promise$_setRejected() {\n\t    this._bitField = this._bitField | 134217728;\n\t};\n\t\n\tPromise.prototype._setFollowing = function Promise$_setFollowing() {\n\t    this._bitField = this._bitField | 536870912;\n\t};\n\t\n\tPromise.prototype._setIsFinal = function Promise$_setIsFinal() {\n\t    this._bitField = this._bitField | 33554432;\n\t};\n\t\n\tPromise.prototype._isFinal = function Promise$_isFinal() {\n\t    return (this._bitField & 33554432) > 0;\n\t};\n\t\n\tPromise.prototype._cancellable = function Promise$_cancellable() {\n\t    return (this._bitField & 67108864) > 0;\n\t};\n\t\n\tPromise.prototype._setCancellable = function Promise$_setCancellable() {\n\t    this._bitField = this._bitField | 67108864;\n\t};\n\t\n\tPromise.prototype._unsetCancellable = function Promise$_unsetCancellable() {\n\t    this._bitField = this._bitField & (~67108864);\n\t};\n\t\n\tPromise.prototype._setRejectionIsUnhandled =\n\tfunction Promise$_setRejectionIsUnhandled() {\n\t    this._bitField = this._bitField | 2097152;\n\t};\n\t\n\tPromise.prototype._unsetRejectionIsUnhandled =\n\tfunction Promise$_unsetRejectionIsUnhandled() {\n\t    this._bitField = this._bitField & (~2097152);\n\t    if (this._isUnhandledRejectionNotified()) {\n\t        this._unsetUnhandledRejectionIsNotified();\n\t        this._notifyUnhandledRejectionIsHandled();\n\t    }\n\t};\n\t\n\tPromise.prototype._isRejectionUnhandled =\n\tfunction Promise$_isRejectionUnhandled() {\n\t    return (this._bitField & 2097152) > 0;\n\t};\n\t\n\tPromise.prototype._setUnhandledRejectionIsNotified =\n\tfunction Promise$_setUnhandledRejectionIsNotified() {\n\t    this._bitField = this._bitField | 524288;\n\t};\n\t\n\tPromise.prototype._unsetUnhandledRejectionIsNotified =\n\tfunction Promise$_unsetUnhandledRejectionIsNotified() {\n\t    this._bitField = this._bitField & (~524288);\n\t};\n\t\n\tPromise.prototype._isUnhandledRejectionNotified =\n\tfunction Promise$_isUnhandledRejectionNotified() {\n\t    return (this._bitField & 524288) > 0;\n\t};\n\t\n\tPromise.prototype._setCarriedStackTrace =\n\tfunction Promise$_setCarriedStackTrace(capturedTrace) {\n\t    this._bitField = this._bitField | 1048576;\n\t    this._fulfillmentHandler0 = capturedTrace;\n\t};\n\t\n\tPromise.prototype._unsetCarriedStackTrace =\n\tfunction Promise$_unsetCarriedStackTrace() {\n\t    this._bitField = this._bitField & (~1048576);\n\t    this._fulfillmentHandler0 = void 0;\n\t};\n\t\n\tPromise.prototype._isCarryingStackTrace =\n\tfunction Promise$_isCarryingStackTrace() {\n\t    return (this._bitField & 1048576) > 0;\n\t};\n\t\n\tPromise.prototype._getCarriedStackTrace =\n\tfunction Promise$_getCarriedStackTrace() {\n\t    return this._isCarryingStackTrace()\n\t        ? this._fulfillmentHandler0\n\t        : void 0;\n\t};\n\t\n\tPromise.prototype._receiverAt = function Promise$_receiverAt(index) {\n\t    var ret;\n\t    if (index === 0) {\n\t        ret = this._receiver0;\n\t    }\n\t    else {\n\t        ret = this[index + 4 - 5];\n\t    }\n\t    if (this._isBound() && ret === void 0) {\n\t        return this._boundTo;\n\t    }\n\t    return ret;\n\t};\n\t\n\tPromise.prototype._promiseAt = function Promise$_promiseAt(index) {\n\t    if (index === 0) return this._promise0;\n\t    return this[index + 3 - 5];\n\t};\n\t\n\tPromise.prototype._fulfillmentHandlerAt =\n\tfunction Promise$_fulfillmentHandlerAt(index) {\n\t    if (index === 0) return this._fulfillmentHandler0;\n\t    return this[index + 0 - 5];\n\t};\n\t\n\tPromise.prototype._rejectionHandlerAt =\n\tfunction Promise$_rejectionHandlerAt(index) {\n\t    if (index === 0) return this._rejectionHandler0;\n\t    return this[index + 1 - 5];\n\t};\n\t\n\tPromise.prototype._unsetAt = function Promise$_unsetAt(index) {\n\t     if (index === 0) {\n\t        this._rejectionHandler0 =\n\t        this._progressHandler0 =\n\t        this._promise0 =\n\t        this._receiver0 = void 0;\n\t        if (!this._isCarryingStackTrace()) {\n\t            this._fulfillmentHandler0 = void 0;\n\t        }\n\t    }\n\t    else {\n\t        this[index - 5 + 0] =\n\t        this[index - 5 + 1] =\n\t        this[index - 5 + 2] =\n\t        this[index - 5 + 3] =\n\t        this[index - 5 + 4] = void 0;\n\t    }\n\t};\n\t\n\tPromise.prototype._resolveFromResolver =\n\tfunction Promise$_resolveFromResolver(resolver) {\n\t    var promise = this;\n\t    this._setTrace(void 0);\n\t    this._pushContext();\n\t\n\t    function Promise$_resolver(val) {\n\t        if (promise._tryFollow(val)) {\n\t            return;\n\t        }\n\t        promise._fulfill(val);\n\t    }\n\t    function Promise$_rejecter(val) {\n\t        var trace = canAttach(val) ? val : new Error(val + \"\");\n\t        promise._attachExtraTrace(trace);\n\t        markAsOriginatingFromRejection(val);\n\t        promise._reject(val, trace === val ? void 0 : trace);\n\t    }\n\t    var r = tryCatch2(resolver, void 0, Promise$_resolver, Promise$_rejecter);\n\t    this._popContext();\n\t\n\t    if (r !== void 0 && r === errorObj) {\n\t        var e = r.e;\n\t        var trace = canAttach(e) ? e : new Error(e + \"\");\n\t        promise._reject(e, trace);\n\t    }\n\t};\n\t\n\tPromise.prototype._addCallbacks = function Promise$_addCallbacks(\n\t    fulfill,\n\t    reject,\n\t    progress,\n\t    promise,\n\t    receiver\n\t) {\n\t    var index = this._length();\n\t\n\t    if (index >= 524287 - 5) {\n\t        index = 0;\n\t        this._setLength(0);\n\t    }\n\t\n\t    if (index === 0) {\n\t        this._promise0 = promise;\n\t        if (receiver !== void 0) this._receiver0 = receiver;\n\t        if (typeof fulfill === \"function\" && !this._isCarryingStackTrace())\n\t            this._fulfillmentHandler0 = fulfill;\n\t        if (typeof reject === \"function\") this._rejectionHandler0 = reject;\n\t        if (typeof progress === \"function\") this._progressHandler0 = progress;\n\t    }\n\t    else {\n\t        var i = index - 5;\n\t        this[i + 3] = promise;\n\t        this[i + 4] = receiver;\n\t        this[i + 0] = typeof fulfill === \"function\"\n\t                                            ? fulfill : void 0;\n\t        this[i + 1] = typeof reject === \"function\"\n\t                                            ? reject : void 0;\n\t        this[i + 2] = typeof progress === \"function\"\n\t                                            ? progress : void 0;\n\t    }\n\t    this._setLength(index + 5);\n\t    return index;\n\t};\n\t\n\t\n\t\n\tPromise.prototype._setBoundTo = function Promise$_setBoundTo(obj) {\n\t    if (obj !== void 0) {\n\t        this._bitField = this._bitField | 8388608;\n\t        this._boundTo = obj;\n\t    }\n\t    else {\n\t        this._bitField = this._bitField & (~8388608);\n\t    }\n\t};\n\t\n\tPromise.prototype._isBound = function Promise$_isBound() {\n\t    return (this._bitField & 8388608) === 8388608;\n\t};\n\t\n\tPromise.prototype._spreadSlowCase =\n\tfunction Promise$_spreadSlowCase(targetFn, promise, values, boundTo) {\n\t    var promiseForAll =\n\t            Promise$_CreatePromiseArray\n\t                (values, PromiseArray, boundTo)\n\t            .promise()\n\t            ._then(function() {\n\t                return targetFn.apply(boundTo, arguments);\n\t            }, void 0, void 0, APPLY, void 0);\n\t\n\t    promise._follow(promiseForAll);\n\t};\n\t\n\tPromise.prototype._callSpread =\n\tfunction Promise$_callSpread(handler, promise, value, localDebugging) {\n\t    var boundTo = this._isBound() ? this._boundTo : void 0;\n\t    if (isArray(value)) {\n\t        for (var i = 0, len = value.length; i < len; ++i) {\n\t            if (isPromise(Promise._cast(value[i], void 0))) {\n\t                this._spreadSlowCase(handler, promise, value, boundTo);\n\t                return;\n\t            }\n\t        }\n\t    }\n\t    if (localDebugging) promise._pushContext();\n\t    return tryCatchApply(handler, value, boundTo);\n\t};\n\t\n\tPromise.prototype._callHandler =\n\tfunction Promise$_callHandler(\n\t    handler, receiver, promise, value, localDebugging) {\n\t    var x;\n\t    if (receiver === APPLY && !this.isRejected()) {\n\t        x = this._callSpread(handler, promise, value, localDebugging);\n\t    }\n\t    else {\n\t        if (localDebugging) promise._pushContext();\n\t        x = tryCatch1(handler, receiver, value);\n\t    }\n\t    if (localDebugging) promise._popContext();\n\t    return x;\n\t};\n\t\n\tPromise.prototype._settlePromiseFromHandler =\n\tfunction Promise$_settlePromiseFromHandler(\n\t    handler, receiver, value, promise\n\t) {\n\t    if (!isPromise(promise)) {\n\t        handler.call(receiver, value, promise);\n\t        return;\n\t    }\n\t\n\t    var localDebugging = debugging;\n\t    var x = this._callHandler(handler, receiver,\n\t                                promise, value, localDebugging);\n\t\n\t    if (promise._isFollowing()) return;\n\t\n\t    if (x === errorObj || x === promise || x === NEXT_FILTER) {\n\t        var err = x === promise\n\t                    ? makeSelfResolutionError()\n\t                    : x.e;\n\t        var trace = canAttach(err) ? err : new Error(err + \"\");\n\t        if (x !== NEXT_FILTER) promise._attachExtraTrace(trace);\n\t        promise._rejectUnchecked(err, trace);\n\t    }\n\t    else {\n\t        var castValue = Promise._cast(x, promise);\n\t        if (isPromise(castValue)) {\n\t            if (castValue.isRejected() &&\n\t                !castValue._isCarryingStackTrace() &&\n\t                !canAttach(castValue._settledValue)) {\n\t                var trace = new Error(castValue._settledValue + \"\");\n\t                promise._attachExtraTrace(trace);\n\t                castValue._setCarriedStackTrace(trace);\n\t            }\n\t            promise._follow(castValue);\n\t            if (castValue._cancellable()) {\n\t                promise._cancellationParent = castValue;\n\t                promise._setCancellable();\n\t            }\n\t        }\n\t        else {\n\t            promise._fulfillUnchecked(x);\n\t        }\n\t    }\n\t};\n\t\n\tPromise.prototype._follow =\n\tfunction Promise$_follow(promise) {\n\t    this._setFollowing();\n\t\n\t    if (promise.isPending()) {\n\t        if (promise._cancellable() ) {\n\t            this._cancellationParent = promise;\n\t            this._setCancellable();\n\t        }\n\t        promise._proxyPromise(this);\n\t    }\n\t    else if (promise.isFulfilled()) {\n\t        this._fulfillUnchecked(promise._settledValue);\n\t    }\n\t    else {\n\t        this._rejectUnchecked(promise._settledValue,\n\t            promise._getCarriedStackTrace());\n\t    }\n\t\n\t    if (promise._isRejectionUnhandled()) promise._unsetRejectionIsUnhandled();\n\t\n\t    if (debugging &&\n\t        promise._traceParent == null) {\n\t        promise._traceParent = this;\n\t    }\n\t};\n\t\n\tPromise.prototype._tryFollow =\n\tfunction Promise$_tryFollow(value) {\n\t    if (this._isFollowingOrFulfilledOrRejected() ||\n\t        value === this) {\n\t        return false;\n\t    }\n\t    var maybePromise = Promise._cast(value, void 0);\n\t    if (!isPromise(maybePromise)) {\n\t        return false;\n\t    }\n\t    this._follow(maybePromise);\n\t    return true;\n\t};\n\t\n\tPromise.prototype._resetTrace = function Promise$_resetTrace() {\n\t    if (debugging) {\n\t        this._trace = new CapturedTrace(this._peekContext() === void 0);\n\t    }\n\t};\n\t\n\tPromise.prototype._setTrace = function Promise$_setTrace(parent) {\n\t    if (debugging) {\n\t        var context = this._peekContext();\n\t        this._traceParent = context;\n\t        var isTopLevel = context === void 0;\n\t        if (parent !== void 0 &&\n\t            parent._traceParent === context) {\n\t            this._trace = parent._trace;\n\t        }\n\t        else {\n\t            this._trace = new CapturedTrace(isTopLevel);\n\t        }\n\t    }\n\t    return this;\n\t};\n\t\n\tPromise.prototype._attachExtraTrace =\n\tfunction Promise$_attachExtraTrace(error) {\n\t    if (debugging) {\n\t        var promise = this;\n\t        var stack = error.stack;\n\t        stack = typeof stack === \"string\"\n\t            ? stack.split(\"\\n\") : [];\n\t        var headerLineCount = 1;\n\t\n\t        while(promise != null &&\n\t            promise._trace != null) {\n\t            stack = CapturedTrace.combine(\n\t                stack,\n\t                promise._trace.stack.split(\"\\n\")\n\t           );\n\t            promise = promise._traceParent;\n\t        }\n\t\n\t        var max = Error.stackTraceLimit + headerLineCount;\n\t        var len = stack.length;\n\t        if (len  > max) {\n\t            stack.length = max;\n\t        }\n\t        if (stack.length <= headerLineCount) {\n\t            error.stack = \"(No stack trace)\";\n\t        }\n\t        else {\n\t            error.stack = stack.join(\"\\n\");\n\t        }\n\t    }\n\t};\n\t\n\tPromise.prototype._cleanValues = function Promise$_cleanValues() {\n\t    if (this._cancellable()) {\n\t        this._cancellationParent = void 0;\n\t    }\n\t};\n\t\n\tPromise.prototype._fulfill = function Promise$_fulfill(value) {\n\t    if (this._isFollowingOrFulfilledOrRejected()) return;\n\t    this._fulfillUnchecked(value);\n\t};\n\t\n\tPromise.prototype._reject =\n\tfunction Promise$_reject(reason, carriedStackTrace) {\n\t    if (this._isFollowingOrFulfilledOrRejected()) return;\n\t    this._rejectUnchecked(reason, carriedStackTrace);\n\t};\n\t\n\tPromise.prototype._settlePromiseAt = function Promise$_settlePromiseAt(index) {\n\t    var handler = this.isFulfilled()\n\t        ? this._fulfillmentHandlerAt(index)\n\t        : this._rejectionHandlerAt(index);\n\t\n\t    var value = this._settledValue;\n\t    var receiver = this._receiverAt(index);\n\t    var promise = this._promiseAt(index);\n\t\n\t    if (typeof handler === \"function\") {\n\t        this._settlePromiseFromHandler(handler, receiver, value, promise);\n\t    }\n\t    else {\n\t        var done = false;\n\t        var isFulfilled = this.isFulfilled();\n\t        if (receiver !== void 0) {\n\t            if (receiver instanceof Promise &&\n\t                receiver._isProxied()) {\n\t                receiver._unsetProxied();\n\t\n\t                if (isFulfilled) receiver._fulfillUnchecked(value);\n\t                else receiver._rejectUnchecked(value,\n\t                    this._getCarriedStackTrace());\n\t                done = true;\n\t            }\n\t            else if (isPromiseArrayProxy(receiver, promise)) {\n\t                if (isFulfilled) receiver._promiseFulfilled(value, promise);\n\t                else receiver._promiseRejected(value, promise);\n\t                done = true;\n\t            }\n\t        }\n\t\n\t        if (!done) {\n\t            if (isFulfilled) promise._fulfill(value);\n\t            else promise._reject(value, this._getCarriedStackTrace());\n\t        }\n\t    }\n\t\n\t    if (index >= 256) {\n\t        this._queueGC();\n\t    }\n\t};\n\t\n\tPromise.prototype._isProxied = function Promise$_isProxied() {\n\t    return (this._bitField & 4194304) === 4194304;\n\t};\n\t\n\tPromise.prototype._setProxied = function Promise$_setProxied() {\n\t    this._bitField = this._bitField | 4194304;\n\t};\n\t\n\tPromise.prototype._unsetProxied = function Promise$_unsetProxied() {\n\t    this._bitField = this._bitField & (~4194304);\n\t};\n\t\n\tPromise.prototype._isGcQueued = function Promise$_isGcQueued() {\n\t    return (this._bitField & -1073741824) === -1073741824;\n\t};\n\t\n\tPromise.prototype._setGcQueued = function Promise$_setGcQueued() {\n\t    this._bitField = this._bitField | -1073741824;\n\t};\n\t\n\tPromise.prototype._unsetGcQueued = function Promise$_unsetGcQueued() {\n\t    this._bitField = this._bitField & (~-1073741824);\n\t};\n\t\n\tPromise.prototype._queueGC = function Promise$_queueGC() {\n\t    if (this._isGcQueued()) return;\n\t    this._setGcQueued();\n\t    async.invokeLater(this._gc, this, void 0);\n\t};\n\t\n\tPromise.prototype._gc = function Promise$gc() {\n\t    var len = this._length();\n\t    this._unsetAt(0);\n\t    for (var i = 0; i < len; i++) {\n\t        delete this[i];\n\t    }\n\t    this._setLength(0);\n\t    this._unsetGcQueued();\n\t};\n\t\n\tPromise.prototype._queueSettleAt = function Promise$_queueSettleAt(index) {\n\t    if (this._isRejectionUnhandled()) this._unsetRejectionIsUnhandled();\n\t    async.invoke(this._settlePromiseAt, this, index);\n\t};\n\t\n\tPromise.prototype._fulfillUnchecked =\n\tfunction Promise$_fulfillUnchecked(value) {\n\t    if (!this.isPending()) return;\n\t    if (value === this) {\n\t        var err = makeSelfResolutionError();\n\t        this._attachExtraTrace(err);\n\t        return this._rejectUnchecked(err, void 0);\n\t    }\n\t    this._cleanValues();\n\t    this._setFulfilled();\n\t    this._settledValue = value;\n\t    var len = this._length();\n\t\n\t    if (len > 0) {\n\t        async.invoke(this._settlePromises, this, len);\n\t    }\n\t};\n\t\n\tPromise.prototype._rejectUncheckedCheckError =\n\tfunction Promise$_rejectUncheckedCheckError(reason) {\n\t    var trace = canAttach(reason) ? reason : new Error(reason + \"\");\n\t    this._rejectUnchecked(reason, trace === reason ? void 0 : trace);\n\t};\n\t\n\tPromise.prototype._rejectUnchecked =\n\tfunction Promise$_rejectUnchecked(reason, trace) {\n\t    if (!this.isPending()) return;\n\t    if (reason === this) {\n\t        var err = makeSelfResolutionError();\n\t        this._attachExtraTrace(err);\n\t        return this._rejectUnchecked(err);\n\t    }\n\t    this._cleanValues();\n\t    this._setRejected();\n\t    this._settledValue = reason;\n\t\n\t    if (this._isFinal()) {\n\t        async.invokeLater(thrower, void 0, trace === void 0 ? reason : trace);\n\t        return;\n\t    }\n\t    var len = this._length();\n\t\n\t    if (trace !== void 0) this._setCarriedStackTrace(trace);\n\t\n\t    if (len > 0) {\n\t        async.invoke(this._rejectPromises, this, null);\n\t    }\n\t    else {\n\t        this._ensurePossibleRejectionHandled();\n\t    }\n\t};\n\t\n\tPromise.prototype._rejectPromises = function Promise$_rejectPromises() {\n\t    this._settlePromises();\n\t    this._unsetCarriedStackTrace();\n\t};\n\t\n\tPromise.prototype._settlePromises = function Promise$_settlePromises() {\n\t    var len = this._length();\n\t    for (var i = 0; i < len; i+= 5) {\n\t        this._settlePromiseAt(i);\n\t    }\n\t};\n\t\n\tPromise.prototype._ensurePossibleRejectionHandled =\n\tfunction Promise$_ensurePossibleRejectionHandled() {\n\t    this._setRejectionIsUnhandled();\n\t    if (CapturedTrace.possiblyUnhandledRejection !== void 0) {\n\t        async.invokeLater(this._notifyUnhandledRejection, this, void 0);\n\t    }\n\t};\n\t\n\tPromise.prototype._notifyUnhandledRejectionIsHandled =\n\tfunction Promise$_notifyUnhandledRejectionIsHandled() {\n\t    if (typeof unhandledRejectionHandled === \"function\") {\n\t        async.invokeLater(unhandledRejectionHandled, void 0, this);\n\t    }\n\t};\n\t\n\tPromise.prototype._notifyUnhandledRejection =\n\tfunction Promise$_notifyUnhandledRejection() {\n\t    if (this._isRejectionUnhandled()) {\n\t        var reason = this._settledValue;\n\t        var trace = this._getCarriedStackTrace();\n\t\n\t        this._setUnhandledRejectionIsNotified();\n\t\n\t        if (trace !== void 0) {\n\t            this._unsetCarriedStackTrace();\n\t            reason = trace;\n\t        }\n\t        if (typeof CapturedTrace.possiblyUnhandledRejection === \"function\") {\n\t            CapturedTrace.possiblyUnhandledRejection(reason, this);\n\t        }\n\t    }\n\t};\n\t\n\tvar contextStack = [];\n\tPromise.prototype._peekContext = function Promise$_peekContext() {\n\t    var lastIndex = contextStack.length - 1;\n\t    if (lastIndex >= 0) {\n\t        return contextStack[lastIndex];\n\t    }\n\t    return void 0;\n\t\n\t};\n\t\n\tPromise.prototype._pushContext = function Promise$_pushContext() {\n\t    if (!debugging) return;\n\t    contextStack.push(this);\n\t};\n\t\n\tPromise.prototype._popContext = function Promise$_popContext() {\n\t    if (!debugging) return;\n\t    contextStack.pop();\n\t};\n\t\n\tfunction Promise$_CreatePromiseArray(\n\t    promises, PromiseArrayConstructor, boundTo) {\n\t\n\t    var list = null;\n\t    if (isArray(promises)) {\n\t        list = promises;\n\t    }\n\t    else {\n\t        list = Promise._cast(promises, void 0);\n\t        if (list !== promises) {\n\t            list._setBoundTo(boundTo);\n\t        }\n\t        else if (!isPromise(list)) {\n\t            list = null;\n\t        }\n\t    }\n\t    if (list !== null) {\n\t        return new PromiseArrayConstructor(list, boundTo);\n\t    }\n\t    return {\n\t        promise: function() {return apiRejection(\"expecting an array, a promise or a thenable\");}\n\t    };\n\t}\n\t\n\tvar old = global.Promise;\n\tPromise.noConflict = function() {\n\t    if (global.Promise === Promise) {\n\t        global.Promise = old;\n\t    }\n\t    return Promise;\n\t};\n\t\n\tif (!CapturedTrace.isSupported()) {\n\t    Promise.longStackTraces = function(){};\n\t    debugging = false;\n\t}\n\t\n\tPromise._makeSelfResolutionError = makeSelfResolutionError;\n\t__webpack_require__(80)(Promise, NEXT_FILTER);\n\t__webpack_require__(78)(Promise);\n\t__webpack_require__(99)(Promise, INTERNAL);\n\t__webpack_require__(98)(Promise);\n\tPromise.RangeError = RangeError;\n\tPromise.CancellationError = CancellationError;\n\tPromise.TimeoutError = TimeoutError;\n\tPromise.TypeError = TypeError;\n\tPromise.RejectionError = RejectionError;\n\t\n\tutil.toFastProperties(Promise);\n\tutil.toFastProperties(Promise.prototype);\n\t__webpack_require__(100)(Promise,INTERNAL);\n\t__webpack_require__(72)(Promise,Promise$_CreatePromiseArray,PromiseArray);\n\t__webpack_require__(92)(Promise,INTERNAL);\n\t__webpack_require__(74)(Promise);\n\t__webpack_require__(79)(Promise,Promise$_CreatePromiseArray,PromiseArray,apiRejection);\n\t__webpack_require__(81)(Promise,apiRejection,INTERNAL);\n\t__webpack_require__(82)(Promise,PromiseArray,INTERNAL,apiRejection);\n\t__webpack_require__(83)(Promise);\n\t__webpack_require__(88)(Promise,INTERNAL);\n\t__webpack_require__(90)(Promise,PromiseArray);\n\t__webpack_require__(93)(Promise,Promise$_CreatePromiseArray,PromiseArray,apiRejection,INTERNAL);\n\t__webpack_require__(95)(Promise,Promise$_CreatePromiseArray,PromiseArray);\n\t__webpack_require__(97)(Promise,Promise$_CreatePromiseArray,PromiseArray,apiRejection);\n\t__webpack_require__(84)(Promise,isPromiseArrayProxy);\n\t__webpack_require__(75)(Promise,INTERNAL);\n\t\n\tPromise.prototype = Promise.prototype;\n\treturn Promise;\n\t\n\t};\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(55)))\n\n/***/ },\n/* 86 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright (c) 2014 Petka Antonov\n\t * \n\t * Permission is hereby granted, free of charge, to any person obtaining a copy\n\t * of this software and associated documentation files (the \"Software\"), to deal\n\t * in the Software without restriction, including without limitation the rights\n\t * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\t * copies of the Software, and to permit persons to whom the Software is\n\t * furnished to do so, subject to the following conditions:</p>\n\t * \n\t * The above copyright notice and this permission notice shall be included in\n\t * all copies or substantial portions of the Software.\n\t * \n\t * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\t * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\t * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE\n\t * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\t * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\t * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n\t * THE SOFTWARE.\n\t * \n\t */\n\t\"use strict\";\n\tmodule.exports = function(Promise, INTERNAL) {\n\tvar canAttach = __webpack_require__(8).canAttach;\n\tvar util = __webpack_require__(2);\n\tvar async = __webpack_require__(20);\n\tvar hasOwn = {}.hasOwnProperty;\n\tvar isArray = util.isArray;\n\t\n\tfunction toResolutionValue(val) {\n\t    switch(val) {\n\t    case -1: return void 0;\n\t    case -2: return [];\n\t    case -3: return {};\n\t    }\n\t}\n\t\n\tfunction PromiseArray(values, boundTo) {\n\t    var promise = this._promise = new Promise(INTERNAL);\n\t    var parent = void 0;\n\t    if (values instanceof Promise) {\n\t        parent = values;\n\t        if (values._cancellable()) {\n\t            promise._setCancellable();\n\t            promise._cancellationParent = values;\n\t        }\n\t        if (values._isBound()) {\n\t            promise._setBoundTo(boundTo);\n\t        }\n\t    }\n\t    promise._setTrace(parent);\n\t    this._values = values;\n\t    this._length = 0;\n\t    this._totalResolved = 0;\n\t    this._init(void 0, -2);\n\t}\n\tPromiseArray.PropertiesPromiseArray = function() {};\n\t\n\tPromiseArray.prototype.length = function PromiseArray$length() {\n\t    return this._length;\n\t};\n\t\n\tPromiseArray.prototype.promise = function PromiseArray$promise() {\n\t    return this._promise;\n\t};\n\t\n\tPromiseArray.prototype._init =\n\tfunction PromiseArray$_init(_, resolveValueIfEmpty) {\n\t    var values = this._values;\n\t    if (values instanceof Promise) {\n\t        if (values.isFulfilled()) {\n\t            values = values._settledValue;\n\t            if (!isArray(values)) {\n\t                var err = new Promise.TypeError(\"expecting an array, a promise or a thenable\");\n\t                this.__hardReject__(err);\n\t                return;\n\t            }\n\t            this._values = values;\n\t        }\n\t        else if (values.isPending()) {\n\t            values._then(\n\t                this._init,\n\t                this._reject,\n\t                void 0,\n\t                this,\n\t                resolveValueIfEmpty\n\t           );\n\t            return;\n\t        }\n\t        else {\n\t            values._unsetRejectionIsUnhandled();\n\t            this._reject(values._settledValue);\n\t            return;\n\t        }\n\t    }\n\t\n\t    if (values.length === 0) {\n\t        this._resolve(toResolutionValue(resolveValueIfEmpty));\n\t        return;\n\t    }\n\t    var len = values.length;\n\t    var newLen = len;\n\t    var newValues;\n\t    if (this instanceof PromiseArray.PropertiesPromiseArray) {\n\t        newValues = this._values;\n\t    }\n\t    else {\n\t        newValues = new Array(len);\n\t    }\n\t    var isDirectScanNeeded = false;\n\t    for (var i = 0; i < len; ++i) {\n\t        var promise = values[i];\n\t        if (promise === void 0 && !hasOwn.call(values, i)) {\n\t            newLen--;\n\t            continue;\n\t        }\n\t        var maybePromise = Promise._cast(promise, void 0);\n\t        if (maybePromise instanceof Promise) {\n\t            if (maybePromise.isPending()) {\n\t                maybePromise._proxyPromiseArray(this, i);\n\t            }\n\t            else {\n\t                maybePromise._unsetRejectionIsUnhandled();\n\t                isDirectScanNeeded = true;\n\t            }\n\t        }\n\t        else {\n\t            isDirectScanNeeded = true;\n\t        }\n\t        newValues[i] = maybePromise;\n\t    }\n\t    if (newLen === 0) {\n\t        if (resolveValueIfEmpty === -2) {\n\t            this._resolve(newValues);\n\t        }\n\t        else {\n\t            this._resolve(toResolutionValue(resolveValueIfEmpty));\n\t        }\n\t        return;\n\t    }\n\t    this._values = newValues;\n\t    this._length = newLen;\n\t    if (isDirectScanNeeded) {\n\t        var scanMethod = newLen === len\n\t            ? this._scanDirectValues\n\t            : this._scanDirectValuesHoled;\n\t        async.invoke(scanMethod, this, len);\n\t    }\n\t};\n\t\n\tPromiseArray.prototype._settlePromiseAt =\n\tfunction PromiseArray$_settlePromiseAt(index) {\n\t    var value = this._values[index];\n\t    if (!(value instanceof Promise)) {\n\t        this._promiseFulfilled(value, index);\n\t    }\n\t    else if (value.isFulfilled()) {\n\t        this._promiseFulfilled(value._settledValue, index);\n\t    }\n\t    else if (value.isRejected()) {\n\t        this._promiseRejected(value._settledValue, index);\n\t    }\n\t};\n\t\n\tPromiseArray.prototype._scanDirectValuesHoled =\n\tfunction PromiseArray$_scanDirectValuesHoled(len) {\n\t    for (var i = 0; i < len; ++i) {\n\t        if (this._isResolved()) {\n\t            break;\n\t        }\n\t        if (hasOwn.call(this._values, i)) {\n\t            this._settlePromiseAt(i);\n\t        }\n\t    }\n\t};\n\t\n\tPromiseArray.prototype._scanDirectValues =\n\tfunction PromiseArray$_scanDirectValues(len) {\n\t    for (var i = 0; i < len; ++i) {\n\t        if (this._isResolved()) {\n\t            break;\n\t        }\n\t        this._settlePromiseAt(i);\n\t    }\n\t};\n\t\n\tPromiseArray.prototype._isResolved = function PromiseArray$_isResolved() {\n\t    return this._values === null;\n\t};\n\t\n\tPromiseArray.prototype._resolve = function PromiseArray$_resolve(value) {\n\t    this._values = null;\n\t    this._promise._fulfill(value);\n\t};\n\t\n\tPromiseArray.prototype.__hardReject__ =\n\tPromiseArray.prototype._reject = function PromiseArray$_reject(reason) {\n\t    this._values = null;\n\t    var trace = canAttach(reason) ? reason : new Error(reason + \"\");\n\t    this._promise._attachExtraTrace(trace);\n\t    this._promise._reject(reason, trace);\n\t};\n\t\n\tPromiseArray.prototype._promiseProgressed =\n\tfunction PromiseArray$_promiseProgressed(progressValue, index) {\n\t    if (this._isResolved()) return;\n\t    this._promise._progress({\n\t        index: index,\n\t        value: progressValue\n\t    });\n\t};\n\t\n\t\n\tPromiseArray.prototype._promiseFulfilled =\n\tfunction PromiseArray$_promiseFulfilled(value, index) {\n\t    if (this._isResolved()) return;\n\t    this._values[index] = value;\n\t    var totalResolved = ++this._totalResolved;\n\t    if (totalResolved >= this._length) {\n\t        this._resolve(this._values);\n\t    }\n\t};\n\t\n\tPromiseArray.prototype._promiseRejected =\n\tfunction PromiseArray$_promiseRejected(reason, index) {\n\t    if (this._isResolved()) return;\n\t    this._totalResolved++;\n\t    this._reject(reason);\n\t};\n\t\n\treturn PromiseArray;\n\t};\n\n\n/***/ },\n/* 87 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright (c) 2014 Petka Antonov\n\t * \n\t * Permission is hereby granted, free of charge, to any person obtaining a copy\n\t * of this software and associated documentation files (the \"Software\"), to deal\n\t * in the Software without restriction, including without limitation the rights\n\t * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\t * copies of the Software, and to permit persons to whom the Software is\n\t * furnished to do so, subject to the following conditions:</p>\n\t * \n\t * The above copyright notice and this permission notice shall be included in\n\t * all copies or substantial portions of the Software.\n\t * \n\t * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\t * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\t * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE\n\t * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\t * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\t * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n\t * THE SOFTWARE.\n\t * \n\t */\n\t\"use strict\";\n\tmodule.exports = function(Promise, INTERNAL) {\n\tvar errors = __webpack_require__(8);\n\tvar TypeError = errors.TypeError;\n\tvar util = __webpack_require__(2);\n\tvar isArray = util.isArray;\n\tvar errorObj = util.errorObj;\n\tvar tryCatch1 = util.tryCatch1;\n\tvar yieldHandlers = [];\n\t\n\tfunction promiseFromYieldHandler(value) {\n\t    var _yieldHandlers = yieldHandlers;\n\t    var _errorObj = errorObj;\n\t    var _Promise = Promise;\n\t    var len = _yieldHandlers.length;\n\t    for (var i = 0; i < len; ++i) {\n\t        var result = tryCatch1(_yieldHandlers[i], void 0, value);\n\t        if (result === _errorObj) {\n\t            return _Promise.reject(_errorObj.e);\n\t        }\n\t        var maybePromise = _Promise._cast(result,\n\t            promiseFromYieldHandler, void 0);\n\t        if (maybePromise instanceof _Promise) return maybePromise;\n\t    }\n\t    return null;\n\t}\n\t\n\tfunction PromiseSpawn(generatorFunction, receiver) {\n\t    var promise = this._promise = new Promise(INTERNAL);\n\t    promise._setTrace(void 0);\n\t    this._generatorFunction = generatorFunction;\n\t    this._receiver = receiver;\n\t    this._generator = void 0;\n\t}\n\t\n\tPromiseSpawn.prototype.promise = function PromiseSpawn$promise() {\n\t    return this._promise;\n\t};\n\t\n\tPromiseSpawn.prototype._run = function PromiseSpawn$_run() {\n\t    this._generator = this._generatorFunction.call(this._receiver);\n\t    this._receiver =\n\t        this._generatorFunction = void 0;\n\t    this._next(void 0);\n\t};\n\t\n\tPromiseSpawn.prototype._continue = function PromiseSpawn$_continue(result) {\n\t    if (result === errorObj) {\n\t        this._generator = void 0;\n\t        var trace = errors.canAttach(result.e)\n\t            ? result.e : new Error(result.e + \"\");\n\t        this._promise._attachExtraTrace(trace);\n\t        this._promise._reject(result.e, trace);\n\t        return;\n\t    }\n\t\n\t    var value = result.value;\n\t    if (result.done === true) {\n\t        this._generator = void 0;\n\t        if (!this._promise._tryFollow(value)) {\n\t            this._promise._fulfill(value);\n\t        }\n\t    }\n\t    else {\n\t        var maybePromise = Promise._cast(value, PromiseSpawn$_continue, void 0);\n\t        if (!(maybePromise instanceof Promise)) {\n\t            if (isArray(maybePromise)) {\n\t                maybePromise = Promise.all(maybePromise);\n\t            }\n\t            else {\n\t                maybePromise = promiseFromYieldHandler(maybePromise);\n\t            }\n\t            if (maybePromise === null) {\n\t                this._throw(new TypeError(\"A value was yielded that could not be treated as a promise\"));\n\t                return;\n\t            }\n\t        }\n\t        maybePromise._then(\n\t            this._next,\n\t            this._throw,\n\t            void 0,\n\t            this,\n\t            null\n\t       );\n\t    }\n\t};\n\t\n\tPromiseSpawn.prototype._throw = function PromiseSpawn$_throw(reason) {\n\t    if (errors.canAttach(reason))\n\t        this._promise._attachExtraTrace(reason);\n\t    this._continue(\n\t        tryCatch1(this._generator[\"throw\"], this._generator, reason)\n\t   );\n\t};\n\t\n\tPromiseSpawn.prototype._next = function PromiseSpawn$_next(value) {\n\t    this._continue(\n\t        tryCatch1(this._generator.next, this._generator, value)\n\t   );\n\t};\n\t\n\tPromiseSpawn.addYieldHandler = function PromiseSpawn$AddYieldHandler(fn) {\n\t    if (typeof fn !== \"function\") throw new TypeError(\"fn must be a function\");\n\t    yieldHandlers.push(fn);\n\t};\n\t\n\treturn PromiseSpawn;\n\t};\n\n\n/***/ },\n/* 88 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright (c) 2014 Petka Antonov\n\t * \n\t * Permission is hereby granted, free of charge, to any person obtaining a copy\n\t * of this software and associated documentation files (the \"Software\"), to deal\n\t * in the Software without restriction, including without limitation the rights\n\t * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\t * copies of the Software, and to permit persons to whom the Software is\n\t * furnished to do so, subject to the following conditions:</p>\n\t * \n\t * The above copyright notice and this permission notice shall be included in\n\t * all copies or substantial portions of the Software.\n\t * \n\t * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\t * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\t * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE\n\t * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\t * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\t * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n\t * THE SOFTWARE.\n\t * \n\t */\n\t\"use strict\";\n\tmodule.exports = function(Promise, INTERNAL) {\n\tvar THIS = {};\n\tvar util = __webpack_require__(2);\n\tvar es5 = __webpack_require__(19);\n\tvar nodebackForPromise = __webpack_require__(46)\n\t    ._nodebackForPromise;\n\tvar withAppended = util.withAppended;\n\tvar maybeWrapAsError = util.maybeWrapAsError;\n\tvar canEvaluate = util.canEvaluate;\n\tvar deprecated = util.deprecated;\n\tvar TypeError = __webpack_require__(8).TypeError;\n\t\n\t\n\tvar rasyncSuffix = new RegExp(\"Async\" + \"$\");\n\tfunction isPromisified(fn) {\n\t    return fn.__isPromisified__ === true;\n\t}\n\tfunction hasPromisified(obj, key) {\n\t    var containsKey = ((key + \"Async\") in obj);\n\t    return containsKey ? isPromisified(obj[key + \"Async\"])\n\t                       : false;\n\t}\n\tfunction checkValid(ret) {\n\t    for (var i = 0; i < ret.length; i += 2) {\n\t        var key = ret[i];\n\t        if (rasyncSuffix.test(key)) {\n\t            var keyWithoutAsyncSuffix = key.replace(rasyncSuffix, \"\");\n\t            for (var j = 0; j < ret.length; j += 2) {\n\t                if (ret[j] === keyWithoutAsyncSuffix) {\n\t                    throw new TypeError(\"Cannot promisify an API \" +\n\t                        \"that has normal methods with Async-suffix\");\n\t                }\n\t            }\n\t        }\n\t    }\n\t}\n\tvar inheritedMethods = (function() {\n\t    if (es5.isES5) {\n\t        var create = Object.create;\n\t        var getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n\t        return function(cur) {\n\t            var ret = [];\n\t            var visitedKeys = create(null);\n\t            var original = cur;\n\t            while (cur !== null) {\n\t                var keys = es5.keys(cur);\n\t                for (var i = 0, len = keys.length; i < len; ++i) {\n\t                    var key = keys[i];\n\t                    if (visitedKeys[key]) continue;\n\t                    visitedKeys[key] = true;\n\t                    var desc = getOwnPropertyDescriptor(cur, key);\n\t\n\t                    if (desc != null &&\n\t                        typeof desc.value === \"function\" &&\n\t                        !isPromisified(desc.value) &&\n\t                        !hasPromisified(original, key)) {\n\t                        ret.push(key, desc.value);\n\t                    }\n\t                }\n\t                cur = es5.getPrototypeOf(cur);\n\t            }\n\t            checkValid(ret);\n\t            return ret;\n\t        };\n\t    }\n\t    else {\n\t        return function(obj) {\n\t            var ret = [];\n\t            /*jshint forin:false */\n\t            for (var key in obj) {\n\t                var fn = obj[key];\n\t                if (typeof fn === \"function\" &&\n\t                    !isPromisified(fn) &&\n\t                    !hasPromisified(obj, key)) {\n\t                    ret.push(key, fn);\n\t                }\n\t            }\n\t            checkValid(ret);\n\t            return ret;\n\t        };\n\t    }\n\t})();\n\t\n\tfunction switchCaseArgumentOrder(likelyArgumentCount) {\n\t    var ret = [likelyArgumentCount];\n\t    var min = Math.max(0, likelyArgumentCount - 1 - 5);\n\t    for(var i = likelyArgumentCount - 1; i >= min; --i) {\n\t        if (i === likelyArgumentCount) continue;\n\t        ret.push(i);\n\t    }\n\t    for(var i = likelyArgumentCount + 1; i <= 5; ++i) {\n\t        ret.push(i);\n\t    }\n\t    return ret;\n\t}\n\t\n\tfunction parameterDeclaration(parameterCount) {\n\t    var ret = new Array(parameterCount);\n\t    for(var i = 0; i < ret.length; ++i) {\n\t        ret[i] = \"_arg\" + i;\n\t    }\n\t    return ret.join(\", \");\n\t}\n\t\n\tfunction parameterCount(fn) {\n\t    if (typeof fn.length === \"number\") {\n\t        return Math.max(Math.min(fn.length, 1023 + 1), 0);\n\t    }\n\t    return 0;\n\t}\n\t\n\tvar rident = /^[a-z$_][a-z$_0-9]*$/i;\n\tfunction propertyAccess(id) {\n\t    if (rident.test(id)) {\n\t        return \".\" + id;\n\t    }\n\t    else return \"['\" + id.replace(/(['\\\\])/g, \"\\\\$1\") + \"']\";\n\t}\n\t\n\tfunction makeNodePromisifiedEval(callback, receiver, originalName, fn) {\n\t    var newParameterCount = Math.max(0, parameterCount(fn) - 1);\n\t    var argumentOrder = switchCaseArgumentOrder(newParameterCount);\n\t\n\t    var callbackName = (typeof originalName === \"string\" ?\n\t        originalName + \"Async\" :\n\t        \"promisified\");\n\t\n\t    function generateCallForArgumentCount(count) {\n\t        var args = new Array(count);\n\t        for (var i = 0, len = args.length; i < len; ++i) {\n\t            args[i] = \"arguments[\" + i + \"]\";\n\t        }\n\t        var comma = count > 0 ? \",\" : \"\";\n\t\n\t        if (typeof callback === \"string\" &&\n\t            receiver === THIS) {\n\t            return \"this\" + propertyAccess(callback) + \"(\"+args.join(\",\") +\n\t                comma +\" fn);\"+\n\t                \"break;\";\n\t        }\n\t        return (receiver === void 0\n\t            ? \"callback(\"+args.join(\",\")+ comma +\" fn);\"\n\t            : \"callback.call(\"+(receiver === THIS\n\t                ? \"this\"\n\t                : \"receiver\")+\", \"+args.join(\",\") + comma + \" fn);\") +\n\t        \"break;\";\n\t    }\n\t\n\t    if (!rident.test(callbackName)) {\n\t        callbackName = \"promisified\";\n\t    }\n\t\n\t    function generateArgumentSwitchCase() {\n\t        var ret = \"\";\n\t        for(var i = 0; i < argumentOrder.length; ++i) {\n\t            ret += \"case \" + argumentOrder[i] +\":\" +\n\t                generateCallForArgumentCount(argumentOrder[i]);\n\t        }\n\t        ret += \"default: var args = new Array(len + 1);\" +\n\t            \"var i = 0;\" +\n\t            \"for (var i = 0; i < len; ++i) { \" +\n\t            \"   args[i] = arguments[i];\" +\n\t            \"}\" +\n\t            \"args[i] = fn;\" +\n\t\n\t            (typeof callback === \"string\"\n\t            ? \"this\" + propertyAccess(callback) + \".apply(\"\n\t            : \"callback.apply(\") +\n\t\n\t            (receiver === THIS ? \"this\" : \"receiver\") +\n\t            \", args); break;\";\n\t        return ret;\n\t    }\n\t\n\t    return new Function(\"Promise\", \"callback\", \"receiver\",\n\t            \"withAppended\", \"maybeWrapAsError\", \"nodebackForPromise\",\n\t            \"INTERNAL\",\n\t        \"var ret = function \" + callbackName +\n\t        \"(\" + parameterDeclaration(newParameterCount) + \") {\\\"use strict\\\";\" +\n\t        \"var len = arguments.length;\" +\n\t        \"var promise = new Promise(INTERNAL);\"+\n\t        \"promise._setTrace(void 0);\" +\n\t        \"var fn = nodebackForPromise(promise);\"+\n\t        \"try {\" +\n\t        \"switch(len) {\" +\n\t        generateArgumentSwitchCase() +\n\t        \"}\" +\n\t        \"}\" +\n\t        \"catch(e){ \" +\n\t        \"var wrapped = maybeWrapAsError(e);\" +\n\t        \"promise._attachExtraTrace(wrapped);\" +\n\t        \"promise._reject(wrapped);\" +\n\t        \"}\" +\n\t        \"return promise;\" +\n\t        \"\" +\n\t        \"}; ret.__isPromisified__ = true; return ret;\"\n\t   )(Promise, callback, receiver, withAppended,\n\t        maybeWrapAsError, nodebackForPromise, INTERNAL);\n\t}\n\t\n\tfunction makeNodePromisifiedClosure(callback, receiver) {\n\t    function promisified() {\n\t        var _receiver = receiver;\n\t        if (receiver === THIS) _receiver = this;\n\t        if (typeof callback === \"string\") {\n\t            callback = _receiver[callback];\n\t        }\n\t        var promise = new Promise(INTERNAL);\n\t        promise._setTrace(void 0);\n\t        var fn = nodebackForPromise(promise);\n\t        try {\n\t            callback.apply(_receiver, withAppended(arguments, fn));\n\t        }\n\t        catch(e) {\n\t            var wrapped = maybeWrapAsError(e);\n\t            promise._attachExtraTrace(wrapped);\n\t            promise._reject(wrapped);\n\t        }\n\t        return promise;\n\t    }\n\t    promisified.__isPromisified__ = true;\n\t    return promisified;\n\t}\n\t\n\tvar makeNodePromisified = canEvaluate\n\t    ? makeNodePromisifiedEval\n\t    : makeNodePromisifiedClosure;\n\t\n\tfunction _promisify(callback, receiver, isAll) {\n\t    if (isAll) {\n\t        var methods = inheritedMethods(callback);\n\t        for (var i = 0, len = methods.length; i < len; i+= 2) {\n\t            var key = methods[i];\n\t            var fn = methods[i+1];\n\t            var promisifiedKey = key + \"Async\";\n\t            callback[promisifiedKey] = makeNodePromisified(key, THIS, key, fn);\n\t        }\n\t        util.toFastProperties(callback);\n\t        return callback;\n\t    }\n\t    else {\n\t        return makeNodePromisified(callback, receiver, void 0, callback);\n\t    }\n\t}\n\t\n\tPromise.promisify = function Promise$Promisify(fn, receiver) {\n\t    if (typeof fn === \"object\" && fn !== null) {\n\t        deprecated(\"Promise.promisify for promisifying entire objects is deprecated. Use Promise.promisifyAll instead.\");\n\t        return _promisify(fn, receiver, true);\n\t    }\n\t    if (typeof fn !== \"function\") {\n\t        throw new TypeError(\"fn must be a function\");\n\t    }\n\t    if (isPromisified(fn)) {\n\t        return fn;\n\t    }\n\t    return _promisify(\n\t        fn,\n\t        arguments.length < 2 ? THIS : receiver,\n\t        false);\n\t};\n\t\n\tPromise.promisifyAll = function Promise$PromisifyAll(target) {\n\t    if (typeof target !== \"function\" && typeof target !== \"object\") {\n\t        throw new TypeError(\"the target of promisifyAll must be an object or a function\");\n\t    }\n\t    return _promisify(target, void 0, true);\n\t};\n\t};\n\t\n\n\n/***/ },\n/* 89 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright (c) 2014 Petka Antonov\n\t * \n\t * Permission is hereby granted, free of charge, to any person obtaining a copy\n\t * of this software and associated documentation files (the \"Software\"), to deal\n\t * in the Software without restriction, including without limitation the rights\n\t * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\t * copies of the Software, and to permit persons to whom the Software is\n\t * furnished to do so, subject to the following conditions:</p>\n\t * \n\t * The above copyright notice and this permission notice shall be included in\n\t * all copies or substantial portions of the Software.\n\t * \n\t * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\t * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\t * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE\n\t * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\t * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\t * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n\t * THE SOFTWARE.\n\t * \n\t */\n\t\"use strict\";\n\tmodule.exports = function(Promise, PromiseArray) {\n\tvar util = __webpack_require__(2);\n\tvar inherits = util.inherits;\n\tvar es5 = __webpack_require__(19);\n\t\n\tfunction PropertiesPromiseArray(obj, boundTo) {\n\t    var keys = es5.keys(obj);\n\t    var values = new Array(keys.length);\n\t    for (var i = 0, len = values.length; i < len; ++i) {\n\t        values[i] = obj[keys[i]];\n\t    }\n\t    this.constructor$(values, boundTo);\n\t    if (!this._isResolved()) {\n\t        for (var i = 0, len = keys.length; i < len; ++i) {\n\t            values.push(keys[i]);\n\t        }\n\t    }\n\t}\n\tinherits(PropertiesPromiseArray, PromiseArray);\n\t\n\tPropertiesPromiseArray.prototype._init =\n\tfunction PropertiesPromiseArray$_init() {\n\t    this._init$(void 0, -3) ;\n\t};\n\t\n\tPropertiesPromiseArray.prototype._promiseFulfilled =\n\tfunction PropertiesPromiseArray$_promiseFulfilled(value, index) {\n\t    if (this._isResolved()) return;\n\t    this._values[index] = value;\n\t    var totalResolved = ++this._totalResolved;\n\t    if (totalResolved >= this._length) {\n\t        var val = {};\n\t        var keyOffset = this.length();\n\t        for (var i = 0, len = this.length(); i < len; ++i) {\n\t            val[this._values[i + keyOffset]] = this._values[i];\n\t        }\n\t        this._resolve(val);\n\t    }\n\t};\n\t\n\tPropertiesPromiseArray.prototype._promiseProgressed =\n\tfunction PropertiesPromiseArray$_promiseProgressed(value, index) {\n\t    if (this._isResolved()) return;\n\t\n\t    this._promise._progress({\n\t        key: this._values[index + this.length()],\n\t        value: value\n\t    });\n\t};\n\t\n\tPromiseArray.PropertiesPromiseArray = PropertiesPromiseArray;\n\t\n\treturn PropertiesPromiseArray;\n\t};\n\n\n/***/ },\n/* 90 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright (c) 2014 Petka Antonov\n\t * \n\t * Permission is hereby granted, free of charge, to any person obtaining a copy\n\t * of this software and associated documentation files (the \"Software\"), to deal\n\t * in the Software without restriction, including without limitation the rights\n\t * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\t * copies of the Software, and to permit persons to whom the Software is\n\t * furnished to do so, subject to the following conditions:</p>\n\t * \n\t * The above copyright notice and this permission notice shall be included in\n\t * all copies or substantial portions of the Software.\n\t * \n\t * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\t * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\t * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE\n\t * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\t * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\t * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n\t * THE SOFTWARE.\n\t * \n\t */\n\t\"use strict\";\n\tmodule.exports = function(Promise, PromiseArray) {\n\tvar PropertiesPromiseArray = __webpack_require__(89)(\n\t    Promise, PromiseArray);\n\tvar util = __webpack_require__(2);\n\tvar apiRejection = __webpack_require__(29)(Promise);\n\tvar isObject = util.isObject;\n\t\n\tfunction Promise$_Props(promises, useBound) {\n\t    var ret;\n\t    var castValue = Promise._cast(promises, void 0);\n\t\n\t    if (!isObject(castValue)) {\n\t        return apiRejection(\"cannot await properties of a non-object\");\n\t    }\n\t    else if (castValue instanceof Promise) {\n\t        ret = castValue._then(Promise.props, void 0, void 0,\n\t                        void 0, void 0);\n\t    }\n\t    else {\n\t        ret = new PropertiesPromiseArray(\n\t            castValue,\n\t            useBound === true && castValue._isBound()\n\t                        ? castValue._boundTo\n\t                        : void 0\n\t       ).promise();\n\t        useBound = false;\n\t    }\n\t    if (useBound === true && castValue._isBound()) {\n\t        ret._setBoundTo(castValue._boundTo);\n\t    }\n\t    return ret;\n\t}\n\t\n\tPromise.prototype.props = function Promise$props() {\n\t    return Promise$_Props(this, true);\n\t};\n\t\n\tPromise.props = function Promise$Props(promises) {\n\t    return Promise$_Props(promises, false);\n\t};\n\t};\n\n\n/***/ },\n/* 91 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright (c) 2014 Petka Antonov\n\t * \n\t * Permission is hereby granted, free of charge, to any person obtaining a copy\n\t * of this software and associated documentation files (the \"Software\"), to deal\n\t * in the Software without restriction, including without limitation the rights\n\t * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\t * copies of the Software, and to permit persons to whom the Software is\n\t * furnished to do so, subject to the following conditions:</p>\n\t * \n\t * The above copyright notice and this permission notice shall be included in\n\t * all copies or substantial portions of the Software.\n\t * \n\t * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\t * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\t * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE\n\t * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\t * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\t * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n\t * THE SOFTWARE.\n\t * \n\t */\n\t\"use strict\";\n\tfunction arrayCopy(src, srcIndex, dst, dstIndex, len) {\n\t    for (var j = 0; j < len; ++j) {\n\t        dst[j + dstIndex] = src[j + srcIndex];\n\t    }\n\t}\n\t\n\tfunction pow2AtLeast(n) {\n\t    n = n >>> 0;\n\t    n = n - 1;\n\t    n = n | (n >> 1);\n\t    n = n | (n >> 2);\n\t    n = n | (n >> 4);\n\t    n = n | (n >> 8);\n\t    n = n | (n >> 16);\n\t    return n + 1;\n\t}\n\t\n\tfunction getCapacity(capacity) {\n\t    if (typeof capacity !== \"number\") return 16;\n\t    return pow2AtLeast(\n\t        Math.min(\n\t            Math.max(16, capacity), 1073741824)\n\t   );\n\t}\n\t\n\tfunction Queue(capacity) {\n\t    this._capacity = getCapacity(capacity);\n\t    this._length = 0;\n\t    this._front = 0;\n\t    this._makeCapacity();\n\t}\n\t\n\tQueue.prototype._willBeOverCapacity =\n\tfunction Queue$_willBeOverCapacity(size) {\n\t    return this._capacity < size;\n\t};\n\t\n\tQueue.prototype._pushOne = function Queue$_pushOne(arg) {\n\t    var length = this.length();\n\t    this._checkCapacity(length + 1);\n\t    var i = (this._front + length) & (this._capacity - 1);\n\t    this[i] = arg;\n\t    this._length = length + 1;\n\t};\n\t\n\tQueue.prototype.push = function Queue$push(fn, receiver, arg) {\n\t    var length = this.length() + 3;\n\t    if (this._willBeOverCapacity(length)) {\n\t        this._pushOne(fn);\n\t        this._pushOne(receiver);\n\t        this._pushOne(arg);\n\t        return;\n\t    }\n\t    var j = this._front + length - 3;\n\t    this._checkCapacity(length);\n\t    var wrapMask = this._capacity - 1;\n\t    this[(j + 0) & wrapMask] = fn;\n\t    this[(j + 1) & wrapMask] = receiver;\n\t    this[(j + 2) & wrapMask] = arg;\n\t    this._length = length;\n\t};\n\t\n\tQueue.prototype.shift = function Queue$shift() {\n\t    var front = this._front,\n\t        ret = this[front];\n\t\n\t    this[front] = void 0;\n\t    this._front = (front + 1) & (this._capacity - 1);\n\t    this._length--;\n\t    return ret;\n\t};\n\t\n\tQueue.prototype.length = function Queue$length() {\n\t    return this._length;\n\t};\n\t\n\tQueue.prototype._makeCapacity = function Queue$_makeCapacity() {\n\t    var len = this._capacity;\n\t    for (var i = 0; i < len; ++i) {\n\t        this[i] = void 0;\n\t    }\n\t};\n\t\n\tQueue.prototype._checkCapacity = function Queue$_checkCapacity(size) {\n\t    if (this._capacity < size) {\n\t        this._resizeTo(this._capacity << 3);\n\t    }\n\t};\n\t\n\tQueue.prototype._resizeTo = function Queue$_resizeTo(capacity) {\n\t    var oldFront = this._front;\n\t    var oldCapacity = this._capacity;\n\t    var oldQueue = new Array(oldCapacity);\n\t    var length = this.length();\n\t\n\t    arrayCopy(this, 0, oldQueue, 0, oldCapacity);\n\t    this._capacity = capacity;\n\t    this._makeCapacity();\n\t    this._front = 0;\n\t    if (oldFront + length <= oldCapacity) {\n\t        arrayCopy(oldQueue, oldFront, this, 0, length);\n\t    }\n\t    else {        var lengthBeforeWrapping =\n\t            length - ((oldFront + length) & (oldCapacity - 1));\n\t\n\t        arrayCopy(oldQueue, oldFront, this, 0, lengthBeforeWrapping);\n\t        arrayCopy(oldQueue, 0, this, lengthBeforeWrapping,\n\t                    length - lengthBeforeWrapping);\n\t    }\n\t};\n\t\n\tmodule.exports = Queue;\n\n\n/***/ },\n/* 92 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright (c) 2014 Petka Antonov\n\t * \n\t * Permission is hereby granted, free of charge, to any person obtaining a copy\n\t * of this software and associated documentation files (the \"Software\"), to deal\n\t * in the Software without restriction, including without limitation the rights\n\t * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\t * copies of the Software, and to permit persons to whom the Software is\n\t * furnished to do so, subject to the following conditions:</p>\n\t * \n\t * The above copyright notice and this permission notice shall be included in\n\t * all copies or substantial portions of the Software.\n\t * \n\t * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\t * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\t * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE\n\t * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\t * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\t * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n\t * THE SOFTWARE.\n\t * \n\t */\n\t\"use strict\";\n\tmodule.exports = function(Promise, INTERNAL) {\n\tvar apiRejection = __webpack_require__(29)(Promise);\n\tvar isArray = __webpack_require__(2).isArray;\n\t\n\tvar raceLater = function Promise$_raceLater(promise) {\n\t    return promise.then(function(array) {\n\t        return Promise$_Race(array, promise);\n\t    });\n\t};\n\t\n\tvar hasOwn = {}.hasOwnProperty;\n\tfunction Promise$_Race(promises, parent) {\n\t    var maybePromise = Promise._cast(promises, void 0);\n\t\n\t    if (maybePromise instanceof Promise) {\n\t        return raceLater(maybePromise);\n\t    }\n\t    else if (!isArray(promises)) {\n\t        return apiRejection(\"expecting an array, a promise or a thenable\");\n\t    }\n\t\n\t    var ret = new Promise(INTERNAL);\n\t    ret._setTrace(parent);\n\t    if (parent !== void 0) {\n\t        if (parent._isBound()) {\n\t            ret._setBoundTo(parent._boundTo);\n\t        }\n\t        if (parent._cancellable()) {\n\t            ret._setCancellable();\n\t            ret._cancellationParent = parent;\n\t        }\n\t    }\n\t    var fulfill = ret._fulfill;\n\t    var reject = ret._reject;\n\t    for (var i = 0, len = promises.length; i < len; ++i) {\n\t        var val = promises[i];\n\t\n\t        if (val === void 0 && !(hasOwn.call(promises, i))) {\n\t            continue;\n\t        }\n\t\n\t        Promise.cast(val)._then(\n\t            fulfill,\n\t            reject,\n\t            void 0,\n\t            ret,\n\t            null\n\t       );\n\t    }\n\t    return ret;\n\t}\n\t\n\tPromise.race = function Promise$Race(promises) {\n\t    return Promise$_Race(promises, void 0);\n\t};\n\t\n\tPromise.prototype.race = function Promise$race() {\n\t    return Promise$_Race(this, void 0);\n\t};\n\t\n\t};\n\n\n/***/ },\n/* 93 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright (c) 2014 Petka Antonov\n\t * \n\t * Permission is hereby granted, free of charge, to any person obtaining a copy\n\t * of this software and associated documentation files (the \"Software\"), to deal\n\t * in the Software without restriction, including without limitation the rights\n\t * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\t * copies of the Software, and to permit persons to whom the Software is\n\t * furnished to do so, subject to the following conditions:</p>\n\t * \n\t * The above copyright notice and this permission notice shall be included in\n\t * all copies or substantial portions of the Software.\n\t * \n\t * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\t * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\t * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE\n\t * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\t * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\t * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n\t * THE SOFTWARE.\n\t * \n\t */\n\t\"use strict\";\n\tmodule.exports = function(\n\t    Promise, Promise$_CreatePromiseArray,\n\t    PromiseArray, apiRejection, INTERNAL) {\n\t\n\tfunction Reduction(callback, index, accum, items, receiver) {\n\t    this.promise = new Promise(INTERNAL);\n\t    this.index = index;\n\t    this.length = items.length;\n\t    this.items = items;\n\t    this.callback = callback;\n\t    this.receiver = receiver;\n\t    this.accum = accum;\n\t}\n\t\n\tReduction.prototype.reject = function Reduction$reject(e) {\n\t    this.promise._reject(e);\n\t};\n\t\n\tReduction.prototype.fulfill = function Reduction$fulfill(value, index) {\n\t    this.accum = value;\n\t    this.index = index + 1;\n\t    this.iterate();\n\t};\n\t\n\tReduction.prototype.iterate = function Reduction$iterate() {\n\t    var i = this.index;\n\t    var len = this.length;\n\t    var items = this.items;\n\t    var result = this.accum;\n\t    var receiver = this.receiver;\n\t    var callback = this.callback;\n\t\n\t    for (; i < len; ++i) {\n\t        result = callback.call(receiver, result, items[i], i, len);\n\t        result = Promise._cast(result, void 0);\n\t\n\t        if (result instanceof Promise) {\n\t            result._then(\n\t                this.fulfill, this.reject, void 0, this, i);\n\t            return;\n\t        }\n\t    }\n\t    this.promise._fulfill(result);\n\t};\n\t\n\tfunction Promise$_reducer(fulfilleds, initialValue) {\n\t    var fn = this;\n\t    var receiver = void 0;\n\t    if (typeof fn !== \"function\")  {\n\t        receiver = fn.receiver;\n\t        fn = fn.fn;\n\t    }\n\t    var len = fulfilleds.length;\n\t    var accum = void 0;\n\t    var startIndex = 0;\n\t\n\t    if (initialValue !== void 0) {\n\t        accum = initialValue;\n\t        startIndex = 0;\n\t    }\n\t    else {\n\t        startIndex = 1;\n\t        if (len > 0) accum = fulfilleds[0];\n\t    }\n\t    var i = startIndex;\n\t\n\t    if (i >= len) {\n\t        return accum;\n\t    }\n\t\n\t    var reduction = new Reduction(fn, i, accum, fulfilleds, receiver);\n\t    reduction.iterate();\n\t    return reduction.promise;\n\t}\n\t\n\tfunction Promise$_unpackReducer(fulfilleds) {\n\t    var fn = this.fn;\n\t    var initialValue = this.initialValue;\n\t    return Promise$_reducer.call(fn, fulfilleds, initialValue);\n\t}\n\t\n\tfunction Promise$_slowReduce(\n\t    promises, fn, initialValue, useBound) {\n\t    return initialValue._then(function(initialValue) {\n\t        return Promise$_Reduce(\n\t            promises, fn, initialValue, useBound);\n\t    }, void 0, void 0, void 0, void 0);\n\t}\n\t\n\tfunction Promise$_Reduce(promises, fn, initialValue, useBound) {\n\t    if (typeof fn !== \"function\") {\n\t        return apiRejection(\"fn must be a function\");\n\t    }\n\t\n\t    if (useBound === true && promises._isBound()) {\n\t        fn = {\n\t            fn: fn,\n\t            receiver: promises._boundTo\n\t        };\n\t    }\n\t\n\t    if (initialValue !== void 0) {\n\t        if (initialValue instanceof Promise) {\n\t            if (initialValue.isFulfilled()) {\n\t                initialValue = initialValue._settledValue;\n\t            }\n\t            else {\n\t                return Promise$_slowReduce(promises,\n\t                    fn, initialValue, useBound);\n\t            }\n\t        }\n\t\n\t        return Promise$_CreatePromiseArray(promises, PromiseArray,\n\t            useBound === true && promises._isBound()\n\t                ? promises._boundTo\n\t                : void 0)\n\t            .promise()\n\t            ._then(Promise$_unpackReducer, void 0, void 0, {\n\t                fn: fn,\n\t                initialValue: initialValue\n\t            }, void 0);\n\t    }\n\t    return Promise$_CreatePromiseArray(promises, PromiseArray,\n\t            useBound === true && promises._isBound()\n\t                ? promises._boundTo\n\t                : void 0).promise()\n\t        ._then(Promise$_reducer, void 0, void 0, fn, void 0);\n\t}\n\t\n\t\n\tPromise.reduce = function Promise$Reduce(promises, fn, initialValue) {\n\t    return Promise$_Reduce(promises, fn, initialValue, false);\n\t};\n\t\n\tPromise.prototype.reduce = function Promise$reduce(fn, initialValue) {\n\t    return Promise$_Reduce(this, fn, initialValue, true);\n\t};\n\t};\n\n\n/***/ },\n/* 94 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(process) {/**\n\t * Copyright (c) 2014 Petka Antonov\n\t * \n\t * Permission is hereby granted, free of charge, to any person obtaining a copy\n\t * of this software and associated documentation files (the \"Software\"), to deal\n\t * in the Software without restriction, including without limitation the rights\n\t * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\t * copies of the Software, and to permit persons to whom the Software is\n\t * furnished to do so, subject to the following conditions:</p>\n\t * \n\t * The above copyright notice and this permission notice shall be included in\n\t * all copies or substantial portions of the Software.\n\t * \n\t * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\t * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\t * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE\n\t * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\t * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\t * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n\t * THE SOFTWARE.\n\t * \n\t */\n\t\"use strict\";\n\tvar global = __webpack_require__(21);\n\tvar schedule;\n\tif (typeof process !== \"undefined\" && process !== null &&\n\t    typeof process.cwd === \"function\" &&\n\t    typeof process.nextTick === \"function\" &&\n\t    typeof process.version === \"string\") {\n\t    schedule = function Promise$_Scheduler(fn) {\n\t        process.nextTick(fn);\n\t    };\n\t}\n\telse if ((typeof global.MutationObserver === \"function\" ||\n\t        typeof global.WebkitMutationObserver === \"function\" ||\n\t        typeof global.WebKitMutationObserver === \"function\") &&\n\t        typeof document !== \"undefined\" &&\n\t        typeof document.createElement === \"function\") {\n\t\n\t\n\t    schedule = (function(){\n\t        var MutationObserver = global.MutationObserver ||\n\t            global.WebkitMutationObserver ||\n\t            global.WebKitMutationObserver;\n\t        var div = document.createElement(\"div\");\n\t        var queuedFn = void 0;\n\t        var observer = new MutationObserver(\n\t            function Promise$_Scheduler() {\n\t                var fn = queuedFn;\n\t                queuedFn = void 0;\n\t                fn();\n\t            }\n\t       );\n\t        observer.observe(div, {\n\t            attributes: true\n\t        });\n\t        return function Promise$_Scheduler(fn) {\n\t            queuedFn = fn;\n\t            div.setAttribute(\"class\", \"foo\");\n\t        };\n\t\n\t    })();\n\t}\n\telse if (typeof global.postMessage === \"function\" &&\n\t    typeof global.importScripts !== \"function\" &&\n\t    typeof global.addEventListener === \"function\" &&\n\t    typeof global.removeEventListener === \"function\") {\n\t\n\t    var MESSAGE_KEY = \"bluebird_message_key_\" + Math.random();\n\t    schedule = (function(){\n\t        var queuedFn = void 0;\n\t\n\t        function Promise$_Scheduler(e) {\n\t            if (e.source === global &&\n\t                e.data === MESSAGE_KEY) {\n\t                var fn = queuedFn;\n\t                queuedFn = void 0;\n\t                fn();\n\t            }\n\t        }\n\t\n\t        global.addEventListener(\"message\", Promise$_Scheduler, false);\n\t\n\t        return function Promise$_Scheduler(fn) {\n\t            queuedFn = fn;\n\t            global.postMessage(\n\t                MESSAGE_KEY, \"*\"\n\t           );\n\t        };\n\t\n\t    })();\n\t}\n\telse if (typeof global.MessageChannel === \"function\") {\n\t    schedule = (function(){\n\t        var queuedFn = void 0;\n\t\n\t        var channel = new global.MessageChannel();\n\t        channel.port1.onmessage = function Promise$_Scheduler() {\n\t                var fn = queuedFn;\n\t                queuedFn = void 0;\n\t                fn();\n\t        };\n\t\n\t        return function Promise$_Scheduler(fn) {\n\t            queuedFn = fn;\n\t            channel.port2.postMessage(null);\n\t        };\n\t    })();\n\t}\n\telse if (global.setTimeout) {\n\t    schedule = function Promise$_Scheduler(fn) {\n\t        setTimeout(fn, 4);\n\t    };\n\t}\n\telse {\n\t    schedule = function Promise$_Scheduler(fn) {\n\t        fn();\n\t    };\n\t}\n\t\n\tmodule.exports = schedule;\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(55)))\n\n/***/ },\n/* 95 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright (c) 2014 Petka Antonov\n\t * \n\t * Permission is hereby granted, free of charge, to any person obtaining a copy\n\t * of this software and associated documentation files (the \"Software\"), to deal\n\t * in the Software without restriction, including without limitation the rights\n\t * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\t * copies of the Software, and to permit persons to whom the Software is\n\t * furnished to do so, subject to the following conditions:</p>\n\t * \n\t * The above copyright notice and this permission notice shall be included in\n\t * all copies or substantial portions of the Software.\n\t * \n\t * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\t * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\t * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE\n\t * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\t * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\t * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n\t * THE SOFTWARE.\n\t * \n\t */\n\t\"use strict\";\n\tmodule.exports =\n\t    function(Promise, Promise$_CreatePromiseArray, PromiseArray) {\n\t\n\tvar SettledPromiseArray = __webpack_require__(96)(\n\t    Promise, PromiseArray);\n\t\n\tfunction Promise$_Settle(promises, useBound) {\n\t    return Promise$_CreatePromiseArray(\n\t        promises,\n\t        SettledPromiseArray,\n\t        useBound === true && promises._isBound()\n\t            ? promises._boundTo\n\t            : void 0\n\t   ).promise();\n\t}\n\t\n\tPromise.settle = function Promise$Settle(promises) {\n\t    return Promise$_Settle(promises, false);\n\t};\n\t\n\tPromise.prototype.settle = function Promise$settle() {\n\t    return Promise$_Settle(this, true);\n\t};\n\t};\n\n\n/***/ },\n/* 96 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright (c) 2014 Petka Antonov\n\t * \n\t * Permission is hereby granted, free of charge, to any person obtaining a copy\n\t * of this software and associated documentation files (the \"Software\"), to deal\n\t * in the Software without restriction, including without limitation the rights\n\t * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\t * copies of the Software, and to permit persons to whom the Software is\n\t * furnished to do so, subject to the following conditions:</p>\n\t * \n\t * The above copyright notice and this permission notice shall be included in\n\t * all copies or substantial portions of the Software.\n\t * \n\t * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\t * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\t * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE\n\t * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\t * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\t * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n\t * THE SOFTWARE.\n\t * \n\t */\n\t\"use strict\";\n\tmodule.exports = function(Promise, PromiseArray) {\n\tvar PromiseInspection = Promise.PromiseInspection;\n\tvar util = __webpack_require__(2);\n\tvar inherits = util.inherits;\n\tfunction SettledPromiseArray(values, boundTo) {\n\t    this.constructor$(values, boundTo);\n\t}\n\tinherits(SettledPromiseArray, PromiseArray);\n\t\n\tSettledPromiseArray.prototype._promiseResolved =\n\tfunction SettledPromiseArray$_promiseResolved(index, inspection) {\n\t    this._values[index] = inspection;\n\t    var totalResolved = ++this._totalResolved;\n\t    if (totalResolved >= this._length) {\n\t        this._resolve(this._values);\n\t    }\n\t};\n\t\n\tSettledPromiseArray.prototype._promiseFulfilled =\n\tfunction SettledPromiseArray$_promiseFulfilled(value, index) {\n\t    if (this._isResolved()) return;\n\t    var ret = new PromiseInspection();\n\t    ret._bitField = 268435456;\n\t    ret._settledValue = value;\n\t    this._promiseResolved(index, ret);\n\t};\n\tSettledPromiseArray.prototype._promiseRejected =\n\tfunction SettledPromiseArray$_promiseRejected(reason, index) {\n\t    if (this._isResolved()) return;\n\t    var ret = new PromiseInspection();\n\t    ret._bitField = 134217728;\n\t    ret._settledValue = reason;\n\t    this._promiseResolved(index, ret);\n\t};\n\t\n\treturn SettledPromiseArray;\n\t};\n\n\n/***/ },\n/* 97 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright (c) 2014 Petka Antonov\n\t * \n\t * Permission is hereby granted, free of charge, to any person obtaining a copy\n\t * of this software and associated documentation files (the \"Software\"), to deal\n\t * in the Software without restriction, including without limitation the rights\n\t * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\t * copies of the Software, and to permit persons to whom the Software is\n\t * furnished to do so, subject to the following conditions:</p>\n\t * \n\t * The above copyright notice and this permission notice shall be included in\n\t * all copies or substantial portions of the Software.\n\t * \n\t * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\t * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\t * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE\n\t * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\t * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\t * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n\t * THE SOFTWARE.\n\t * \n\t */\n\t\"use strict\";\n\tmodule.exports =\n\tfunction(Promise, Promise$_CreatePromiseArray, PromiseArray, apiRejection) {\n\t\n\tvar SomePromiseArray = __webpack_require__(47)(PromiseArray);\n\tfunction Promise$_Some(promises, howMany, useBound) {\n\t    if ((howMany | 0) !== howMany || howMany < 0) {\n\t        return apiRejection(\"expecting a positive integer\");\n\t    }\n\t    var ret = Promise$_CreatePromiseArray(\n\t        promises,\n\t        SomePromiseArray,\n\t        useBound === true && promises._isBound()\n\t            ? promises._boundTo\n\t            : void 0\n\t   );\n\t    var promise = ret.promise();\n\t    if (promise.isRejected()) {\n\t        return promise;\n\t    }\n\t    ret.setHowMany(howMany);\n\t    ret.init();\n\t    return promise;\n\t}\n\t\n\tPromise.some = function Promise$Some(promises, howMany) {\n\t    return Promise$_Some(promises, howMany, false);\n\t};\n\t\n\tPromise.prototype.some = function Promise$some(count) {\n\t    return Promise$_Some(this, count, true);\n\t};\n\t\n\t};\n\n\n/***/ },\n/* 98 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright (c) 2014 Petka Antonov\n\t * \n\t * Permission is hereby granted, free of charge, to any person obtaining a copy\n\t * of this software and associated documentation files (the \"Software\"), to deal\n\t * in the Software without restriction, including without limitation the rights\n\t * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\t * copies of the Software, and to permit persons to whom the Software is\n\t * furnished to do so, subject to the following conditions:</p>\n\t * \n\t * The above copyright notice and this permission notice shall be included in\n\t * all copies or substantial portions of the Software.\n\t * \n\t * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\t * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\t * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE\n\t * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\t * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\t * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n\t * THE SOFTWARE.\n\t * \n\t */\n\t\"use strict\";\n\tmodule.exports = function(Promise) {\n\tfunction PromiseInspection(promise) {\n\t    if (promise !== void 0) {\n\t        this._bitField = promise._bitField;\n\t        this._settledValue = promise.isResolved()\n\t            ? promise._settledValue\n\t            : void 0;\n\t    }\n\t    else {\n\t        this._bitField = 0;\n\t        this._settledValue = void 0;\n\t    }\n\t}\n\t\n\tPromiseInspection.prototype.isFulfilled =\n\tPromise.prototype.isFulfilled = function Promise$isFulfilled() {\n\t    return (this._bitField & 268435456) > 0;\n\t};\n\t\n\tPromiseInspection.prototype.isRejected =\n\tPromise.prototype.isRejected = function Promise$isRejected() {\n\t    return (this._bitField & 134217728) > 0;\n\t};\n\t\n\tPromiseInspection.prototype.isPending =\n\tPromise.prototype.isPending = function Promise$isPending() {\n\t    return (this._bitField & 402653184) === 0;\n\t};\n\t\n\tPromiseInspection.prototype.value =\n\tPromise.prototype.value = function Promise$value() {\n\t    if (!this.isFulfilled()) {\n\t        throw new TypeError(\"cannot get fulfillment value of a non-fulfilled promise\");\n\t    }\n\t    return this._settledValue;\n\t};\n\t\n\tPromiseInspection.prototype.error =\n\tPromise.prototype.reason = function Promise$reason() {\n\t    if (!this.isRejected()) {\n\t        throw new TypeError(\"cannot get rejection reason of a non-rejected promise\");\n\t    }\n\t    return this._settledValue;\n\t};\n\t\n\tPromiseInspection.prototype.isResolved =\n\tPromise.prototype.isResolved = function Promise$isResolved() {\n\t    return (this._bitField & 402653184) > 0;\n\t};\n\t\n\tPromise.prototype.inspect = function Promise$inspect() {\n\t    return new PromiseInspection(this);\n\t};\n\t\n\tPromise.PromiseInspection = PromiseInspection;\n\t};\n\n\n/***/ },\n/* 99 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright (c) 2014 Petka Antonov\n\t * \n\t * Permission is hereby granted, free of charge, to any person obtaining a copy\n\t * of this software and associated documentation files (the \"Software\"), to deal\n\t * in the Software without restriction, including without limitation the rights\n\t * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\t * copies of the Software, and to permit persons to whom the Software is\n\t * furnished to do so, subject to the following conditions:</p>\n\t * \n\t * The above copyright notice and this permission notice shall be included in\n\t * all copies or substantial portions of the Software.\n\t * \n\t * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\t * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\t * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE\n\t * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\t * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\t * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n\t * THE SOFTWARE.\n\t * \n\t */\n\t\"use strict\";\n\tmodule.exports = function(Promise, INTERNAL) {\n\tvar util = __webpack_require__(2);\n\tvar canAttach = __webpack_require__(8).canAttach;\n\tvar errorObj = util.errorObj;\n\tvar isObject = util.isObject;\n\t\n\tfunction getThen(obj) {\n\t    try {\n\t        return obj.then;\n\t    }\n\t    catch(e) {\n\t        errorObj.e = e;\n\t        return errorObj;\n\t    }\n\t}\n\t\n\tfunction Promise$_Cast(obj, originalPromise) {\n\t    if (isObject(obj)) {\n\t        if (obj instanceof Promise) {\n\t            return obj;\n\t        }\n\t        else if (isAnyBluebirdPromise(obj)) {\n\t            var ret = new Promise(INTERNAL);\n\t            ret._setTrace(void 0);\n\t            obj._then(\n\t                ret._fulfillUnchecked,\n\t                ret._rejectUncheckedCheckError,\n\t                ret._progressUnchecked,\n\t                ret,\n\t                null\n\t            );\n\t            ret._setFollowing();\n\t            return ret;\n\t        }\n\t        var then = getThen(obj);\n\t        if (then === errorObj) {\n\t            if (originalPromise !== void 0 && canAttach(then.e)) {\n\t                originalPromise._attachExtraTrace(then.e);\n\t            }\n\t            return Promise.reject(then.e);\n\t        }\n\t        else if (typeof then === \"function\") {\n\t            return Promise$_doThenable(obj, then, originalPromise);\n\t        }\n\t    }\n\t    return obj;\n\t}\n\t\n\tvar hasProp = {}.hasOwnProperty;\n\tfunction isAnyBluebirdPromise(obj) {\n\t    return hasProp.call(obj, \"_promise0\");\n\t}\n\t\n\tfunction Promise$_doThenable(x, then, originalPromise) {\n\t    var resolver = Promise.defer();\n\t    var called = false;\n\t    try {\n\t        then.call(\n\t            x,\n\t            Promise$_resolveFromThenable,\n\t            Promise$_rejectFromThenable,\n\t            Promise$_progressFromThenable\n\t        );\n\t    }\n\t    catch(e) {\n\t        if (!called) {\n\t            called = true;\n\t            var trace = canAttach(e) ? e : new Error(e + \"\");\n\t            if (originalPromise !== void 0) {\n\t                originalPromise._attachExtraTrace(trace);\n\t            }\n\t            resolver.promise._reject(e, trace);\n\t        }\n\t    }\n\t    return resolver.promise;\n\t\n\t    function Promise$_resolveFromThenable(y) {\n\t        if (called) return;\n\t        called = true;\n\t\n\t        if (x === y) {\n\t            var e = Promise._makeSelfResolutionError();\n\t            if (originalPromise !== void 0) {\n\t                originalPromise._attachExtraTrace(e);\n\t            }\n\t            resolver.promise._reject(e, void 0);\n\t            return;\n\t        }\n\t        resolver.resolve(y);\n\t    }\n\t\n\t    function Promise$_rejectFromThenable(r) {\n\t        if (called) return;\n\t        called = true;\n\t        var trace = canAttach(r) ? r : new Error(r + \"\");\n\t        if (originalPromise !== void 0) {\n\t            originalPromise._attachExtraTrace(trace);\n\t        }\n\t        resolver.promise._reject(r, trace);\n\t    }\n\t\n\t    function Promise$_progressFromThenable(v) {\n\t        if (called) return;\n\t        var promise = resolver.promise;\n\t        if (typeof promise._progress === \"function\") {\n\t            promise._progress(v);\n\t        }\n\t    }\n\t}\n\t\n\tPromise._cast = Promise$_Cast;\n\t};\n\n\n/***/ },\n/* 100 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright (c) 2014 Petka Antonov\n\t * \n\t * Permission is hereby granted, free of charge, to any person obtaining a copy\n\t * of this software and associated documentation files (the \"Software\"), to deal\n\t * in the Software without restriction, including without limitation the rights\n\t * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\t * copies of the Software, and to permit persons to whom the Software is\n\t * furnished to do so, subject to the following conditions:</p>\n\t * \n\t * The above copyright notice and this permission notice shall be included in\n\t * all copies or substantial portions of the Software.\n\t * \n\t * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\t * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\t * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE\n\t * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\t * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\t * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n\t * THE SOFTWARE.\n\t * \n\t */\n\t\"use strict\";\n\tvar global = __webpack_require__(21);\n\tvar setTimeout = function(fn, ms) {\n\t    var $_len = arguments.length;var args = new Array($_len - 2); for(var $_i = 2; $_i < $_len; ++$_i) {args[$_i - 2] = arguments[$_i];}\n\t    global.setTimeout(function(){\n\t        fn.apply(void 0, args);\n\t    }, ms);\n\t};\n\t\n\tmodule.exports = function(Promise, INTERNAL) {\n\tvar util = __webpack_require__(2);\n\tvar errors = __webpack_require__(8);\n\tvar apiRejection = __webpack_require__(29)(Promise);\n\tvar TimeoutError = Promise.TimeoutError;\n\t\n\tvar afterTimeout = function Promise$_afterTimeout(promise, message, ms) {\n\t    if (!promise.isPending()) return;\n\t    if (typeof message !== \"string\") {\n\t        message = \"operation timed out after\" + \" \" + ms + \" ms\"\n\t    }\n\t    var err = new TimeoutError(message);\n\t    errors.markAsOriginatingFromRejection(err);\n\t    promise._attachExtraTrace(err);\n\t    promise._rejectUnchecked(err);\n\t};\n\t\n\tvar afterDelay = function Promise$_afterDelay(value, promise) {\n\t    promise._fulfill(value);\n\t};\n\t\n\tvar delay = Promise.delay = function Promise$Delay(value, ms) {\n\t    if (ms === void 0) {\n\t        ms = value;\n\t        value = void 0;\n\t    }\n\t    ms = +ms;\n\t    var maybePromise = Promise._cast(value, void 0);\n\t    var promise = new Promise(INTERNAL);\n\t\n\t    if (maybePromise instanceof Promise) {\n\t        if (maybePromise._isBound()) {\n\t            promise._setBoundTo(maybePromise._boundTo);\n\t        }\n\t        if (maybePromise._cancellable()) {\n\t            promise._setCancellable();\n\t            promise._cancellationParent = maybePromise;\n\t        }\n\t        promise._setTrace(maybePromise);\n\t        promise._follow(maybePromise);\n\t        return promise.then(function(value) {\n\t            return Promise.delay(value, ms);\n\t        });\n\t    }\n\t    else {\n\t        promise._setTrace(void 0);\n\t        setTimeout(afterDelay, ms, value, promise);\n\t    }\n\t    return promise;\n\t};\n\t\n\tPromise.prototype.delay = function Promise$delay(ms) {\n\t    return delay(this, ms);\n\t};\n\t\n\tPromise.prototype.timeout = function Promise$timeout(ms, message) {\n\t    ms = +ms;\n\t\n\t    var ret = new Promise(INTERNAL);\n\t    ret._setTrace(this);\n\t\n\t    if (this._isBound()) ret._setBoundTo(this._boundTo);\n\t    if (this._cancellable()) {\n\t        ret._setCancellable();\n\t        ret._cancellationParent = this;\n\t    }\n\t    ret._follow(this);\n\t    setTimeout(afterTimeout, ms, ret, message, ms);\n\t    return ret;\n\t};\n\t\n\t};\n\n\n/***/ },\n/* 101 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar AppDispatcher, Constants, PeggBoxActions;\n\t\n\tAppDispatcher = __webpack_require__(15);\n\t\n\tConstants = __webpack_require__(9).actions;\n\t\n\tPeggBoxActions = {\n\t  load: function(page) {\n\t    return AppDispatcher.handleViewAction({\n\t      actionType: Constants.PEGGBOX_FETCH,\n\t      page: page\n\t    });\n\t  }\n\t};\n\t\n\tmodule.exports = PeggBoxActions;\n\n\n/***/ },\n/* 102 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = [\n\t  {\n\t    pageID: 'play',\n\t    title: 'play',\n\t    iconUrl: 'images/peggboard_medium.png'\n\t  }, {\n\t    pageID: 'create',\n\t    title: 'create',\n\t    iconUrl: 'images/newcard_medium.png'\n\t  }, {\n\t    pageID: 'decks',\n\t    title: 'decks',\n\t    iconUrl: 'images/decks_medium.png'\n\t  }, {\n\t    pageID: 'activity',\n\t    title: 'activity',\n\t    iconUrl: 'images/activity_60px.png'\n\t  }\n\t];\n\n\n/***/ },\n/* 103 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar Dispatcher, Promise;\n\t\n\tPromise = __webpack_require__(73);\n\t\n\tDispatcher = (function() {\n\t  Dispatcher.prototype._callbacks = [];\n\t\n\t  Dispatcher.prototype._promises = [];\n\t\n\t  function Dispatcher() {\n\t    this._callbacks = [];\n\t    this._promises = [];\n\t  }\n\t\n\t\n\t  /*\n\t  Register a Store's callback so that it may be invoked by an action.\n\t  @param {function} callback The callback to be registered.\n\t  @return {number} The index of the callback within the _callbacks array.\n\t   */\n\t\n\t  Dispatcher.prototype.register = function(callback) {\n\t    this._callbacks.push(callback);\n\t    return this._callbacks.length - 1;\n\t  };\n\t\n\t\n\t  /*\n\t  dispatch\n\t  @param  {object} payload The data from the action.\n\t   */\n\t\n\t  Dispatcher.prototype.dispatch = function(payload) {\n\t    var rejects, resolves;\n\t    resolves = [];\n\t    rejects = [];\n\t    this._promises = this._callbacks.map(function(_, i) {\n\t      return new Promise(function(resolve, reject) {\n\t        resolves[i] = resolve;\n\t        return rejects[i] = reject;\n\t      });\n\t    });\n\t    this._callbacks.forEach(function(callback, i) {\n\t      return Promise.resolve(callback(payload)).then(function() {\n\t        return resolves[i](payload);\n\t      }, function() {\n\t        return rejects[i](new Error('Dispatcher callback unsuccessful'));\n\t      });\n\t    });\n\t    return this._promises = [];\n\t  };\n\t\n\t\n\t  /*\n\t  Allows a store to wait for the registered callbacks of other stores\n\t  to get invoked before its own does.\n\t  This function is not used by this TodoMVC example application, but\n\t  it is very useful in a larger, more complex application.\n\t  \n\t  Example usage where StoreB waits for StoreA:\n\t  \n\t  class StoreA extends EventEmitter\n\t    dispatchIndex: Dispatcher.register (payload) ->\n\t      // switch statement with lots of cases\n\t  \n\t  class StoreB extends EventEmitter\n\t    dispatchIndex: Dispatcher.register (payload) ->\n\t      switch payload.action.actionType\n\t        when MyConstants.FOO_ACTION\n\t          Dispatcher.waitFor [StoreA.dispatchIndex], ->\n\t            // Do stuff only after StoreA's callback returns.\n\t  \n\t  It should be noted that if StoreB waits for StoreA, and StoreA waits for\n\t  StoreB, a circular dependency will occur, but no error will be thrown.\n\t  A more robust Dispatcher would issue a warning in this scenario.\n\t   */\n\t\n\t  Dispatcher.prototype.waitFor = function(promiseIndexes, callback) {\n\t    var selectedPromises;\n\t    selectedPromises = promiseIndexes.map((function(_this) {\n\t      return function(index) {\n\t        return _this._promises[index];\n\t      };\n\t    })(this));\n\t    return Promise.all(selectedPromises).then(callback);\n\t  };\n\t\n\t  return Dispatcher;\n\t\n\t})();\n\t\n\tmodule.exports = Dispatcher;\n\n\n/***/ },\n/* 104 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar AppRouter, MenuActions, Parse, appRoutes;\n\t\n\tParse = __webpack_require__(16);\n\t\n\tMenuActions = __webpack_require__(30);\n\t\n\tAppRouter = Parse.Router.extend({\n\t  routes: {\n\t    \"login\": \"login\"\n\t  },\n\t  login: function() {\n\t    return MenuActions.selectMenuItem(\"login\");\n\t  }\n\t});\n\t\n\tappRoutes = new AppRouter();\n\t\n\tParse.history.start();\n\n\n/***/ },\n/* 105 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar AppDispatcher, Constants, EventEmitter, Parse, PeggBoxStore, peggbox,\n\t  __hasProp = {}.hasOwnProperty,\n\t  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };\n\t\n\tEventEmitter = __webpack_require__(22);\n\t\n\tConstants = __webpack_require__(9);\n\t\n\tAppDispatcher = __webpack_require__(15);\n\t\n\tParse = __webpack_require__(16);\n\t\n\tPeggBoxStore = (function(_super) {\n\t  __extends(PeggBoxStore, _super);\n\t\n\t  function PeggBoxStore() {\n\t    return PeggBoxStore.__super__.constructor.apply(this, arguments);\n\t  }\n\t\n\t  PeggBoxStore.prototype._nextSet = null;\n\t\n\t  PeggBoxStore.prototype.fetchParse = function(page) {\n\t    var PeggBox, query;\n\t    PeggBox = Parse.Object.extend(\"PeggBox\");\n\t    query = new Parse.Query(PeggBox);\n\t    query.equalTo(\"userId\", 1);\n\t    return query.find({\n\t      success: (function(_this) {\n\t        return function(results) {\n\t          _this._nextSet = results;\n\t          _this.emit(Constants.stores.CHANGE);\n\t        };\n\t      })(this),\n\t      error: function(error) {\n\t        console.log(\"Error: \" + error.code + \" \" + error.message);\n\t      }\n\t    });\n\t  };\n\t\n\t  PeggBoxStore.prototype.getNextSet = function() {\n\t    return this._nextSet;\n\t  };\n\t\n\t  return PeggBoxStore;\n\t\n\t})(EventEmitter);\n\t\n\tpeggbox = new PeggBoxStore;\n\t\n\tAppDispatcher.register(function(payload) {\n\t  var action;\n\t  action = payload.action;\n\t  switch (action.actionType) {\n\t    case Constants.actions.PEGGBOX_FETCH:\n\t      return peggbox.fetchParse(action.page);\n\t  }\n\t});\n\t\n\tmodule.exports = peggbox;\n\n\n/***/ },\n/* 106 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar ActivityView, AppStateStore, AppView, BandMenuView, Constants, DecksView, Easing, HeaderFooterLayout, HeaderView, Lightbox, Menu, Modifier, NewCardView, PeggBoxActions, PeggBoxStore, PeggBoxView, PlayActions, PlayStore, PlayView, ProfileView, StateModifier, StatusView, Surface, TabMenuView, Transform, Transitionable, Utility, View,\n\t  __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },\n\t  __hasProp = {}.hasOwnProperty,\n\t  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };\n\t\n\t__webpack_require__(144);\n\t\n\tView = __webpack_require__(4);\n\t\n\tUtility = __webpack_require__(13);\n\t\n\tHeaderFooterLayout = __webpack_require__(70);\n\t\n\tSurface = __webpack_require__(3);\n\t\n\tTransform = __webpack_require__(1);\n\t\n\tTransitionable = __webpack_require__(14);\n\t\n\tModifier = __webpack_require__(17);\n\t\n\tStateModifier = __webpack_require__(5);\n\t\n\tLightbox = __webpack_require__(45);\n\t\n\tEasing = __webpack_require__(12);\n\t\n\tConstants = __webpack_require__(9);\n\t\n\tAppStateStore = __webpack_require__(48);\n\t\n\tPeggBoxStore = __webpack_require__(105);\n\t\n\tPlayStore = __webpack_require__(49);\n\t\n\tPeggBoxActions = __webpack_require__(101);\n\t\n\tPlayActions = __webpack_require__(31);\n\t\n\tMenu = __webpack_require__(102);\n\t\n\tHeaderView = __webpack_require__(112);\n\t\n\tTabMenuView = __webpack_require__(124);\n\t\n\tBandMenuView = __webpack_require__(108);\n\t\n\tPeggBoxView = __webpack_require__(116);\n\t\n\tPlayView = __webpack_require__(117);\n\t\n\tProfileView = __webpack_require__(118);\n\t\n\tActivityView = __webpack_require__(50);\n\t\n\tDecksView = __webpack_require__(50);\n\t\n\tNewCardView = __webpack_require__(115);\n\t\n\tStatusView = __webpack_require__(122);\n\t\n\tAppView = (function(_super) {\n\t  __extends(AppView, _super);\n\t\n\t  AppView.DEFAULT_OPTIONS = {\n\t    menu: {\n\t      width: 270,\n\t      transition: {\n\t        duration: 300,\n\t        curve: 'easeOut'\n\t      },\n\t      model: Menu\n\t    },\n\t    header: {\n\t      height: 60\n\t    }\n\t  };\n\t\n\t  AppView.prototype.pages = {};\n\t\n\t  AppView.prototype.menuOpen = false;\n\t\n\t  function AppView() {\n\t    this.onScroll = __bind(this.onScroll, this);\n\t    this.onStatusChange = __bind(this.onStatusChange, this);\n\t    this.onPlayContinued = __bind(this.onPlayContinued, this);\n\t    this.onGameChange = __bind(this.onGameChange, this);\n\t    this.onPeggBoxChange = __bind(this.onPeggBoxChange, this);\n\t    this.onAppStoreChange = __bind(this.onAppStoreChange, this);\n\t    this.toggleMenu = __bind(this.toggleMenu, this);\n\t    AppView.__super__.constructor.apply(this, arguments);\n\t    this.initData();\n\t    this.initMenu();\n\t    this.initMain();\n\t    this.initPages();\n\t    this.initListeners();\n\t    this.onAppStoreChange();\n\t  }\n\t\n\t  AppView.prototype.initListeners = function() {\n\t    AppStateStore.on(Constants.stores.CHANGE, this.onAppStoreChange);\n\t    PeggBoxStore.on(Constants.stores.CHANGE, this.onPeggBoxChange);\n\t    PlayStore.on(Constants.stores.CHANGE, this.onGameChange);\n\t    PlayStore.on(Constants.stores.UNLOCK_ACHIEVED, this.onStatusChange);\n\t    PlayStore.on(Constants.stores.PLAY_CONTINUED, this.onPlayContinued);\n\t    return this.pages.peggbox.on('scroll', this.onScroll);\n\t  };\n\t\n\t  AppView.prototype.initData = function() {\n\t    PeggBoxActions.load(0);\n\t    return PlayActions.load(0);\n\t  };\n\t\n\t  AppView.prototype.initMenu = function() {\n\t    this.menu = new BandMenuView(this.options.menu);\n\t    this.menu.on('toggleMenu', this.toggleMenu);\n\t    this.menuState = new StateModifier({\n\t      origin: [0, 0]\n\t    });\n\t    return this.add(this.menuState).add(this.menu);\n\t  };\n\t\n\t  AppView.prototype.initMain = function() {\n\t    this.layout = new HeaderFooterLayout({\n\t      headerSize: this.options.header.height,\n\t      footerSize: 20\n\t    });\n\t    this.layout.header.add(this.initHeader());\n\t    this.layout.footer.add(this.initFooter());\n\t    this.layout.content.add(this.initViewManager());\n\t    this.layoutState = new StateModifier;\n\t    return this.add(this.layoutState).add(this.layout);\n\t  };\n\t\n\t  AppView.prototype.initFooter = function() {\n\t    this.footer = new TabMenuView(this.options.menu);\n\t    return this.footer;\n\t  };\n\t\n\t  AppView.prototype.initHeader = function() {\n\t    this.header = new HeaderView(this.options.header);\n\t    this.header.on('toggleMenu', this.toggleMenu);\n\t    return this.header;\n\t  };\n\t\n\t  AppView.prototype.initPages = function() {\n\t    this.pages.play = new PlayView;\n\t    this.pages.create = new NewCardView;\n\t    this.pages.decks = new DecksView;\n\t    this.pages.activity = new PeggBoxView;\n\t    this.pages.profile = new ProfileView;\n\t    this.pages.peggbox = new PeggBoxView;\n\t    return this.pages.status = new StatusView;\n\t  };\n\t\n\t  AppView.prototype.initViewManager = function() {\n\t    return this.lightbox = new Lightbox({\n\t      inOpacity: 1,\n\t      outOpacity: 0,\n\t      inOrigin: [1, 1],\n\t      outOrigin: [0, 0],\n\t      showOrigin: [0.5, 0.5],\n\t      inTransform: Transform.thenMove(Transform.rotateX(1), [0, window.innerHeight, -300]),\n\t      outTransform: Transform.thenMove(Transform.rotateZ(0.7), [0, -window.innerHeight, -1000]),\n\t      inTransition: {\n\t        duration: 1000,\n\t        curve: Easing.outExpo\n\t      },\n\t      outTransition: {\n\t        duration: 500,\n\t        curve: Easing.inCubic\n\t      }\n\t    });\n\t  };\n\t\n\t  AppView.prototype.showPage = function(page) {\n\t    return this.lightbox.show(page);\n\t  };\n\t\n\t  AppView.prototype.getPage = function(pageID) {\n\t    return this.pages[pageID];\n\t  };\n\t\n\t  AppView.prototype.toggleMenu = function() {\n\t    if (this.menuOpen) {\n\t      return this.closeMenu();\n\t    } else {\n\t      return this.openMenu();\n\t    }\n\t  };\n\t\n\t  AppView.prototype.onAppStoreChange = function() {\n\t    var pageID;\n\t    pageID = AppStateStore.getCurrentPageID();\n\t    this.showPage(this.getPage(pageID));\n\t    this.header.change(pageID);\n\t    this.footer.hideTabs();\n\t    return this.closeMenu();\n\t  };\n\t\n\t  AppView.prototype.onPeggBoxChange = function() {\n\t    return this.pages.activity.load(PeggBoxStore.getNextSet());\n\t  };\n\t\n\t  AppView.prototype.onGameChange = function() {\n\t    return this.pages.play.load(PlayStore.getGame());\n\t  };\n\t\n\t  AppView.prototype.onPlayContinued = function() {\n\t    return this.showPage(this.getPage(\"play\"));\n\t  };\n\t\n\t  AppView.prototype.onStatusChange = function() {\n\t    return this.showPage(this.getPage(\"status\"));\n\t  };\n\t\n\t  AppView.prototype.onScroll = function() {\n\t    if (this.tabsOpen) {\n\t      this.footer.hideTabs();\n\t      return this.tabsOpen = false;\n\t    } else {\n\t      this.footer.showTabs();\n\t      return this.tabsOpen = true;\n\t    }\n\t  };\n\t\n\t  AppView.prototype.closeMenu = function() {\n\t    this.layoutState.setTransform(Transform.translate(0, 0, 0), this.options.menu.transition, (function(_this) {\n\t      return function() {\n\t        return _this.menuOpen = false;\n\t      };\n\t    })(this));\n\t    return this.menu.hide();\n\t  };\n\t\n\t  AppView.prototype.openMenu = function() {\n\t    this.layoutState.setTransform(Transform.translate(this.options.menu.width, 0, 0), this.options.menu.transition, (function(_this) {\n\t      return function() {\n\t        return _this.menuOpen = true;\n\t      };\n\t    })(this));\n\t    return this.menu.show();\n\t  };\n\t\n\t  return AppView;\n\t\n\t})(View);\n\t\n\tmodule.exports = AppView;\n\n\n/***/ },\n/* 107 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar BandMenuItemView, ImageSurface, MenuActions, StateModifier, Surface, Transform, View,\n\t  __hasProp = {}.hasOwnProperty,\n\t  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };\n\t\n\t__webpack_require__(51);\n\t\n\tView = __webpack_require__(4);\n\t\n\tSurface = __webpack_require__(3);\n\t\n\tStateModifier = __webpack_require__(5);\n\t\n\tTransform = __webpack_require__(1);\n\t\n\tImageSurface = __webpack_require__(11);\n\t\n\tMenuActions = __webpack_require__(30);\n\t\n\tBandMenuItemView = (function(_super) {\n\t  __extends(BandMenuItemView, _super);\n\t\n\t  BandMenuItemView.DEFAULT_OPTIONS = {\n\t    pageID: null,\n\t    width: 270,\n\t    height: window.innerHeight / 4,\n\t    angle: -0.2,\n\t    iconUrl: 'images/mark_tiny.png',\n\t    title: 'pegg',\n\t    color: 'white',\n\t    iconSize: 50\n\t  };\n\t\n\t  function BandMenuItemView() {\n\t    BandMenuItemView.__super__.constructor.apply(this, arguments);\n\t    this.createBackground();\n\t    this.createIcon();\n\t  }\n\t\n\t  BandMenuItemView.prototype.createBackground = function() {\n\t    this.background = new Surface({\n\t      size: [this.options.width, this.options.height],\n\t      content: \"<div class='bandmenu__item__title'>\" + this.options.title + \"</div>\",\n\t      classes: ['bandmenu__item', \"bandmenu__item--\" + this.options.pageID]\n\t    });\n\t    this.add(this.background);\n\t    return this.background.on('click', (function(_this) {\n\t      return function() {\n\t        return MenuActions.selectMenuItem(_this.getID());\n\t      };\n\t    })(this));\n\t  };\n\t\n\t  BandMenuItemView.prototype.createIcon = function() {\n\t    this.icon = new ImageSurface({\n\t      size: [this.options.iconSize, this.options.iconSize],\n\t      content: this.options.iconUrl,\n\t      classes: ['bandmenu__item__logo']\n\t    });\n\t    this.iconState = new StateModifier({\n\t      transform: Transform.translate(20, this.options.height / 2 - this.options.iconSize / 2, 0)\n\t    });\n\t    return this.add(this.iconState).add(this.icon);\n\t  };\n\t\n\t  BandMenuItemView.prototype.getID = function() {\n\t    return this.options.pageID;\n\t  };\n\t\n\t  return BandMenuItemView;\n\t\n\t})(View);\n\t\n\tmodule.exports = BandMenuItemView;\n\n\n/***/ },\n/* 108 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar BandMenuItemView, BandMenuView, StateModifier, Surface, Timer, Transform, View, _,\n\t  __hasProp = {}.hasOwnProperty,\n\t  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };\n\t\n\t__webpack_require__(51);\n\t\n\tView = __webpack_require__(4);\n\t\n\tSurface = __webpack_require__(3);\n\t\n\tStateModifier = __webpack_require__(5);\n\t\n\tTransform = __webpack_require__(1);\n\t\n\tTimer = __webpack_require__(7);\n\t\n\tBandMenuItemView = __webpack_require__(107);\n\t\n\t_ = __webpack_require__(16)._;\n\t\n\t\n\t/*\n\t * Events:\n\t */\n\t\n\tBandMenuView = (function(_super) {\n\t  __extends(BandMenuView, _super);\n\t\n\t  BandMenuView.DEFAULT_OPTIONS = {\n\t    angle: -0.2,\n\t    width: null,\n\t    topOffset: 0,\n\t    band: {\n\t      offset: window.innerHeight / 4,\n\t      staggerDelay: 35,\n\t      transition: {\n\t        duration: 400,\n\t        curve: 'easeOut'\n\t      }\n\t    },\n\t    model: null\n\t  };\n\t\n\t  function BandMenuView(options) {\n\t    options = _.defaults(options, this.constructor.DEFAULT_OPTIONS);\n\t    BandMenuView.__super__.constructor.call(this, options);\n\t    this.initBackground();\n\t    this.initBands();\n\t  }\n\t\n\t  BandMenuView.prototype.initBackground = function() {\n\t    this.background = new Surface({\n\t      size: [this.options.width, void 0],\n\t      classes: [\"bandmenu__background\"]\n\t    });\n\t    this.backgroundState = new StateModifier({\n\t      transform: Transform.translate(-this.options.width, 0, 0)\n\t    });\n\t    return this.add(this.backgroundState).add(this.background);\n\t  };\n\t\n\t  BandMenuView.prototype.initBands = function() {\n\t    var band, bandModifier, bands, i, yOffset, _results;\n\t    this.bandModifiers = [];\n\t    yOffset = this.options.topOffset;\n\t    bands = this.options.model;\n\t    i = 0;\n\t    _results = [];\n\t    while (i < bands.length) {\n\t      band = new BandMenuItemView(bands[i]);\n\t      bandModifier = new StateModifier({\n\t        transform: Transform.translate(0, yOffset, 0)\n\t      });\n\t      this.bandModifiers.push(bandModifier);\n\t      this.add(bandModifier).add(band);\n\t      yOffset += this.options.band.offset;\n\t      _results.push(i++);\n\t    }\n\t    return _results;\n\t  };\n\t\n\t  BandMenuView.prototype.resetBands = function() {\n\t    var i, initX, initY, _results;\n\t    i = 0;\n\t    _results = [];\n\t    while (i < this.bandModifiers.length) {\n\t      initX = -this.options.width;\n\t      initY = this.options.topOffset + this.options.band.offset * i + this.options.width * Math.tan(-this.options.angle);\n\t      this.bandModifiers[i].setTransform(Transform.translate(initX, initY, 0));\n\t      _results.push(i++);\n\t    }\n\t    return _results;\n\t  };\n\t\n\t  BandMenuView.prototype.show = function() {\n\t    this.showBackground();\n\t    return this.showBands();\n\t  };\n\t\n\t  BandMenuView.prototype.hide = function() {\n\t    this.hideBackground();\n\t    return this.hideBands();\n\t  };\n\t\n\t  BandMenuView.prototype.hideBackground = function() {\n\t    return this.backgroundState.setTransform(Transform.translate(-this.options.width, 0, 0), this.options.band.transition);\n\t  };\n\t\n\t  BandMenuView.prototype.showBackground = function() {\n\t    return this.backgroundState.setTransform(Transform.translate(0, 0, 0), this.options.band.transition);\n\t  };\n\t\n\t  BandMenuView.prototype.showBands = function() {\n\t    var bandOffset, delay, i, topOffset, transition, _results;\n\t    this.resetBands();\n\t    transition = this.options.band.transition;\n\t    delay = this.options.band.staggerDelay;\n\t    bandOffset = this.options.band.offset;\n\t    topOffset = this.options.topOffset;\n\t    i = 0;\n\t    _results = [];\n\t    while (i < this.bandModifiers.length) {\n\t      Timer.setTimeout((function(i) {\n\t        var yOffset;\n\t        yOffset = topOffset + bandOffset * i;\n\t        this.bandModifiers[i].setTransform(Transform.translate(0, yOffset, 0), transition);\n\t      }).bind(this, i), i * delay);\n\t      _results.push(i++);\n\t    }\n\t    return _results;\n\t  };\n\t\n\t  BandMenuView.prototype.hideBands = function() {\n\t    var delay, i, transition, _results;\n\t    transition = this.options.band.transition;\n\t    delay = this.options.band.staggerDelay;\n\t    i = 0;\n\t    _results = [];\n\t    while (i < this.bandModifiers.length) {\n\t      Timer.setTimeout((function(i) {\n\t        var initX, initY;\n\t        initX = -this.options.width;\n\t        initY = this.options.topOffset + this.options.band.offset * i + this.options.width * Math.tan(-this.options.angle);\n\t        this.bandModifiers[i].setTransform(Transform.translate(initX, initY, 0), transition);\n\t      }).bind(this, i), i * delay);\n\t      _results.push(i++);\n\t    }\n\t    return _results;\n\t  };\n\t\n\t  return BandMenuView;\n\t\n\t})(View);\n\t\n\tmodule.exports = BandMenuView;\n\n\n/***/ },\n/* 109 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar CardView, ChoicesView, Easing, ImageSurface, ImageUploadView, Modifier, PlayActions, StateModifier, Surface, Timer, Transform, Utility, View, _,\n\t  __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },\n\t  __hasProp = {}.hasOwnProperty,\n\t  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };\n\t\n\t__webpack_require__(52);\n\t\n\tView = __webpack_require__(4);\n\t\n\tSurface = __webpack_require__(3);\n\t\n\tImageSurface = __webpack_require__(11);\n\t\n\tModifier = __webpack_require__(17);\n\t\n\tStateModifier = __webpack_require__(5);\n\t\n\tTransform = __webpack_require__(1);\n\t\n\tUtility = __webpack_require__(13);\n\t\n\tEasing = __webpack_require__(12);\n\t\n\tPlayActions = __webpack_require__(31);\n\t\n\tTimer = __webpack_require__(7);\n\t\n\tChoicesView = __webpack_require__(110);\n\t\n\t_ = __webpack_require__(16)._;\n\t\n\tImageUploadView = __webpack_require__(113);\n\t\n\tCardView = (function(_super) {\n\t  __extends(CardView, _super);\n\t\n\t  CardView.DEFAULT_OPTIONS = {\n\t    width: window.innerWidth - window.innerWidth * .1,\n\t    height: window.innerHeight - window.innerHeight * .3,\n\t    depth: -5,\n\t    borderRadius: 10,\n\t    duration: 500,\n\t    easing: Easing.outCubic\n\t  };\n\t\n\t  function CardView(card, options) {\n\t    this.flip = __bind(this.flip, this);\n\t    this.pickAnswer = __bind(this.pickAnswer, this);\n\t    this.hideChoices = __bind(this.hideChoices, this);\n\t    this.showChoices = __bind(this.showChoices, this);\n\t    this.toggleImage = __bind(this.toggleImage, this);\n\t    var depth, height, width;\n\t    options = _.defaults(options, this.constructor.DEFAULT_OPTIONS);\n\t    CardView.__super__.constructor.call(this, options);\n\t    this.card = card;\n\t    width = this.options.width;\n\t    height = this.options.height;\n\t    depth = this.options.depth;\n\t    this.initCard(width, height, depth);\n\t    this.initQuestion(width, height, depth);\n\t    this.initChoices(width, Math.floor(height / 6), depth / 2);\n\t    this.initAnswer(width, height, depth);\n\t  }\n\t\n\t  CardView.prototype.initCard = function(width, height, depth) {\n\t    var back, front, modifier;\n\t    this.state = new StateModifier;\n\t    this.mainNode = this.add(this.state);\n\t    front = new ImageSurface({\n\t      size: [width, height],\n\t      content: \"images/Card_White.png\"\n\t    });\n\t    modifier = new Modifier({\n\t      transform: Transform.translate(0, 0, depth / 2)\n\t    });\n\t    front.on('click', this.showChoices);\n\t    this.mainNode.add(modifier).add(front);\n\t    back = new ImageSurface({\n\t      size: [width, height],\n\t      content: \"images/Card_Blue.png\"\n\t    });\n\t    modifier = new Modifier({\n\t      transform: Transform.multiply(Transform.translate(0, 0, -depth / 2), Transform.multiply(Transform.rotateZ(Math.PI), Transform.rotateX(Math.PI)))\n\t    });\n\t    return this.mainNode.add(modifier).add(back);\n\t  };\n\t\n\t  CardView.prototype.initQuestion = function(width, height, depth) {\n\t    this.question = new Surface({\n\t      size: [width, height],\n\t      classes: ['card__front__question'],\n\t      content: this.card.get(\"title\")\n\t    });\n\t    this.qModifier = new StateModifier({\n\t      transform: Transform.translate(0, height / 2 + -100, depth / 2 + 2)\n\t    });\n\t    this.question.on('click', this.showChoices);\n\t    return this.mainNode.add(this.qModifier).add(this.question);\n\t  };\n\t\n\t  CardView.prototype.initChoices = function(width, height, depth) {\n\t    var choice, choiceText, choices, i, _i;\n\t    this.choices = [];\n\t    for (i = _i = 1; _i <= 5; i = ++_i) {\n\t      choiceText = this.card.get(\"caption\" + i);\n\t      if (choiceText) {\n\t        choice = new Surface({\n\t          size: [width, height],\n\t          classes: ['card__front__option'],\n\t          content: \"<div class='outerContainer' style='width: \" + (width - 40) + \"px; height: \" + height + \"px'> <div class='innerContainer'> \" + choiceText + \" </div> </div>\"\n\t        });\n\t        choice.on('click', (function(i) {\n\t          return this.pickAnswer(i);\n\t        }).bind(this, i));\n\t        this.choices.push(choice);\n\t      }\n\t    }\n\t    choices = new ChoicesView;\n\t    choices.load(this.choices);\n\t    this.choicesMod = new StateModifier;\n\t    this.mainNode.add(this.choicesMod).add(choices);\n\t    return this.choicesMod.setTransform(Transform.translate(0, 0, -10));\n\t  };\n\t\n\t  CardView.prototype.initAnswer = function(width, height, depth) {\n\t    this.image = new ImageSurface({\n\t      size: [width - 40, null],\n\t      classes: ['card__back__image'],\n\t      properties: {\n\t        borderRadius: \"\" + this.options.borderRadius + \"px\",\n\t        maxHeight: \"\" + (height - 100) + \"px\"\n\t      }\n\t    });\n\t    this.image.on(\"click\", (function(_this) {\n\t      return function() {\n\t        _this.image.setContent(\"\");\n\t        return _this.flip();\n\t      };\n\t    })(this));\n\t    this.imageModifier = new StateModifier({\n\t      transform: Transform.multiply(Transform.translate(0, -100, -depth / 2 - 2), Transform.multiply(Transform.rotateZ(Math.PI), Transform.rotateX(Math.PI)))\n\t    });\n\t    this.text = new Surface({\n\t      size: [width - 40, null],\n\t      classes: ['card__back__text'],\n\t      content: this.card.get('caption1')\n\t    });\n\t    this.textModifier = new StateModifier({\n\t      transform: Transform.multiply(Transform.translate(0, -150, -depth / 2 - 2), Transform.multiply(Transform.rotateZ(Math.PI), Transform.rotateX(Math.PI)))\n\t    });\n\t    this.mainNode.add(this.imageModifier).add(this.image);\n\t    return this.mainNode.add(this.textModifier).add(this.text);\n\t  };\n\t\n\t  CardView.prototype.toggleImage = function() {\n\t    if (this.big) {\n\t      this.big = false;\n\t      return this.image.setSize([this.options.width, this.options.height]);\n\t    } else {\n\t      this.big = true;\n\t      return this.image.setSize([window.innerWidth, window.innerHeight]);\n\t    }\n\t  };\n\t\n\t  CardView.prototype.showChoices = function() {\n\t    PlayActions.pick(this.card.id);\n\t    this.question.setClasses(['card__front__question--small']);\n\t    this.qModifier.setTransform(Transform.translate(0, 20, this.options.depth / 2 + 2), {\n\t      duration: this.options.duration,\n\t      curve: this.options.easing\n\t    });\n\t    return this.choicesMod.setTransform(Transform.translate(0, 50, 0));\n\t  };\n\t\n\t  CardView.prototype.hideChoices = function() {\n\t    this.qModifier.setTransform(Transform.translate(0, this.options.height / 2 + -100, this.options.depth / 2 + 2), {\n\t      duration: this.options.duration,\n\t      curve: this.options.easing\n\t    });\n\t    this.choicesMod.setOpacity(0);\n\t    return this.question.on('click', this.showChoices);\n\t  };\n\t\n\t  CardView.prototype.pickAnswer = function(choice) {\n\t    PlayActions.answer(choice);\n\t    Timer.after(((function(_this) {\n\t      return function() {\n\t        return _this.image.setContent(_this.card.get('image' + choice));\n\t      };\n\t    })(this)), 20);\n\t    this.text.setContent(this.card.get('caption' + choice));\n\t    return this.flip();\n\t  };\n\t\n\t  CardView.prototype.flip = function(side) {\n\t    this.state.halt();\n\t    if (this.currentSide == null) {\n\t      this.currentSide = 0;\n\t    }\n\t    if (side === 0 || side === 1) {\n\t      this.currentSide = side;\n\t    } else {\n\t      this.currentSide = this.currentSide === 1 ? 0 : 1;\n\t    }\n\t    return this.state.setTransform(Transform.rotateY(Math.PI * this.currentSide), {\n\t      duration: this.options.duration,\n\t      curve: this.options.easing\n\t    });\n\t  };\n\t\n\t  return CardView;\n\t\n\t})(View);\n\t\n\tmodule.exports = CardView;\n\n\n/***/ },\n/* 110 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar ChoicesView, ContainerSurface, ListItemView, Scrollview, Surface, View,\n\t  __hasProp = {}.hasOwnProperty,\n\t  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };\n\t\n\t__webpack_require__(52);\n\t\n\tView = __webpack_require__(4);\n\t\n\tContainerSurface = __webpack_require__(23);\n\t\n\tScrollview = __webpack_require__(28);\n\t\n\tSurface = __webpack_require__(3);\n\t\n\tListItemView = __webpack_require__(36);\n\t\n\tChoicesView = (function(_super) {\n\t  __extends(ChoicesView, _super);\n\t\n\t  ChoicesView.DEFAULT_OPTIONS = {\n\t    itemDensity: null,\n\t    width: window.innerHeight / 2,\n\t    height: 60\n\t  };\n\t\n\t  function ChoicesView() {\n\t    ChoicesView.__super__.constructor.apply(this, arguments);\n\t    this.init();\n\t  }\n\t\n\t  ChoicesView.prototype.init = function() {\n\t    return this.items = [];\n\t  };\n\t\n\t  ChoicesView.prototype.load = function(data) {\n\t    var container, i, newChoice, scrollview, surfaces;\n\t    this.items = data;\n\t    surfaces = [];\n\t    scrollview = new Scrollview;\n\t    scrollview.sequenceFrom(surfaces);\n\t    i = 0;\n\t    while (i < this.items.length) {\n\t      this.items[i].on('scroll', (function(_this) {\n\t        return function() {\n\t          return _this._eventOutput.emit('scroll');\n\t        };\n\t      })(this));\n\t      this.items[i].pipe(scrollview);\n\t      surfaces.push(this.items[i]);\n\t      i++;\n\t    }\n\t    newChoice = new Surface({\n\t      size: [this.options.width - 50, this.options.height],\n\t      content: \"<input type='text' name='newOption' placeholder='Type your own...'>\",\n\t      classes: ['card__front__input']\n\t    });\n\t    surfaces.push(newChoice);\n\t    container = new ContainerSurface({\n\t      size: [window.innerHeight / 2, 260],\n\t      properties: {\n\t        overflow: \"hidden\"\n\t      }\n\t    });\n\t    container.add(scrollview);\n\t    return this.add(container);\n\t  };\n\t\n\t  return ChoicesView;\n\t\n\t})(View);\n\t\n\tmodule.exports = ChoicesView;\n\n\n/***/ },\n/* 111 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar Engine, FpsMeter, Modifier, Surface, Timer, Transform, View,\n\t  __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },\n\t  __hasProp = {}.hasOwnProperty,\n\t  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };\n\t\n\t__webpack_require__(145);\n\t\n\tView = __webpack_require__(4);\n\t\n\tSurface = __webpack_require__(3);\n\t\n\tModifier = __webpack_require__(17);\n\t\n\tEngine = __webpack_require__(24);\n\t\n\tTimer = __webpack_require__(7);\n\t\n\tTransform = __webpack_require__(1);\n\t\n\tFpsMeter = (function(_super) {\n\t  __extends(FpsMeter, _super);\n\t\n\t  FpsMeter.prototype.currTime = 0;\n\t\n\t  FpsMeter.prototype.lastTime = 0;\n\t\n\t  FpsMeter.prototype.frameTime = 0;\n\t\n\t  FpsMeter.prototype.state = true;\n\t\n\t  FpsMeter.prototype.filterStrength = 10;\n\t\n\t  FpsMeter.prototype.updateFrequency = 100;\n\t\n\t  function FpsMeter() {\n\t    this.update = __bind(this.update, this);\n\t    this.toggleState = __bind(this.toggleState, this);\n\t    this.tick = __bind(this.tick, this);\n\t    FpsMeter.__super__.constructor.apply(this, arguments);\n\t    this.initTime();\n\t    this.surface = new Surface({\n\t      size: [60, 20],\n\t      classes: ['fpsmeter'],\n\t      content: ''\n\t    });\n\t    this.add(new Modifier({\n\t      origin: [1, 1],\n\t      transform: Transform.inFront\n\t    })).add(this.surface);\n\t    this.surface.on('click', this.toggleState);\n\t    this.start();\n\t  }\n\t\n\t  FpsMeter.prototype.initTime = function() {\n\t    var perf, perfNow;\n\t    perf = window.performance;\n\t    if (perf && (perf.now || perf.webkitNow)) {\n\t      perfNow = perf.now ? 'now' : 'webkitNow';\n\t      this.getTime = perf[perfNow].bind(perf);\n\t    }\n\t    return this.lastTime = this.getTime();\n\t  };\n\t\n\t  FpsMeter.prototype.tick = function() {\n\t    var thisFrameTime;\n\t    this.currTime = this.getTime();\n\t    thisFrameTime = this.currTime - this.lastTime;\n\t    this.frameTime += (thisFrameTime - this.frameTime) / this.filterStrength;\n\t    return this.lastTime = this.currTime;\n\t  };\n\t\n\t  FpsMeter.prototype.toggleState = function() {\n\t    if (this.state) {\n\t      this.stop();\n\t    } else {\n\t      this.start();\n\t    }\n\t    return this.state = !this.state;\n\t  };\n\t\n\t  FpsMeter.prototype.start = function() {\n\t    Engine.on('prerender', this.tick);\n\t    return this.interval = Timer.setInterval(this.update, this.updateFrequency);\n\t  };\n\t\n\t  FpsMeter.prototype.stop = function() {\n\t    Engine.removeListener('prerender', this.tick);\n\t    return Timer.clear(this.interval);\n\t  };\n\t\n\t  FpsMeter.prototype.update = function() {\n\t    return this.surface.setContent(\"\" + ((1000 / this.frameTime).toFixed(1)) + \" fps\");\n\t  };\n\t\n\t  FpsMeter.prototype.getTime = function() {\n\t    return +new Date();\n\t  };\n\t\n\t  return FpsMeter;\n\t\n\t})(View);\n\t\n\tmodule.exports = FpsMeter;\n\n\n/***/ },\n/* 112 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar Easing, HeaderView, ImageSurface, MenuActions, Modifier, Surface, Timer, Transform, UserActions, UserStore, Utility, View,\n\t  __hasProp = {}.hasOwnProperty,\n\t  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };\n\t\n\t__webpack_require__(146);\n\t\n\tView = __webpack_require__(4);\n\t\n\tUtility = __webpack_require__(13);\n\t\n\tSurface = __webpack_require__(3);\n\t\n\tImageSurface = __webpack_require__(11);\n\t\n\tModifier = __webpack_require__(17);\n\t\n\tTransform = __webpack_require__(1);\n\t\n\tUserActions = __webpack_require__(32);\n\t\n\tUserStore = __webpack_require__(33);\n\t\n\tMenuActions = __webpack_require__(30);\n\t\n\tEasing = __webpack_require__(12);\n\t\n\tTimer = __webpack_require__(7);\n\t\n\t\n\t/*\n\t * Events:\n\t * toggleMenu\n\t * logout\n\t */\n\t\n\tHeaderView = (function(_super) {\n\t  __extends(HeaderView, _super);\n\t\n\t  HeaderView.DEFAULT_OPTIONS = {\n\t    title: 'play'\n\t  };\n\t\n\t  HeaderView.prototype.cssPrefix = 'header';\n\t\n\t  HeaderView.prototype.height = null;\n\t\n\t  function HeaderView() {\n\t    HeaderView.__super__.constructor.apply(this, arguments);\n\t    this.build(this.options.title);\n\t    this.initEvents();\n\t  }\n\t\n\t  HeaderView.prototype.build = function(page) {\n\t    var pic, picMod;\n\t    this.background = new Surface({\n\t      classes: [\"\" + this.cssPrefix + \"__background\", \"\" + this.cssPrefix + \"__background--\" + page]\n\t    });\n\t    this.logo = new ImageSurface({\n\t      size: [130, 59],\n\t      classes: [\"\" + this.cssPrefix + \"__logo\"],\n\t      content: 'images/pegg_logo-small.png'\n\t    });\n\t    pic = new ImageSurface({\n\t      size: [this.options.height, this.options.height],\n\t      content: UserStore.getAvatar(\"square\"),\n\t      classes: [\"\" + this.cssPrefix + \"__profilePic\"],\n\t      properties: {\n\t        borderRadius: \"\" + (this.options.height - 15) + \"px\",\n\t        padding: \"10px\"\n\t      }\n\t    });\n\t    picMod = new Modifier({\n\t      origin: [1, 0],\n\t      align: [1, 0]\n\t    });\n\t    pic.on(\"click\", ((function(_this) {\n\t      return function(picMod) {\n\t        return MenuActions.selectMenuItem(\"profile\");\n\t      };\n\t    })(this)).bind(null, picMod));\n\t    this.add(this.background);\n\t    this.add(new Modifier({\n\t      origin: [0, 0]\n\t    })).add(this.logo);\n\t    return this.add(picMod).add(pic);\n\t  };\n\t\n\t  HeaderView.prototype.initEvents = function() {\n\t    return this.logo.on('click', (function(_this) {\n\t      return function() {\n\t        return _this._eventOutput.emit('toggleMenu');\n\t      };\n\t    })(this));\n\t  };\n\t\n\t  HeaderView.prototype.change = function(page) {};\n\t\n\t  return HeaderView;\n\t\n\t})(View);\n\t\n\tmodule.exports = HeaderView;\n\n\n/***/ },\n/* 113 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar Config, ImageEditView, Surface, View,\n\t  __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },\n\t  __hasProp = {}.hasOwnProperty,\n\t  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };\n\t\n\tConfig = __webpack_require__(37)[\"public\"].aviary;\n\t\n\tView = __webpack_require__(4);\n\t\n\tSurface = __webpack_require__(3);\n\t\n\tImageEditView = (function(_super) {\n\t  __extends(ImageEditView, _super);\n\t\n\t  ImageEditView.prototype.src = 'http://images.aviary.com/imagesv5/feather_default.jpg';\n\t\n\t  ImageEditView.prototype.theme = 'dark';\n\t\n\t  function ImageEditView(options) {\n\t    this.onError = __bind(this.onError, this);\n\t    this.onSave = __bind(this.onSave, this);\n\t    ImageEditView.__super__.constructor.call(this, options);\n\t    this.initEditor();\n\t    this.build();\n\t  }\n\t\n\t  ImageEditView.prototype.build = function() {\n\t    this.surface = new Surface({\n\t      content: \"<div id='injection_site' style='width:400; height: 800'></div> <img id='image1' src='\" + this.src + \"'>\",\n\t      size: [void 0, void 0]\n\t    });\n\t    this.surface.on('click', (function(_this) {\n\t      return function() {\n\t        return _this.launchEditor('image1', _this.src);\n\t      };\n\t    })(this));\n\t    return this.add(this.surface);\n\t  };\n\t\n\t  ImageEditView.prototype.launchEditor = function(id, src) {\n\t    return this.aviary.launch({\n\t      image: id,\n\t      url: src\n\t    });\n\t  };\n\t\n\t  ImageEditView.prototype.initEditor = function() {\n\t    return this.aviary = new Aviary.Feather({\n\t      apiKey: Config.apiKey,\n\t      apiVersion: 3,\n\t      theme: 'minimum',\n\t      tools: 'all',\n\t      appendTo: '',\n\t      onSave: this.onSave,\n\t      onError: this.onError\n\t    });\n\t  };\n\t\n\t  ImageEditView.prototype.onSave = function(imageID, newURL) {\n\t    debugger;\n\t    var img;\n\t    img = document.getElementById(imageID);\n\t    return img.src = newURL;\n\t  };\n\t\n\t  ImageEditView.prototype.onError = function(errorObj) {\n\t    debugger;\n\t  };\n\t\n\t  return ImageEditView;\n\t\n\t})(View);\n\t\n\tmodule.exports = ImageEditView;\n\n\n/***/ },\n/* 114 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar Easing, ImageSurface, LoginView, SpringTransition, StateModifier, Surface, Timer, Transform, Transitionable, UserActions, View,\n\t  __hasProp = {}.hasOwnProperty,\n\t  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };\n\t\n\t__webpack_require__(53);\n\t\n\tView = __webpack_require__(4);\n\t\n\tSurface = __webpack_require__(3);\n\t\n\tImageSurface = __webpack_require__(11);\n\t\n\tTransform = __webpack_require__(1);\n\t\n\tStateModifier = __webpack_require__(5);\n\t\n\tUserActions = __webpack_require__(32);\n\t\n\tEasing = __webpack_require__(12);\n\t\n\tTimer = __webpack_require__(7);\n\t\n\tTransitionable = __webpack_require__(14);\n\t\n\tSpringTransition = __webpack_require__(44);\n\t\n\tTransitionable.registerMethod('spring', SpringTransition);\n\t\n\tLoginView = (function(_super) {\n\t  __extends(LoginView, _super);\n\t\n\t  LoginView.DEFAULT_OPTIONS = {\n\t    logoWidth: 150,\n\t    logoHeight: 110,\n\t    markWidth: 150,\n\t    markHeight: 70,\n\t    transition: {\n\t      duration: 800,\n\t      curve: Easing.inOutBack\n\t    },\n\t    spring: {\n\t      method: \"spring\",\n\t      period: 500,\n\t      dampingRatio: 0.3\n\t    }\n\t  };\n\t\n\t  function LoginView(options) {\n\t    LoginView.__super__.constructor.call(this, options);\n\t    this.initSplash();\n\t  }\n\t\n\t  LoginView.prototype.initSplash = function() {\n\t    var logo, logoPosMod, logoSizeMod, mark, markMod;\n\t    logo = new ImageSurface({\n\t      size: [this.options.logoWidth, this.options.logoHeight],\n\t      classes: ['login__logo'],\n\t      content: \"images/logo_icon-big.png\"\n\t    });\n\t    logoPosMod = new StateModifier({\n\t      align: [0.5, 1],\n\t      origin: [0.5, 0]\n\t    });\n\t    logoSizeMod = new StateModifier;\n\t    mark = new ImageSurface({\n\t      size: [this.options.markWidth, this.options.markHeight],\n\t      classes: ['login__mark'],\n\t      content: \"images/logo_mark-big.png\"\n\t    });\n\t    markMod = new StateModifier({\n\t      align: [0.5, 1],\n\t      origin: [0.5, 0]\n\t    });\n\t    this.add(logoSizeMod).add(logoPosMod).add(logo);\n\t    this.add(markMod).add(mark);\n\t    markMod.setTransform(Transform.translate(0, -window.innerHeight / 2 - this.options.logoHeight / 2 + this.options.markHeight, 3), this.options.transition);\n\t    return Timer.after(((function(_this) {\n\t      return function() {\n\t        return logoPosMod.setTransform(Transform.translate(0, -window.innerHeight / 2 - _this.options.logoHeight, 0), _this.options.spring, function() {\n\t          logoSizeMod.setTransform(Transform.translate(0, -300, -2000), _this.options.transition);\n\t          return markMod.setTransform(Transform.translate(0, 0, -30000), {\n\t            duration: 200\n\t          }, function() {\n\t            return _this.initLogin();\n\t          });\n\t        });\n\t      };\n\t    })(this)), 20);\n\t  };\n\t\n\t  LoginView.prototype.initLogin = function() {\n\t    var fbButton, fbButtonMod, gpButton, gpButtonMod, loginText, loginTextMod, node, privacyText;\n\t    loginText = new Surface({\n\t      size: [68, 60],\n\t      content: 'Login',\n\t      classes: ['login__text--header']\n\t    });\n\t    privacyText = new Surface({\n\t      size: [window.innerWidth, 10],\n\t      content: 'Psst... Pegg respects people and their data.',\n\t      classes: ['login__text--message']\n\t    });\n\t    loginTextMod = new StateModifier({\n\t      align: [0.5, 0.5],\n\t      origin: [0.5, 0.5],\n\t      opacity: 0\n\t    });\n\t    node = this.add(loginTextMod);\n\t    node.add(loginText);\n\t    node.add(privacyText);\n\t    fbButton = new Surface({\n\t      size: [window.innerWidth, window.innerHeight / 4],\n\t      content: 'Login with Facebook',\n\t      classes: ['login__button--facebook'],\n\t      properties: {\n\t        lineHeight: \"\" + (window.innerHeight / 4) + \"px\"\n\t      }\n\t    });\n\t    fbButtonMod = new StateModifier({\n\t      align: [1, 0.5],\n\t      origin: [0, 0]\n\t    });\n\t    fbButton.on(\"click\", function() {\n\t      return UserActions.login();\n\t    });\n\t    gpButton = new Surface({\n\t      size: [window.innerWidth, window.innerHeight / 4],\n\t      content: 'Login with Google',\n\t      classes: ['login__button--google'],\n\t      properties: {\n\t        lineHeight: \"\" + (window.innerHeight / 4) + \"px\"\n\t      }\n\t    });\n\t    gpButtonMod = new StateModifier({\n\t      align: [1, 1],\n\t      origin: [0, 1]\n\t    });\n\t    loginTextMod.setOpacity(1, this.options.transition);\n\t    loginTextMod.setTransform(Transform.translate(0, -105, 0), this.options.transition);\n\t    this.add(fbButtonMod).add(fbButton);\n\t    fbButtonMod.setTransform(Transform.translate(-window.innerWidth, 0, 0), this.options.transition);\n\t    return Timer.after(((function(_this) {\n\t      return function() {\n\t        _this.add(gpButtonMod).add(gpButton);\n\t        return gpButtonMod.setTransform(Transform.translate(-window.innerWidth, 0, 0), _this.options.transition);\n\t      };\n\t    })(this)), 10);\n\t  };\n\t\n\t  return LoginView;\n\t\n\t})(View);\n\t\n\tmodule.exports = LoginView;\n\n\n/***/ },\n/* 115 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar ContainerSurface, Easing, ImageSurface, Modifier, NewCardView, StateModifier, Surface, Timer, Transform, View,\n\t  __hasProp = {}.hasOwnProperty,\n\t  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };\n\t\n\t__webpack_require__(147);\n\t\n\tView = __webpack_require__(4);\n\t\n\tSurface = __webpack_require__(3);\n\t\n\tImageSurface = __webpack_require__(11);\n\t\n\tContainerSurface = __webpack_require__(23);\n\t\n\tModifier = __webpack_require__(17);\n\t\n\tStateModifier = __webpack_require__(5);\n\t\n\tTransform = __webpack_require__(1);\n\t\n\tEasing = __webpack_require__(12);\n\t\n\tTimer = __webpack_require__(7);\n\t\n\tNewCardView = (function(_super) {\n\t  __extends(NewCardView, _super);\n\t\n\t  NewCardView.prototype.cssPrefix = 'newcard';\n\t\n\t  NewCardView.DEFAULT_OPTIONS = {\n\t    input: {\n\t      width: window.innerWidth - 50,\n\t      height: 40\n\t    }\n\t  };\n\t\n\t  function NewCardView() {\n\t    NewCardView.__super__.constructor.apply(this, arguments);\n\t    this.init();\n\t  }\n\t\n\t  NewCardView.prototype.init = function() {\n\t    var cardIcon, cardIconMod, newCardMod;\n\t    cardIcon = new ImageSurface({\n\t      size: [83, 58],\n\t      classes: ['newcard_card_icon'],\n\t      content: \"images/newcard_medium2.png\"\n\t    });\n\t    cardIconMod = new StateModifier({\n\t      origin: [0.35, 0.5],\n\t      align: [0.5, 0.15]\n\t    });\n\t    this.add(cardIconMod).add(cardIcon);\n\t    this.newCardTitle = new Surface({\n\t      size: [this.options.input.width, 50],\n\t      content: 'NEW CARD',\n\t      classes: ['newcard__header']\n\t    });\n\t    newCardMod = new StateModifier({\n\t      origin: [0.5, 0.5],\n\t      align: [0.5, 0.28]\n\t    });\n\t    this.add(newCardMod).add(this.newCardTitle);\n\t    return this.step1();\n\t  };\n\t\n\t  NewCardView.prototype.step1 = function() {\n\t    this.step1Mods = [];\n\t    this.addNum(1);\n\t    this.addSurface(1, {\n\t      size: [this.options.input.width, this.options.input.height],\n\t      content: '<input type=\"text\" name=\"question\" placeholder=\"Write a question\" id=\"question\" required/>',\n\t      classes: [\"\" + this.cssPrefix + \"__input\"]\n\t    });\n\t    this.addButton(1, {\n\t      content: \"Continue\",\n\t      classes: ['newcard__button']\n\t    }, (function(_this) {\n\t      return function() {\n\t        _this.hideStep(_this.step1Mods);\n\t        return _this.step2();\n\t      };\n\t    })(this));\n\t    return this.showStep(190, this.step1Mods);\n\t  };\n\t\n\t  NewCardView.prototype.step2 = function() {\n\t    var i, _i;\n\t    this.step2Mods = [];\n\t    this.addNum(2);\n\t    for (i = _i = 1; _i <= 4; i = ++_i) {\n\t      this.addSurface(2, {\n\t        size: [this.options.input.width, this.options.input.height],\n\t        content: \"<input type='text' name='answer' placeholder='Answer option \" + i + \"' id='answer\" + i + \"' tabindex='\" + i + \"'/>\",\n\t        classes: [\"\" + this.cssPrefix + \"__input\"]\n\t      });\n\t    }\n\t    this.addButton(2, {\n\t      content: \"Continue\",\n\t      classes: ['newcard__button']\n\t    }, (function(_this) {\n\t      return function() {\n\t        _this.hideStep(_this.step2Mods);\n\t        return _this.step3();\n\t      };\n\t    })(this));\n\t    return Timer.after(((function(_this) {\n\t      return function() {\n\t        return _this.showStep(190, _this.step2Mods);\n\t      };\n\t    })(this)), 20);\n\t  };\n\t\n\t  NewCardView.prototype.step3 = function() {\n\t    this.step3Mods = [];\n\t    this.addNum(3);\n\t    this.addLinkContainer(3, {\n\t      size: [59, 60],\n\t      image: 'images/deck_existing.png',\n\t      text: 'Place card in existing deck(s)',\n\t      classes: {\n\t        image: ['newcard__step3__deckIcon'],\n\t        text: ['newcard__step3__deckText']\n\t      }\n\t    }, (function(_this) {\n\t      return function() {\n\t        return alert(\"existing deck\");\n\t      };\n\t    })(this));\n\t    this.addLinkContainer(3, {\n\t      size: [73, 59],\n\t      image: 'images/deck_new.png',\n\t      text: 'Create a new deck',\n\t      classes: {\n\t        image: ['newcard__step3__deckIcon'],\n\t        text: ['newcard__step3__deckText']\n\t      }\n\t    }, (function(_this) {\n\t      return function() {\n\t        return alert(\"new deck\");\n\t      };\n\t    })(this));\n\t    this.addButton(3, {\n\t      content: \"Finish\",\n\t      classes: ['newcard__button']\n\t    }, (function(_this) {\n\t      return function() {\n\t        _this.hideStep(_this.step3Mods);\n\t        return _this.step4();\n\t      };\n\t    })(this));\n\t    return Timer.after(((function(_this) {\n\t      return function() {\n\t        return _this.showStep(190, _this.step3Mods);\n\t      };\n\t    })(this)), 20);\n\t  };\n\t\n\t  NewCardView.prototype.step4 = function() {\n\t    this.step4Mods = [];\n\t    this.addSurface(4, {\n\t      size: [this.options.input.width, 50],\n\t      content: 'CREATED!',\n\t      classes: ['newcard__header--big']\n\t    });\n\t    this.addButton(4, {\n\t      content: \"Play this card\",\n\t      classes: ['newcard__button', 'newcard__button--blue']\n\t    }, (function(_this) {\n\t      return function() {\n\t        return _this.hideStep(_this.step4Mods);\n\t      };\n\t    })(this));\n\t    this.addButton(4, {\n\t      content: \"Create another card\",\n\t      classes: ['newcard__button--blue', 'newcard__button']\n\t    }, (function(_this) {\n\t      return function() {\n\t        _this.hideStep(_this.step4Mods);\n\t        _this.newCardTitle.setContent(\"NEW CARD\");\n\t        return _this.step1();\n\t      };\n\t    })(this));\n\t    return Timer.after(((function(_this) {\n\t      return function() {\n\t        return _this.showStep(240, _this.step4Mods);\n\t      };\n\t    })(this)), 20);\n\t  };\n\t\n\t  NewCardView.prototype.showStep = function(yOffset, steps) {\n\t    var i, j, _results;\n\t    i = 0;\n\t    j = steps.length;\n\t    _results = [];\n\t    while (i < steps.length) {\n\t      Timer.setTimeout((function(i) {\n\t        return steps[i].setTransform(Transform.translate(0, yOffset + 60 * i, 0), {\n\t          duration: 600,\n\t          curve: Easing.outCubic\n\t        });\n\t      }).bind(this, i), j * 100);\n\t      i++;\n\t      _results.push(j--);\n\t    }\n\t    return _results;\n\t  };\n\t\n\t  NewCardView.prototype.hideStep = function(steps) {\n\t    var i, j, _results;\n\t    i = 0;\n\t    j = steps.length;\n\t    _results = [];\n\t    while (i < steps.length) {\n\t      Timer.setTimeout((function(i) {\n\t        return steps[i].setTransform(Transform.thenMove(Transform.rotateZ(1), [0, window.innerHeight * 2, -300]), {\n\t          duration: 600,\n\t          curve: Easing.inCubic\n\t        });\n\t      }).bind(this, i), j * 100);\n\t      i++;\n\t      _results.push(j--);\n\t    }\n\t    return _results;\n\t  };\n\t\n\t  NewCardView.prototype.addSurface = function(step, options) {\n\t    var surface, surfaceMod;\n\t    surface = new Surface({\n\t      size: options.size,\n\t      content: options.content,\n\t      classes: options.classes\n\t    });\n\t    surfaceMod = new StateModifier({\n\t      origin: [0.5, 1],\n\t      align: [0.5, -0.05]\n\t    });\n\t    this[\"step\" + step + \"Mods\"].push(surfaceMod);\n\t    return this.add(surfaceMod).add(surface);\n\t  };\n\t\n\t  NewCardView.prototype.addNum = function(step) {\n\t    var num, numMod;\n\t    num = new Surface({\n\t      size: [30, 30],\n\t      content: step,\n\t      classes: ['newcard__number']\n\t    });\n\t    numMod = new StateModifier({\n\t      origin: [0.5, 0.5],\n\t      align: [0.5, -0.05]\n\t    });\n\t    this[\"step\" + step + \"Mods\"].push(numMod);\n\t    return this.add(numMod).add(num);\n\t  };\n\t\n\t  NewCardView.prototype.addButton = function(step, params, func) {\n\t    var submit, submitMod;\n\t    submit = new Surface({\n\t      size: [this.options.input.width, this.options.input.height],\n\t      content: params.content,\n\t      classes: params.classes,\n\t      properties: {\n\t        lineHeight: this.options.input.height + \"px\"\n\t      }\n\t    });\n\t    submitMod = new StateModifier({\n\t      origin: [0.5, 0.5],\n\t      align: [0.5, -0.07]\n\t    });\n\t    this[\"step\" + step + \"Mods\"].push(submitMod);\n\t    this.add(submitMod).add(submit);\n\t    return submit.on('click', func);\n\t  };\n\t\n\t  NewCardView.prototype.addLinkContainer = function(step, options, func) {\n\t    var container, containerMod, image, imageMod, text, textMod;\n\t    image = new ImageSurface({\n\t      size: options.size,\n\t      classes: options.classes.image,\n\t      content: options.image\n\t    });\n\t    imageMod = new StateModifier({\n\t      origin: [0, 0.5],\n\t      align: [0, 0.5]\n\t    });\n\t    text = new Surface({\n\t      size: [this.options.input.width - 59, 60],\n\t      content: options.text,\n\t      classes: options.classes.text,\n\t      properties: {\n\t        lineHeight: \"\" + options.size[0] + \"px\"\n\t      }\n\t    });\n\t    textMod = new StateModifier({\n\t      origin: [0, 0.5],\n\t      align: [0.3, 0.5]\n\t    });\n\t    container = new ContainerSurface({\n\t      size: [this.options.input.width, options.size[1]]\n\t    });\n\t    container.add(imageMod).add(image);\n\t    container.add(textMod).add(text);\n\t    containerMod = new StateModifier({\n\t      origin: [0.5, 1],\n\t      align: [0.5, 0]\n\t    });\n\t    this[\"step\" + step + \"Mods\"].push(containerMod);\n\t    this.add(containerMod).add(container);\n\t    return container.on(\"click\", func);\n\t  };\n\t\n\t  return NewCardView;\n\t\n\t})(View);\n\t\n\tmodule.exports = NewCardView;\n\n\n/***/ },\n/* 116 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar ContainerSurface, ListItemView, PeggBoxView, Scrollview, View,\n\t  __hasProp = {}.hasOwnProperty,\n\t  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };\n\t\n\t__webpack_require__(38);\n\t\n\tView = __webpack_require__(4);\n\t\n\tContainerSurface = __webpack_require__(23);\n\t\n\tScrollview = __webpack_require__(28);\n\t\n\tListItemView = __webpack_require__(36);\n\t\n\tPeggBoxView = (function(_super) {\n\t  __extends(PeggBoxView, _super);\n\t\n\t  PeggBoxView.DEFAULT_OPTIONS = {\n\t    itemDensity: null\n\t  };\n\t\n\t  function PeggBoxView() {\n\t    PeggBoxView.__super__.constructor.apply(this, arguments);\n\t    this.init();\n\t  }\n\t\n\t  PeggBoxView.prototype.init = function() {\n\t    return this.items = [];\n\t  };\n\t\n\t  PeggBoxView.prototype.load = function(data) {\n\t    var container, i, item, scrollview, surfaces;\n\t    this.items = data;\n\t    surfaces = [];\n\t    scrollview = new Scrollview({\n\t      size: [window.innerWidth, window.innerHeight]\n\t    });\n\t    scrollview.sequenceFrom(surfaces);\n\t    i = 0;\n\t    while (i < this.items.length) {\n\t      item = new ListItemView(this.items[i]);\n\t      item.on('scroll', (function(_this) {\n\t        return function() {\n\t          return _this._eventOutput.emit('scroll');\n\t        };\n\t      })(this));\n\t      item.pipe(scrollview);\n\t      surfaces.push(item);\n\t      i++;\n\t    }\n\t    container = new ContainerSurface({\n\t      size: [void 0, void 0],\n\t      properties: {\n\t        overflow: \"hidden\"\n\t      }\n\t    });\n\t    container.add(scrollview);\n\t    return this.add(container);\n\t  };\n\t\n\t  return PeggBoxView;\n\t\n\t})(View);\n\t\n\tmodule.exports = PeggBoxView;\n\n\n/***/ },\n/* 117 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar CardView, Constants, ContainerSurface, Easing, PlayStore, PlayView, ProgressBarView, RateView, Scrollview, StateModifier, Surface, Timer, Transform, Utility, View,\n\t  __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },\n\t  __hasProp = {}.hasOwnProperty,\n\t  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };\n\t\n\t__webpack_require__(148);\n\t\n\tView = __webpack_require__(4);\n\t\n\tStateModifier = __webpack_require__(5);\n\t\n\tTransform = __webpack_require__(1);\n\t\n\tContainerSurface = __webpack_require__(23);\n\t\n\tScrollview = __webpack_require__(28);\n\t\n\tCardView = __webpack_require__(109);\n\t\n\tUtility = __webpack_require__(13);\n\t\n\tSurface = __webpack_require__(3);\n\t\n\tPlayStore = __webpack_require__(49);\n\t\n\tConstants = __webpack_require__(9);\n\t\n\tRateView = __webpack_require__(120);\n\t\n\tProgressBarView = __webpack_require__(119);\n\t\n\tTimer = __webpack_require__(7);\n\t\n\tEasing = __webpack_require__(12);\n\t\n\tPlayView = (function(_super) {\n\t  __extends(PlayView, _super);\n\t\n\t  function PlayView() {\n\t    this.rateCard = __bind(this.rateCard, this);\n\t    this.nextCard = __bind(this.nextCard, this);\n\t    PlayView.__super__.constructor.apply(this, arguments);\n\t    this.initListeners();\n\t    this.initPlay();\n\t  }\n\t\n\t  PlayView.prototype.initListeners = function() {\n\t    PlayStore.on(Constants.stores.CARD_ANSWERED, this.rateCard);\n\t    return PlayStore.on(Constants.stores.CARD_RATED, this.nextCard);\n\t  };\n\t\n\t  PlayView.prototype.load = function(data) {\n\t    var card, i, surfaces;\n\t    surfaces = [];\n\t    this.cards.sequenceFrom(surfaces);\n\t    i = 0;\n\t    while (i < data.length) {\n\t      card = new CardView(data[i], {\n\t        size: [window.innerWidth, null]\n\t      });\n\t      card.pipe(this.cards);\n\t      surfaces.push(card);\n\t      i++;\n\t    }\n\t    return this.initProgress(data.length);\n\t  };\n\t\n\t  PlayView.prototype.initPlay = function() {\n\t    this.playMod = new StateModifier;\n\t    this.playNode = this.add(this.playMod);\n\t    this.cards = new Scrollview({\n\t      direction: Utility.Direction.X,\n\t      paginated: true,\n\t      margin: 1000\n\t    });\n\t    this.playNode.add(this.cards);\n\t    this.rate = new RateView();\n\t    return this.playNode.add(this.rate);\n\t  };\n\t\n\t  PlayView.prototype.initProgress = function(size) {\n\t    var progressMod;\n\t    this.progress = new ProgressBarView(size);\n\t    progressMod = new StateModifier({\n\t      size: [window.innerHeight / 2 - 20, 15],\n\t      align: [0.5, 0.06],\n\t      origin: [0.5, 0.5]\n\t    });\n\t    return this.playNode.add(progressMod).add(this.progress);\n\t  };\n\t\n\t  PlayView.prototype.nextCard = function() {\n\t    this.progress.increment(1);\n\t    return this.cards.goToNextPage();\n\t  };\n\t\n\t  PlayView.prototype.rateCard = function() {\n\t    return this.rate.showStars();\n\t  };\n\t\n\t  return PlayView;\n\t\n\t})(View);\n\t\n\tmodule.exports = PlayView;\n\n\n/***/ },\n/* 118 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar Easing, ImageSurface, ProfileView, StateModifier, Surface, Timer, Transform, UserStore, View,\n\t  __hasProp = {}.hasOwnProperty,\n\t  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };\n\t\n\t__webpack_require__(149);\n\t\n\tView = __webpack_require__(4);\n\t\n\tSurface = __webpack_require__(3);\n\t\n\tImageSurface = __webpack_require__(11);\n\t\n\tStateModifier = __webpack_require__(5);\n\t\n\tTransform = __webpack_require__(1);\n\t\n\tTimer = __webpack_require__(7);\n\t\n\tEasing = __webpack_require__(12);\n\t\n\tUserStore = __webpack_require__(33);\n\t\n\tProfileView = (function(_super) {\n\t  __extends(ProfileView, _super);\n\t\n\t  ProfileView.DEFAULT_OPTIONS = {\n\t    width: window.innerWidth,\n\t    height: window.innerHeight,\n\t    transition: {\n\t      duration: 500,\n\t      curve: Easing.outExpo\n\t    }\n\t  };\n\t\n\t  function ProfileView(options) {\n\t    ProfileView.__super__.constructor.call(this, options);\n\t    this.init();\n\t  }\n\t\n\t  ProfileView.prototype.init = function() {\n\t    var logout, logoutMod, name, nameMod, pic, picMod;\n\t    pic = new ImageSurface({\n\t      size: [this.options.width, null],\n\t      content: UserStore.getAvatar(\"large\"),\n\t      classes: [\"profile__pic\"]\n\t    });\n\t    picMod = new StateModifier({\n\t      align: [0.5, 1],\n\t      origin: [0.5, 1],\n\t      transform: Transform.translate(0, 0, -1)\n\t    });\n\t    pic.on(\"click\", ((function(_this) {\n\t      return function(picMod) {\n\t        return picMod.setTransform(Transform.translate(0, 300, -1), _this.options.transition);\n\t      };\n\t    })(this)).bind(this, picMod));\n\t    name = new Surface({\n\t      size: [220, 35],\n\t      classes: ['profile__name__box'],\n\t      content: \"\" + (UserStore.getName(\"first\")) + \"'s <strong>profile</strong>\"\n\t    });\n\t    nameMod = new StateModifier({\n\t      align: [0.5, 0],\n\t      origin: [0.5, 1]\n\t    });\n\t    logout = new Surface({\n\t      size: [200, 50],\n\t      content: \"Logout\",\n\t      classes: [\"profile__logout__button\"]\n\t    });\n\t    logoutMod = new StateModifier({\n\t      align: [0.5, 1],\n\t      origin: [0.5, 1]\n\t    });\n\t    logout.on(\"click\", function() {\n\t      return UserStore.logout();\n\t    });\n\t    this.add(picMod).add(pic);\n\t    this.add(nameMod).add(name);\n\t    this.add(logoutMod).add(logout);\n\t    picMod.setAlign([0.5, -0.5], {\n\t      duration: 300,\n\t      easing: Easing.linear\n\t    });\n\t    logoutMod.setTransform(Transform.translate(0, -200, 0), {\n\t      duration: 800,\n\t      easing: Easing.outBounce\n\t    });\n\t    return nameMod.setTransform(Transform.translate(0, 160, 0), {\n\t      duration: 500,\n\t      easing: Easing.outCubic\n\t    });\n\t  };\n\t\n\t  return ProfileView;\n\t\n\t})(View);\n\t\n\tmodule.exports = ProfileView;\n\n\n/***/ },\n/* 119 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar ImageSurface, ProgressBarView, StateModifier, Surface, Timer, Transform, View,\n\t  __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },\n\t  __hasProp = {}.hasOwnProperty,\n\t  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };\n\t\n\tView = __webpack_require__(4);\n\t\n\tSurface = __webpack_require__(3);\n\t\n\tImageSurface = __webpack_require__(11);\n\t\n\tStateModifier = __webpack_require__(5);\n\t\n\tTransform = __webpack_require__(1);\n\t\n\tTimer = __webpack_require__(7);\n\t\n\tProgressBarView = (function(_super) {\n\t  __extends(ProgressBarView, _super);\n\t\n\t  ProgressBarView.DEFAULT_OPTIONS = {\n\t    width: window.innerHeight / 2 - 20,\n\t    height: 15,\n\t    transition: {\n\t      duration: 400,\n\t      curve: 'easeOut'\n\t    }\n\t  };\n\t\n\t  function ProgressBarView(steps, options) {\n\t    this.increment = __bind(this.increment, this);\n\t    ProgressBarView.__super__.constructor.call(this, options);\n\t    this.steps = steps;\n\t    this.last = 0;\n\t    this.init();\n\t  }\n\t\n\t  ProgressBarView.prototype.init = function() {\n\t    var inactiveBar, inactiveBarMod, progressBarMod;\n\t    progressBarMod = new StateModifier;\n\t    this.mainNode = this.add(progressBarMod);\n\t    this.activeBar = new ImageSurface({\n\t      content: \"images/progress_active.png\",\n\t      size: [this.last, this.options.height],\n\t      properties: {\n\t        zIndex: 10\n\t      }\n\t    });\n\t    inactiveBar = new ImageSurface({\n\t      content: \"images/progress_inactive.png\",\n\t      size: [this.options.width, this.options.height]\n\t    });\n\t    this.activeBarMod = new StateModifier({\n\t      align: [0, 0],\n\t      origin: [0, 0]\n\t    });\n\t    inactiveBarMod = new StateModifier;\n\t    this.mainNode.add(inactiveBarMod).add(inactiveBar);\n\t    return this.mainNode.add(this.activeBarMod).add(this.activeBar);\n\t  };\n\t\n\t  ProgressBarView.prototype.increment = function(x) {\n\t    var next, step;\n\t    step = this.options.width / this.steps;\n\t    next = this.last + step * x;\n\t    this.activeBar.setSize([next, this.options.height]);\n\t    return this.last = next;\n\t  };\n\t\n\t  return ProgressBarView;\n\t\n\t})(View);\n\t\n\tmodule.exports = ProgressBarView;\n\n\n/***/ },\n/* 120 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar ImageSurface, PlayActions, RateView, StateModifier, Surface, Timer, Transform, View,\n\t  __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },\n\t  __hasProp = {}.hasOwnProperty,\n\t  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };\n\t\n\tView = __webpack_require__(4);\n\t\n\tSurface = __webpack_require__(3);\n\t\n\tImageSurface = __webpack_require__(11);\n\t\n\tStateModifier = __webpack_require__(5);\n\t\n\tPlayActions = __webpack_require__(31);\n\t\n\tTransform = __webpack_require__(1);\n\t\n\tTimer = __webpack_require__(7);\n\t\n\tRateView = (function(_super) {\n\t  __extends(RateView, _super);\n\t\n\t  RateView.DEFAULT_OPTIONS = {\n\t    width: window.innerWidth,\n\t    height: 50,\n\t    scale: 5,\n\t    staggerDelay: 50,\n\t    transition: {\n\t      duration: 400,\n\t      curve: 'easeOut'\n\t    }\n\t  };\n\t\n\t  function RateView(options) {\n\t    this.pickStar = __bind(this.pickStar, this);\n\t    RateView.__super__.constructor.call(this, options);\n\t    this.init();\n\t  }\n\t\n\t  RateView.prototype.init = function() {\n\t    var i, spacing, star, starMod, _results;\n\t    this.state = new StateModifier;\n\t    this.mainNode = this.add(this.state);\n\t    this.starModifiers = [];\n\t    this.stars = [];\n\t    i = 1;\n\t    spacing = this.options.scale + 2;\n\t    _results = [];\n\t    while (i <= this.options.scale) {\n\t      star = new ImageSurface({\n\t        size: [this.options.height, this.options.height],\n\t        content: \"images/sun__grey_50px.png\"\n\t      });\n\t      starMod = new StateModifier({\n\t        align: [1 / spacing * i, 1.5],\n\t        origin: [0, 1]\n\t      });\n\t      star.on('click', (function(numStars) {\n\t        this.pickStar(numStars);\n\t        return Timer.setTimeout((function(pos) {\n\t          PlayActions.rate(pos);\n\t          return this.resetStars();\n\t        }).bind(this, numStars), numStars * this.options.staggerDelay);\n\t      }).bind(this, i));\n\t      this.starModifiers.push(starMod);\n\t      this.stars.push(star);\n\t      this.mainNode.add(starMod).add(star);\n\t      _results.push(i++);\n\t    }\n\t    return _results;\n\t  };\n\t\n\t  RateView.prototype.showStars = function() {\n\t    var i, _results;\n\t    i = 0;\n\t    _results = [];\n\t    while (i < this.starModifiers.length) {\n\t      Timer.setTimeout((function(i) {\n\t        this.starModifiers[i].setTransform(Transform.translate(0, -window.innerHeight / 2 + this.options.height, 0), this.options.transition);\n\t      }).bind(this, i), i * this.options.staggerDelay);\n\t      _results.push(i++);\n\t    }\n\t    return _results;\n\t  };\n\t\n\t  RateView.prototype.resetStars = function() {\n\t    var i, _results;\n\t    i = 0;\n\t    _results = [];\n\t    while (i < this.starModifiers.length) {\n\t      Timer.setTimeout((function(i) {\n\t        this.stars[i].setContent(\"images/sun__grey_50px.png\");\n\t        this.starModifiers[i].setTransform(Transform.translate(0, 0, 0), this.options.transition);\n\t      }).bind(this, i), i * this.options.staggerDelay);\n\t      _results.push(i++);\n\t    }\n\t    return _results;\n\t  };\n\t\n\t  RateView.prototype.pickStar = function(pos) {\n\t    var i, _results;\n\t    i = 0;\n\t    _results = [];\n\t    while (i < pos) {\n\t      Timer.setTimeout((function(i) {\n\t        this.stars[i].setContent(\"images/sun_50px.png\");\n\t      }).bind(this, i), i * this.options.staggerDelay);\n\t      _results.push(i++);\n\t    }\n\t    return _results;\n\t  };\n\t\n\t  return RateView;\n\t\n\t})(View);\n\t\n\tmodule.exports = RateView;\n\n\n/***/ },\n/* 121 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar Constants, Easing, ImageSurface, SignupView, SpringTransition, StateModifier, Surface, Timer, Transform, Transitionable, UserActions, UserStore, View,\n\t  __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },\n\t  __hasProp = {}.hasOwnProperty,\n\t  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };\n\t\n\t__webpack_require__(53);\n\t\n\tView = __webpack_require__(4);\n\t\n\tSurface = __webpack_require__(3);\n\t\n\tImageSurface = __webpack_require__(11);\n\t\n\tTransform = __webpack_require__(1);\n\t\n\tStateModifier = __webpack_require__(5);\n\t\n\tUserActions = __webpack_require__(32);\n\t\n\tEasing = __webpack_require__(12);\n\t\n\tTimer = __webpack_require__(7);\n\t\n\tTransitionable = __webpack_require__(14);\n\t\n\tSpringTransition = __webpack_require__(44);\n\t\n\tTransitionable.registerMethod('spring', SpringTransition);\n\t\n\tUserStore = __webpack_require__(33);\n\t\n\tConstants = __webpack_require__(9);\n\t\n\tSignupView = (function(_super) {\n\t  __extends(SignupView, _super);\n\t\n\t  SignupView.DEFAULT_OPTIONS = {\n\t    logoWidth: 165,\n\t    logoHeight: 122,\n\t    markWidth: 150,\n\t    markHeight: 70,\n\t    transition: {\n\t      duration: 500,\n\t      curve: Easing.outBounce\n\t    },\n\t    spring: {\n\t      method: \"spring\",\n\t      period: 500,\n\t      dampingRatio: 0.3\n\t    },\n\t    input: {\n\t      width: 300,\n\t      height: 40\n\t    }\n\t  };\n\t\n\t  function SignupView(options) {\n\t    this.showMessage = __bind(this.showMessage, this);\n\t    this.onSubmit = __bind(this.onSubmit, this);\n\t    SignupView.__super__.constructor.call(this, options);\n\t    this.initListeners();\n\t    this.initSplash();\n\t  }\n\t\n\t  SignupView.prototype.initListeners = function() {\n\t    UserStore.on(Constants.stores.SUBSCRIBE_PASS, this.showMessage);\n\t    return UserStore.on(Constants.stores.SUBSCRIBE_FAIL, this.showMessage);\n\t  };\n\t\n\t  SignupView.prototype.initSplash = function() {\n\t    var logo, logoPosMod, logoSizeMod, mark, markMod, markSizeMod;\n\t    logo = new ImageSurface({\n\t      size: [this.options.logoWidth, this.options.logoHeight],\n\t      classes: ['login__logo'],\n\t      content: \"images/logo_icon-big.png\"\n\t    });\n\t    logoPosMod = new StateModifier({\n\t      align: [0.5, 1],\n\t      origin: [0.5, 0]\n\t    });\n\t    logoSizeMod = new StateModifier;\n\t    mark = new ImageSurface({\n\t      size: [this.options.markWidth, this.options.markHeight],\n\t      classes: ['login__mark'],\n\t      content: \"images/logo_mark-big.png\"\n\t    });\n\t    markMod = new StateModifier({\n\t      align: [0.5, 1],\n\t      origin: [0.5, 0]\n\t    });\n\t    markSizeMod = new StateModifier;\n\t    this.add(logoSizeMod).add(logoPosMod).add(logo);\n\t    this.add(markSizeMod).add(markMod).add(mark);\n\t    markMod.setTransform(Transform.translate(0, -window.innerHeight / 2 - this.options.logoHeight / 2 + this.options.markHeight, 3), this.options.transition);\n\t    return Timer.after(((function(_this) {\n\t      return function() {\n\t        return logoPosMod.setTransform(Transform.translate(0, -window.innerHeight / 2 - _this.options.logoHeight, 0), _this.options.spring, function() {\n\t          Timer.after((function() {\n\t            return markSizeMod.setTransform(Transform.translate(0, -200, -1000), {\n\t              duration: 500,\n\t              curve: Easing.inOutBack\n\t            });\n\t          }), 20);\n\t          return logoSizeMod.setTransform(Transform.translate(0, -200, -1000), {\n\t            duration: 500,\n\t            curve: Easing.inOutBack\n\t          }, function() {\n\t            return _this.initSignUp();\n\t          });\n\t        });\n\t      };\n\t    })(this)), 20);\n\t  };\n\t\n\t  SignupView.prototype.initSignUp = function() {\n\t    var signupEmail, signupEmailMod, signupSubmit, signupSubmitMod, signupText, signupTextMod;\n\t    signupText = new Surface({\n\t      size: [300, 60],\n\t      content: 'Coming soon.',\n\t      classes: ['signup__text--header']\n\t    });\n\t    signupTextMod = new StateModifier({\n\t      origin: [0.5, 1],\n\t      align: [0.5, -0.05]\n\t    });\n\t    signupEmail = new Surface({\n\t      size: [300, 40],\n\t      content: '<input type=\"text\" name=\"email\" placeholder=\"Enter your email\" id=\"email\" required/>',\n\t      classes: [\"signup__email__input\"]\n\t    });\n\t    signupEmailMod = new StateModifier({\n\t      origin: [0.5, 1],\n\t      align: [0.5, -0.05]\n\t    });\n\t    signupSubmit = new Surface({\n\t      size: [this.options.input.width, this.options.input.height],\n\t      content: 'I\\'m sexy and I know it.',\n\t      classes: ['signup__submit'],\n\t      properties: {\n\t        lineHeight: this.options.input.height + \"px\"\n\t      }\n\t    });\n\t    signupSubmitMod = new StateModifier({\n\t      origin: [0.5, 0.5],\n\t      align: [0.5, -0.07]\n\t    });\n\t    this.add(signupEmailMod).add(signupEmail);\n\t    this.add(signupTextMod).add(signupText);\n\t    this.add(signupSubmitMod).add(signupSubmit);\n\t    signupTextMod.setTransform(Transform.translate(0, window.innerHeight / 2 + 60, 3), this.options.transition, (function(_this) {\n\t      return function() {\n\t        return signupEmailMod.setTransform(Transform.translate(0, window.innerHeight / 2 + 120, 3), _this.options.transition, function() {\n\t          return signupSubmitMod.setTransform(Transform.translate(0, window.innerHeight / 2 + 170, 3), _this.options.transition, function() {});\n\t        });\n\t      };\n\t    })(this));\n\t    return signupSubmit.on(\"click\", (function(_this) {\n\t      return function() {\n\t        return _this.onSubmit();\n\t      };\n\t    })(this));\n\t  };\n\t\n\t  SignupView.prototype.onSubmit = function() {\n\t    var email;\n\t    email = document.getElementById('email').value;\n\t    return UserActions.subscribe(email);\n\t  };\n\t\n\t  SignupView.prototype.showMessage = function() {\n\t    var classes, message, messageMod, messageText;\n\t    if (UserStore.getSubscriptionStatus()) {\n\t      message = 'We agree.<br/>You\\'re on the list.';\n\t      classes = ['signup__response--success'];\n\t    } else {\n\t      message = 'Nah, guess not. Fail.';\n\t      classes = ['signup__response--fail'];\n\t    }\n\t    messageText = new Surface({\n\t      size: [300, 60],\n\t      content: message,\n\t      classes: classes\n\t    });\n\t    messageMod = new StateModifier({\n\t      origin: [0.5, 0.5],\n\t      align: [0.5, -0.07]\n\t    });\n\t    this.add(messageMod).add(messageText);\n\t    return messageMod.setTransform(Transform.translate(0, window.innerHeight / 2 + 230, 3), this.options.transition, (function(_this) {\n\t      return function() {};\n\t    })(this));\n\t  };\n\t\n\t  return SignupView;\n\t\n\t})(View);\n\t\n\tmodule.exports = SignupView;\n\n\n/***/ },\n/* 122 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar ImageSurface, PlayActions, StateModifier, StatusView, Surface, Timer, Transform, View,\n\t  __hasProp = {}.hasOwnProperty,\n\t  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };\n\t\n\tView = __webpack_require__(4);\n\t\n\tSurface = __webpack_require__(3);\n\t\n\tImageSurface = __webpack_require__(11);\n\t\n\tStateModifier = __webpack_require__(5);\n\t\n\tTransform = __webpack_require__(1);\n\t\n\tTimer = __webpack_require__(7);\n\t\n\tPlayActions = __webpack_require__(31);\n\t\n\tStatusView = (function(_super) {\n\t  __extends(StatusView, _super);\n\t\n\t  StatusView.DEFAULT_OPTIONS = {\n\t    transition: {\n\t      duration: 400,\n\t      curve: 'easeOut'\n\t    }\n\t  };\n\t\n\t  function StatusView(steps, options) {\n\t    StatusView.__super__.constructor.call(this, options);\n\t    this.init();\n\t  }\n\t\n\t  StatusView.prototype.init = function() {\n\t    var next, nextMod, statusMod;\n\t    statusMod = new StateModifier;\n\t    this.mainNode = this.add(statusMod);\n\t    this.unicorn = new ImageSurface({\n\t      content: \"images/Unicorn_Cosmic_win.png\",\n\t      size: [239, 239]\n\t    });\n\t    this.unicornMod = new StateModifier({\n\t      align: [0.5, 0],\n\t      origin: [0.5, 0]\n\t    });\n\t    this.mainNode.add(this.unicornMod).add(this.unicorn);\n\t    next = new ImageSurface({\n\t      content: \"images/continue_big_text.png\",\n\t      size: [60, 120]\n\t    });\n\t    nextMod = new StateModifier({\n\t      align: [0.5, .8],\n\t      origin: [0.5, 1]\n\t    });\n\t    this.mainNode.add(nextMod).add(next);\n\t    return next.on(\"click\", function() {\n\t      return PlayActions[\"continue\"]();\n\t    });\n\t  };\n\t\n\t  return StatusView;\n\t\n\t})(View);\n\t\n\tmodule.exports = StatusView;\n\n\n/***/ },\n/* 123 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar ImageSurface, MenuActions, StateModifier, Surface, TabMenuItemView, Transform, View,\n\t  __hasProp = {}.hasOwnProperty,\n\t  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };\n\t\n\t__webpack_require__(54);\n\t\n\tView = __webpack_require__(4);\n\t\n\tSurface = __webpack_require__(3);\n\t\n\tStateModifier = __webpack_require__(5);\n\t\n\tTransform = __webpack_require__(1);\n\t\n\tImageSurface = __webpack_require__(11);\n\t\n\tMenuActions = __webpack_require__(30);\n\t\n\tTabMenuItemView = (function(_super) {\n\t  __extends(TabMenuItemView, _super);\n\t\n\t  TabMenuItemView.DEFAULT_OPTIONS = {\n\t    pageID: null,\n\t    width: null,\n\t    height: null,\n\t    angle: -0.2,\n\t    iconUrl: 'images/mark_tiny.png',\n\t    title: 'pegg',\n\t    color: 'white',\n\t    iconSize: 50\n\t  };\n\t\n\t  function TabMenuItemView() {\n\t    TabMenuItemView.__super__.constructor.apply(this, arguments);\n\t    this.createBackground();\n\t  }\n\t\n\t  TabMenuItemView.prototype.createBackground = function() {\n\t    this.background = new Surface({\n\t      size: [this.options.width, this.options.height],\n\t      classes: ['tabmenu__item', \"tabmenu__item--\" + this.options.pageID]\n\t    });\n\t    this.add(this.background);\n\t    return this.background.on('click', (function(_this) {\n\t      return function() {\n\t        return MenuActions.selectMenuItem(_this.getID());\n\t      };\n\t    })(this));\n\t  };\n\t\n\t  TabMenuItemView.prototype.createIcon = function() {\n\t    this.icon = new ImageSurface({\n\t      size: [this.options.iconSize, this.options.iconSize],\n\t      content: this.options.iconUrl\n\t    });\n\t    this.iconState = new StateModifier;\n\t    return this.add(this.iconState).add(this.icon);\n\t  };\n\t\n\t  TabMenuItemView.prototype.createTitle = function() {\n\t    this.title = new Surface({\n\t      size: [this.options.width, this.options.height],\n\t      content: this.options.title,\n\t      classes: ['tabmenu__item__title']\n\t    });\n\t    this.titleState = new StateModifier({\n\t      transform: Transform.translate(this.options.width / 2, this.options.height / 2, 0)\n\t    });\n\t    return this.add(this.titleState).add(this.title);\n\t  };\n\t\n\t  TabMenuItemView.prototype.getID = function() {\n\t    return this.options.pageID;\n\t  };\n\t\n\t  return TabMenuItemView;\n\t\n\t})(View);\n\t\n\tmodule.exports = TabMenuItemView;\n\n\n/***/ },\n/* 124 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar StateModifier, Surface, TabMenuItemView, TabMenuView, Timer, Transform, View, _,\n\t  __hasProp = {}.hasOwnProperty,\n\t  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };\n\t\n\t__webpack_require__(54);\n\t\n\tView = __webpack_require__(4);\n\t\n\tSurface = __webpack_require__(3);\n\t\n\tStateModifier = __webpack_require__(5);\n\t\n\tTransform = __webpack_require__(1);\n\t\n\tTimer = __webpack_require__(7);\n\t\n\t_ = __webpack_require__(16)._;\n\t\n\tTabMenuItemView = __webpack_require__(123);\n\t\n\t\n\t/*\n\t * Events:\n\t * selectTabMenuItem {{menuID}}\n\t */\n\t\n\tTabMenuView = (function(_super) {\n\t  __extends(TabMenuView, _super);\n\t\n\t  TabMenuView.DEFAULT_OPTIONS = {\n\t    tab: {\n\t      height: 60,\n\t      staggerDelay: 35,\n\t      transition: {\n\t        duration: 400,\n\t        curve: 'easeOut'\n\t      }\n\t    },\n\t    model: null\n\t  };\n\t\n\t  function TabMenuView(options) {\n\t    options = _.defaults(options, this.constructor.DEFAULT_OPTIONS);\n\t    TabMenuView.__super__.constructor.call(this, options);\n\t    this.init();\n\t  }\n\t\n\t  TabMenuView.prototype.init = function() {\n\t    var i, xOffset, _results;\n\t    this.tabs = [];\n\t    this.tabModifiers = [];\n\t    i = 0;\n\t    xOffset = 0;\n\t    _results = [];\n\t    while (i < this.options.model.length) {\n\t      this.addTab({\n\t        pageID: this.options.model[i].pageID,\n\t        title: this.options.model[i].title,\n\t        icon: this.options.model[i].iconUrl,\n\t        xOffset: xOffset,\n\t        width: window.innerWidth / this.options.model.length,\n\t        height: this.options.tab.height\n\t      });\n\t      i++;\n\t      _results.push(xOffset += 1 / this.options.model.length);\n\t    }\n\t    return _results;\n\t  };\n\t\n\t  TabMenuView.prototype.addTab = function(params) {\n\t    var tab, tabModifier;\n\t    tab = new TabMenuItemView({\n\t      pageID: params.pageID,\n\t      title: params.title,\n\t      iconUrl: params.icon,\n\t      width: params.width,\n\t      height: params.height,\n\t      xOffset: params.xOffset\n\t    });\n\t    tabModifier = new StateModifier({\n\t      origin: [0, 0],\n\t      align: [params.xOffset, 0],\n\t      transform: Transform.translate(0, params.height, 0)\n\t    });\n\t    this.tabModifiers.push(tabModifier);\n\t    this.tabs.push(tab);\n\t    return this.add(tabModifier).add(tab);\n\t  };\n\t\n\t  TabMenuView.prototype.showTabs = function() {\n\t    var delay, i, transition, _results;\n\t    transition = this.options.tab.transition;\n\t    delay = this.options.tab.staggerDelay;\n\t    i = 0;\n\t    _results = [];\n\t    while (i < this.tabModifiers.length) {\n\t      Timer.setTimeout((function(i) {\n\t        this.tabModifiers[i].setTransform(Transform.translate(0, 0, 0), transition);\n\t      }).bind(this, i), i * delay);\n\t      _results.push(i++);\n\t    }\n\t    return _results;\n\t  };\n\t\n\t  TabMenuView.prototype.hideTabs = function() {\n\t    var delay, i, transition, _results;\n\t    transition = this.options.tab.transition;\n\t    delay = this.options.tab.staggerDelay;\n\t    i = 0;\n\t    _results = [];\n\t    while (i < this.tabModifiers.length) {\n\t      Timer.setTimeout((function(i) {\n\t        this.tabModifiers[i].setTransform(Transform.translate(0, this.options.tab.height, 0), transition);\n\t      }).bind(this, i), i * delay);\n\t      _results.push(i++);\n\t    }\n\t    return _results;\n\t  };\n\t\n\t  TabMenuView.prototype.bounceTabs = function() {\n\t    var delay, i, tab, transition, y, _results;\n\t    transition = this.options.tab.transition;\n\t    delay = this.options.tab.staggerDelay;\n\t    i = 0;\n\t    tab = 0;\n\t    y = this.options.tab.height;\n\t    _results = [];\n\t    while (i < this.tabModifiers.length * 2) {\n\t      Timer.setTimeout((function(i) {\n\t        this.tabModifiers[tab].setTransform(Transform.translate(0, y, 0), transition);\n\t        tab++;\n\t        if (tab === this.tabModifiers.length) {\n\t          tab = 0;\n\t          y = 0;\n\t        }\n\t      }).bind(this, i), i * delay);\n\t      _results.push(i++);\n\t    }\n\t    return _results;\n\t  };\n\t\n\t  return TabMenuView;\n\t\n\t})(View);\n\t\n\tmodule.exports = TabMenuView;\n\n\n/***/ },\n/* 125 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = {\n\t  parse: {\n\t    appId: '08asqa4QvUyNIDTIl3BS70CLcKJGoh2mI1MXwJEf',\n\t    jsKey: 'G19GjSAlnMOvTjcDqE6KxxKHsMnygHmbsfDYg8gm'\n\t  },\n\t  facebook: {\n\t    appId: '1410524409215955'\n\t  },\n\t  aviary: {\n\t    apiKey: 'cdef40f2d4f076a2'\n\t  }\n\t};\n\n\n/***/ },\n/* 126 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar Config, Parse, load;\n\t\n\tParse = __webpack_require__(16);\n\t\n\tConfig = __webpack_require__(37)[\"public\"].facebook;\n\t\n\tload = function(d, s, id) {\n\t  var fjs, js;\n\t  fjs = d.getElementsByTagName(s)[0];\n\t  if (d.getElementById(id)) {\n\t    return;\n\t  }\n\t  js = d.createElement(s);\n\t  js.id = id;\n\t  js.src = '//connect.facebook.net/en_US/all.js';\n\t  return fjs.parentNode.insertBefore(js, fjs);\n\t};\n\t\n\twindow.fbAsyncInit = function() {\n\t  return Parse.FacebookUtils.init({\n\t    appId: Config.appId,\n\t    cookie: true,\n\t    xfbml: true\n\t  });\n\t};\n\t\n\tload(document, 'script', 'facebook-jssdk');\n\n\n/***/ },\n/* 127 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar Utils;\n\t\n\tUtils = {\n\t  keyMirror: function(obj) {\n\t    var key, ret;\n\t    ret = {};\n\t    for (key in obj) {\n\t      if (obj.hasOwnProperty(key)) {\n\t        ret[key] = key;\n\t      }\n\t    }\n\t    return ret;\n\t  }\n\t};\n\t\n\tmodule.exports = Utils;\n\n\n/***/ },\n/* 128 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports =\n\t\t\"html{transform-style:preserve-3d}html,body{width:100%;height:100%;margin:0;padding:0;-webkit-transform-style:preserve-3d;overflow:hidden}body{-webkit-font-smoothing:antialiased;-webkit-tap-highlight-color:transparent;-webkit-perspective:0;perspective:none}body,.famous-container{position:absolute;transform-style:preserve-3d}.famous-container,.famous-group{top:0;left:0;bottom:0;right:0;overflow:visible;-webkit-backface-visibility:visible;backface-visibility:visible;pointer-events:none;-webkit-transform-style:preserve-3d}.famous-group{width:0;height:0;margin:0;padding:0}.famous-group,.famous-surface{position:absolute;transform-style:preserve-3d}.famous-surface{-webkit-transform-origin:center center;transform-origin:center center;-webkit-backface-visibility:hidden;backface-visibility:hidden;-webkit-transform-style:flat;-webkit-box-sizing:border-box;-moz-box-sizing:border-box;-webkit-tap-highlight-color:transparent;pointer-events:auto}.famous-container-group{position:relative;width:100%;height:100%}\";\n\n/***/ },\n/* 129 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = \"body {\\n  font-family: \\\"Helvetica Neue\\\", \\\"Helvetica\\\", Helvetica, Arial, sans-serif;\\n  background-color: #0c0d2a; }\\n\\nbutton {\\n  width: 100%;\\n  height: 100%; }\\n\\n.answer {\\n  background-color: #00a5ff;\\n  padding: 10px;\\n  border: 10px solid white;\\n  text-align: center; }\\n\"\n\n/***/ },\n/* 130 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = \".bandmenu__background {\\n  background-color: #0c0d2a;\\n  z-index: 10; }\\n\\n.bandmenu__item {\\n  cursor: pointer;\\n  text-align: left;\\n  z-index: 20; }\\n\\n.bandmenu__item--play {\\n  background-color: #FF694F; }\\n\\n.bandmenu__item--friends {\\n  background-color: #FF694F; }\\n\\n.bandmenu__item--create {\\n  background-color: #FCDA33; }\\n\\n.bandmenu__item--decks {\\n  background-color: #9DEB0F; }\\n\\n.bandmenu__item--activity {\\n  background-color: #48B5FB; }\\n\\n.bandmenu__item__title {\\n  color: #fff;\\n  text-transform: uppercase;\\n  position: relative;\\n  top: 42%;\\n  width: 60%;\\n  float: right;\\n  font-weight: bold;\\n  font-size: 25px; }\\n\\n.bandmenu__item__logo {\\n  z-index: 100; }\\n\"\n\n/***/ },\n/* 131 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = \".backface-visible, .card__shim {\\n  backface-visibility: visible;\\n  -webkit-backface-visibility: visible;\\n  -moz-backface-visibility: visible;\\n  -ms-backface-visibility: visible; }\\n\\n.card__front, .card__back, .card__left, .card__right {\\n  cursor: pointer;\\n  padding: 20px; }\\n\\n\\n.card__front__question {\\n  text-align: center;\\n  padding: 10px;\\n  font-size: 25px;\\n  line-height: 35px; }\\n\\n.card__front__question--small {\\n  text-align: center;\\n  font-size: 18px;\\n  padding: 0px 10px;\\n  line-height: 30px;\\n  z-index: -10;\\n  height: 90px !important;\\n  text-overflow: ellipsis; }\\n\\n.card__front__option {\\n  padding: 0px 20px; }\\n\\n.card__front__option .outerContainer {\\n  display: table;\\n  overflow: hidden; }\\n\\n.card__front__option .outerContainer .innerContainer {\\n  display: table-cell;\\n  vertical-align: middle;\\n  width: 100%;\\n  margin: 0 auto;\\n  text-align: left; }\\n\\n.card__front__input {\\n  margin: 0;\\n  text-align: center; }\\n\\n.card__front__input input {\\n  background: transparent;\\n  border: 1px solid #0c0d2a;\\n  border-radius: 5px;\\n  padding: 10px;\\n  width: 100%;\\n  font-size: 15px;\\n  margin: 14px; }\\n\\n.card__front__option:hover {\\n  background-color: #FF694F;\\n  opacity: 0.5; }\\n\\n\\n.card__front {\\n  background-color: #9fcacf; }\\n\\n.card__backing {\\n  background-color: #fff; }\\n\\n.card__back {\\n  text-align: center;\\n  background-color: #FCDA33; }\\n\\n.card__back__image {\\n  font-size: 23px; }\\n\\n\\n.card__shim {\\n  background-color: #000; }\\n\\n.card__front_newOption {\\n  margin: 0;\\n  width: 80% !important; }\\n\"\n\n/***/ },\n/* 132 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = \".fpsmeter {\\n  color: #fff;\\n  cursor: pointer; }\\n\"\n\n/***/ },\n/* 133 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = \".footer {\\n  background-color: #FF694F;\\n  color: #fff;\\n  line-height: 100px;\\n  text-align: center; }\\n\\n.header__background {\\n  z-index: 10; }\\n\\n.header__background--play {\\n  background-color: #FF694F; }\\n\\n.header__background--profile {\\n  background-color: #FF694F; }\\n\\n.header__background--peggbox {\\n  background-color: #9DEB0F; }\\n\\n.header__background--decks {\\n  background-color: #9DEB0F; }\\n\\n.header__background--create {\\n  background-color: #FCDA33; }\\n\\n.header__background--activity {\\n  background-color: #48B5FB; }\\n\\n.header__title {\\n  font-weight: bold;\\n  font-size: 30px;\\n  text-align: center;\\n  color: #fff; }\\n\\n.header__logout {\\n  font-weight: bold;\\n  font-size: 18px;\\n  color: #fff; }\\n\\n.header__logo {\\n  cursor: pointer;\\n  z-index: 11; }\\n\\n.header__profilePic {\\n  z-index: 11; }\\n\"\n\n/***/ },\n/* 134 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = \".login__background {\\n  background-color: #0c0d2a; }\\n\\n.login__text--header {\\n  text-transform: uppercase;\\n  color: #fff;\\n  font-size: 20px;\\n  font-weight: bold; }\\n\\n.login__text--message {\\n  color: #9fcacf;\\n  font-size: 12px;\\n  text-align: center; }\\n\\n.login__button--facebook {\\n  background-color: #3CA5FA;\\n  text-align: center;\\n  color: white;\\n  font-weight: bold;\\n  cursor: pointer; }\\n\\n.login__button--google {\\n  background-color: #E44E3C;\\n  text-align: center;\\n  color: white;\\n  font-weight: bold;\\n  cursor: pointer; }\\n\\n.login__logo {\\n  z-index: 10; }\\n\\n.login__mark {\\n  z-index: -10; }\\n\\n.signup__text--header {\\n  text-align: center;\\n  text-transform: uppercase;\\n  color: #fff;\\n  font-size: 30px;\\n  font-weight: bold; }\\n\\n.signup__submit {\\n  background-color: #fff;\\n  border-radius: 5px;\\n  text-align: center;\\n  font-size: 15px;\\n  cursor: pointer; }\\n\\n.signup__email__input input {\\n  background: transparent;\\n  border: 1px solid #fff;\\n  border-radius: 5px;\\n  padding: 10px;\\n  width: 92%;\\n  color: #fff;\\n  font-size: 15px; }\\n\\n.signup__response--success {\\n  text-align: center;\\n  color: #9DEB0F;\\n  font-size: 25px;\\n  font-weight: bold; }\\n\\n.signup__response--fail {\\n  text-align: center;\\n  color: #FF694F;\\n  font-size: 25px;\\n  font-weight: bold; }\\n\"\n\n/***/ },\n/* 135 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = \".backface-visible {\\n  backface-visibility: visible;\\n  -webkit-backface-visibility: visible;\\n  -moz-backface-visibility: visible;\\n  -ms-backface-visibility: visible; }\\n\\n.newcard__input input {\\n  background: transparent;\\n  border: 1px solid #fff;\\n  border-radius: 5px;\\n  padding: 10px;\\n  width: 92%;\\n  color: #fff;\\n  font-size: 15px; }\\n\\n.newcard__button--blue {\\n  background-color: #00B5FF !important; }\\n\\n.newcard__button {\\n  background-color: #fff;\\n  border-radius: 5px;\\n  text-align: center;\\n  font-size: 15px; }\\n\\n.newcard__header {\\n  color: #fff;\\n  font-size: 23px;\\n  text-align: center; }\\n\\n.newcard__number {\\n  border-radius: 30px;\\n  background-color: #fff;\\n  text-align: center;\\n  font-weight: bold;\\n  line-height: 30px;\\n  vertical-align: middle; }\\n\\n.newcard__step3__deckText {\\n  color: #fff;\\n  font-size: 15px; }\\n\\n.newcard__header--big {\\n  color: #00B5FF;\\n  font-size: 36px;\\n  text-align: center; }\\n\"\n\n/***/ },\n/* 136 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = \".peggbox__background {\\n  background-color: #0c0d2a; }\\n\\n.peggbox__item {\\n  color: #fff;\\n  border-bottom: 1px solid #d3e9eb;\\n  font-size: 20px;\\n  vertical-align: center;\\n  padding: 20px; }\\n\\n.peggbox__item span {\\n  padding: 0px 10px;\\n  display: inline-block; }\\n\"\n\n/***/ },\n/* 137 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = \".play__background {\\n  background-color: #0c0d2a; }\\n\"\n\n/***/ },\n/* 138 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = \"\\n.profile__name__box {\\n  border-radius: 20px;\\n  background-color: #FF694F;\\n  padding: 5px;\\n  text-align: center;\\n  text-transform: uppercase;\\n  font-size: 19px;\\n  color: #fff; }\\n\\n.profile__logout__button {\\n  text-align: center;\\n  text-transform: uppercase;\\n  font-size: 20px;\\n  color: #fff;\\n  font-weight: bold; }\\n\"\n\n/***/ },\n/* 139 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = \".tabmenu__background {\\n  background-color: #0c0d2a; }\\n\\n.tabmenu__item {\\n  cursor: pointer;\\n  text-align: left; }\\n\\n.tabmenu__item--pegg {\\n  background-color: #FF694F; }\\n\\n.tabmenu__item--friends {\\n  background-color: #FF694F; }\\n\\n.tabmenu__item--decks {\\n  background-color: #FCDA33; }\\n\\n.tabmenu__item--peggbox {\\n  background-color: #9DEB0F; }\\n\\n.tabmenu__item--activity {\\n  background-color: #48B5FB; }\\n\"\n\n/***/ },\n/* 140 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/*\r\n\t\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\t\tAuthor Tobias Koppers @sokra\r\n\t*/\r\n\tmodule.exports = function(src) {\r\n\t\tif (window.execScript)\r\n\t\t\twindow.execScript(src);\r\n\t\telse\r\n\t\t\teval.call(null, src);\r\n\t}\n\n/***/ },\n/* 141 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t__webpack_require__(140)(__webpack_require__(142))\n\n/***/ },\n/* 142 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = \"/*!\\n * Parse JavaScript SDK\\n * Version: 1.2.18\\n * Built: Wed Mar 12 2014 15:36:03\\n * http://parse.com\\n *\\n * Copyright 2014 Parse, Inc.\\n * The Parse JavaScript SDK is freely distributable under the MIT license.\\n *\\n * Includes: Underscore.js\\n * Copyright 2009-2012 Jeremy Ashkenas, DocumentCloud Inc.\\n * Released under the MIT license.\\n */\\n(function(root) {\\n  root.Parse = root.Parse || {};\\n  root.Parse.VERSION = \\\"js1.2.18\\\";\\n}(this));\\n//     Underscore.js 1.4.4\\n//     http://underscorejs.org\\n//     (c) 2009-2013 Jeremy Ashkenas, DocumentCloud Inc.\\n//     Underscore may be freely distributed under the MIT license.\\n\\n(function() {\\n\\n  // Baseline setup\\n  // --------------\\n\\n  // Establish the root object, `window` in the browser, or `global` on the server.\\n  var root = this;\\n\\n  // Save the previous value of the `_` variable.\\n  var previousUnderscore = root._;\\n\\n  // Establish the object that gets returned to break out of a loop iteration.\\n  var breaker = {};\\n\\n  // Save bytes in the minified (but not gzipped) version:\\n  var ArrayProto = Array.prototype, ObjProto = Object.prototype, FuncProto = Function.prototype;\\n\\n  // Create quick reference variables for speed access to core prototypes.\\n  var push             = ArrayProto.push,\\n      slice            = ArrayProto.slice,\\n      concat           = ArrayProto.concat,\\n      toString         = ObjProto.toString,\\n      hasOwnProperty   = ObjProto.hasOwnProperty;\\n\\n  // All **ECMAScript 5** native function implementations that we hope to use\\n  // are declared here.\\n  var\\n    nativeForEach      = ArrayProto.forEach,\\n    nativeMap          = ArrayProto.map,\\n    nativeReduce       = ArrayProto.reduce,\\n    nativeReduceRight  = ArrayProto.reduceRight,\\n    nativeFilter       = ArrayProto.filter,\\n    nativeEvery        = ArrayProto.every,\\n    nativeSome         = ArrayProto.some,\\n    nativeIndexOf      = ArrayProto.indexOf,\\n    nativeLastIndexOf  = ArrayProto.lastIndexOf,\\n    nativeIsArray      = Array.isArray,\\n    nativeKeys         = Object.keys,\\n    nativeBind         = FuncProto.bind;\\n\\n  // Create a safe reference to the Underscore object for use below.\\n  var _ = function(obj) {\\n    if (obj instanceof _) return obj;\\n    if (!(this instanceof _)) return new _(obj);\\n    this._wrapped = obj;\\n  };\\n\\n  // Export the Underscore object for **Node.js**, with\\n  // backwards-compatibility for the old `require()` API. If we're in\\n  // the browser, add `_` as a global object via a string identifier,\\n  // for Closure Compiler \\\"advanced\\\" mode.\\n  if (typeof exports !== 'undefined') {\\n    if (typeof module !== 'undefined' && module.exports) {\\n      exports = module.exports = _;\\n    }\\n    exports._ = _;\\n  } else {\\n    root._ = _;\\n  }\\n\\n  // Current version.\\n  _.VERSION = '1.4.4';\\n\\n  // Collection Functions\\n  // --------------------\\n\\n  // The cornerstone, an `each` implementation, aka `forEach`.\\n  // Handles objects with the built-in `forEach`, arrays, and raw objects.\\n  // Delegates to **ECMAScript 5**'s native `forEach` if available.\\n  var each = _.each = _.forEach = function(obj, iterator, context) {\\n    if (obj == null) return;\\n    if (nativeForEach && obj.forEach === nativeForEach) {\\n      obj.forEach(iterator, context);\\n    } else if (obj.length === +obj.length) {\\n      for (var i = 0, l = obj.length; i < l; i++) {\\n        if (iterator.call(context, obj[i], i, obj) === breaker) return;\\n      }\\n    } else {\\n      for (var key in obj) {\\n        if (_.has(obj, key)) {\\n          if (iterator.call(context, obj[key], key, obj) === breaker) return;\\n        }\\n      }\\n    }\\n  };\\n\\n  // Return the results of applying the iterator to each element.\\n  // Delegates to **ECMAScript 5**'s native `map` if available.\\n  _.map = _.collect = function(obj, iterator, context) {\\n    var results = [];\\n    if (obj == null) return results;\\n    if (nativeMap && obj.map === nativeMap) return obj.map(iterator, context);\\n    each(obj, function(value, index, list) {\\n      results[results.length] = iterator.call(context, value, index, list);\\n    });\\n    return results;\\n  };\\n\\n  var reduceError = 'Reduce of empty array with no initial value';\\n\\n  // **Reduce** builds up a single result from a list of values, aka `inject`,\\n  // or `foldl`. Delegates to **ECMAScript 5**'s native `reduce` if available.\\n  _.reduce = _.foldl = _.inject = function(obj, iterator, memo, context) {\\n    var initial = arguments.length > 2;\\n    if (obj == null) obj = [];\\n    if (nativeReduce && obj.reduce === nativeReduce) {\\n      if (context) iterator = _.bind(iterator, context);\\n      return initial ? obj.reduce(iterator, memo) : obj.reduce(iterator);\\n    }\\n    each(obj, function(value, index, list) {\\n      if (!initial) {\\n        memo = value;\\n        initial = true;\\n      } else {\\n        memo = iterator.call(context, memo, value, index, list);\\n      }\\n    });\\n    if (!initial) throw new TypeError(reduceError);\\n    return memo;\\n  };\\n\\n  // The right-associative version of reduce, also known as `foldr`.\\n  // Delegates to **ECMAScript 5**'s native `reduceRight` if available.\\n  _.reduceRight = _.foldr = function(obj, iterator, memo, context) {\\n    var initial = arguments.length > 2;\\n    if (obj == null) obj = [];\\n    if (nativeReduceRight && obj.reduceRight === nativeReduceRight) {\\n      if (context) iterator = _.bind(iterator, context);\\n      return initial ? obj.reduceRight(iterator, memo) : obj.reduceRight(iterator);\\n    }\\n    var length = obj.length;\\n    if (length !== +length) {\\n      var keys = _.keys(obj);\\n      length = keys.length;\\n    }\\n    each(obj, function(value, index, list) {\\n      index = keys ? keys[--length] : --length;\\n      if (!initial) {\\n        memo = obj[index];\\n        initial = true;\\n      } else {\\n        memo = iterator.call(context, memo, obj[index], index, list);\\n      }\\n    });\\n    if (!initial) throw new TypeError(reduceError);\\n    return memo;\\n  };\\n\\n  // Return the first value which passes a truth test. Aliased as `detect`.\\n  _.find = _.detect = function(obj, iterator, context) {\\n    var result;\\n    any(obj, function(value, index, list) {\\n      if (iterator.call(context, value, index, list)) {\\n        result = value;\\n        return true;\\n      }\\n    });\\n    return result;\\n  };\\n\\n  // Return all the elements that pass a truth test.\\n  // Delegates to **ECMAScript 5**'s native `filter` if available.\\n  // Aliased as `select`.\\n  _.filter = _.select = function(obj, iterator, context) {\\n    var results = [];\\n    if (obj == null) return results;\\n    if (nativeFilter && obj.filter === nativeFilter) return obj.filter(iterator, context);\\n    each(obj, function(value, index, list) {\\n      if (iterator.call(context, value, index, list)) results[results.length] = value;\\n    });\\n    return results;\\n  };\\n\\n  // Return all the elements for which a truth test fails.\\n  _.reject = function(obj, iterator, context) {\\n    return _.filter(obj, function(value, index, list) {\\n      return !iterator.call(context, value, index, list);\\n    }, context);\\n  };\\n\\n  // Determine whether all of the elements match a truth test.\\n  // Delegates to **ECMAScript 5**'s native `every` if available.\\n  // Aliased as `all`.\\n  _.every = _.all = function(obj, iterator, context) {\\n    iterator || (iterator = _.identity);\\n    var result = true;\\n    if (obj == null) return result;\\n    if (nativeEvery && obj.every === nativeEvery) return obj.every(iterator, context);\\n    each(obj, function(value, index, list) {\\n      if (!(result = result && iterator.call(context, value, index, list))) return breaker;\\n    });\\n    return !!result;\\n  };\\n\\n  // Determine if at least one element in the object matches a truth test.\\n  // Delegates to **ECMAScript 5**'s native `some` if available.\\n  // Aliased as `any`.\\n  var any = _.some = _.any = function(obj, iterator, context) {\\n    iterator || (iterator = _.identity);\\n    var result = false;\\n    if (obj == null) return result;\\n    if (nativeSome && obj.some === nativeSome) return obj.some(iterator, context);\\n    each(obj, function(value, index, list) {\\n      if (result || (result = iterator.call(context, value, index, list))) return breaker;\\n    });\\n    return !!result;\\n  };\\n\\n  // Determine if the array or object contains a given value (using `===`).\\n  // Aliased as `include`.\\n  _.contains = _.include = function(obj, target) {\\n    if (obj == null) return false;\\n    if (nativeIndexOf && obj.indexOf === nativeIndexOf) return obj.indexOf(target) != -1;\\n    return any(obj, function(value) {\\n      return value === target;\\n    });\\n  };\\n\\n  // Invoke a method (with arguments) on every item in a collection.\\n  _.invoke = function(obj, method) {\\n    var args = slice.call(arguments, 2);\\n    var isFunc = _.isFunction(method);\\n    return _.map(obj, function(value) {\\n      return (isFunc ? method : value[method]).apply(value, args);\\n    });\\n  };\\n\\n  // Convenience version of a common use case of `map`: fetching a property.\\n  _.pluck = function(obj, key) {\\n    return _.map(obj, function(value){ return value[key]; });\\n  };\\n\\n  // Convenience version of a common use case of `filter`: selecting only objects\\n  // containing specific `key:value` pairs.\\n  _.where = function(obj, attrs, first) {\\n    if (_.isEmpty(attrs)) return first ? null : [];\\n    return _[first ? 'find' : 'filter'](obj, function(value) {\\n      for (var key in attrs) {\\n        if (attrs[key] !== value[key]) return false;\\n      }\\n      return true;\\n    });\\n  };\\n\\n  // Convenience version of a common use case of `find`: getting the first object\\n  // containing specific `key:value` pairs.\\n  _.findWhere = function(obj, attrs) {\\n    return _.where(obj, attrs, true);\\n  };\\n\\n  // Return the maximum element or (element-based computation).\\n  // Can't optimize arrays of integers longer than 65,535 elements.\\n  // See: https://bugs.webkit.org/show_bug.cgi?id=80797\\n  _.max = function(obj, iterator, context) {\\n    if (!iterator && _.isArray(obj) && obj[0] === +obj[0] && obj.length < 65535) {\\n      return Math.max.apply(Math, obj);\\n    }\\n    if (!iterator && _.isEmpty(obj)) return -Infinity;\\n    var result = {computed : -Infinity, value: -Infinity};\\n    each(obj, function(value, index, list) {\\n      var computed = iterator ? iterator.call(context, value, index, list) : value;\\n      computed >= result.computed && (result = {value : value, computed : computed});\\n    });\\n    return result.value;\\n  };\\n\\n  // Return the minimum element (or element-based computation).\\n  _.min = function(obj, iterator, context) {\\n    if (!iterator && _.isArray(obj) && obj[0] === +obj[0] && obj.length < 65535) {\\n      return Math.min.apply(Math, obj);\\n    }\\n    if (!iterator && _.isEmpty(obj)) return Infinity;\\n    var result = {computed : Infinity, value: Infinity};\\n    each(obj, function(value, index, list) {\\n      var computed = iterator ? iterator.call(context, value, index, list) : value;\\n      computed < result.computed && (result = {value : value, computed : computed});\\n    });\\n    return result.value;\\n  };\\n\\n  // Shuffle an array.\\n  _.shuffle = function(obj) {\\n    var rand;\\n    var index = 0;\\n    var shuffled = [];\\n    each(obj, function(value) {\\n      rand = _.random(index++);\\n      shuffled[index - 1] = shuffled[rand];\\n      shuffled[rand] = value;\\n    });\\n    return shuffled;\\n  };\\n\\n  // An internal function to generate lookup iterators.\\n  var lookupIterator = function(value) {\\n    return _.isFunction(value) ? value : function(obj){ return obj[value]; };\\n  };\\n\\n  // Sort the object's values by a criterion produced by an iterator.\\n  _.sortBy = function(obj, value, context) {\\n    var iterator = lookupIterator(value);\\n    return _.pluck(_.map(obj, function(value, index, list) {\\n      return {\\n        value : value,\\n        index : index,\\n        criteria : iterator.call(context, value, index, list)\\n      };\\n    }).sort(function(left, right) {\\n      var a = left.criteria;\\n      var b = right.criteria;\\n      if (a !== b) {\\n        if (a > b || a === void 0) return 1;\\n        if (a < b || b === void 0) return -1;\\n      }\\n      return left.index < right.index ? -1 : 1;\\n    }), 'value');\\n  };\\n\\n  // An internal function used for aggregate \\\"group by\\\" operations.\\n  var group = function(obj, value, context, behavior) {\\n    var result = {};\\n    var iterator = lookupIterator(value || _.identity);\\n    each(obj, function(value, index) {\\n      var key = iterator.call(context, value, index, obj);\\n      behavior(result, key, value);\\n    });\\n    return result;\\n  };\\n\\n  // Groups the object's values by a criterion. Pass either a string attribute\\n  // to group by, or a function that returns the criterion.\\n  _.groupBy = function(obj, value, context) {\\n    return group(obj, value, context, function(result, key, value) {\\n      (_.has(result, key) ? result[key] : (result[key] = [])).push(value);\\n    });\\n  };\\n\\n  // Counts instances of an object that group by a certain criterion. Pass\\n  // either a string attribute to count by, or a function that returns the\\n  // criterion.\\n  _.countBy = function(obj, value, context) {\\n    return group(obj, value, context, function(result, key) {\\n      if (!_.has(result, key)) result[key] = 0;\\n      result[key]++;\\n    });\\n  };\\n\\n  // Use a comparator function to figure out the smallest index at which\\n  // an object should be inserted so as to maintain order. Uses binary search.\\n  _.sortedIndex = function(array, obj, iterator, context) {\\n    iterator = iterator == null ? _.identity : lookupIterator(iterator);\\n    var value = iterator.call(context, obj);\\n    var low = 0, high = array.length;\\n    while (low < high) {\\n      var mid = (low + high) >>> 1;\\n      iterator.call(context, array[mid]) < value ? low = mid + 1 : high = mid;\\n    }\\n    return low;\\n  };\\n\\n  // Safely convert anything iterable into a real, live array.\\n  _.toArray = function(obj) {\\n    if (!obj) return [];\\n    if (_.isArray(obj)) return slice.call(obj);\\n    if (obj.length === +obj.length) return _.map(obj, _.identity);\\n    return _.values(obj);\\n  };\\n\\n  // Return the number of elements in an object.\\n  _.size = function(obj) {\\n    if (obj == null) return 0;\\n    return (obj.length === +obj.length) ? obj.length : _.keys(obj).length;\\n  };\\n\\n  // Array Functions\\n  // ---------------\\n\\n  // Get the first element of an array. Passing **n** will return the first N\\n  // values in the array. Aliased as `head` and `take`. The **guard** check\\n  // allows it to work with `_.map`.\\n  _.first = _.head = _.take = function(array, n, guard) {\\n    if (array == null) return void 0;\\n    return (n != null) && !guard ? slice.call(array, 0, n) : array[0];\\n  };\\n\\n  // Returns everything but the last entry of the array. Especially useful on\\n  // the arguments object. Passing **n** will return all the values in\\n  // the array, excluding the last N. The **guard** check allows it to work with\\n  // `_.map`.\\n  _.initial = function(array, n, guard) {\\n    return slice.call(array, 0, array.length - ((n == null) || guard ? 1 : n));\\n  };\\n\\n  // Get the last element of an array. Passing **n** will return the last N\\n  // values in the array. The **guard** check allows it to work with `_.map`.\\n  _.last = function(array, n, guard) {\\n    if (array == null) return void 0;\\n    if ((n != null) && !guard) {\\n      return slice.call(array, Math.max(array.length - n, 0));\\n    } else {\\n      return array[array.length - 1];\\n    }\\n  };\\n\\n  // Returns everything but the first entry of the array. Aliased as `tail` and `drop`.\\n  // Especially useful on the arguments object. Passing an **n** will return\\n  // the rest N values in the array. The **guard**\\n  // check allows it to work with `_.map`.\\n  _.rest = _.tail = _.drop = function(array, n, guard) {\\n    return slice.call(array, (n == null) || guard ? 1 : n);\\n  };\\n\\n  // Trim out all falsy values from an array.\\n  _.compact = function(array) {\\n    return _.filter(array, _.identity);\\n  };\\n\\n  // Internal implementation of a recursive `flatten` function.\\n  var flatten = function(input, shallow, output) {\\n    each(input, function(value) {\\n      if (_.isArray(value)) {\\n        shallow ? push.apply(output, value) : flatten(value, shallow, output);\\n      } else {\\n        output.push(value);\\n      }\\n    });\\n    return output;\\n  };\\n\\n  // Return a completely flattened version of an array.\\n  _.flatten = function(array, shallow) {\\n    return flatten(array, shallow, []);\\n  };\\n\\n  // Return a version of the array that does not contain the specified value(s).\\n  _.without = function(array) {\\n    return _.difference(array, slice.call(arguments, 1));\\n  };\\n\\n  // Produce a duplicate-free version of the array. If the array has already\\n  // been sorted, you have the option of using a faster algorithm.\\n  // Aliased as `unique`.\\n  _.uniq = _.unique = function(array, isSorted, iterator, context) {\\n    if (_.isFunction(isSorted)) {\\n      context = iterator;\\n      iterator = isSorted;\\n      isSorted = false;\\n    }\\n    var initial = iterator ? _.map(array, iterator, context) : array;\\n    var results = [];\\n    var seen = [];\\n    each(initial, function(value, index) {\\n      if (isSorted ? (!index || seen[seen.length - 1] !== value) : !_.contains(seen, value)) {\\n        seen.push(value);\\n        results.push(array[index]);\\n      }\\n    });\\n    return results;\\n  };\\n\\n  // Produce an array that contains the union: each distinct element from all of\\n  // the passed-in arrays.\\n  _.union = function() {\\n    return _.uniq(concat.apply(ArrayProto, arguments));\\n  };\\n\\n  // Produce an array that contains every item shared between all the\\n  // passed-in arrays.\\n  _.intersection = function(array) {\\n    var rest = slice.call(arguments, 1);\\n    return _.filter(_.uniq(array), function(item) {\\n      return _.every(rest, function(other) {\\n        return _.indexOf(other, item) >= 0;\\n      });\\n    });\\n  };\\n\\n  // Take the difference between one array and a number of other arrays.\\n  // Only the elements present in just the first array will remain.\\n  _.difference = function(array) {\\n    var rest = concat.apply(ArrayProto, slice.call(arguments, 1));\\n    return _.filter(array, function(value){ return !_.contains(rest, value); });\\n  };\\n\\n  // Zip together multiple lists into a single array -- elements that share\\n  // an index go together.\\n  _.zip = function() {\\n    var args = slice.call(arguments);\\n    var length = _.max(_.pluck(args, 'length'));\\n    var results = new Array(length);\\n    for (var i = 0; i < length; i++) {\\n      results[i] = _.pluck(args, \\\"\\\" + i);\\n    }\\n    return results;\\n  };\\n\\n  // Converts lists into objects. Pass either a single array of `[key, value]`\\n  // pairs, or two parallel arrays of the same length -- one of keys, and one of\\n  // the corresponding values.\\n  _.object = function(list, values) {\\n    if (list == null) return {};\\n    var result = {};\\n    for (var i = 0, l = list.length; i < l; i++) {\\n      if (values) {\\n        result[list[i]] = values[i];\\n      } else {\\n        result[list[i][0]] = list[i][1];\\n      }\\n    }\\n    return result;\\n  };\\n\\n  // If the browser doesn't supply us with indexOf (I'm looking at you, **MSIE**),\\n  // we need this function. Return the position of the first occurrence of an\\n  // item in an array, or -1 if the item is not included in the array.\\n  // Delegates to **ECMAScript 5**'s native `indexOf` if available.\\n  // If the array is large and already in sort order, pass `true`\\n  // for **isSorted** to use binary search.\\n  _.indexOf = function(array, item, isSorted) {\\n    if (array == null) return -1;\\n    var i = 0, l = array.length;\\n    if (isSorted) {\\n      if (typeof isSorted == 'number') {\\n        i = (isSorted < 0 ? Math.max(0, l + isSorted) : isSorted);\\n      } else {\\n        i = _.sortedIndex(array, item);\\n        return array[i] === item ? i : -1;\\n      }\\n    }\\n    if (nativeIndexOf && array.indexOf === nativeIndexOf) return array.indexOf(item, isSorted);\\n    for (; i < l; i++) if (array[i] === item) return i;\\n    return -1;\\n  };\\n\\n  // Delegates to **ECMAScript 5**'s native `lastIndexOf` if available.\\n  _.lastIndexOf = function(array, item, from) {\\n    if (array == null) return -1;\\n    var hasIndex = from != null;\\n    if (nativeLastIndexOf && array.lastIndexOf === nativeLastIndexOf) {\\n      return hasIndex ? array.lastIndexOf(item, from) : array.lastIndexOf(item);\\n    }\\n    var i = (hasIndex ? from : array.length);\\n    while (i--) if (array[i] === item) return i;\\n    return -1;\\n  };\\n\\n  // Generate an integer Array containing an arithmetic progression. A port of\\n  // the native Python `range()` function. See\\n  // [the Python documentation](http://docs.python.org/library/functions.html#range).\\n  _.range = function(start, stop, step) {\\n    if (arguments.length <= 1) {\\n      stop = start || 0;\\n      start = 0;\\n    }\\n    step = arguments[2] || 1;\\n\\n    var len = Math.max(Math.ceil((stop - start) / step), 0);\\n    var idx = 0;\\n    var range = new Array(len);\\n\\n    while(idx < len) {\\n      range[idx++] = start;\\n      start += step;\\n    }\\n\\n    return range;\\n  };\\n\\n  // Function (ahem) Functions\\n  // ------------------\\n\\n  // Create a function bound to a given object (assigning `this`, and arguments,\\n  // optionally). Delegates to **ECMAScript 5**'s native `Function.bind` if\\n  // available.\\n  _.bind = function(func, context) {\\n    if (func.bind === nativeBind && nativeBind) return nativeBind.apply(func, slice.call(arguments, 1));\\n    var args = slice.call(arguments, 2);\\n    return function() {\\n      return func.apply(context, args.concat(slice.call(arguments)));\\n    };\\n  };\\n\\n  // Partially apply a function by creating a version that has had some of its\\n  // arguments pre-filled, without changing its dynamic `this` context.\\n  _.partial = function(func) {\\n    var args = slice.call(arguments, 1);\\n    return function() {\\n      return func.apply(this, args.concat(slice.call(arguments)));\\n    };\\n  };\\n\\n  // Bind all of an object's methods to that object. Useful for ensuring that\\n  // all callbacks defined on an object belong to it.\\n  _.bindAll = function(obj) {\\n    var funcs = slice.call(arguments, 1);\\n    if (funcs.length === 0) funcs = _.functions(obj);\\n    each(funcs, function(f) { obj[f] = _.bind(obj[f], obj); });\\n    return obj;\\n  };\\n\\n  // Memoize an expensive function by storing its results.\\n  _.memoize = function(func, hasher) {\\n    var memo = {};\\n    hasher || (hasher = _.identity);\\n    return function() {\\n      var key = hasher.apply(this, arguments);\\n      return _.has(memo, key) ? memo[key] : (memo[key] = func.apply(this, arguments));\\n    };\\n  };\\n\\n  // Delays a function for the given number of milliseconds, and then calls\\n  // it with the arguments supplied.\\n  _.delay = function(func, wait) {\\n    var args = slice.call(arguments, 2);\\n    return setTimeout(function(){ return func.apply(null, args); }, wait);\\n  };\\n\\n  // Defers a function, scheduling it to run after the current call stack has\\n  // cleared.\\n  _.defer = function(func) {\\n    return _.delay.apply(_, [func, 1].concat(slice.call(arguments, 1)));\\n  };\\n\\n  // Returns a function, that, when invoked, will only be triggered at most once\\n  // during a given window of time.\\n  _.throttle = function(func, wait) {\\n    var context, args, timeout, result;\\n    var previous = 0;\\n    var later = function() {\\n      previous = new Date;\\n      timeout = null;\\n      result = func.apply(context, args);\\n    };\\n    return function() {\\n      var now = new Date;\\n      var remaining = wait - (now - previous);\\n      context = this;\\n      args = arguments;\\n      if (remaining <= 0) {\\n        clearTimeout(timeout);\\n        timeout = null;\\n        previous = now;\\n        result = func.apply(context, args);\\n      } else if (!timeout) {\\n        timeout = setTimeout(later, remaining);\\n      }\\n      return result;\\n    };\\n  };\\n\\n  // Returns a function, that, as long as it continues to be invoked, will not\\n  // be triggered. The function will be called after it stops being called for\\n  // N milliseconds. If `immediate` is passed, trigger the function on the\\n  // leading edge, instead of the trailing.\\n  _.debounce = function(func, wait, immediate) {\\n    var timeout, result;\\n    return function() {\\n      var context = this, args = arguments;\\n      var later = function() {\\n        timeout = null;\\n        if (!immediate) result = func.apply(context, args);\\n      };\\n      var callNow = immediate && !timeout;\\n      clearTimeout(timeout);\\n      timeout = setTimeout(later, wait);\\n      if (callNow) result = func.apply(context, args);\\n      return result;\\n    };\\n  };\\n\\n  // Returns a function that will be executed at most one time, no matter how\\n  // often you call it. Useful for lazy initialization.\\n  _.once = function(func) {\\n    var ran = false, memo;\\n    return function() {\\n      if (ran) return memo;\\n      ran = true;\\n      memo = func.apply(this, arguments);\\n      func = null;\\n      return memo;\\n    };\\n  };\\n\\n  // Returns the first function passed as an argument to the second,\\n  // allowing you to adjust arguments, run code before and after, and\\n  // conditionally execute the original function.\\n  _.wrap = function(func, wrapper) {\\n    return function() {\\n      var args = [func];\\n      push.apply(args, arguments);\\n      return wrapper.apply(this, args);\\n    };\\n  };\\n\\n  // Returns a function that is the composition of a list of functions, each\\n  // consuming the return value of the function that follows.\\n  _.compose = function() {\\n    var funcs = arguments;\\n    return function() {\\n      var args = arguments;\\n      for (var i = funcs.length - 1; i >= 0; i--) {\\n        args = [funcs[i].apply(this, args)];\\n      }\\n      return args[0];\\n    };\\n  };\\n\\n  // Returns a function that will only be executed after being called N times.\\n  _.after = function(times, func) {\\n    if (times <= 0) return func();\\n    return function() {\\n      if (--times < 1) {\\n        return func.apply(this, arguments);\\n      }\\n    };\\n  };\\n\\n  // Object Functions\\n  // ----------------\\n\\n  // Retrieve the names of an object's properties.\\n  // Delegates to **ECMAScript 5**'s native `Object.keys`\\n  _.keys = nativeKeys || function(obj) {\\n    if (obj !== Object(obj)) throw new TypeError('Invalid object');\\n    var keys = [];\\n    for (var key in obj) if (_.has(obj, key)) keys[keys.length] = key;\\n    return keys;\\n  };\\n\\n  // Retrieve the values of an object's properties.\\n  _.values = function(obj) {\\n    var values = [];\\n    for (var key in obj) if (_.has(obj, key)) values.push(obj[key]);\\n    return values;\\n  };\\n\\n  // Convert an object into a list of `[key, value]` pairs.\\n  _.pairs = function(obj) {\\n    var pairs = [];\\n    for (var key in obj) if (_.has(obj, key)) pairs.push([key, obj[key]]);\\n    return pairs;\\n  };\\n\\n  // Invert the keys and values of an object. The values must be serializable.\\n  _.invert = function(obj) {\\n    var result = {};\\n    for (var key in obj) if (_.has(obj, key)) result[obj[key]] = key;\\n    return result;\\n  };\\n\\n  // Return a sorted list of the function names available on the object.\\n  // Aliased as `methods`\\n  _.functions = _.methods = function(obj) {\\n    var names = [];\\n    for (var key in obj) {\\n      if (_.isFunction(obj[key])) names.push(key);\\n    }\\n    return names.sort();\\n  };\\n\\n  // Extend a given object with all the properties in passed-in object(s).\\n  _.extend = function(obj) {\\n    each(slice.call(arguments, 1), function(source) {\\n      if (source) {\\n        for (var prop in source) {\\n          obj[prop] = source[prop];\\n        }\\n      }\\n    });\\n    return obj;\\n  };\\n\\n  // Return a copy of the object only containing the whitelisted properties.\\n  _.pick = function(obj) {\\n    var copy = {};\\n    var keys = concat.apply(ArrayProto, slice.call(arguments, 1));\\n    each(keys, function(key) {\\n      if (key in obj) copy[key] = obj[key];\\n    });\\n    return copy;\\n  };\\n\\n   // Return a copy of the object without the blacklisted properties.\\n  _.omit = function(obj) {\\n    var copy = {};\\n    var keys = concat.apply(ArrayProto, slice.call(arguments, 1));\\n    for (var key in obj) {\\n      if (!_.contains(keys, key)) copy[key] = obj[key];\\n    }\\n    return copy;\\n  };\\n\\n  // Fill in a given object with default properties.\\n  _.defaults = function(obj) {\\n    each(slice.call(arguments, 1), function(source) {\\n      if (source) {\\n        for (var prop in source) {\\n          if (obj[prop] == null) obj[prop] = source[prop];\\n        }\\n      }\\n    });\\n    return obj;\\n  };\\n\\n  // Create a (shallow-cloned) duplicate of an object.\\n  _.clone = function(obj) {\\n    if (!_.isObject(obj)) return obj;\\n    return _.isArray(obj) ? obj.slice() : _.extend({}, obj);\\n  };\\n\\n  // Invokes interceptor with the obj, and then returns obj.\\n  // The primary purpose of this method is to \\\"tap into\\\" a method chain, in\\n  // order to perform operations on intermediate results within the chain.\\n  _.tap = function(obj, interceptor) {\\n    interceptor(obj);\\n    return obj;\\n  };\\n\\n  // Internal recursive comparison function for `isEqual`.\\n  var eq = function(a, b, aStack, bStack) {\\n    // Identical objects are equal. `0 === -0`, but they aren't identical.\\n    // See the Harmony `egal` proposal: http://wiki.ecmascript.org/doku.php?id=harmony:egal.\\n    if (a === b) return a !== 0 || 1 / a == 1 / b;\\n    // A strict comparison is necessary because `null == undefined`.\\n    if (a == null || b == null) return a === b;\\n    // Unwrap any wrapped objects.\\n    if (a instanceof _) a = a._wrapped;\\n    if (b instanceof _) b = b._wrapped;\\n    // Compare `[[Class]]` names.\\n    var className = toString.call(a);\\n    if (className != toString.call(b)) return false;\\n    switch (className) {\\n      // Strings, numbers, dates, and booleans are compared by value.\\n      case '[object String]':\\n        // Primitives and their corresponding object wrappers are equivalent; thus, `\\\"5\\\"` is\\n        // equivalent to `new String(\\\"5\\\")`.\\n        return a == String(b);\\n      case '[object Number]':\\n        // `NaN`s are equivalent, but non-reflexive. An `egal` comparison is performed for\\n        // other numeric values.\\n        return a != +a ? b != +b : (a == 0 ? 1 / a == 1 / b : a == +b);\\n      case '[object Date]':\\n      case '[object Boolean]':\\n        // Coerce dates and booleans to numeric primitive values. Dates are compared by their\\n        // millisecond representations. Note that invalid dates with millisecond representations\\n        // of `NaN` are not equivalent.\\n        return +a == +b;\\n      // RegExps are compared by their source patterns and flags.\\n      case '[object RegExp]':\\n        return a.source == b.source &&\\n               a.global == b.global &&\\n               a.multiline == b.multiline &&\\n               a.ignoreCase == b.ignoreCase;\\n    }\\n    if (typeof a != 'object' || typeof b != 'object') return false;\\n    // Assume equality for cyclic structures. The algorithm for detecting cyclic\\n    // structures is adapted from ES 5.1 section 15.12.3, abstract operation `JO`.\\n    var length = aStack.length;\\n    while (length--) {\\n      // Linear search. Performance is inversely proportional to the number of\\n      // unique nested structures.\\n      if (aStack[length] == a) return bStack[length] == b;\\n    }\\n    // Add the first object to the stack of traversed objects.\\n    aStack.push(a);\\n    bStack.push(b);\\n    var size = 0, result = true;\\n    // Recursively compare objects and arrays.\\n    if (className == '[object Array]') {\\n      // Compare array lengths to determine if a deep comparison is necessary.\\n      size = a.length;\\n      result = size == b.length;\\n      if (result) {\\n        // Deep compare the contents, ignoring non-numeric properties.\\n        while (size--) {\\n          if (!(result = eq(a[size], b[size], aStack, bStack))) break;\\n        }\\n      }\\n    } else {\\n      // Objects with different constructors are not equivalent, but `Object`s\\n      // from different frames are.\\n      var aCtor = a.constructor, bCtor = b.constructor;\\n      if (aCtor !== bCtor && !(_.isFunction(aCtor) && (aCtor instanceof aCtor) &&\\n                               _.isFunction(bCtor) && (bCtor instanceof bCtor))) {\\n        return false;\\n      }\\n      // Deep compare objects.\\n      for (var key in a) {\\n        if (_.has(a, key)) {\\n          // Count the expected number of properties.\\n          size++;\\n          // Deep compare each member.\\n          if (!(result = _.has(b, key) && eq(a[key], b[key], aStack, bStack))) break;\\n        }\\n      }\\n      // Ensure that both objects contain the same number of properties.\\n      if (result) {\\n        for (key in b) {\\n          if (_.has(b, key) && !(size--)) break;\\n        }\\n        result = !size;\\n      }\\n    }\\n    // Remove the first object from the stack of traversed objects.\\n    aStack.pop();\\n    bStack.pop();\\n    return result;\\n  };\\n\\n  // Perform a deep comparison to check if two objects are equal.\\n  _.isEqual = function(a, b) {\\n    return eq(a, b, [], []);\\n  };\\n\\n  // Is a given array, string, or object empty?\\n  // An \\\"empty\\\" object has no enumerable own-properties.\\n  _.isEmpty = function(obj) {\\n    if (obj == null) return true;\\n    if (_.isArray(obj) || _.isString(obj)) return obj.length === 0;\\n    for (var key in obj) if (_.has(obj, key)) return false;\\n    return true;\\n  };\\n\\n  // Is a given value a DOM element?\\n  _.isElement = function(obj) {\\n    return !!(obj && obj.nodeType === 1);\\n  };\\n\\n  // Is a given value an array?\\n  // Delegates to ECMA5's native Array.isArray\\n  _.isArray = nativeIsArray || function(obj) {\\n    return toString.call(obj) == '[object Array]';\\n  };\\n\\n  // Is a given variable an object?\\n  _.isObject = function(obj) {\\n    return obj === Object(obj);\\n  };\\n\\n  // Add some isType methods: isArguments, isFunction, isString, isNumber, isDate, isRegExp.\\n  each(['Arguments', 'Function', 'String', 'Number', 'Date', 'RegExp'], function(name) {\\n    _['is' + name] = function(obj) {\\n      return toString.call(obj) == '[object ' + name + ']';\\n    };\\n  });\\n\\n  // Define a fallback version of the method in browsers (ahem, IE), where\\n  // there isn't any inspectable \\\"Arguments\\\" type.\\n  if (!_.isArguments(arguments)) {\\n    _.isArguments = function(obj) {\\n      return !!(obj && _.has(obj, 'callee'));\\n    };\\n  }\\n\\n  // Optimize `isFunction` if appropriate.\\n  if (typeof (/./) !== 'function') {\\n    _.isFunction = function(obj) {\\n      return typeof obj === 'function';\\n    };\\n  }\\n\\n  // Is a given object a finite number?\\n  _.isFinite = function(obj) {\\n    return isFinite(obj) && !isNaN(parseFloat(obj));\\n  };\\n\\n  // Is the given value `NaN`? (NaN is the only number which does not equal itself).\\n  _.isNaN = function(obj) {\\n    return _.isNumber(obj) && obj != +obj;\\n  };\\n\\n  // Is a given value a boolean?\\n  _.isBoolean = function(obj) {\\n    return obj === true || obj === false || toString.call(obj) == '[object Boolean]';\\n  };\\n\\n  // Is a given value equal to null?\\n  _.isNull = function(obj) {\\n    return obj === null;\\n  };\\n\\n  // Is a given variable undefined?\\n  _.isUndefined = function(obj) {\\n    return obj === void 0;\\n  };\\n\\n  // Shortcut function for checking if an object has a given property directly\\n  // on itself (in other words, not on a prototype).\\n  _.has = function(obj, key) {\\n    return hasOwnProperty.call(obj, key);\\n  };\\n\\n  // Utility Functions\\n  // -----------------\\n\\n  // Run Underscore.js in *noConflict* mode, returning the `_` variable to its\\n  // previous owner. Returns a reference to the Underscore object.\\n  _.noConflict = function() {\\n    root._ = previousUnderscore;\\n    return this;\\n  };\\n\\n  // Keep the identity function around for default iterators.\\n  _.identity = function(value) {\\n    return value;\\n  };\\n\\n  // Run a function **n** times.\\n  _.times = function(n, iterator, context) {\\n    var accum = Array(n);\\n    for (var i = 0; i < n; i++) accum[i] = iterator.call(context, i);\\n    return accum;\\n  };\\n\\n  // Return a random integer between min and max (inclusive).\\n  _.random = function(min, max) {\\n    if (max == null) {\\n      max = min;\\n      min = 0;\\n    }\\n    return min + Math.floor(Math.random() * (max - min + 1));\\n  };\\n\\n  // List of HTML entities for escaping.\\n  var entityMap = {\\n    escape: {\\n      '&': '&amp;',\\n      '<': '&lt;',\\n      '>': '&gt;',\\n      '\\\"': '&quot;',\\n      \\\"'\\\": '&#x27;',\\n      '/': '&#x2F;'\\n    }\\n  };\\n  entityMap.unescape = _.invert(entityMap.escape);\\n\\n  // Regexes containing the keys and values listed immediately above.\\n  var entityRegexes = {\\n    escape:   new RegExp('[' + _.keys(entityMap.escape).join('') + ']', 'g'),\\n    unescape: new RegExp('(' + _.keys(entityMap.unescape).join('|') + ')', 'g')\\n  };\\n\\n  // Functions for escaping and unescaping strings to/from HTML interpolation.\\n  _.each(['escape', 'unescape'], function(method) {\\n    _[method] = function(string) {\\n      if (string == null) return '';\\n      return ('' + string).replace(entityRegexes[method], function(match) {\\n        return entityMap[method][match];\\n      });\\n    };\\n  });\\n\\n  // If the value of the named property is a function then invoke it;\\n  // otherwise, return it.\\n  _.result = function(object, property) {\\n    if (object == null) return null;\\n    var value = object[property];\\n    return _.isFunction(value) ? value.call(object) : value;\\n  };\\n\\n  // Add your own custom functions to the Underscore object.\\n  _.mixin = function(obj) {\\n    each(_.functions(obj), function(name){\\n      var func = _[name] = obj[name];\\n      _.prototype[name] = function() {\\n        var args = [this._wrapped];\\n        push.apply(args, arguments);\\n        return result.call(this, func.apply(_, args));\\n      };\\n    });\\n  };\\n\\n  // Generate a unique integer id (unique within the entire client session).\\n  // Useful for temporary DOM ids.\\n  var idCounter = 0;\\n  _.uniqueId = function(prefix) {\\n    var id = ++idCounter + '';\\n    return prefix ? prefix + id : id;\\n  };\\n\\n  // By default, Underscore uses ERB-style template delimiters, change the\\n  // following template settings to use alternative delimiters.\\n  _.templateSettings = {\\n    evaluate    : /<%([\\\\s\\\\S]+?)%>/g,\\n    interpolate : /<%=([\\\\s\\\\S]+?)%>/g,\\n    escape      : /<%-([\\\\s\\\\S]+?)%>/g\\n  };\\n\\n  // When customizing `templateSettings`, if you don't want to define an\\n  // interpolation, evaluation or escaping regex, we need one that is\\n  // guaranteed not to match.\\n  var noMatch = /(.)^/;\\n\\n  // Certain characters need to be escaped so that they can be put into a\\n  // string literal.\\n  var escapes = {\\n    \\\"'\\\":      \\\"'\\\",\\n    '\\\\\\\\':     '\\\\\\\\',\\n    '\\\\r':     'r',\\n    '\\\\n':     'n',\\n    '\\\\t':     't',\\n    '\\\\u2028': 'u2028',\\n    '\\\\u2029': 'u2029'\\n  };\\n\\n  var escaper = /\\\\\\\\|'|\\\\r|\\\\n|\\\\t|\\\\u2028|\\\\u2029/g;\\n\\n  // JavaScript micro-templating, similar to John Resig's implementation.\\n  // Underscore templating handles arbitrary delimiters, preserves whitespace,\\n  // and correctly escapes quotes within interpolated code.\\n  _.template = function(text, data, settings) {\\n    var render;\\n    settings = _.defaults({}, settings, _.templateSettings);\\n\\n    // Combine delimiters into one regular expression via alternation.\\n    var matcher = new RegExp([\\n      (settings.escape || noMatch).source,\\n      (settings.interpolate || noMatch).source,\\n      (settings.evaluate || noMatch).source\\n    ].join('|') + '|$', 'g');\\n\\n    // Compile the template source, escaping string literals appropriately.\\n    var index = 0;\\n    var source = \\\"__p+='\\\";\\n    text.replace(matcher, function(match, escape, interpolate, evaluate, offset) {\\n      source += text.slice(index, offset)\\n        .replace(escaper, function(match) { return '\\\\\\\\' + escapes[match]; });\\n\\n      if (escape) {\\n        source += \\\"'+\\\\n((__t=(\\\" + escape + \\\"))==null?'':_.escape(__t))+\\\\n'\\\";\\n      }\\n      if (interpolate) {\\n        source += \\\"'+\\\\n((__t=(\\\" + interpolate + \\\"))==null?'':__t)+\\\\n'\\\";\\n      }\\n      if (evaluate) {\\n        source += \\\"';\\\\n\\\" + evaluate + \\\"\\\\n__p+='\\\";\\n      }\\n      index = offset + match.length;\\n      return match;\\n    });\\n    source += \\\"';\\\\n\\\";\\n\\n    // If a variable is not specified, place data values in local scope.\\n    if (!settings.variable) source = 'with(obj||{}){\\\\n' + source + '}\\\\n';\\n\\n    source = \\\"var __t,__p='',__j=Array.prototype.join,\\\" +\\n      \\\"print=function(){__p+=__j.call(arguments,'');};\\\\n\\\" +\\n      source + \\\"return __p;\\\\n\\\";\\n\\n    try {\\n      render = new Function(settings.variable || 'obj', '_', source);\\n    } catch (e) {\\n      e.source = source;\\n      throw e;\\n    }\\n\\n    if (data) return render(data, _);\\n    var template = function(data) {\\n      return render.call(this, data, _);\\n    };\\n\\n    // Provide the compiled function source as a convenience for precompilation.\\n    template.source = 'function(' + (settings.variable || 'obj') + '){\\\\n' + source + '}';\\n\\n    return template;\\n  };\\n\\n  // Add a \\\"chain\\\" function, which will delegate to the wrapper.\\n  _.chain = function(obj) {\\n    return _(obj).chain();\\n  };\\n\\n  // OOP\\n  // ---------------\\n  // If Underscore is called as a function, it returns a wrapped object that\\n  // can be used OO-style. This wrapper holds altered versions of all the\\n  // underscore functions. Wrapped objects may be chained.\\n\\n  // Helper function to continue chaining intermediate results.\\n  var result = function(obj) {\\n    return this._chain ? _(obj).chain() : obj;\\n  };\\n\\n  // Add all of the Underscore functions to the wrapper object.\\n  _.mixin(_);\\n\\n  // Add all mutator Array functions to the wrapper.\\n  each(['pop', 'push', 'reverse', 'shift', 'sort', 'splice', 'unshift'], function(name) {\\n    var method = ArrayProto[name];\\n    _.prototype[name] = function() {\\n      var obj = this._wrapped;\\n      method.apply(obj, arguments);\\n      if ((name == 'shift' || name == 'splice') && obj.length === 0) delete obj[0];\\n      return result.call(this, obj);\\n    };\\n  });\\n\\n  // Add all accessor Array functions to the wrapper.\\n  each(['concat', 'join', 'slice'], function(name) {\\n    var method = ArrayProto[name];\\n    _.prototype[name] = function() {\\n      return result.call(this, method.apply(this._wrapped, arguments));\\n    };\\n  });\\n\\n  _.extend(_.prototype, {\\n\\n    // Start chaining a wrapped Underscore object.\\n    chain: function() {\\n      this._chain = true;\\n      return this;\\n    },\\n\\n    // Extracts the result from a wrapped and chained object.\\n    value: function() {\\n      return this._wrapped;\\n    }\\n\\n  });\\n\\n}).call(this);\\n\\n/*global _: false, $: false, localStorage: false, process: true,\\n  XMLHttpRequest: false, XDomainRequest: false, exports: false,\\n  require: false */\\n(function(root) {\\n  root.Parse = root.Parse || {};\\n  /**\\n   * Contains all Parse API classes and functions.\\n   * @name Parse\\n   * @namespace\\n   *\\n   * Contains all Parse API classes and functions.\\n   */\\n  var Parse = root.Parse;\\n\\n  // Import Parse's local copy of underscore.\\n  if (typeof(exports) !== \\\"undefined\\\" && exports._) {\\n    // We're running in Node.js.  Pull in the dependencies.\\n    Parse._ = exports._.noConflict();\\n    Parse.localStorage = require('localStorage');\\n    Parse.XMLHttpRequest = require('xmlhttprequest').XMLHttpRequest;\\n    exports.Parse = Parse;\\n  } else {\\n    Parse._ = _.noConflict();\\n    if (typeof(localStorage) !== \\\"undefined\\\") {\\n      Parse.localStorage = localStorage;\\n    }\\n    if (typeof(XMLHttpRequest) !== \\\"undefined\\\") {\\n      Parse.XMLHttpRequest = XMLHttpRequest;\\n    }\\n  }\\n\\n  // If jQuery or Zepto has been included, grab a reference to it.\\n  if (typeof($) !== \\\"undefined\\\") {\\n    Parse.$ = $;\\n  }\\n\\n  // Helpers\\n  // -------\\n\\n  // Shared empty constructor function to aid in prototype-chain creation.\\n  var EmptyConstructor = function() {};\\n\\n\\n  // Helper function to correctly set up the prototype chain, for subclasses.\\n  // Similar to `goog.inherits`, but uses a hash of prototype properties and\\n  // class properties to be extended.\\n  var inherits = function(parent, protoProps, staticProps) {\\n    var child;\\n\\n    // The constructor function for the new subclass is either defined by you\\n    // (the \\\"constructor\\\" property in your `extend` definition), or defaulted\\n    // by us to simply call the parent's constructor.\\n    if (protoProps && protoProps.hasOwnProperty('constructor')) {\\n      child = protoProps.constructor;\\n    } else {\\n      /** @ignore */\\n      child = function(){ parent.apply(this, arguments); };\\n    }\\n\\n    // Inherit class (static) properties from parent.\\n    Parse._.extend(child, parent);\\n\\n    // Set the prototype chain to inherit from `parent`, without calling\\n    // `parent`'s constructor function.\\n    EmptyConstructor.prototype = parent.prototype;\\n    child.prototype = new EmptyConstructor();\\n\\n    // Add prototype properties (instance properties) to the subclass,\\n    // if supplied.\\n    if (protoProps) {\\n      Parse._.extend(child.prototype, protoProps);\\n    }\\n\\n    // Add static properties to the constructor function, if supplied.\\n    if (staticProps) {\\n      Parse._.extend(child, staticProps);\\n    }\\n\\n    // Correctly set child's `prototype.constructor`.\\n    child.prototype.constructor = child;\\n\\n    // Set a convenience property in case the parent's prototype is\\n    // needed later.\\n    child.__super__ = parent.prototype;\\n\\n    return child;\\n  };\\n\\n  // Set the server for Parse to talk to.\\n  Parse.serverURL = \\\"https://api.parse.com\\\";\\n\\n  // Check whether we are running in Node.js.\\n  if (typeof(process) !== \\\"undefined\\\" &&\\n      process.versions &&\\n      process.versions.node) {\\n    Parse._isNode = true;\\n  }\\n\\n  /**\\n   * Call this method first to set up your authentication tokens for Parse.\\n   * You can get your keys from the Data Browser on parse.com.\\n   * @param {String} applicationId Your Parse Application ID.\\n   * @param {String} javaScriptKey Your Parse JavaScript Key.\\n   * @param {String} masterKey (optional) Your Parse Master Key. (Node.js only!)\\n   */\\n  Parse.initialize = function(applicationId, javaScriptKey, masterKey) {\\n    if (masterKey) {\\n      throw \\\"Parse.initialize() was passed a Master Key, which is only \\\" +\\n        \\\"allowed from within Node.js.\\\";\\n    }\\n    Parse._initialize(applicationId, javaScriptKey);\\n  };\\n\\n  /**\\n   * Call this method first to set up master authentication tokens for Parse.\\n   * This method is for Parse's own private use.\\n   * @param {String} applicationId Your Parse Application ID.\\n   * @param {String} javaScriptKey Your Parse JavaScript Key.\\n   * @param {String} masterKey Your Parse Master Key.\\n   */\\n  Parse._initialize = function(applicationId, javaScriptKey, masterKey) {\\n    Parse.applicationId = applicationId;\\n    Parse.javaScriptKey = javaScriptKey;\\n    Parse.masterKey = masterKey;\\n    Parse._useMasterKey = false;\\n  };\\n\\n  // If we're running in node.js, allow using the master key.\\n  if (Parse._isNode) {\\n    Parse.initialize = Parse._initialize;\\n\\n    Parse.Cloud = Parse.Cloud || {};\\n    /**\\n     * Switches the Parse SDK to using the Master key.  The Master key grants\\n     * priveleged access to the data in Parse and can be used to bypass ACLs and\\n     * other restrictions that are applied to the client SDKs.\\n     * <p><strong><em>Available in Cloud Code and Node.js only.</em></strong>\\n     * </p>\\n     */\\n    Parse.Cloud.useMasterKey = function() {\\n      Parse._useMasterKey = true;\\n    };\\n  }\\n\\n  /**\\n   * Returns prefix for localStorage keys used by this instance of Parse.\\n   * @param {String} path The relative suffix to append to it.\\n   *     null or undefined is treated as the empty string.\\n   * @return {String} The full key name.\\n   */\\n  Parse._getParsePath = function(path) {\\n    if (!Parse.applicationId) {\\n      throw \\\"You need to call Parse.initialize before using Parse.\\\";\\n    }\\n    if (!path) {\\n      path = \\\"\\\";\\n    }\\n    if (!Parse._.isString(path)) {\\n      throw \\\"Tried to get a localStorage path that wasn't a String.\\\";\\n    }\\n    if (path[0] === \\\"/\\\") {\\n      path = path.substring(1);\\n    }\\n    return \\\"Parse/\\\" + Parse.applicationId + \\\"/\\\" + path;\\n  };\\n\\n  /**\\n   * Returns the unique string for this app on this machine.\\n   * Gets reset when localStorage is cleared.\\n   */\\n  Parse._installationId = null;\\n  Parse._getInstallationId = function() {\\n    // See if it's cached in RAM.\\n    if (Parse._installationId) {\\n      return Parse._installationId;\\n    }\\n\\n    // Try to get it from localStorage.\\n    var path = Parse._getParsePath(\\\"installationId\\\");\\n    Parse._installationId = Parse.localStorage.getItem(path);\\n\\n    if (!Parse._installationId || Parse._installationId === \\\"\\\") {\\n      // It wasn't in localStorage, so create a new one.\\n      var hexOctet = function() {\\n        return Math.floor((1+Math.random())*0x10000).toString(16).substring(1);\\n      };\\n      Parse._installationId = (\\n        hexOctet() + hexOctet() + \\\"-\\\" +\\n        hexOctet() + \\\"-\\\" +\\n        hexOctet() + \\\"-\\\" +\\n        hexOctet() + \\\"-\\\" +\\n        hexOctet() + hexOctet() + hexOctet());\\n      Parse.localStorage.setItem(path, Parse._installationId);\\n    }\\n\\n    return Parse._installationId;\\n  };\\n\\n  Parse._parseDate = function(iso8601) {\\n    var regexp = new RegExp(\\n      \\\"^([0-9]{1,4})-([0-9]{1,2})-([0-9]{1,2})\\\" + \\\"T\\\" +\\n      \\\"([0-9]{1,2}):([0-9]{1,2}):([0-9]{1,2})\\\" +\\n      \\\"(.([0-9]+))?\\\" + \\\"Z$\\\");\\n    var match = regexp.exec(iso8601);\\n    if (!match) {\\n      var date = new Date(iso8601);\\n      return date.getTime() === NaN ? null : date;\\n    }\\n\\n    var year = match[1] || 0;\\n    var month = (match[2] || 1) - 1;\\n    var day = match[3] || 0;\\n    var hour = match[4] || 0;\\n    var minute = match[5] || 0;\\n    var second = match[6] || 0;\\n    var milli = match[8] || 0;\\n\\n    return new Date(Date.UTC(year, month, day, hour, minute, second, milli));\\n  };\\n\\n  Parse._ajaxIE8 = function(method, url, data) {\\n    var promise = new Parse.Promise();\\n    var xdr = new XDomainRequest();\\n    xdr.onload = function() {\\n      var response;\\n      try {\\n        response = JSON.parse(xdr.responseText);\\n      } catch (e) {\\n        promise.reject(e);\\n      }\\n      if (response) {\\n        promise.resolve(response);\\n      }\\n    };\\n    xdr.onerror = xdr.ontimeout = function() {\\n      // Let's fake a real error message.\\n      var fakeResponse = {\\n        responseText: JSON.stringify({\\n          code: Parse.Error.X_DOMAIN_REQUEST,\\n          error: \\\"IE's XDomainRequest does not supply error info.\\\"\\n        })\\n      };\\n      promise.reject(fakeResponse);\\n    };\\n    xdr.onprogress = function() {};\\n    xdr.open(method, url);\\n    xdr.send(data);\\n    return promise;\\n  };\\n\\n  Parse._useXDomainRequest = function() {\\n    if (typeof(XDomainRequest) !== \\\"undefined\\\") {\\n      // We're in IE 8+.\\n      if ('withCredentials' in new XMLHttpRequest()) {\\n        // We're in IE 10+.\\n        return false;\\n      }\\n      return true;\\n    }\\n    return false;\\n  };\\n\\n\\n  Parse._ajax = function(method, url, data, success, error) {\\n    var options = {\\n      success: success,\\n      error: error\\n    };\\n\\n    if (Parse._useXDomainRequest()) {\\n      return Parse._ajaxIE8(method, url, data)._thenRunCallbacks(options);\\n    }\\n\\n    var promise = new Parse.Promise();\\n    var handled = false;\\n\\n    var xhr = new Parse.XMLHttpRequest();\\n    xhr.onreadystatechange = function() {\\n      if (xhr.readyState === 4) {\\n        if (handled) {\\n          return;\\n        }\\n        handled = true;\\n\\n        if (xhr.status >= 200 && xhr.status < 300) {\\n          var response;\\n          try {\\n            response = JSON.parse(xhr.responseText);\\n          } catch (e) {\\n            promise.reject(e);\\n          }\\n          if (response) {\\n            promise.resolve(response, xhr.status, xhr);\\n          }\\n        } else {\\n          promise.reject(xhr);\\n        }\\n      }\\n    };\\n    xhr.open(method, url, true);\\n    xhr.setRequestHeader(\\\"Content-Type\\\", \\\"text/plain\\\");  // avoid pre-flight.\\n    if (Parse._isNode) {\\n      // Add a special user agent just for request from node.js.\\n      xhr.setRequestHeader(\\\"User-Agent\\\",\\n                           \\\"Parse/\\\" + Parse.VERSION +\\n                           \\\" (NodeJS \\\" + process.versions.node + \\\")\\\");\\n    }\\n    xhr.send(data);\\n    return promise._thenRunCallbacks(options);\\n  };\\n\\n  // A self-propagating extend function.\\n  Parse._extend = function(protoProps, classProps) {\\n    var child = inherits(this, protoProps, classProps);\\n    child.extend = this.extend;\\n    return child;\\n  };\\n\\n  /**\\n   * Options:\\n   *   route: is classes, users, login, etc.\\n   *   objectId: null if there is no associated objectId.\\n   *   method: the http method for the REST API.\\n   *   dataObject: the payload as an object, or null if there is none.\\n   *   useMasterKey: overrides whether to use the master key if set.\\n   * @ignore\\n   */\\n  Parse._request = function(options) {\\n    var route = options.route;\\n    var className = options.className;\\n    var objectId = options.objectId;\\n    var method = options.method;\\n    var useMasterKey = options.useMasterKey;\\n    var sessionToken = options.sessionToken;\\n    var dataObject = options.data;\\n\\n    if (!Parse.applicationId) {\\n      throw \\\"You must specify your applicationId using Parse.initialize.\\\";\\n    }\\n\\n    if (!Parse.javaScriptKey && !Parse.masterKey) {\\n      throw \\\"You must specify a key using Parse.initialize.\\\";\\n    }\\n\\n\\n    if (!sessionToken) {\\n      // Use the current user session token if none was provided.\\n      var currentUser = Parse.User.current();\\n      if (currentUser && currentUser._sessionToken) {\\n        sessionToken = currentUser._sessionToken;\\n      }\\n    }\\n\\n\\n    if (route !== \\\"batch\\\" &&\\n        route !== \\\"classes\\\" &&\\n        route !== \\\"events\\\" &&\\n        route !== \\\"files\\\" &&\\n        route !== \\\"functions\\\" &&\\n        route !== \\\"login\\\" &&\\n        route !== \\\"push\\\" &&\\n        route !== \\\"requestPasswordReset\\\" &&\\n        route !== \\\"rest_verify_analytics\\\" &&\\n        route !== \\\"users\\\" &&\\n        route !== \\\"jobs\\\") {\\n      throw \\\"Bad route: '\\\" + route + \\\"'.\\\";\\n    }\\n\\n    var url = Parse.serverURL;\\n    if (url.charAt(url.length - 1) !== \\\"/\\\") {\\n      url += \\\"/\\\";\\n    }\\n    url += \\\"1/\\\" + route;\\n    if (className) {\\n      url += \\\"/\\\" + className;\\n    }\\n    if (objectId) {\\n      url += \\\"/\\\" + objectId;\\n    }\\n\\n    dataObject = Parse._.clone(dataObject || {});\\n    if (method !== \\\"POST\\\") {\\n      dataObject._method = method;\\n      method = \\\"POST\\\";\\n    }\\n\\n    if (Parse._.isUndefined(useMasterKey)) {\\n      useMasterKey = Parse._useMasterKey;\\n    }\\n\\n    dataObject._ApplicationId = Parse.applicationId;\\n    if (!useMasterKey) {\\n      dataObject._JavaScriptKey = Parse.javaScriptKey;\\n    } else {\\n      dataObject._MasterKey = Parse.masterKey;\\n    }\\n\\n    dataObject._ClientVersion = Parse.VERSION;\\n    dataObject._InstallationId = Parse._getInstallationId();\\n    if (sessionToken) {\\n      dataObject._SessionToken = sessionToken;\\n    }\\n    var data = JSON.stringify(dataObject);\\n\\n    return Parse._ajax(method, url, data).then(null, function(response) {\\n      // Transform the error into an instance of Parse.Error by trying to parse\\n      // the error string as JSON.\\n      var error;\\n      if (response && response.responseText) {\\n        try {\\n          var errorJSON = JSON.parse(response.responseText);\\n          error = new Parse.Error(errorJSON.code, errorJSON.error);\\n        } catch (e) {\\n          // If we fail to parse the error text, that's okay.\\n          error = new Parse.Error(\\n              Parse.Error.INVALID_JSON,\\n              \\\"Received an error with invalid JSON from Parse: \\\" +\\n                  response.responseText);\\n        }\\n      } else {\\n        error = new Parse.Error(\\n            Parse.Error.CONNECTION_FAILED,\\n            \\\"XMLHttpRequest failed: \\\" + JSON.stringify(response));\\n      }\\n      // By explicitly returning a rejected Promise, this will work with\\n      // either jQuery or Promises/A semantics.\\n      return Parse.Promise.error(error);\\n    });\\n  };\\n\\n  // Helper function to get a value from a Backbone object as a property\\n  // or as a function.\\n  Parse._getValue = function(object, prop) {\\n    if (!(object && object[prop])) {\\n      return null;\\n    }\\n    return Parse._.isFunction(object[prop]) ? object[prop]() : object[prop];\\n  };\\n\\n  /**\\n   * Converts a value in a Parse Object into the appropriate representation.\\n   * This is the JS equivalent of Java's Parse.maybeReferenceAndEncode(Object)\\n   * if seenObjects is falsey. Otherwise any Parse.Objects not in\\n   * seenObjects will be fully embedded rather than encoded\\n   * as a pointer.  This array will be used to prevent going into an infinite\\n   * loop because we have circular references.  If seenObjects\\n   * is set, then none of the Parse Objects that are serialized can be dirty.\\n   */\\n  Parse._encode = function(value, seenObjects, disallowObjects) {\\n    var _ = Parse._;\\n    if (value instanceof Parse.Object) {\\n      if (disallowObjects) {\\n        throw \\\"Parse.Objects not allowed here\\\";\\n      }\\n      if (!seenObjects || _.include(seenObjects, value) || !value._hasData) {\\n        return value._toPointer();\\n      }\\n      if (!value.dirty()) {\\n        seenObjects = seenObjects.concat(value);\\n        return Parse._encode(value._toFullJSON(seenObjects),\\n                             seenObjects,\\n                             disallowObjects);\\n      }\\n      throw \\\"Tried to save an object with a pointer to a new, unsaved object.\\\";\\n    }\\n    if (value instanceof Parse.ACL) {\\n      return value.toJSON();\\n    }\\n    if (_.isDate(value)) {\\n      return { \\\"__type\\\": \\\"Date\\\", \\\"iso\\\": value.toJSON() };\\n    }\\n    if (value instanceof Parse.GeoPoint) {\\n      return value.toJSON();\\n    }\\n    if (_.isArray(value)) {\\n      return _.map(value, function(x) {\\n        return Parse._encode(x, seenObjects, disallowObjects);\\n      });\\n    }\\n    if (_.isRegExp(value)) {\\n      return value.source;\\n    }\\n    if (value instanceof Parse.Relation) {\\n      return value.toJSON();\\n    }\\n    if (value instanceof Parse.Op) {\\n      return value.toJSON();\\n    }\\n    if (value instanceof Parse.File) {\\n      if (!value.url()) {\\n        throw \\\"Tried to save an object containing an unsaved file.\\\";\\n      }\\n      return {\\n        __type: \\\"File\\\",\\n        name: value.name(),\\n        url: value.url()\\n      };\\n    }\\n    if (_.isObject(value)) {\\n      var output = {};\\n      Parse._objectEach(value, function(v, k) {\\n        output[k] = Parse._encode(v, seenObjects, disallowObjects);\\n      });\\n      return output;\\n    }\\n    return value;\\n  };\\n\\n  /**\\n   * The inverse function of Parse._encode.\\n   * TODO: make decode not mutate value.\\n   */\\n  Parse._decode = function(key, value) {\\n    var _ = Parse._;\\n    if (!_.isObject(value)) {\\n      return value;\\n    }\\n    if (_.isArray(value)) {\\n      Parse._arrayEach(value, function(v, k) {\\n        value[k] = Parse._decode(k, v);\\n      });\\n      return value;\\n    }\\n    if (value instanceof Parse.Object) {\\n      return value;\\n    }\\n    if (value instanceof Parse.File) {\\n      return value;\\n    }\\n    if (value instanceof Parse.Op) {\\n      return value;\\n    }\\n    if (value.__op) {\\n      return Parse.Op._decode(value);\\n    }\\n    if (value.__type === \\\"Pointer\\\") {\\n      var pointer = Parse.Object._create(value.className);\\n      pointer._finishFetch({ objectId: value.objectId }, false);\\n      return pointer;\\n    }\\n    if (value.__type === \\\"Object\\\") {\\n      // It's an Object included in a query result.\\n      var className = value.className;\\n      delete value.__type;\\n      delete value.className;\\n      var object = Parse.Object._create(className);\\n      object._finishFetch(value, true);\\n      return object;\\n    }\\n    if (value.__type === \\\"Date\\\") {\\n      return Parse._parseDate(value.iso);\\n    }\\n    if (value.__type === \\\"GeoPoint\\\") {\\n      return new Parse.GeoPoint({\\n        latitude: value.latitude,\\n        longitude: value.longitude\\n      });\\n    }\\n    if (key === \\\"ACL\\\") {\\n      if (value instanceof Parse.ACL) {\\n        return value;\\n      }\\n      return new Parse.ACL(value);\\n    }\\n    if (value.__type === \\\"Relation\\\") {\\n      var relation = new Parse.Relation(null, key);\\n      relation.targetClassName = value.className;\\n      return relation;\\n    }\\n    if (value.__type === \\\"File\\\") {\\n      var file = new Parse.File(value.name);\\n      file._url = value.url;\\n      return file;\\n    }\\n    Parse._objectEach(value, function(v, k) {\\n      value[k] = Parse._decode(k, v);\\n    });\\n    return value;\\n  };\\n\\n  Parse._arrayEach = Parse._.each;\\n\\n  /**\\n   * Does a deep traversal of every item in object, calling func on every one.\\n   * @param {Object} object The object or array to traverse deeply.\\n   * @param {Function} func The function to call for every item. It will\\n   *     be passed the item as an argument. If it returns a truthy value, that\\n   *     value will replace the item in its parent container.\\n   * @returns {} the result of calling func on the top-level object itself.\\n   */\\n  Parse._traverse = function(object, func, seen) {\\n    if (object instanceof Parse.Object) {\\n      seen = seen || [];\\n      if (Parse._.indexOf(seen, object) >= 0) {\\n        // We've already visited this object in this call.\\n        return;\\n      }\\n      seen.push(object);\\n      Parse._traverse(object.attributes, func, seen);\\n      return func(object);\\n    }\\n    if (object instanceof Parse.Relation || object instanceof Parse.File) {\\n      // Nothing needs to be done, but we don't want to recurse into the\\n      // object's parent infinitely, so we catch this case.\\n      return func(object);\\n    }\\n    if (Parse._.isArray(object)) {\\n      Parse._.each(object, function(child, index) {\\n        var newChild = Parse._traverse(child, func, seen);\\n        if (newChild) {\\n          object[index] = newChild;\\n        }\\n      });\\n      return func(object);\\n    }\\n    if (Parse._.isObject(object)) {\\n      Parse._each(object, function(child, key) {\\n        var newChild = Parse._traverse(child, func, seen);\\n        if (newChild) {\\n          object[key] = newChild;\\n        }\\n      });\\n      return func(object);\\n    }\\n    return func(object);\\n  };\\n\\n  /**\\n   * This is like _.each, except:\\n   * * it doesn't work for so-called array-like objects,\\n   * * it does work for dictionaries with a \\\"length\\\" attribute.\\n   */\\n  Parse._objectEach = Parse._each = function(obj, callback) {\\n    var _ = Parse._;\\n    if (_.isObject(obj)) {\\n      _.each(_.keys(obj), function(key) {\\n        callback(obj[key], key);\\n      });\\n    } else {\\n      _.each(obj, callback);\\n    }\\n  };\\n\\n  // Helper function to check null or undefined.\\n  Parse._isNullOrUndefined = function(x) {\\n    return Parse._.isNull(x) || Parse._.isUndefined(x);\\n  };\\n}(this));\\n\\n(function(root) {\\n  root.Parse = root.Parse || {};\\n  var Parse = root.Parse;\\n  var _ = Parse._;\\n\\n  /**\\n   * @namespace Provides an interface to Parse's logging and analytics backend.\\n   */\\n  Parse.Analytics = Parse.Analytics || {};\\n\\n  _.extend(Parse.Analytics, /** @lends Parse.Analytics */ {\\n    /**\\n     * Tracks the occurrence of a custom event with additional dimensions.\\n     * Parse will store a data point at the time of invocation with the given\\n     * event name.\\n     *\\n     * Dimensions will allow segmentation of the occurrences of this custom\\n     * event. Keys and values should be {@code String}s, and will throw\\n     * otherwise.\\n     *\\n     * To track a user signup along with additional metadata, consider the\\n     * following:\\n     * <pre>\\n     * var dimensions = {\\n     *  gender: 'm',\\n     *  source: 'web',\\n     *  dayType: 'weekend'\\n     * };\\n     * Parse.Analytics.track('signup', dimensions);\\n     * </pre>\\n     *\\n     * There is a default limit of 4 dimensions per event tracked.\\n     *\\n     * @param {String} name The name of the custom event to report to Parse as\\n     * having happened.\\n     * @param {Object} dimensions The dictionary of information by which to\\n     * segment this event.\\n     * @return {Parse.Promise} A promise that is resolved when the round-trip\\n     * to the server completes.\\n     */\\n    track: function(name, dimensions) {\\n      name = name || '';\\n      name = name.replace(/^\\\\s*/, '');\\n      name = name.replace(/\\\\s*$/, '');\\n      if (name.length === 0) {\\n        throw 'A name for the custom event must be provided';\\n      }\\n\\n      _.each(dimensions, function(val, key) {\\n        if (!_.isString(key) || !_.isString(val)) {\\n          throw 'track() dimensions expects keys and values of type \\\"string\\\".';\\n        }\\n      });\\n\\n      return Parse._request({\\n        route: 'events',\\n        className: name,\\n        method: 'POST',\\n        data: { dimensions: dimensions }\\n      });\\n    }\\n  });\\n}(this));\\n\\n(function(root) {\\n  root.Parse = root.Parse || {};\\n  var Parse = root.Parse;\\n  var _ = Parse._;\\n\\n  /**\\n   * Constructs a new Parse.Error object with the given code and message.\\n   * @param {Number} code An error code constant from <code>Parse.Error</code>.\\n   * @param {String} message A detailed description of the error.\\n   * @class\\n   *\\n   * <p>Class used for all objects passed to error callbacks.</p>\\n   */\\n  Parse.Error = function(code, message) {\\n    this.code = code;\\n    this.message = message;\\n  };\\n\\n  _.extend(Parse.Error, /** @lends Parse.Error */ {\\n    /**\\n     * Error code indicating some error other than those enumerated here.\\n     * @constant\\n     */\\n    OTHER_CAUSE: -1,\\n\\n    /**\\n     * Error code indicating that something has gone wrong with the server.\\n     * If you get this error code, it is Parse's fault. Contact us at\\n     * https://parse.com/help\\n     * @constant\\n     */\\n    INTERNAL_SERVER_ERROR: 1,\\n\\n    /**\\n     * Error code indicating the connection to the Parse servers failed.\\n     * @constant\\n     */\\n    CONNECTION_FAILED: 100,\\n\\n    /**\\n     * Error code indicating the specified object doesn't exist.\\n     * @constant\\n     */\\n    OBJECT_NOT_FOUND: 101,\\n\\n    /**\\n     * Error code indicating you tried to query with a datatype that doesn't\\n     * support it, like exact matching an array or object.\\n     * @constant\\n     */\\n    INVALID_QUERY: 102,\\n\\n    /**\\n     * Error code indicating a missing or invalid classname. Classnames are\\n     * case-sensitive. They must start with a letter, and a-zA-Z0-9_ are the\\n     * only valid characters.\\n     * @constant\\n     */\\n    INVALID_CLASS_NAME: 103,\\n\\n    /**\\n     * Error code indicating an unspecified object id.\\n     * @constant\\n     */\\n    MISSING_OBJECT_ID: 104,\\n\\n    /**\\n     * Error code indicating an invalid key name. Keys are case-sensitive. They\\n     * must start with a letter, and a-zA-Z0-9_ are the only valid characters.\\n     * @constant\\n     */\\n    INVALID_KEY_NAME: 105,\\n\\n    /**\\n     * Error code indicating a malformed pointer. You should not see this unless\\n     * you have been mucking about changing internal Parse code.\\n     * @constant\\n     */\\n    INVALID_POINTER: 106,\\n\\n    /**\\n     * Error code indicating that badly formed JSON was received upstream. This\\n     * either indicates you have done something unusual with modifying how\\n     * things encode to JSON, or the network is failing badly.\\n     * @constant\\n     */\\n    INVALID_JSON: 107,\\n\\n    /**\\n     * Error code indicating that the feature you tried to access is only\\n     * available internally for testing purposes.\\n     * @constant\\n     */\\n    COMMAND_UNAVAILABLE: 108,\\n\\n    /**\\n     * You must call Parse.initialize before using the Parse library.\\n     * @constant\\n     */\\n    NOT_INITIALIZED: 109,\\n\\n    /**\\n     * Error code indicating that a field was set to an inconsistent type.\\n     * @constant\\n     */\\n    INCORRECT_TYPE: 111,\\n\\n    /**\\n     * Error code indicating an invalid channel name. A channel name is either\\n     * an empty string (the broadcast channel) or contains only a-zA-Z0-9_\\n     * characters and starts with a letter.\\n     * @constant\\n     */\\n    INVALID_CHANNEL_NAME: 112,\\n\\n    /**\\n     * Error code indicating that push is misconfigured.\\n     * @constant\\n     */\\n    PUSH_MISCONFIGURED: 115,\\n\\n    /**\\n     * Error code indicating that the object is too large.\\n     * @constant\\n     */\\n    OBJECT_TOO_LARGE: 116,\\n\\n    /**\\n     * Error code indicating that the operation isn't allowed for clients.\\n     * @constant\\n     */\\n    OPERATION_FORBIDDEN: 119,\\n\\n    /**\\n     * Error code indicating the result was not found in the cache.\\n     * @constant\\n     */\\n    CACHE_MISS: 120,\\n\\n    /**\\n     * Error code indicating that an invalid key was used in a nested\\n     * JSONObject.\\n     * @constant\\n     */\\n    INVALID_NESTED_KEY: 121,\\n\\n    /**\\n     * Error code indicating that an invalid filename was used for ParseFile.\\n     * A valid file name contains only a-zA-Z0-9_. characters and is between 1\\n     * and 128 characters.\\n     * @constant\\n     */\\n    INVALID_FILE_NAME: 122,\\n\\n    /**\\n     * Error code indicating an invalid ACL was provided.\\n     * @constant\\n     */\\n    INVALID_ACL: 123,\\n\\n    /**\\n     * Error code indicating that the request timed out on the server. Typically\\n     * this indicates that the request is too expensive to run.\\n     * @constant\\n     */\\n    TIMEOUT: 124,\\n\\n    /**\\n     * Error code indicating that the email address was invalid.\\n     * @constant\\n     */\\n    INVALID_EMAIL_ADDRESS: 125,\\n\\n    /**\\n     * Error code indicating a missing content type.\\n     * @constant\\n     */\\n    MISSING_CONTENT_TYPE: 126,\\n\\n    /**\\n     * Error code indicating a missing content length.\\n     * @constant\\n     */\\n    MISSING_CONTENT_LENGTH: 127,\\n\\n    /**\\n     * Error code indicating an invalid content length.\\n     * @constant\\n     */\\n    INVALID_CONTENT_LENGTH: 128,\\n\\n    /**\\n     * Error code indicating a file that was too large.\\n     * @constant\\n     */\\n    FILE_TOO_LARGE: 129,\\n\\n    /**\\n     * Error code indicating an error saving a file.\\n     * @constant\\n     */\\n    FILE_SAVE_ERROR: 130,\\n\\n    /**\\n     * Error code indicating an error deleting a file.\\n     * @constant\\n     */\\n    FILE_DELETE_ERROR: 153,\\n\\n    /**\\n     * Error code indicating that a unique field was given a value that is\\n     * already taken.\\n     * @constant\\n     */\\n    DUPLICATE_VALUE: 137,\\n\\n    /**\\n     * Error code indicating that a role's name is invalid.\\n     * @constant\\n     */\\n    INVALID_ROLE_NAME: 139,\\n\\n    /**\\n     * Error code indicating that an application quota was exceeded.  Upgrade to\\n     * resolve.\\n     * @constant\\n     */\\n    EXCEEDED_QUOTA: 140,\\n\\n    /**\\n     * Error code indicating that a Cloud Code script failed.\\n     * @constant\\n     */\\n    SCRIPT_FAILED: 141,\\n\\n    /**\\n     * Error code indicating that a Cloud Code validation failed.\\n     * @constant\\n     */\\n    VALIDATION_ERROR: 142,\\n\\n    /**\\n     * Error code indicating that invalid image data was provided.\\n     * @constant\\n     */\\n    INVALID_IMAGE_DATA: 150,\\n\\n    /**\\n     * Error code indicating an unsaved file.\\n     * @constant\\n     */\\n    UNSAVED_FILE_ERROR: 151,\\n\\n    /**\\n     * Error code indicating an invalid push time.\\n     */\\n    INVALID_PUSH_TIME_ERROR: 152,\\n\\n    /**\\n     * Error code indicating that the username is missing or empty.\\n     * @constant\\n     */\\n    USERNAME_MISSING: 200,\\n\\n    /**\\n     * Error code indicating that the password is missing or empty.\\n     * @constant\\n     */\\n    PASSWORD_MISSING: 201,\\n\\n    /**\\n     * Error code indicating that the username has already been taken.\\n     * @constant\\n     */\\n    USERNAME_TAKEN: 202,\\n\\n    /**\\n     * Error code indicating that the email has already been taken.\\n     * @constant\\n     */\\n    EMAIL_TAKEN: 203,\\n\\n    /**\\n     * Error code indicating that the email is missing, but must be specified.\\n     * @constant\\n     */\\n    EMAIL_MISSING: 204,\\n\\n    /**\\n     * Error code indicating that a user with the specified email was not found.\\n     * @constant\\n     */\\n    EMAIL_NOT_FOUND: 205,\\n\\n    /**\\n     * Error code indicating that a user object without a valid session could\\n     * not be altered.\\n     * @constant\\n     */\\n    SESSION_MISSING: 206,\\n\\n    /**\\n     * Error code indicating that a user can only be created through signup.\\n     * @constant\\n     */\\n    MUST_CREATE_USER_THROUGH_SIGNUP: 207,\\n\\n    /**\\n     * Error code indicating that an an account being linked is already linked\\n     * to another user.\\n     * @constant\\n     */\\n    ACCOUNT_ALREADY_LINKED: 208,\\n\\n    /**\\n     * Error code indicating that a user cannot be linked to an account because\\n     * that account's id could not be found.\\n     * @constant\\n     */\\n    LINKED_ID_MISSING: 250,\\n\\n    /**\\n     * Error code indicating that a user with a linked (e.g. Facebook) account\\n     * has an invalid session.\\n     * @constant\\n     */\\n    INVALID_LINKED_SESSION: 251,\\n\\n    /**\\n     * Error code indicating that a service being linked (e.g. Facebook or\\n     * Twitter) is unsupported.\\n     * @constant\\n     */\\n    UNSUPPORTED_SERVICE: 252,\\n\\n    /**\\n     * Error code indicating that there were multiple errors. Aggregate errors\\n     * have an \\\"errors\\\" property, which is an array of error objects with more\\n     * detail about each error that occurred.\\n     * @constant\\n     */\\n    AGGREGATE_ERROR: 600,\\n\\n    /**\\n     * Error code indicating the client was unable to read an input file.\\n     * @constant\\n     */\\n    FILE_READ_ERROR: 601,\\n\\n    /**\\n     * Error code indicating a real error code is unavailable because\\n     * we had to use an XDomainRequest object to allow CORS requests in\\n     * Internet Explorer, which strips the body from HTTP responses that have\\n     * a non-2XX status code.\\n     * @constant\\n     */\\n    X_DOMAIN_REQUEST: 602\\n  });\\n\\n}(this));\\n\\n/*global _: false */\\n(function() {\\n  var root = this;\\n  var Parse = (root.Parse || (root.Parse = {}));\\n  var eventSplitter = /\\\\s+/;\\n  var slice = Array.prototype.slice;\\n\\n  /**\\n   * @class\\n   *\\n   * <p>Parse.Events is a fork of Backbone's Events module, provided for your\\n   * convenience.</p>\\n   *\\n   * <p>A module that can be mixed in to any object in order to provide\\n   * it with custom events. You may bind callback functions to an event\\n   * with `on`, or remove these functions with `off`.\\n   * Triggering an event fires all callbacks in the order that `on` was\\n   * called.\\n   *\\n   * <pre>\\n   *     var object = {};\\n   *     _.extend(object, Parse.Events);\\n   *     object.on('expand', function(){ alert('expanded'); });\\n   *     object.trigger('expand');</pre></p>\\n   *\\n   * <p>For more information, see the\\n   * <a href=\\\"http://documentcloud.github.com/backbone/#Events\\\">Backbone\\n   * documentation</a>.</p>\\n   */\\n  Parse.Events = {\\n    /**\\n     * Bind one or more space separated events, `events`, to a `callback`\\n     * function. Passing `\\\"all\\\"` will bind the callback to all events fired.\\n     */\\n    on: function(events, callback, context) {\\n\\n      var calls, event, node, tail, list;\\n      if (!callback) {\\n        return this;\\n      }\\n      events = events.split(eventSplitter);\\n      calls = this._callbacks || (this._callbacks = {});\\n\\n      // Create an immutable callback list, allowing traversal during\\n      // modification.  The tail is an empty object that will always be used\\n      // as the next node.\\n      event = events.shift();\\n      while (event) {\\n        list = calls[event];\\n        node = list ? list.tail : {};\\n        node.next = tail = {};\\n        node.context = context;\\n        node.callback = callback;\\n        calls[event] = {tail: tail, next: list ? list.next : node};\\n        event = events.shift();\\n      }\\n\\n      return this;\\n    },\\n\\n    /**\\n     * Remove one or many callbacks. If `context` is null, removes all callbacks\\n     * with that function. If `callback` is null, removes all callbacks for the\\n     * event. If `events` is null, removes all bound callbacks for all events.\\n     */\\n    off: function(events, callback, context) {\\n      var event, calls, node, tail, cb, ctx;\\n\\n      // No events, or removing *all* events.\\n      if (!(calls = this._callbacks)) {\\n        return;\\n      }\\n      if (!(events || callback || context)) {\\n        delete this._callbacks;\\n        return this;\\n      }\\n\\n      // Loop through the listed events and contexts, splicing them out of the\\n      // linked list of callbacks if appropriate.\\n      events = events ? events.split(eventSplitter) : _.keys(calls);\\n      event = events.shift();\\n      while (event) {\\n        node = calls[event];\\n        delete calls[event];\\n        if (!node || !(callback || context)) {\\n          continue;\\n        }\\n        // Create a new list, omitting the indicated callbacks.\\n        tail = node.tail;\\n        node = node.next;\\n        while (node !== tail) {\\n          cb = node.callback;\\n          ctx = node.context;\\n          if ((callback && cb !== callback) || (context && ctx !== context)) {\\n            this.on(event, cb, ctx);\\n          }\\n          node = node.next;\\n        }\\n        event = events.shift();\\n      }\\n\\n      return this;\\n    },\\n\\n    /**\\n     * Trigger one or many events, firing all bound callbacks. Callbacks are\\n     * passed the same arguments as `trigger` is, apart from the event name\\n     * (unless you're listening on `\\\"all\\\"`, which will cause your callback to\\n     * receive the true name of the event as the first argument).\\n     */\\n    trigger: function(events) {\\n      var event, node, calls, tail, args, all, rest;\\n      if (!(calls = this._callbacks)) {\\n        return this;\\n      }\\n      all = calls.all;\\n      events = events.split(eventSplitter);\\n      rest = slice.call(arguments, 1);\\n\\n      // For each event, walk through the linked list of callbacks twice,\\n      // first to trigger the event, then to trigger any `\\\"all\\\"` callbacks.\\n      event = events.shift();\\n      while (event) {\\n        node = calls[event];\\n        if (node) {\\n          tail = node.tail;\\n          while ((node = node.next) !== tail) {\\n            node.callback.apply(node.context || this, rest);\\n          }\\n        }\\n        node = all;\\n        if (node) {\\n          tail = node.tail;\\n          args = [event].concat(rest);\\n          while ((node = node.next) !== tail) {\\n            node.callback.apply(node.context || this, args);\\n          }\\n        }\\n        event = events.shift();\\n      }\\n\\n      return this;\\n    }\\n  };\\n\\n  /**\\n   * @function\\n   */\\n  Parse.Events.bind = Parse.Events.on;\\n\\n  /**\\n   * @function\\n   */\\n  Parse.Events.unbind = Parse.Events.off;\\n}.call(this));\\n\\n\\n/*global navigator: false */\\n(function(root) {\\n  root.Parse = root.Parse || {};\\n  var Parse = root.Parse;\\n  var _ = Parse._;\\n\\n  /**\\n   * Creates a new GeoPoint with any of the following forms:<br>\\n   *   <pre>\\n   *   new GeoPoint(otherGeoPoint)\\n   *   new GeoPoint(30, 30)\\n   *   new GeoPoint([30, 30])\\n   *   new GeoPoint({latitude: 30, longitude: 30})\\n   *   new GeoPoint()  // defaults to (0, 0)\\n   *   </pre>\\n   * @class\\n   *\\n   * <p>Represents a latitude / longitude point that may be associated\\n   * with a key in a ParseObject or used as a reference point for geo queries.\\n   * This allows proximity-based queries on the key.</p>\\n   *\\n   * <p>Only one key in a class may contain a GeoPoint.</p>\\n   *\\n   * <p>Example:<pre>\\n   *   var point = new Parse.GeoPoint(30.0, -20.0);\\n   *   var object = new Parse.Object(\\\"PlaceObject\\\");\\n   *   object.set(\\\"location\\\", point);\\n   *   object.save();</pre></p>\\n   */\\n  Parse.GeoPoint = function(arg1, arg2) {\\n    if (_.isArray(arg1)) {\\n      Parse.GeoPoint._validate(arg1[0], arg1[1]);\\n      this.latitude = arg1[0];\\n      this.longitude = arg1[1];\\n    } else if (_.isObject(arg1)) {\\n      Parse.GeoPoint._validate(arg1.latitude, arg1.longitude);\\n      this.latitude = arg1.latitude;\\n      this.longitude = arg1.longitude;\\n    } else if (_.isNumber(arg1) && _.isNumber(arg2)) {\\n      Parse.GeoPoint._validate(arg1, arg2);\\n      this.latitude = arg1;\\n      this.longitude = arg2;\\n    } else {\\n      this.latitude = 0;\\n      this.longitude = 0;\\n    }\\n\\n    // Add properties so that anyone using Webkit or Mozilla will get an error\\n    // if they try to set values that are out of bounds.\\n    var self = this;\\n    if (this.__defineGetter__ && this.__defineSetter__) {\\n      // Use _latitude and _longitude to actually store the values, and add\\n      // getters and setters for latitude and longitude.\\n      this._latitude = this.latitude;\\n      this._longitude = this.longitude;\\n      this.__defineGetter__(\\\"latitude\\\", function() {\\n        return self._latitude;\\n      });\\n      this.__defineGetter__(\\\"longitude\\\", function() {\\n        return self._longitude;\\n      });\\n      this.__defineSetter__(\\\"latitude\\\", function(val) {\\n        Parse.GeoPoint._validate(val, self.longitude);\\n        self._latitude = val;\\n      });\\n      this.__defineSetter__(\\\"longitude\\\", function(val) {\\n        Parse.GeoPoint._validate(self.latitude, val);\\n        self._longitude = val;\\n      });\\n    }\\n  };\\n\\n  /**\\n   * @lends Parse.GeoPoint.prototype\\n   * @property {float} latitude North-south portion of the coordinate, in range\\n   *   [-90, 90].  Throws an exception if set out of range in a modern browser.\\n   * @property {float} longitude East-west portion of the coordinate, in range\\n   *   [-180, 180].  Throws if set out of range in a modern browser.\\n   */\\n\\n  /**\\n   * Throws an exception if the given lat-long is out of bounds.\\n   */\\n  Parse.GeoPoint._validate = function(latitude, longitude) {\\n    if (latitude < -90.0) {\\n      throw \\\"Parse.GeoPoint latitude \\\" + latitude + \\\" < -90.0.\\\";\\n    }\\n    if (latitude > 90.0) {\\n      throw \\\"Parse.GeoPoint latitude \\\" + latitude + \\\" > 90.0.\\\";\\n    }\\n    if (longitude < -180.0) {\\n      throw \\\"Parse.GeoPoint longitude \\\" + longitude + \\\" < -180.0.\\\";\\n    }\\n    if (longitude > 180.0) {\\n      throw \\\"Parse.GeoPoint longitude \\\" + longitude + \\\" > 180.0.\\\";\\n    }\\n  };\\n\\n  /**\\n   * Creates a GeoPoint with the user's current location, if available.\\n   * Calls options.success with a new GeoPoint instance or calls options.error.\\n   * @param {Object} options An object with success and error callbacks.\\n   */\\n  Parse.GeoPoint.current = function(options) {\\n    var promise = new Parse.Promise();\\n    navigator.geolocation.getCurrentPosition(function(location) {\\n      promise.resolve(new Parse.GeoPoint({\\n        latitude: location.coords.latitude,\\n        longitude: location.coords.longitude\\n      }));\\n\\n    }, function(error) {\\n      promise.reject(error);\\n    });\\n\\n    return promise._thenRunCallbacks(options);\\n  };\\n\\n  Parse.GeoPoint.prototype = {\\n    /**\\n     * Returns a JSON representation of the GeoPoint, suitable for Parse.\\n     * @return {Object}\\n     */\\n    toJSON: function() {\\n      Parse.GeoPoint._validate(this.latitude, this.longitude);\\n      return {\\n        \\\"__type\\\": \\\"GeoPoint\\\",\\n        latitude: this.latitude,\\n        longitude: this.longitude\\n      };\\n    },\\n\\n    /**\\n     * Returns the distance from this GeoPoint to another in radians.\\n     * @param {Parse.GeoPoint} point the other Parse.GeoPoint.\\n     * @return {Number}\\n     */\\n    radiansTo: function(point) {\\n      var d2r = Math.PI / 180.0;\\n      var lat1rad = this.latitude * d2r;\\n      var long1rad = this.longitude * d2r;\\n      var lat2rad = point.latitude * d2r;\\n      var long2rad = point.longitude * d2r;\\n      var deltaLat = lat1rad - lat2rad;\\n      var deltaLong = long1rad - long2rad;\\n      var sinDeltaLatDiv2 = Math.sin(deltaLat / 2);\\n      var sinDeltaLongDiv2 = Math.sin(deltaLong / 2);\\n      // Square of half the straight line chord distance between both points.\\n      var a = ((sinDeltaLatDiv2 * sinDeltaLatDiv2) +\\n               (Math.cos(lat1rad) * Math.cos(lat2rad) *\\n                sinDeltaLongDiv2 * sinDeltaLongDiv2));\\n      a = Math.min(1.0, a);\\n      return 2 * Math.asin(Math.sqrt(a));\\n    },\\n\\n    /**\\n     * Returns the distance from this GeoPoint to another in kilometers.\\n     * @param {Parse.GeoPoint} point the other Parse.GeoPoint.\\n     * @return {Number}\\n     */\\n    kilometersTo: function(point) {\\n      return this.radiansTo(point) * 6371.0;\\n    },\\n\\n    /**\\n     * Returns the distance from this GeoPoint to another in miles.\\n     * @param {Parse.GeoPoint} point the other Parse.GeoPoint.\\n     * @return {Number}\\n     */\\n    milesTo: function(point) {\\n      return this.radiansTo(point) * 3958.8;\\n    }\\n  };\\n}(this));\\n\\n/*global navigator: false */\\n(function(root) {\\n  root.Parse = root.Parse || {};\\n  var Parse = root.Parse;\\n  var _ = Parse._;\\n\\n  var PUBLIC_KEY = \\\"*\\\";\\n\\n  /**\\n   * Creates a new ACL.\\n   * If no argument is given, the ACL has no permissions for anyone.\\n   * If the argument is a Parse.User, the ACL will have read and write\\n   *   permission for only that user.\\n   * If the argument is any other JSON object, that object will be interpretted\\n   *   as a serialized ACL created with toJSON().\\n   * @see Parse.Object#setACL\\n   * @class\\n   *\\n   * <p>An ACL, or Access Control List can be added to any\\n   * <code>Parse.Object</code> to restrict access to only a subset of users\\n   * of your application.</p>\\n   */\\n  Parse.ACL = function(arg1) {\\n    var self = this;\\n    self.permissionsById = {};\\n    if (_.isObject(arg1)) {\\n      if (arg1 instanceof Parse.User) {\\n        self.setReadAccess(arg1, true);\\n        self.setWriteAccess(arg1, true);\\n      } else {\\n        if (_.isFunction(arg1)) {\\n          throw \\\"Parse.ACL() called with a function.  Did you forget ()?\\\";\\n        }\\n        Parse._objectEach(arg1, function(accessList, userId) {\\n          if (!_.isString(userId)) {\\n            throw \\\"Tried to create an ACL with an invalid userId.\\\";\\n          }\\n          self.permissionsById[userId] = {};\\n          Parse._objectEach(accessList, function(allowed, permission) {\\n            if (permission !== \\\"read\\\" && permission !== \\\"write\\\") {\\n              throw \\\"Tried to create an ACL with an invalid permission type.\\\";\\n            }\\n            if (!_.isBoolean(allowed)) {\\n              throw \\\"Tried to create an ACL with an invalid permission value.\\\";\\n            }\\n            self.permissionsById[userId][permission] = allowed;\\n          });\\n        });\\n      }\\n    }\\n  };\\n\\n  /**\\n   * Returns a JSON-encoded version of the ACL.\\n   * @return {Object}\\n   */\\n  Parse.ACL.prototype.toJSON = function() {\\n    return _.clone(this.permissionsById);\\n  };\\n\\n  Parse.ACL.prototype._setAccess = function(accessType, userId, allowed) {\\n    if (userId instanceof Parse.User) {\\n      userId = userId.id;\\n    } else if (userId instanceof Parse.Role) {\\n      userId = \\\"role:\\\" + userId.getName();\\n    }\\n    if (!_.isString(userId)) {\\n      throw \\\"userId must be a string.\\\";\\n    }\\n    if (!_.isBoolean(allowed)) {\\n      throw \\\"allowed must be either true or false.\\\";\\n    }\\n    var permissions = this.permissionsById[userId];\\n    if (!permissions) {\\n      if (!allowed) {\\n        // The user already doesn't have this permission, so no action needed.\\n        return;\\n      } else {\\n        permissions = {};\\n        this.permissionsById[userId] = permissions;\\n      }\\n    }\\n\\n    if (allowed) {\\n      this.permissionsById[userId][accessType] = true;\\n    } else {\\n      delete permissions[accessType];\\n      if (_.isEmpty(permissions)) {\\n        delete permissions[userId];\\n      }\\n    }\\n  };\\n\\n  Parse.ACL.prototype._getAccess = function(accessType, userId) {\\n    if (userId instanceof Parse.User) {\\n      userId = userId.id;\\n    } else if (userId instanceof Parse.Role) {\\n      userId = \\\"role:\\\" + userId.getName();\\n    }\\n    var permissions = this.permissionsById[userId];\\n    if (!permissions) {\\n      return false;\\n    }\\n    return permissions[accessType] ? true : false;\\n  };\\n\\n  /**\\n   * Set whether the given user is allowed to read this object.\\n   * @param userId An instance of Parse.User or its objectId.\\n   * @param {Boolean} allowed Whether that user should have read access.\\n   */\\n  Parse.ACL.prototype.setReadAccess = function(userId, allowed) {\\n    this._setAccess(\\\"read\\\", userId, allowed);\\n  };\\n\\n  /**\\n   * Get whether the given user id is *explicitly* allowed to read this object.\\n   * Even if this returns false, the user may still be able to access it if\\n   * getPublicReadAccess returns true or a role that the user belongs to has\\n   * write access.\\n   * @param userId An instance of Parse.User or its objectId, or a Parse.Role.\\n   * @return {Boolean}\\n   */\\n  Parse.ACL.prototype.getReadAccess = function(userId) {\\n    return this._getAccess(\\\"read\\\", userId);\\n  };\\n\\n  /**\\n   * Set whether the given user id is allowed to write this object.\\n   * @param userId An instance of Parse.User or its objectId, or a Parse.Role..\\n   * @param {Boolean} allowed Whether that user should have write access.\\n   */\\n  Parse.ACL.prototype.setWriteAccess = function(userId, allowed) {\\n    this._setAccess(\\\"write\\\", userId, allowed);\\n  };\\n\\n  /**\\n   * Get whether the given user id is *explicitly* allowed to write this object.\\n   * Even if this returns false, the user may still be able to write it if\\n   * getPublicWriteAccess returns true or a role that the user belongs to has\\n   * write access.\\n   * @param userId An instance of Parse.User or its objectId, or a Parse.Role.\\n   * @return {Boolean}\\n   */\\n  Parse.ACL.prototype.getWriteAccess = function(userId) {\\n    return this._getAccess(\\\"write\\\", userId);\\n  };\\n\\n  /**\\n   * Set whether the public is allowed to read this object.\\n   * @param {Boolean} allowed\\n   */\\n  Parse.ACL.prototype.setPublicReadAccess = function(allowed) {\\n    this.setReadAccess(PUBLIC_KEY, allowed);\\n  };\\n\\n  /**\\n   * Get whether the public is allowed to read this object.\\n   * @return {Boolean}\\n   */\\n  Parse.ACL.prototype.getPublicReadAccess = function() {\\n    return this.getReadAccess(PUBLIC_KEY);\\n  };\\n\\n  /**\\n   * Set whether the public is allowed to write this object.\\n   * @param {Boolean} allowed\\n   */\\n  Parse.ACL.prototype.setPublicWriteAccess = function(allowed) {\\n    this.setWriteAccess(PUBLIC_KEY, allowed);\\n  };\\n\\n  /**\\n   * Get whether the public is allowed to write this object.\\n   * @return {Boolean}\\n   */\\n  Parse.ACL.prototype.getPublicWriteAccess = function() {\\n    return this.getWriteAccess(PUBLIC_KEY);\\n  };\\n\\n  /**\\n   * Get whether users belonging to the given role are allowed\\n   * to read this object. Even if this returns false, the role may\\n   * still be able to write it if a parent role has read access.\\n   *\\n   * @param role The name of the role, or a Parse.Role object.\\n   * @return {Boolean} true if the role has read access. false otherwise.\\n   * @throws {String} If role is neither a Parse.Role nor a String.\\n   */\\n  Parse.ACL.prototype.getRoleReadAccess = function(role) {\\n    if (role instanceof Parse.Role) {\\n      // Normalize to the String name\\n      role = role.getName();\\n    }\\n    if (_.isString(role)) {\\n      return this.getReadAccess(\\\"role:\\\" + role);\\n    }\\n    throw \\\"role must be a Parse.Role or a String\\\";\\n  };\\n\\n  /**\\n   * Get whether users belonging to the given role are allowed\\n   * to write this object. Even if this returns false, the role may\\n   * still be able to write it if a parent role has write access.\\n   *\\n   * @param role The name of the role, or a Parse.Role object.\\n   * @return {Boolean} true if the role has write access. false otherwise.\\n   * @throws {String} If role is neither a Parse.Role nor a String.\\n   */\\n  Parse.ACL.prototype.getRoleWriteAccess = function(role) {\\n    if (role instanceof Parse.Role) {\\n      // Normalize to the String name\\n      role = role.getName();\\n    }\\n    if (_.isString(role)) {\\n      return this.getWriteAccess(\\\"role:\\\" + role);\\n    }\\n    throw \\\"role must be a Parse.Role or a String\\\";\\n  };\\n\\n  /**\\n   * Set whether users belonging to the given role are allowed\\n   * to read this object.\\n   *\\n   * @param role The name of the role, or a Parse.Role object.\\n   * @param {Boolean} allowed Whether the given role can read this object.\\n   * @throws {String} If role is neither a Parse.Role nor a String.\\n   */\\n  Parse.ACL.prototype.setRoleReadAccess = function(role, allowed) {\\n    if (role instanceof Parse.Role) {\\n      // Normalize to the String name\\n      role = role.getName();\\n    }\\n    if (_.isString(role)) {\\n      this.setReadAccess(\\\"role:\\\" + role, allowed);\\n      return;\\n    }\\n    throw \\\"role must be a Parse.Role or a String\\\";\\n  };\\n\\n  /**\\n   * Set whether users belonging to the given role are allowed\\n   * to write this object.\\n   *\\n   * @param role The name of the role, or a Parse.Role object.\\n   * @param {Boolean} allowed Whether the given role can write this object.\\n   * @throws {String} If role is neither a Parse.Role nor a String.\\n   */\\n  Parse.ACL.prototype.setRoleWriteAccess = function(role, allowed) {\\n    if (role instanceof Parse.Role) {\\n      // Normalize to the String name\\n      role = role.getName();\\n    }\\n    if (_.isString(role)) {\\n      this.setWriteAccess(\\\"role:\\\" + role, allowed);\\n      return;\\n    }\\n    throw \\\"role must be a Parse.Role or a String\\\";\\n  };\\n\\n}(this));\\n\\n(function(root) {\\n  root.Parse = root.Parse || {};\\n  var Parse = root.Parse;\\n  var _ = Parse._;\\n\\n  /**\\n   * @class\\n   * A Parse.Op is an atomic operation that can be applied to a field in a\\n   * Parse.Object. For example, calling <code>object.set(\\\"foo\\\", \\\"bar\\\")</code>\\n   * is an example of a Parse.Op.Set. Calling <code>object.unset(\\\"foo\\\")</code>\\n   * is a Parse.Op.Unset. These operations are stored in a Parse.Object and\\n   * sent to the server as part of <code>object.save()</code> operations.\\n   * Instances of Parse.Op should be immutable.\\n   *\\n   * You should not create subclasses of Parse.Op or instantiate Parse.Op\\n   * directly.\\n   */\\n  Parse.Op = function() {\\n    this._initialize.apply(this, arguments);\\n  };\\n\\n  Parse.Op.prototype = {\\n    _initialize: function() {}\\n  };\\n\\n  _.extend(Parse.Op, {\\n    /**\\n     * To create a new Op, call Parse.Op._extend();\\n     */\\n    _extend: Parse._extend,\\n\\n    // A map of __op string to decoder function.\\n    _opDecoderMap: {},\\n\\n    /**\\n     * Registers a function to convert a json object with an __op field into an\\n     * instance of a subclass of Parse.Op.\\n     */\\n    _registerDecoder: function(opName, decoder) {\\n      Parse.Op._opDecoderMap[opName] = decoder;\\n    },\\n\\n    /**\\n     * Converts a json object into an instance of a subclass of Parse.Op.\\n     */\\n    _decode: function(json) {\\n      var decoder = Parse.Op._opDecoderMap[json.__op];\\n      if (decoder) {\\n        return decoder(json);\\n      } else {\\n        return undefined;\\n      }\\n    }\\n  });\\n\\n  /*\\n   * Add a handler for Batch ops.\\n   */\\n  Parse.Op._registerDecoder(\\\"Batch\\\", function(json) {\\n    var op = null;\\n    Parse._arrayEach(json.ops, function(nextOp) {\\n      nextOp = Parse.Op._decode(nextOp);\\n      op = nextOp._mergeWithPrevious(op);\\n    });\\n    return op;\\n  });\\n\\n  /**\\n   * @class\\n   * A Set operation indicates that either the field was changed using\\n   * Parse.Object.set, or it is a mutable container that was detected as being\\n   * changed.\\n   */\\n  Parse.Op.Set = Parse.Op._extend(/** @lends Parse.Op.Set.prototype */ {\\n    _initialize: function(value) {\\n      this._value = value;\\n    },\\n\\n    /**\\n     * Returns the new value of this field after the set.\\n     */\\n    value: function() {\\n      return this._value;\\n    },\\n\\n    /**\\n     * Returns a JSON version of the operation suitable for sending to Parse.\\n     * @return {Object}\\n     */\\n    toJSON: function() {\\n      return Parse._encode(this.value());\\n    },\\n\\n    _mergeWithPrevious: function(previous) {\\n      return this;\\n    },\\n\\n    _estimate: function(oldValue) {\\n      return this.value();\\n    }\\n  });\\n\\n  /**\\n   * A sentinel value that is returned by Parse.Op.Unset._estimate to\\n   * indicate the field should be deleted. Basically, if you find _UNSET as a\\n   * value in your object, you should remove that key.\\n   */\\n  Parse.Op._UNSET = {};\\n\\n  /**\\n   * @class\\n   * An Unset operation indicates that this field has been deleted from the\\n   * object.\\n   */\\n  Parse.Op.Unset = Parse.Op._extend(/** @lends Parse.Op.Unset.prototype */ {\\n    /**\\n     * Returns a JSON version of the operation suitable for sending to Parse.\\n     * @return {Object}\\n     */\\n    toJSON: function() {\\n      return { __op: \\\"Delete\\\" };\\n    },\\n\\n    _mergeWithPrevious: function(previous) {\\n      return this;\\n    },\\n\\n    _estimate: function(oldValue) {\\n      return Parse.Op._UNSET;\\n    }\\n  });\\n\\n  Parse.Op._registerDecoder(\\\"Delete\\\", function(json) {\\n    return new Parse.Op.Unset();\\n  });\\n\\n  /**\\n   * @class\\n   * An Increment is an atomic operation where the numeric value for the field\\n   * will be increased by a given amount.\\n   */\\n  Parse.Op.Increment = Parse.Op._extend(\\n      /** @lends Parse.Op.Increment.prototype */ {\\n\\n    _initialize: function(amount) {\\n      this._amount = amount;\\n    },\\n\\n    /**\\n     * Returns the amount to increment by.\\n     * @return {Number} the amount to increment by.\\n     */\\n    amount: function() {\\n      return this._amount;\\n    },\\n\\n    /**\\n     * Returns a JSON version of the operation suitable for sending to Parse.\\n     * @return {Object}\\n     */\\n    toJSON: function() {\\n      return { __op: \\\"Increment\\\", amount: this._amount };\\n    },\\n\\n    _mergeWithPrevious: function(previous) {\\n      if (!previous) {\\n        return this;\\n      } else if (previous instanceof Parse.Op.Unset) {\\n        return new Parse.Op.Set(this.amount());\\n      } else if (previous instanceof Parse.Op.Set) {\\n        return new Parse.Op.Set(previous.value() + this.amount());\\n      } else if (previous instanceof Parse.Op.Increment) {\\n        return new Parse.Op.Increment(this.amount() + previous.amount());\\n      } else {\\n        throw \\\"Op is invalid after previous op.\\\";\\n      }\\n    },\\n\\n    _estimate: function(oldValue) {\\n      if (!oldValue) {\\n        return this.amount();\\n      }\\n      return oldValue + this.amount();\\n    }\\n  });\\n\\n  Parse.Op._registerDecoder(\\\"Increment\\\", function(json) {\\n    return new Parse.Op.Increment(json.amount);\\n  });\\n\\n  /**\\n   * @class\\n   * Add is an atomic operation where the given objects will be appended to the\\n   * array that is stored in this field.\\n   */\\n  Parse.Op.Add = Parse.Op._extend(/** @lends Parse.Op.Add.prototype */ {\\n    _initialize: function(objects) {\\n      this._objects = objects;\\n    },\\n\\n    /**\\n     * Returns the objects to be added to the array.\\n     * @return {Array} The objects to be added to the array.\\n     */\\n    objects: function() {\\n      return this._objects;\\n    },\\n\\n    /**\\n     * Returns a JSON version of the operation suitable for sending to Parse.\\n     * @return {Object}\\n     */\\n    toJSON: function() {\\n      return { __op: \\\"Add\\\", objects: Parse._encode(this.objects()) };\\n    },\\n\\n    _mergeWithPrevious: function(previous) {\\n      if (!previous) {\\n        return this;\\n      } else if (previous instanceof Parse.Op.Unset) {\\n        return new Parse.Op.Set(this.objects());\\n      } else if (previous instanceof Parse.Op.Set) {\\n        return new Parse.Op.Set(this._estimate(previous.value()));\\n      } else if (previous instanceof Parse.Op.Add) {\\n        return new Parse.Op.Add(previous.objects().concat(this.objects()));\\n      } else {\\n        throw \\\"Op is invalid after previous op.\\\";\\n      }\\n    },\\n\\n    _estimate: function(oldValue) {\\n      if (!oldValue) {\\n        return _.clone(this.objects());\\n      } else {\\n        return oldValue.concat(this.objects());\\n      }\\n    }\\n  });\\n\\n  Parse.Op._registerDecoder(\\\"Add\\\", function(json) {\\n    return new Parse.Op.Add(Parse._decode(undefined, json.objects));\\n  });\\n\\n  /**\\n   * @class\\n   * AddUnique is an atomic operation where the given items will be appended to\\n   * the array that is stored in this field only if they were not already\\n   * present in the array.\\n   */\\n  Parse.Op.AddUnique = Parse.Op._extend(\\n      /** @lends Parse.Op.AddUnique.prototype */ {\\n\\n    _initialize: function(objects) {\\n      this._objects = _.uniq(objects);\\n    },\\n\\n    /**\\n     * Returns the objects to be added to the array.\\n     * @return {Array} The objects to be added to the array.\\n     */\\n    objects: function() {\\n      return this._objects;\\n    },\\n\\n    /**\\n     * Returns a JSON version of the operation suitable for sending to Parse.\\n     * @return {Object}\\n     */\\n    toJSON: function() {\\n      return { __op: \\\"AddUnique\\\", objects: Parse._encode(this.objects()) };\\n    },\\n\\n    _mergeWithPrevious: function(previous) {\\n      if (!previous) {\\n        return this;\\n      } else if (previous instanceof Parse.Op.Unset) {\\n        return new Parse.Op.Set(this.objects());\\n      } else if (previous instanceof Parse.Op.Set) {\\n        return new Parse.Op.Set(this._estimate(previous.value()));\\n      } else if (previous instanceof Parse.Op.AddUnique) {\\n        return new Parse.Op.AddUnique(this._estimate(previous.objects()));\\n      } else {\\n        throw \\\"Op is invalid after previous op.\\\";\\n      }\\n    },\\n\\n    _estimate: function(oldValue) {\\n      if (!oldValue) {\\n        return _.clone(this.objects());\\n      } else {\\n        // We can't just take the _.uniq(_.union(...)) of oldValue and\\n        // this.objects, because the uniqueness may not apply to oldValue\\n        // (especially if the oldValue was set via .set())\\n        var newValue = _.clone(oldValue);\\n        Parse._arrayEach(this.objects(), function(obj) {\\n          if (obj instanceof Parse.Object && obj.id) {\\n            var matchingObj = _.find(newValue, function(anObj) {\\n              return (anObj instanceof Parse.Object) && (anObj.id === obj.id);\\n            });\\n            if (!matchingObj) {\\n              newValue.push(obj);\\n            } else {\\n              var index = _.indexOf(newValue, matchingObj);\\n              newValue[index] = obj;\\n            }\\n          } else if (!_.contains(newValue, obj)) {\\n            newValue.push(obj);\\n          }\\n        });\\n        return newValue;\\n      }\\n    }\\n  });\\n\\n  Parse.Op._registerDecoder(\\\"AddUnique\\\", function(json) {\\n    return new Parse.Op.AddUnique(Parse._decode(undefined, json.objects));\\n  });\\n\\n  /**\\n   * @class\\n   * Remove is an atomic operation where the given objects will be removed from\\n   * the array that is stored in this field.\\n   */\\n  Parse.Op.Remove = Parse.Op._extend(/** @lends Parse.Op.Remove.prototype */ {\\n    _initialize: function(objects) {\\n      this._objects = _.uniq(objects);\\n    },\\n\\n    /**\\n     * Returns the objects to be removed from the array.\\n     * @return {Array} The objects to be removed from the array.\\n     */\\n    objects: function() {\\n      return this._objects;\\n    },\\n\\n    /**\\n     * Returns a JSON version of the operation suitable for sending to Parse.\\n     * @return {Object}\\n     */\\n    toJSON: function() {\\n      return { __op: \\\"Remove\\\", objects: Parse._encode(this.objects()) };\\n    },\\n\\n    _mergeWithPrevious: function(previous) {\\n      if (!previous) {\\n        return this;\\n      } else if (previous instanceof Parse.Op.Unset) {\\n        return previous;\\n      } else if (previous instanceof Parse.Op.Set) {\\n        return new Parse.Op.Set(this._estimate(previous.value()));\\n      } else if (previous instanceof Parse.Op.Remove) {\\n        return new Parse.Op.Remove(_.union(previous.objects(), this.objects()));\\n      } else {\\n        throw \\\"Op is invalid after previous op.\\\";\\n      }\\n    },\\n\\n    _estimate: function(oldValue) {\\n      if (!oldValue) {\\n        return [];\\n      } else {\\n        var newValue = _.difference(oldValue, this.objects());\\n        // If there are saved Parse Objects being removed, also remove them.\\n        Parse._arrayEach(this.objects(), function(obj) {\\n          if (obj instanceof Parse.Object && obj.id) {\\n            newValue = _.reject(newValue, function(other) {\\n              return (other instanceof Parse.Object) && (other.id === obj.id);\\n            });\\n          }\\n        });\\n        return newValue;\\n      }\\n    }\\n  });\\n\\n  Parse.Op._registerDecoder(\\\"Remove\\\", function(json) {\\n    return new Parse.Op.Remove(Parse._decode(undefined, json.objects));\\n  });\\n\\n  /**\\n   * @class\\n   * A Relation operation indicates that the field is an instance of\\n   * Parse.Relation, and objects are being added to, or removed from, that\\n   * relation.\\n   */\\n  Parse.Op.Relation = Parse.Op._extend(\\n      /** @lends Parse.Op.Relation.prototype */ {\\n\\n    _initialize: function(adds, removes) {\\n      this._targetClassName = null;\\n\\n      var self = this;\\n\\n      var pointerToId = function(object) {\\n        if (object instanceof Parse.Object) {\\n          if (!object.id) {\\n            throw \\\"You can't add an unsaved Parse.Object to a relation.\\\";\\n          }\\n          if (!self._targetClassName) {\\n            self._targetClassName = object.className;\\n          }\\n          if (self._targetClassName !== object.className) {\\n            throw \\\"Tried to create a Parse.Relation with 2 different types: \\\" +\\n                  self._targetClassName + \\\" and \\\" + object.className + \\\".\\\";\\n          }\\n          return object.id;\\n        }\\n        return object;\\n      };\\n\\n      this.relationsToAdd = _.uniq(_.map(adds, pointerToId));\\n      this.relationsToRemove = _.uniq(_.map(removes, pointerToId));\\n    },\\n\\n    /**\\n     * Returns an array of unfetched Parse.Object that are being added to the\\n     * relation.\\n     * @return {Array}\\n     */\\n    added: function() {\\n      var self = this;\\n      return _.map(this.relationsToAdd, function(objectId) {\\n        var object = Parse.Object._create(self._targetClassName);\\n        object.id = objectId;\\n        return object;\\n      });\\n    },\\n\\n    /**\\n     * Returns an array of unfetched Parse.Object that are being removed from\\n     * the relation.\\n     * @return {Array}\\n     */\\n    removed: function() {\\n      var self = this;\\n      return _.map(this.relationsToRemove, function(objectId) {\\n        var object = Parse.Object._create(self._targetClassName);\\n        object.id = objectId;\\n        return object;\\n      });\\n    },\\n\\n    /**\\n     * Returns a JSON version of the operation suitable for sending to Parse.\\n     * @return {Object}\\n     */\\n    toJSON: function() {\\n      var adds = null;\\n      var removes = null;\\n      var self = this;\\n      var idToPointer = function(id) {\\n        return { __type: 'Pointer',\\n                 className: self._targetClassName,\\n                 objectId: id };\\n      };\\n      var pointers = null;\\n      if (this.relationsToAdd.length > 0) {\\n        pointers = _.map(this.relationsToAdd, idToPointer);\\n        adds = { \\\"__op\\\": \\\"AddRelation\\\", \\\"objects\\\": pointers };\\n      }\\n\\n      if (this.relationsToRemove.length > 0) {\\n        pointers = _.map(this.relationsToRemove, idToPointer);\\n        removes = { \\\"__op\\\": \\\"RemoveRelation\\\", \\\"objects\\\": pointers };\\n      }\\n\\n      if (adds && removes) {\\n        return { \\\"__op\\\": \\\"Batch\\\", \\\"ops\\\": [adds, removes]};\\n      }\\n\\n      return adds || removes || {};\\n    },\\n\\n    _mergeWithPrevious: function(previous) {\\n      if (!previous) {\\n        return this;\\n      } else if (previous instanceof Parse.Op.Unset) {\\n        throw \\\"You can't modify a relation after deleting it.\\\";\\n      } else if (previous instanceof Parse.Op.Relation) {\\n        if (previous._targetClassName &&\\n            previous._targetClassName !== this._targetClassName) {\\n          throw \\\"Related object must be of class \\\" + previous._targetClassName +\\n              \\\", but \\\" + this._targetClassName + \\\" was passed in.\\\";\\n        }\\n        var newAdd = _.union(_.difference(previous.relationsToAdd,\\n                                          this.relationsToRemove),\\n                             this.relationsToAdd);\\n        var newRemove = _.union(_.difference(previous.relationsToRemove,\\n                                             this.relationsToAdd),\\n                                this.relationsToRemove);\\n\\n        var newRelation = new Parse.Op.Relation(newAdd, newRemove);\\n        newRelation._targetClassName = this._targetClassName;\\n        return newRelation;\\n      } else {\\n        throw \\\"Op is invalid after previous op.\\\";\\n      }\\n    },\\n\\n    _estimate: function(oldValue, object, key) {\\n      if (!oldValue) {\\n        var relation = new Parse.Relation(object, key);\\n        relation.targetClassName = this._targetClassName;\\n      } else if (oldValue instanceof Parse.Relation) {\\n        if (this._targetClassName) {\\n          if (oldValue.targetClassName) {\\n            if (oldValue.targetClassName !== this._targetClassName) {\\n              throw \\\"Related object must be a \\\" + oldValue.targetClassName +\\n                  \\\", but a \\\" + this._targetClassName + \\\" was passed in.\\\";\\n            }\\n          } else {\\n            oldValue.targetClassName = this._targetClassName;\\n          }\\n        }\\n        return oldValue;\\n      } else {\\n        throw \\\"Op is invalid after previous op.\\\";\\n      }\\n    }\\n  });\\n\\n  Parse.Op._registerDecoder(\\\"AddRelation\\\", function(json) {\\n    return new Parse.Op.Relation(Parse._decode(undefined, json.objects), []);\\n  });\\n  Parse.Op._registerDecoder(\\\"RemoveRelation\\\", function(json) {\\n    return new Parse.Op.Relation([], Parse._decode(undefined, json.objects));\\n  });\\n\\n}(this));\\n\\n(function(root) {\\n  root.Parse = root.Parse || {};\\n  var Parse = root.Parse;\\n  var _ = Parse._;\\n\\n  /**\\n   * Creates a new Relation for the given parent object and key. This\\n   * constructor should rarely be used directly, but rather created by\\n   * Parse.Object.relation.\\n   * @param {Parse.Object} parent The parent of this relation.\\n   * @param {String} key The key for this relation on the parent.\\n   * @see Parse.Object#relation\\n   * @class\\n   *\\n   * <p>\\n   * A class that is used to access all of the children of a many-to-many\\n   * relationship.  Each instance of Parse.Relation is associated with a\\n   * particular parent object and key.\\n   * </p>\\n   */\\n  Parse.Relation = function(parent, key) {\\n    this.parent = parent;\\n    this.key = key;\\n    this.targetClassName = null;\\n  };\\n\\n  Parse.Relation.prototype = {\\n    /**\\n     * Makes sure that this relation has the right parent and key.\\n     */\\n    _ensureParentAndKey: function(parent, key) {\\n      this.parent = this.parent || parent;\\n      this.key = this.key || key;\\n      if (this.parent !== parent) {\\n        throw \\\"Internal Error. Relation retrieved from two different Objects.\\\";\\n      }\\n      if (this.key !== key) {\\n        throw \\\"Internal Error. Relation retrieved from two different keys.\\\";\\n      }\\n    },\\n\\n    /**\\n     * Adds a Parse.Object or an array of Parse.Objects to the relation.\\n     * @param {} objects The item or items to add.\\n     */\\n    add: function(objects) {\\n      if (!_.isArray(objects)) {\\n        objects = [objects];\\n      }\\n\\n      var change = new Parse.Op.Relation(objects, []);\\n      this.parent.set(this.key, change);\\n      this.targetClassName = change._targetClassName;\\n    },\\n\\n    /**\\n     * Removes a Parse.Object or an array of Parse.Objects from this relation.\\n     * @param {} objects The item or items to remove.\\n     */\\n    remove: function(objects) {\\n      if (!_.isArray(objects)) {\\n        objects = [objects];\\n      }\\n\\n      var change = new Parse.Op.Relation([], objects);\\n      this.parent.set(this.key, change);\\n      this.targetClassName = change._targetClassName;\\n    },\\n\\n    /**\\n     * Returns a JSON version of the object suitable for saving to disk.\\n     * @return {Object}\\n     */\\n    toJSON: function() {\\n      return { \\\"__type\\\": \\\"Relation\\\", \\\"className\\\": this.targetClassName };\\n    },\\n\\n    /**\\n     * Returns a Parse.Query that is limited to objects in this\\n     * relation.\\n     * @return {Parse.Query}\\n     */\\n    query: function() {\\n      var targetClass;\\n      var query;\\n      if (!this.targetClassName) {\\n        targetClass = Parse.Object._getSubclass(this.parent.className);\\n        query = new Parse.Query(targetClass);\\n        query._extraOptions.redirectClassNameForKey = this.key;\\n      } else {\\n        targetClass = Parse.Object._getSubclass(this.targetClassName);\\n        query = new Parse.Query(targetClass);\\n      }\\n      query._addCondition(\\\"$relatedTo\\\", \\\"object\\\", this.parent._toPointer());\\n      query._addCondition(\\\"$relatedTo\\\", \\\"key\\\", this.key);\\n\\n      return query;\\n    }\\n  };\\n}(this));\\n\\n(function(root) {\\n  root.Parse = root.Parse || {};\\n  var Parse = root.Parse;\\n  var _ = Parse._;\\n\\n  /**\\n   * A Promise is returned by async methods as a hook to provide callbacks to be\\n   * called when the async task is fulfilled.\\n   *\\n   * <p>Typical usage would be like:<pre>\\n   *    query.find().then(function(results) {\\n   *      results[0].set(\\\"foo\\\", \\\"bar\\\");\\n   *      return results[0].saveAsync();\\n   *    }).then(function(result) {\\n   *      console.log(\\\"Updated \\\" + result.id);\\n   *    });\\n   * </pre></p>\\n   *\\n   * @see Parse.Promise.prototype.then\\n   * @class\\n   */\\n  Parse.Promise = function() {\\n    this._resolved = false;\\n    this._rejected = false;\\n    this._resolvedCallbacks = [];\\n    this._rejectedCallbacks = [];\\n  };\\n\\n  _.extend(Parse.Promise, /** @lends Parse.Promise */ {\\n\\n    /**\\n     * Returns true iff the given object fulfils the Promise interface.\\n     * @return {Boolean}\\n     */\\n    is: function(promise) {\\n      return promise && promise.then && _.isFunction(promise.then);\\n    },\\n\\n    /**\\n     * Returns a new promise that is resolved with a given value.\\n     * @return {Parse.Promise} the new promise.\\n     */\\n    as: function() {\\n      var promise = new Parse.Promise();\\n      promise.resolve.apply(promise, arguments);\\n      return promise;\\n    },\\n\\n    /**\\n     * Returns a new promise that is rejected with a given error.\\n     * @return {Parse.Promise} the new promise.\\n     */\\n    error: function() {\\n      var promise = new Parse.Promise();\\n      promise.reject.apply(promise, arguments);\\n      return promise;\\n    },\\n\\n    /**\\n     * Returns a new promise that is fulfilled when all of the input promises\\n     * are resolved. If any promise in the list fails, then the returned promise\\n     * will fail with the last error. If they all succeed, then the returned\\n     * promise will succeed, with the results being the results of all the input\\n     * promises. For example: <pre>\\n     *   var p1 = Parse.Promise.as(1);\\n     *   var p2 = Parse.Promise.as(2);\\n     *   var p3 = Parse.Promise.as(3);\\n     *\\n     *   Parse.Promise.when(p1, p2, p3).then(function(r1, r2, r3) {\\n     *     console.log(r1);  // prints 1\\n     *     console.log(r2);  // prints 2\\n     *     console.log(r3);  // prints 3\\n     *   });</pre>\\n     *\\n     * The input promises can also be specified as an array: <pre>\\n     *   var promises = [p1, p2, p3];\\n     *   Parse.Promise.when(promises).then(function(r1, r2, r3) {\\n     *     console.log(r1);  // prints 1\\n     *     console.log(r2);  // prints 2\\n     *     console.log(r3);  // prints 3\\n     *   });\\n     * </pre>\\n     * @param {Array} promises a list of promises to wait for.\\n     * @return {Parse.Promise} the new promise.\\n     */\\n    when: function(promises) {\\n      // Allow passing in Promises as separate arguments instead of an Array.\\n      var objects;\\n      if (promises && Parse._isNullOrUndefined(promises.length)) {\\n        objects = arguments;\\n      } else {\\n        objects = promises;\\n      }\\n\\n      var total = objects.length;\\n      var hadError = false;\\n      var results = [];\\n      var errors = [];\\n      results.length = objects.length;\\n      errors.length = objects.length;\\n\\n      if (total === 0) {\\n        return Parse.Promise.as.apply(this, results);\\n      }\\n\\n      var promise = new Parse.Promise();\\n\\n      var resolveOne = function() {\\n        total = total - 1;\\n        if (total === 0) {\\n          if (hadError) {\\n            promise.reject(errors);\\n          } else {\\n            promise.resolve.apply(promise, results);\\n          }\\n        }\\n      };\\n\\n      Parse._arrayEach(objects, function(object, i) {\\n        if (Parse.Promise.is(object)) {\\n          object.then(function(result) {\\n            results[i] = result;\\n            resolveOne();\\n          }, function(error) {\\n            errors[i] = error;\\n            hadError = true;\\n            resolveOne();\\n          });\\n        } else {\\n          results[i] = object;\\n          resolveOne();\\n        }\\n      });\\n\\n      return promise;\\n    },\\n\\n    /**\\n     * Runs the given asyncFunction repeatedly, as long as the predicate\\n     * function returns a truthy value. Stops repeating if asyncFunction returns\\n     * a rejected promise.\\n     * @param {Function} predicate should return false when ready to stop.\\n     * @param {Function} asyncFunction should return a Promise.\\n     */\\n    _continueWhile: function(predicate, asyncFunction) {\\n      if (predicate()) {\\n        return asyncFunction().then(function() {\\n          return Parse.Promise._continueWhile(predicate, asyncFunction);\\n        });\\n      }\\n      return Parse.Promise.as();\\n    }\\n  });\\n\\n  _.extend(Parse.Promise.prototype, /** @lends Parse.Promise.prototype */ {\\n\\n    /**\\n     * Marks this promise as fulfilled, firing any callbacks waiting on it.\\n     * @param {Object} result the result to pass to the callbacks.\\n     */\\n    resolve: function(result) {\\n      if (this._resolved || this._rejected) {\\n        throw \\\"A promise was resolved even though it had already been \\\" +\\n          (this._resolved ? \\\"resolved\\\" : \\\"rejected\\\") + \\\".\\\";\\n      }\\n      this._resolved = true;\\n      this._result = arguments;\\n      var results = arguments;\\n      Parse._arrayEach(this._resolvedCallbacks, function(resolvedCallback) {\\n        resolvedCallback.apply(this, results);\\n      });\\n      this._resolvedCallbacks = [];\\n      this._rejectedCallbacks = [];\\n    },\\n\\n    /**\\n     * Marks this promise as fulfilled, firing any callbacks waiting on it.\\n     * @param {Object} error the error to pass to the callbacks.\\n     */\\n    reject: function(error) {\\n      if (this._resolved || this._rejected) {\\n        throw \\\"A promise was rejected even though it had already been \\\" +\\n          (this._resolved ? \\\"resolved\\\" : \\\"rejected\\\") + \\\".\\\";\\n      }\\n      this._rejected = true;\\n      this._error = error;\\n      Parse._arrayEach(this._rejectedCallbacks, function(rejectedCallback) {\\n        rejectedCallback(error);\\n      });\\n      this._resolvedCallbacks = [];\\n      this._rejectedCallbacks = [];\\n    },\\n\\n    /**\\n     * Adds callbacks to be called when this promise is fulfilled. Returns a new\\n     * Promise that will be fulfilled when the callback is complete. It allows\\n     * chaining. If the callback itself returns a Promise, then the one returned\\n     * by \\\"then\\\" will not be fulfilled until that one returned by the callback\\n     * is fulfilled.\\n     * @param {Function} resolvedCallback Function that is called when this\\n     * Promise is resolved. Once the callback is complete, then the Promise\\n     * returned by \\\"then\\\" will also be fulfilled.\\n     * @param {Function} rejectedCallback Function that is called when this\\n     * Promise is rejected with an error. Once the callback is complete, then\\n     * the promise returned by \\\"then\\\" with be resolved successfully. If\\n     * rejectedCallback is null, or it returns a rejected Promise, then the\\n     * Promise returned by \\\"then\\\" will be rejected with that error.\\n     * @return {Parse.Promise} A new Promise that will be fulfilled after this\\n     * Promise is fulfilled and either callback has completed. If the callback\\n     * returned a Promise, then this Promise will not be fulfilled until that\\n     * one is.\\n     */\\n    then: function(resolvedCallback, rejectedCallback) {\\n      var promise = new Parse.Promise();\\n\\n      var wrappedResolvedCallback = function() {\\n        var result = arguments;\\n        if (resolvedCallback) {\\n          result = [resolvedCallback.apply(this, result)];\\n        }\\n        if (result.length === 1 && Parse.Promise.is(result[0])) {\\n          result[0].then(function() {\\n            promise.resolve.apply(promise, arguments);\\n          }, function(error) {\\n            promise.reject(error);\\n          });\\n        } else {\\n          promise.resolve.apply(promise, result);\\n        }\\n      };\\n\\n      var wrappedRejectedCallback = function(error) {\\n        var result = [];\\n        if (rejectedCallback) {\\n          result = [rejectedCallback(error)];\\n          if (result.length === 1 && Parse.Promise.is(result[0])) {\\n            result[0].then(function() {\\n              promise.resolve.apply(promise, arguments);\\n            }, function(error) {\\n              promise.reject(error);\\n            });\\n          } else {\\n            // A Promises/A+ compliant implementation would call:\\n            // promise.resolve.apply(promise, result);\\n            promise.reject(result[0]);\\n          }\\n        } else {\\n          promise.reject(error);\\n        }\\n      };\\n\\n      if (this._resolved) {\\n        wrappedResolvedCallback.apply(this, this._result);\\n      } else if (this._rejected) {\\n        wrappedRejectedCallback(this._error);\\n      } else {\\n        this._resolvedCallbacks.push(wrappedResolvedCallback);\\n        this._rejectedCallbacks.push(wrappedRejectedCallback);\\n      }\\n\\n      return promise;\\n    },\\n\\n    /**\\n     * Add handlers to be called when the promise\\n     * is either resolved or rejected\\n     */\\n    always: function(callback) {\\n      return this.then(callback, callback);\\n    },\\n\\n    /**\\n     * Add handlers to be called when the Promise object is resolved\\n     */\\n    done: function(callback) {\\n      return this.then(callback);\\n    },\\n\\n    /**\\n     * Add handlers to be called when the Promise object is rejected\\n     */\\n    fail: function(callback) {\\n      return this.then(null, callback);\\n    },\\n\\n    /**\\n     * Run the given callbacks after this promise is fulfilled.\\n     * @param optionsOrCallback {} A Backbone-style options callback, or a\\n     * callback function. If this is an options object and contains a \\\"model\\\"\\n     * attributes, that will be passed to error callbacks as the first argument.\\n     * @param model {} If truthy, this will be passed as the first result of\\n     * error callbacks. This is for Backbone-compatability.\\n     * @return {Parse.Promise} A promise that will be resolved after the\\n     * callbacks are run, with the same result as this.\\n     */\\n    _thenRunCallbacks: function(optionsOrCallback, model) {\\n      var options;\\n      if (_.isFunction(optionsOrCallback)) {\\n        var callback = optionsOrCallback;\\n        options = {\\n          success: function(result) {\\n            callback(result, null);\\n          },\\n          error: function(error) {\\n            callback(null, error);\\n          }\\n        };\\n      } else {\\n        options = _.clone(optionsOrCallback);\\n      }\\n      options = options || {};\\n\\n      return this.then(function(result) {\\n        if (options.success) {\\n          options.success.apply(this, arguments);\\n        } else if (model) {\\n          // When there's no callback, a sync event should be triggered.\\n          model.trigger('sync', model, result, options);\\n        }\\n        return Parse.Promise.as.apply(Parse.Promise, arguments);\\n      }, function(error) {\\n        if (options.error) {\\n          if (!_.isUndefined(model)) {\\n            options.error(model, error);\\n          } else {\\n            options.error(error);\\n          }\\n        } else if (model) {\\n          // When there's no error callback, an error event should be triggered.\\n          model.trigger('error', model, error, options);\\n        }\\n        // By explicitly returning a rejected Promise, this will work with\\n        // either jQuery or Promises/A semantics.\\n        return Parse.Promise.error(error);\\n      });\\n    },\\n\\n    /**\\n     * Adds a callback function that should be called regardless of whether\\n     * this promise failed or succeeded. The callback will be given either the\\n     * array of results for its first argument, or the error as its second,\\n     * depending on whether this Promise was rejected or resolved. Returns a\\n     * new Promise, like \\\"then\\\" would.\\n     * @param {Function} continuation the callback.\\n     */\\n    _continueWith: function(continuation) {\\n      return this.then(function() {\\n        return continuation(arguments, null);\\n      }, function(error) {\\n        return continuation(null, error);\\n      });\\n    }\\n\\n  });\\n\\n}(this));\\n\\n/*jshint bitwise:false *//*global FileReader: true, File: true */\\n(function(root) {\\n  root.Parse = root.Parse || {};\\n  var Parse = root.Parse;\\n  var _ = Parse._;\\n\\n  var b64Digit = function(number) {\\n    if (number < 26) {\\n      return String.fromCharCode(65 + number);\\n    }\\n    if (number < 52) {\\n      return String.fromCharCode(97 + (number - 26));\\n    }\\n    if (number < 62) {\\n      return String.fromCharCode(48 + (number - 52));\\n    }\\n    if (number === 62) {\\n      return \\\"+\\\";\\n    }\\n    if (number === 63) {\\n      return \\\"/\\\";\\n    }\\n    throw \\\"Tried to encode large digit \\\" + number + \\\" in base64.\\\";\\n  };\\n\\n  var encodeBase64 = function(array) {\\n    var chunks = [];\\n    chunks.length = Math.ceil(array.length / 3);\\n    _.times(chunks.length, function(i) {\\n      var b1 = array[i * 3];\\n      var b2 = array[i * 3 + 1] || 0;\\n      var b3 = array[i * 3 + 2] || 0;\\n\\n      var has2 = (i * 3 + 1) < array.length;\\n      var has3 = (i * 3 + 2) < array.length;\\n\\n      chunks[i] = [\\n        b64Digit((b1 >> 2) & 0x3F),\\n        b64Digit(((b1 << 4) & 0x30) | ((b2 >> 4) & 0x0F)),\\n        has2 ? b64Digit(((b2 << 2) & 0x3C) | ((b3 >> 6) & 0x03)) : \\\"=\\\",\\n        has3 ? b64Digit(b3 & 0x3F) : \\\"=\\\"\\n      ].join(\\\"\\\");\\n    });\\n    return chunks.join(\\\"\\\");\\n  };\\n\\n\\n  // A list of file extensions to mime types as found here:\\n  // http://stackoverflow.com/questions/58510/using-net-how-can-you-find-the-\\n  //     mime-type-of-a-file-based-on-the-file-signature\\n  var mimeTypes = {\\n    ai: \\\"application/postscript\\\",\\n    aif: \\\"audio/x-aiff\\\",\\n    aifc: \\\"audio/x-aiff\\\",\\n    aiff: \\\"audio/x-aiff\\\",\\n    asc: \\\"text/plain\\\",\\n    atom: \\\"application/atom+xml\\\",\\n    au: \\\"audio/basic\\\",\\n    avi: \\\"video/x-msvideo\\\",\\n    bcpio: \\\"application/x-bcpio\\\",\\n    bin: \\\"application/octet-stream\\\",\\n    bmp: \\\"image/bmp\\\",\\n    cdf: \\\"application/x-netcdf\\\",\\n    cgm: \\\"image/cgm\\\",\\n    \\\"class\\\": \\\"application/octet-stream\\\",\\n    cpio: \\\"application/x-cpio\\\",\\n    cpt: \\\"application/mac-compactpro\\\",\\n    csh: \\\"application/x-csh\\\",\\n    css: \\\"text/css\\\",\\n    dcr: \\\"application/x-director\\\",\\n    dif: \\\"video/x-dv\\\",\\n    dir: \\\"application/x-director\\\",\\n    djv: \\\"image/vnd.djvu\\\",\\n    djvu: \\\"image/vnd.djvu\\\",\\n    dll: \\\"application/octet-stream\\\",\\n    dmg: \\\"application/octet-stream\\\",\\n    dms: \\\"application/octet-stream\\\",\\n    doc: \\\"application/msword\\\",\\n    docx: \\\"application/vnd.openxmlformats-officedocument.wordprocessingml.\\\" +\\n          \\\"document\\\",\\n    dotx: \\\"application/vnd.openxmlformats-officedocument.wordprocessingml.\\\" +\\n          \\\"template\\\",\\n    docm: \\\"application/vnd.ms-word.document.macroEnabled.12\\\",\\n    dotm: \\\"application/vnd.ms-word.template.macroEnabled.12\\\",\\n    dtd: \\\"application/xml-dtd\\\",\\n    dv: \\\"video/x-dv\\\",\\n    dvi: \\\"application/x-dvi\\\",\\n    dxr: \\\"application/x-director\\\",\\n    eps: \\\"application/postscript\\\",\\n    etx: \\\"text/x-setext\\\",\\n    exe: \\\"application/octet-stream\\\",\\n    ez: \\\"application/andrew-inset\\\",\\n    gif: \\\"image/gif\\\",\\n    gram: \\\"application/srgs\\\",\\n    grxml: \\\"application/srgs+xml\\\",\\n    gtar: \\\"application/x-gtar\\\",\\n    hdf: \\\"application/x-hdf\\\",\\n    hqx: \\\"application/mac-binhex40\\\",\\n    htm: \\\"text/html\\\",\\n    html: \\\"text/html\\\",\\n    ice: \\\"x-conference/x-cooltalk\\\",\\n    ico: \\\"image/x-icon\\\",\\n    ics: \\\"text/calendar\\\",\\n    ief: \\\"image/ief\\\",\\n    ifb: \\\"text/calendar\\\",\\n    iges: \\\"model/iges\\\",\\n    igs: \\\"model/iges\\\",\\n    jnlp: \\\"application/x-java-jnlp-file\\\",\\n    jp2: \\\"image/jp2\\\",\\n    jpe: \\\"image/jpeg\\\",\\n    jpeg: \\\"image/jpeg\\\",\\n    jpg: \\\"image/jpeg\\\",\\n    js: \\\"application/x-javascript\\\",\\n    kar: \\\"audio/midi\\\",\\n    latex: \\\"application/x-latex\\\",\\n    lha: \\\"application/octet-stream\\\",\\n    lzh: \\\"application/octet-stream\\\",\\n    m3u: \\\"audio/x-mpegurl\\\",\\n    m4a: \\\"audio/mp4a-latm\\\",\\n    m4b: \\\"audio/mp4a-latm\\\",\\n    m4p: \\\"audio/mp4a-latm\\\",\\n    m4u: \\\"video/vnd.mpegurl\\\",\\n    m4v: \\\"video/x-m4v\\\",\\n    mac: \\\"image/x-macpaint\\\",\\n    man: \\\"application/x-troff-man\\\",\\n    mathml: \\\"application/mathml+xml\\\",\\n    me: \\\"application/x-troff-me\\\",\\n    mesh: \\\"model/mesh\\\",\\n    mid: \\\"audio/midi\\\",\\n    midi: \\\"audio/midi\\\",\\n    mif: \\\"application/vnd.mif\\\",\\n    mov: \\\"video/quicktime\\\",\\n    movie: \\\"video/x-sgi-movie\\\",\\n    mp2: \\\"audio/mpeg\\\",\\n    mp3: \\\"audio/mpeg\\\",\\n    mp4: \\\"video/mp4\\\",\\n    mpe: \\\"video/mpeg\\\",\\n    mpeg: \\\"video/mpeg\\\",\\n    mpg: \\\"video/mpeg\\\",\\n    mpga: \\\"audio/mpeg\\\",\\n    ms: \\\"application/x-troff-ms\\\",\\n    msh: \\\"model/mesh\\\",\\n    mxu: \\\"video/vnd.mpegurl\\\",\\n    nc: \\\"application/x-netcdf\\\",\\n    oda: \\\"application/oda\\\",\\n    ogg: \\\"application/ogg\\\",\\n    pbm: \\\"image/x-portable-bitmap\\\",\\n    pct: \\\"image/pict\\\",\\n    pdb: \\\"chemical/x-pdb\\\",\\n    pdf: \\\"application/pdf\\\",\\n    pgm: \\\"image/x-portable-graymap\\\",\\n    pgn: \\\"application/x-chess-pgn\\\",\\n    pic: \\\"image/pict\\\",\\n    pict: \\\"image/pict\\\",\\n    png: \\\"image/png\\\",\\n    pnm: \\\"image/x-portable-anymap\\\",\\n    pnt: \\\"image/x-macpaint\\\",\\n    pntg: \\\"image/x-macpaint\\\",\\n    ppm: \\\"image/x-portable-pixmap\\\",\\n    ppt: \\\"application/vnd.ms-powerpoint\\\",\\n    pptx: \\\"application/vnd.openxmlformats-officedocument.presentationml.\\\" +\\n          \\\"presentation\\\",\\n    potx: \\\"application/vnd.openxmlformats-officedocument.presentationml.\\\" +\\n          \\\"template\\\",\\n    ppsx: \\\"application/vnd.openxmlformats-officedocument.presentationml.\\\" +\\n          \\\"slideshow\\\",\\n    ppam: \\\"application/vnd.ms-powerpoint.addin.macroEnabled.12\\\",\\n    pptm: \\\"application/vnd.ms-powerpoint.presentation.macroEnabled.12\\\",\\n    potm: \\\"application/vnd.ms-powerpoint.template.macroEnabled.12\\\",\\n    ppsm: \\\"application/vnd.ms-powerpoint.slideshow.macroEnabled.12\\\",\\n    ps: \\\"application/postscript\\\",\\n    qt: \\\"video/quicktime\\\",\\n    qti: \\\"image/x-quicktime\\\",\\n    qtif: \\\"image/x-quicktime\\\",\\n    ra: \\\"audio/x-pn-realaudio\\\",\\n    ram: \\\"audio/x-pn-realaudio\\\",\\n    ras: \\\"image/x-cmu-raster\\\",\\n    rdf: \\\"application/rdf+xml\\\",\\n    rgb: \\\"image/x-rgb\\\",\\n    rm: \\\"application/vnd.rn-realmedia\\\",\\n    roff: \\\"application/x-troff\\\",\\n    rtf: \\\"text/rtf\\\",\\n    rtx: \\\"text/richtext\\\",\\n    sgm: \\\"text/sgml\\\",\\n    sgml: \\\"text/sgml\\\",\\n    sh: \\\"application/x-sh\\\",\\n    shar: \\\"application/x-shar\\\",\\n    silo: \\\"model/mesh\\\",\\n    sit: \\\"application/x-stuffit\\\",\\n    skd: \\\"application/x-koan\\\",\\n    skm: \\\"application/x-koan\\\",\\n    skp: \\\"application/x-koan\\\",\\n    skt: \\\"application/x-koan\\\",\\n    smi: \\\"application/smil\\\",\\n    smil: \\\"application/smil\\\",\\n    snd: \\\"audio/basic\\\",\\n    so: \\\"application/octet-stream\\\",\\n    spl: \\\"application/x-futuresplash\\\",\\n    src: \\\"application/x-wais-source\\\",\\n    sv4cpio: \\\"application/x-sv4cpio\\\",\\n    sv4crc: \\\"application/x-sv4crc\\\",\\n    svg: \\\"image/svg+xml\\\",\\n    swf: \\\"application/x-shockwave-flash\\\",\\n    t: \\\"application/x-troff\\\",\\n    tar: \\\"application/x-tar\\\",\\n    tcl: \\\"application/x-tcl\\\",\\n    tex: \\\"application/x-tex\\\",\\n    texi: \\\"application/x-texinfo\\\",\\n    texinfo: \\\"application/x-texinfo\\\",\\n    tif: \\\"image/tiff\\\",\\n    tiff: \\\"image/tiff\\\",\\n    tr: \\\"application/x-troff\\\",\\n    tsv: \\\"text/tab-separated-values\\\",\\n    txt: \\\"text/plain\\\",\\n    ustar: \\\"application/x-ustar\\\",\\n    vcd: \\\"application/x-cdlink\\\",\\n    vrml: \\\"model/vrml\\\",\\n    vxml: \\\"application/voicexml+xml\\\",\\n    wav: \\\"audio/x-wav\\\",\\n    wbmp: \\\"image/vnd.wap.wbmp\\\",\\n    wbmxl: \\\"application/vnd.wap.wbxml\\\",\\n    wml: \\\"text/vnd.wap.wml\\\",\\n    wmlc: \\\"application/vnd.wap.wmlc\\\",\\n    wmls: \\\"text/vnd.wap.wmlscript\\\",\\n    wmlsc: \\\"application/vnd.wap.wmlscriptc\\\",\\n    wrl: \\\"model/vrml\\\",\\n    xbm: \\\"image/x-xbitmap\\\",\\n    xht: \\\"application/xhtml+xml\\\",\\n    xhtml: \\\"application/xhtml+xml\\\",\\n    xls: \\\"application/vnd.ms-excel\\\",\\n    xml: \\\"application/xml\\\",\\n    xpm: \\\"image/x-xpixmap\\\",\\n    xsl: \\\"application/xml\\\",\\n    xlsx: \\\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\\\",\\n    xltx: \\\"application/vnd.openxmlformats-officedocument.spreadsheetml.\\\" +\\n          \\\"template\\\",\\n    xlsm: \\\"application/vnd.ms-excel.sheet.macroEnabled.12\\\",\\n    xltm: \\\"application/vnd.ms-excel.template.macroEnabled.12\\\",\\n    xlam: \\\"application/vnd.ms-excel.addin.macroEnabled.12\\\",\\n    xlsb: \\\"application/vnd.ms-excel.sheet.binary.macroEnabled.12\\\",\\n    xslt: \\\"application/xslt+xml\\\",\\n    xul: \\\"application/vnd.mozilla.xul+xml\\\",\\n    xwd: \\\"image/x-xwindowdump\\\",\\n    xyz: \\\"chemical/x-xyz\\\",\\n    zip: \\\"application/zip\\\"\\n  };\\n\\n  /**\\n   * Reads a File using a FileReader.\\n   * @param file {File} the File to read.\\n   * @param type {String} (optional) the mimetype to override with.\\n   * @return {Parse.Promise} A Promise that will be fulfilled with a\\n   *     base64-encoded string of the data and its mime type.\\n   */\\n  var readAsync = function(file, type) {\\n    var promise = new Parse.Promise();\\n\\n    if (typeof(FileReader) === \\\"undefined\\\") {\\n      return Parse.Promise.error(new Parse.Error(\\n          Parse.Error.FILE_READ_ERROR,\\n          \\\"Attempted to use a FileReader on an unsupported browser.\\\"));\\n    }\\n\\n    var reader = new FileReader();\\n    reader.onloadend = function() {\\n      if (reader.readyState !== 2) {\\n        promise.reject(new Parse.Error(\\n            Parse.Error.FILE_READ_ERROR,\\n            \\\"Error reading file.\\\"));\\n        return;\\n      }\\n\\n      var dataURL = reader.result;\\n      var matches = /^data:([^;]*);base64,(.*)$/.exec(dataURL);\\n      if (!matches) {\\n        promise.reject(new Parse.Error(\\n            Parse.ERROR.FILE_READ_ERROR,\\n            \\\"Unable to interpret data URL: \\\" + dataURL));\\n        return;\\n      }\\n\\n      promise.resolve(matches[2], type || matches[1]);\\n    };\\n    reader.readAsDataURL(file);\\n    return promise;\\n  };\\n\\n  /**\\n   * A Parse.File is a local representation of a file that is saved to the Parse\\n   * cloud.\\n   * @class\\n   * @param name {String} The file's name. This will be prefixed by a unique\\n   *     value once the file has finished saving. The file name must begin with\\n   *     an alphanumeric character, and consist of alphanumeric characters,\\n   *     periods, spaces, underscores, or dashes.\\n   * @param data {Array} The data for the file, as either:\\n   *     1. an Array of byte value Numbers, or\\n   *     2. an Object like { base64: \\\"...\\\" } with a base64-encoded String.\\n   *     3. a File object selected with a file upload control. (3) only works\\n   *        in Firefox 3.6+, Safari 6.0.2+, Chrome 7+, and IE 10+.\\n   *        For example:<pre>\\n   * var fileUploadControl = $(\\\"#profilePhotoFileUpload\\\")[0];\\n   * if (fileUploadControl.files.length > 0) {\\n   *   var file = fileUploadControl.files[0];\\n   *   var name = \\\"photo.jpg\\\";\\n   *   var parseFile = new Parse.File(name, file);\\n   *   parseFile.save().then(function() {\\n   *     // The file has been saved to Parse.\\n   *   }, function(error) {\\n   *     // The file either could not be read, or could not be saved to Parse.\\n   *   });\\n   * }</pre>\\n   * @param type {String} Optional Content-Type header to use for the file. If\\n   *     this is omitted, the content type will be inferred from the name's\\n   *     extension.\\n   */\\n  Parse.File = function(name, data, type) {\\n    this._name = name;\\n\\n    // Guess the content type from the extension if we need to.\\n    var extension = /\\\\.([^.]*)$/.exec(name);\\n    if (extension) {\\n      extension = extension[1].toLowerCase();\\n    }\\n    var guessedType = type || mimeTypes[extension] || \\\"text/plain\\\";\\n\\n    if (_.isArray(data)) {\\n      this._source = Parse.Promise.as(encodeBase64(data), guessedType);\\n    } else if (data && data.base64) {\\n      // if it contains data uri, extract based64 and the type out of it.\\n      /*jslint maxlen: 1000*/\\n      var dataUriRegexp = /^data:([a-zA-Z]*\\\\/[a-zA-Z+.-]*);(charset=[a-zA-Z0-9\\\\-\\\\/\\\\s]*,)?base64,(\\\\S+)/;\\n      /*jslint maxlen: 80*/\\n\\n      var matches = dataUriRegexp.exec(data.base64);\\n      if (matches && matches.length > 0) {\\n        // if data URI with charset, there will have 4 matches.\\n        this._source = Parse.Promise.as(\\n          (matches.length === 4 ? matches[3] : matches[2]), matches[1]\\n        );\\n      } else {\\n        this._source = Parse.Promise.as(data.base64, guessedType);\\n      }\\n    } else if (typeof(File) !== \\\"undefined\\\" && data instanceof File) {\\n      this._source = readAsync(data, type);\\n    } else if (_.isString(data)) {\\n      throw \\\"Creating a Parse.File from a String is not yet supported.\\\";\\n    }\\n  };\\n\\n  Parse.File.prototype = {\\n\\n    /**\\n     * Gets the name of the file. Before save is called, this is the filename\\n     * given by the user. After save is called, that name gets prefixed with a\\n     * unique identifier.\\n     */\\n    name: function() {\\n      return this._name;\\n    },\\n\\n    /**\\n     * Gets the url of the file. It is only available after you save the file or\\n     * after you get the file from a Parse.Object.\\n     * @return {String}\\n     */\\n    url: function() {\\n      return this._url;\\n    },\\n\\n    /**\\n     * Saves the file to the Parse cloud.\\n     * @param {Object} options A Backbone-style options object.\\n     * @return {Parse.Promise} Promise that is resolved when the save finishes.\\n     */\\n    save: function(options) {\\n      options= options || {};\\n\\n      var self = this;\\n      if (!self._previousSave) {\\n        self._previousSave = self._source.then(function(base64, type) {\\n          var data = {\\n            base64: base64,\\n            _ContentType: type\\n          };\\n          return Parse._request({\\n            route: \\\"files\\\",\\n            className: self._name,\\n            method: 'POST',\\n            data: data,\\n            useMasterKey: options.useMasterKey\\n          });\\n\\n        }).then(function(response) {\\n          self._name = response.name;\\n          self._url = response.url;\\n          return self;\\n        });\\n      }\\n      return self._previousSave._thenRunCallbacks(options);\\n    }\\n  };\\n\\n}(this));\\n\\n// Parse.Object is analogous to the Java ParseObject.\\n// It also implements the same interface as a Backbone model.\\n\\n(function(root) {\\n  root.Parse = root.Parse || {};\\n  var Parse = root.Parse;\\n  var _ = Parse._;\\n\\n  /**\\n   * Creates a new model with defined attributes. A client id (cid) is\\n   * automatically generated and assigned for you.\\n   *\\n   * <p>You won't normally call this method directly.  It is recommended that\\n   * you use a subclass of <code>Parse.Object</code> instead, created by calling\\n   * <code>extend</code>.</p>\\n   *\\n   * <p>However, if you don't want to use a subclass, or aren't sure which\\n   * subclass is appropriate, you can use this form:<pre>\\n   *     var object = new Parse.Object(\\\"ClassName\\\");\\n   * </pre>\\n   * That is basically equivalent to:<pre>\\n   *     var MyClass = Parse.Object.extend(\\\"ClassName\\\");\\n   *     var object = new MyClass();\\n   * </pre></p>\\n   *\\n   * @param {Object} attributes The initial set of data to store in the object.\\n   * @param {Object} options A set of Backbone-like options for creating the\\n   *     object.  The only option currently supported is \\\"collection\\\".\\n   * @see Parse.Object.extend\\n   *\\n   * @class\\n   *\\n   * <p>The fundamental unit of Parse data, which implements the Backbone Model\\n   * interface.</p>\\n   */\\n  Parse.Object = function(attributes, options) {\\n    // Allow new Parse.Object(\\\"ClassName\\\") as a shortcut to _create.\\n    if (_.isString(attributes)) {\\n      return Parse.Object._create.apply(this, arguments);\\n    }\\n\\n    attributes = attributes || {};\\n    if (options && options.parse) {\\n      attributes = this.parse(attributes);\\n    }\\n    var defaults = Parse._getValue(this, 'defaults');\\n    if (defaults) {\\n      attributes = _.extend({}, defaults, attributes);\\n    }\\n    if (options && options.collection) {\\n      this.collection = options.collection;\\n    }\\n\\n    this._serverData = {};  // The last known data for this object from cloud.\\n    this._opSetQueue = [{}];  // List of sets of changes to the data.\\n    this.attributes = {};  // The best estimate of this's current data.\\n\\n    this._hashedJSON = {};  // Hash of values of containers at last save.\\n    this._escapedAttributes = {};\\n    this.cid = _.uniqueId('c');\\n    this.changed = {};\\n    this._silent = {};\\n    this._pending = {};\\n    if (!this.set(attributes, {silent: true})) {\\n      throw new Error(\\\"Can't create an invalid Parse.Object\\\");\\n    }\\n    this.changed = {};\\n    this._silent = {};\\n    this._pending = {};\\n    this._hasData = true;\\n    this._previousAttributes = _.clone(this.attributes);\\n    this.initialize.apply(this, arguments);\\n  };\\n\\n  /**\\n   * @lends Parse.Object.prototype\\n   * @property {String} id The objectId of the Parse Object.\\n   */\\n\\n  /**\\n   * Saves the given list of Parse.Object.\\n   * If any error is encountered, stops and calls the error handler.\\n   *\\n   * <pre>\\n   *   Parse.Object.saveAll([object1, object2, ...], {\\n   *     success: function(list) {\\n   *       // All the objects were saved.\\n   *     },\\n   *     error: function(error) {\\n   *       // An error occurred while saving one of the objects.\\n   *     },\\n   *   });\\n   * </pre>\\n   *\\n   * @param {Array} list A list of <code>Parse.Object</code>.\\n   * @param {Object} options A Backbone-style callback object.\\n   * Valid options are:<ul>\\n   *   <li>useMasterKey: In Cloud Code and Node only, causes the Master Key to\\n   *     be used for this request.\\n   * </ul>\\n   */\\n  Parse.Object.saveAll = function(list, options) {\\n    options = options || {};\\n    return Parse.Object._deepSaveAsync(list, {\\n      useMasterKey: options.useMasterKey\\n    })._thenRunCallbacks(options);\\n  };\\n\\n  /**\\n   * Destroy the given list of models on the server if it was already persisted.\\n   * Optimistically removes each model from its collection, if it has one.\\n   * If `wait: true` is passed, waits for the server to respond before removal.\\n   *\\n   * <p>Unlike saveAll, if an error occurs while deleting an individual model,\\n   * this method will continue trying to delete the rest of the models if\\n   * possible, except in the case of a fatal error like a connection error.\\n   *\\n   * <p>In particular, the Parse.Error object returned in the case of error may\\n   * be one of two types:\\n   *\\n   * <ul>\\n   *   <li>A Parse.Error.AGGREGATE_ERROR. This object's \\\"errors\\\" property is an\\n   *       array of other Parse.Error objects. Each error object in this array\\n   *       has an \\\"object\\\" property that references the object that could not be\\n   *       deleted (for instance, because that object could not be found).</li>\\n   *   <li>A non-aggregate Parse.Error. This indicates a serious error that\\n   *       caused the delete operation to be aborted partway through (for\\n   *       instance, a connection failure in the middle of the delete).</li>\\n   * </ul>\\n   *\\n   * <pre>\\n   *   Parse.Object.destroyAll([object1, object2, ...], {\\n   *     success: function() {\\n   *       // All the objects were deleted.\\n   *     },\\n   *     error: function(error) {\\n   *       // An error occurred while deleting one or more of the objects.\\n   *       // If this is an aggregate error, then we can inspect each error\\n   *       // object individually to determine the reason why a particular\\n   *       // object was not deleted.\\n   *       if (error.code == Parse.Error.AGGREGATE_ERROR) {\\n   *         for (var i = 0; i < error.errors.length; i++) {\\n   *           console.log(\\\"Couldn't delete \\\" + error.errors[i].object.id +\\n   *             \\\"due to \\\" + error.errors[i].message);\\n   *         }\\n   *       } else {\\n   *         console.log(\\\"Delete aborted because of \\\" + error.message);\\n   *       }\\n   *     },\\n   *   });\\n   * </pre>\\n   *\\n   * @param {Array} list A list of <code>Parse.Object</code>.\\n   * @param {Object} options A Backbone-style callback object.\\n   * Valid options are:<ul>\\n   *   <li>useMasterKey: In Cloud Code and Node only, causes the Master Key to\\n   *     be used for this request.\\n   * </ul>\\n   */\\n  Parse.Object.destroyAll = function(list, options) {\\n    options = options || {};\\n\\n    var triggerDestroy = function(object) {\\n      object.trigger('destroy', object, object.collection, options);\\n    };\\n\\n    var errors = [];\\n    var destroyBatch = function(batch) {\\n      var promise = Parse.Promise.as();\\n\\n      if (batch.length > 0) {\\n        promise = promise.then(function() {\\n          return Parse._request({\\n            route: \\\"batch\\\",\\n            method: \\\"POST\\\",\\n            useMasterKey: options.useMasterKey,\\n            data: {\\n              requests: _.map(batch, function(object) {\\n                return {\\n                  method: \\\"DELETE\\\",\\n                  path: \\\"/1/classes/\\\" + object.className + \\\"/\\\" + object.id\\n                };\\n              })\\n            }\\n          });\\n        }).then(function(responses, status, xhr) {\\n          Parse._arrayEach(batch, function(object, i) {\\n            if (responses[i].success && options.wait) {\\n              triggerDestroy(object);\\n            } else if (responses[i].error) {\\n              var error = new Parse.Error(responses[i].error.code,\\n                                          responses[i].error.error);\\n              error.object = object;\\n\\n              errors.push(error);\\n            }\\n          });\\n        });\\n      }\\n\\n      return promise;\\n    };\\n\\n    var promise = Parse.Promise.as();\\n    var batch = [];\\n    Parse._arrayEach(list, function(object, i) {\\n      if (!object.id || !options.wait) {\\n        triggerDestroy(object);\\n      }\\n\\n      if (object.id) {\\n        batch.push(object);\\n      }\\n\\n      if (batch.length === 20 || i+1 === list.length) {\\n        var thisBatch = batch;\\n        batch = [];\\n\\n        promise = promise.then(function() {\\n          return destroyBatch(thisBatch);\\n        });\\n      }\\n    });\\n\\n    return promise.then(function() {\\n      if (errors.length === 0) {\\n        return true;\\n      } else {\\n        var error = new Parse.Error(Parse.Error.AGGREGATE_ERROR,\\n                                    \\\"Error deleting an object in destroyAll\\\");\\n        error.errors = errors;\\n\\n        return Parse.Promise.error(error);\\n      }\\n    })._thenRunCallbacks(options);\\n  };\\n\\n  /**\\n   * Fetches the given list of Parse.Object.\\n   * If any error is encountered, stops and calls the error handler.\\n   *\\n   * <pre>\\n   *   Parse.Object.fetchAll([object1, object2, ...], {\\n   *     success: function(list) {\\n   *       // All the objects were fetched.\\n   *     },\\n   *     error: function(error) {\\n   *       // An error occurred while fetching one of the objects.\\n   *     },\\n   *   });\\n   * </pre>\\n   *\\n   * @param {Array} list A list of <code>Parse.Object</code>.\\n   * @param {Object} options A Backbone-style callback object.\\n   * Valid options are:<ul>\\n   *   <li>success: A Backbone-style success callback.\\n   *   <li>error: An Backbone-style error callback.\\n   * </ul>\\n   */\\n  Parse.Object.fetchAll = function(list, options) {\\n    return Parse.Object._fetchAll(\\n      list,\\n      true\\n    )._thenRunCallbacks(options);\\n  };\\n\\n  /**\\n   * Fetches the given list of Parse.Object if needed.\\n   * If any error is encountered, stops and calls the error handler.\\n   *\\n   * <pre>\\n   *   Parse.Object.fetchAllIfNeeded([object1, ...], {\\n   *     success: function(list) {\\n   *       // Objects were fetched and updated.\\n   *     },\\n   *     error: function(error) {\\n   *       // An error occurred while fetching one of the objects.\\n   *     },\\n   *   });\\n   * </pre>\\n   *\\n   * @param {Array} list A list of <code>Parse.Object</code>.\\n   * @param {Object} options A Backbone-style callback object.\\n   * Valid options are:<ul>\\n   *   <li>success: A Backbone-style success callback.\\n   *   <li>error: An Backbone-style error callback.\\n   * </ul>\\n   */\\n  Parse.Object.fetchAllIfNeeded = function(list, options) {\\n    return Parse.Object._fetchAll(\\n      list,\\n      false\\n    )._thenRunCallbacks(options);\\n  };\\n\\n  // Attach all inheritable methods to the Parse.Object prototype.\\n  _.extend(Parse.Object.prototype, Parse.Events,\\n           /** @lends Parse.Object.prototype */ {\\n    _existed: false,\\n\\n    /**\\n     * Initialize is an empty function by default. Override it with your own\\n     * initialization logic.\\n     */\\n    initialize: function(){},\\n\\n    /**\\n     * Returns a JSON version of the object suitable for saving to Parse.\\n     * @return {Object}\\n     */\\n    toJSON: function() {\\n      var json = this._toFullJSON();\\n      Parse._arrayEach([\\\"__type\\\", \\\"className\\\"],\\n                       function(key) { delete json[key]; });\\n      return json;\\n    },\\n\\n    _toFullJSON: function(seenObjects) {\\n      var json = _.clone(this.attributes);\\n      Parse._objectEach(json, function(val, key) {\\n        json[key] = Parse._encode(val, seenObjects);\\n      });\\n      Parse._objectEach(this._operations, function(val, key) {\\n        json[key] = val;\\n      });\\n\\n      if (_.has(this, \\\"id\\\")) {\\n        json.objectId = this.id;\\n      }\\n      if (_.has(this, \\\"createdAt\\\")) {\\n        if (_.isDate(this.createdAt)) {\\n          json.createdAt = this.createdAt.toJSON();\\n        } else {\\n          json.createdAt = this.createdAt;\\n        }\\n      }\\n\\n      if (_.has(this, \\\"updatedAt\\\")) {\\n        if (_.isDate(this.updatedAt)) {\\n          json.updatedAt = this.updatedAt.toJSON();\\n        } else {\\n          json.updatedAt = this.updatedAt;\\n        }\\n      }\\n      json.__type = \\\"Object\\\";\\n      json.className = this.className;\\n      return json;\\n    },\\n\\n    /**\\n     * Updates _hashedJSON to reflect the current state of this object.\\n     * Adds any changed hash values to the set of pending changes.\\n     */\\n    _refreshCache: function() {\\n      var self = this;\\n      if (self._refreshingCache) {\\n        return;\\n      }\\n      self._refreshingCache = true;\\n      Parse._objectEach(this.attributes, function(value, key) {\\n        if (value instanceof Parse.Object) {\\n          value._refreshCache();\\n        } else if (_.isObject(value)) {\\n          if (self._resetCacheForKey(key)) {\\n            self.set(key, new Parse.Op.Set(value), { silent: true });\\n          }\\n        }\\n      });\\n      delete self._refreshingCache;\\n    },\\n\\n    /**\\n     * Returns true if this object has been modified since its last\\n     * save/refresh.  If an attribute is specified, it returns true only if that\\n     * particular attribute has been modified since the last save/refresh.\\n     * @param {String} attr An attribute name (optional).\\n     * @return {Boolean}\\n     */\\n    dirty: function(attr) {\\n      this._refreshCache();\\n\\n      var currentChanges = _.last(this._opSetQueue);\\n\\n      if (attr) {\\n        return (currentChanges[attr] ? true : false);\\n      }\\n      if (!this.id) {\\n        return true;\\n      }\\n      if (_.keys(currentChanges).length > 0) {\\n        return true;\\n      }\\n      return false;\\n    },\\n\\n    /**\\n     * Returns an array of keys that have been modified since last save/refresh\\n     * @return {Array of string}\\n     */\\n    dirtyKeys: function() {\\n      return _.keys(_.last(this._opSetQueue));\\n    },\\n\\n    /**\\n     * Gets a Pointer referencing this Object.\\n     */\\n    _toPointer: function() {\\n      if (!this.id) {\\n        throw new Error(\\\"Can't serialize an unsaved Parse.Object\\\");\\n      }\\n      return { __type: \\\"Pointer\\\",\\n               className: this.className,\\n               objectId: this.id };\\n    },\\n\\n    /**\\n     * Gets the value of an attribute.\\n     * @param {String} attr The string name of an attribute.\\n     */\\n    get: function(attr) {\\n      return this.attributes[attr];\\n    },\\n\\n    /**\\n     * Gets a relation on the given class for the attribute.\\n     * @param String attr The attribute to get the relation for.\\n     */\\n    relation: function(attr) {\\n      var value = this.get(attr);\\n      if (value) {\\n        if (!(value instanceof Parse.Relation)) {\\n          throw \\\"Called relation() on non-relation field \\\" + attr;\\n        }\\n        value._ensureParentAndKey(this, attr);\\n        return value;\\n      } else {\\n        return new Parse.Relation(this, attr);\\n      }\\n    },\\n\\n    /**\\n     * Gets the HTML-escaped value of an attribute.\\n     */\\n    escape: function(attr) {\\n      var html = this._escapedAttributes[attr];\\n      if (html) {\\n        return html;\\n      }\\n      var val = this.attributes[attr];\\n      var escaped;\\n      if (Parse._isNullOrUndefined(val)) {\\n        escaped = '';\\n      } else {\\n        escaped = _.escape(val.toString());\\n      }\\n      this._escapedAttributes[attr] = escaped;\\n      return escaped;\\n    },\\n\\n    /**\\n     * Returns <code>true</code> if the attribute contains a value that is not\\n     * null or undefined.\\n     * @param {String} attr The string name of the attribute.\\n     * @return {Boolean}\\n     */\\n    has: function(attr) {\\n      return !Parse._isNullOrUndefined(this.attributes[attr]);\\n    },\\n\\n    /**\\n     * Pulls \\\"special\\\" fields like objectId, createdAt, etc. out of attrs\\n     * and puts them on \\\"this\\\" directly.  Removes them from attrs.\\n     * @param attrs - A dictionary with the data for this Parse.Object.\\n     */\\n    _mergeMagicFields: function(attrs) {\\n      // Check for changes of magic fields.\\n      var model = this;\\n      var specialFields = [\\\"id\\\", \\\"objectId\\\", \\\"createdAt\\\", \\\"updatedAt\\\"];\\n      Parse._arrayEach(specialFields, function(attr) {\\n        if (attrs[attr]) {\\n          if (attr === \\\"objectId\\\") {\\n            model.id = attrs[attr];\\n          } else if ((attr === \\\"createdAt\\\" || attr === \\\"updatedAt\\\") &&\\n                     !_.isDate(attrs[attr])) {\\n            model[attr] = Parse._parseDate(attrs[attr]);\\n          } else {\\n            model[attr] = attrs[attr];\\n          }\\n          delete attrs[attr];\\n        }\\n      });\\n    },\\n\\n    /**\\n     * Copies the given serverData to \\\"this\\\", refreshes attributes, and\\n     * clears pending changes;\\n     */\\n    _copyServerData: function(serverData) {\\n      // Copy server data\\n      var tempServerData = {};\\n      Parse._objectEach(serverData, function(value, key) {\\n        tempServerData[key] = Parse._decode(key, value);\\n      });\\n      this._serverData = tempServerData;\\n\\n      // Refresh the attributes.\\n      this._rebuildAllEstimatedData();\\n\\n\\n      // Clear out any changes the user might have made previously.\\n      this._refreshCache();\\n      this._opSetQueue = [{}];\\n\\n      // Refresh the attributes again.\\n      this._rebuildAllEstimatedData();\\n    },\\n\\n    /**\\n     * Merges another object's attributes into this object.\\n     */\\n    _mergeFromObject: function(other) {\\n      if (!other) {\\n        return;\\n      }\\n\\n      // This does the inverse of _mergeMagicFields.\\n      this.id = other.id;\\n      this.createdAt = other.createdAt;\\n      this.updatedAt = other.updatedAt;\\n\\n      this._copyServerData(other._serverData);\\n\\n      this._hasData = true;\\n    },\\n\\n    /**\\n     * Returns the json to be sent to the server.\\n     */\\n    _startSave: function() {\\n      this._opSetQueue.push({});\\n    },\\n\\n    /**\\n     * Called when a save fails because of an error. Any changes that were part\\n     * of the save need to be merged with changes made after the save. This\\n     * might throw an exception is you do conflicting operations. For example,\\n     * if you do:\\n     *   object.set(\\\"foo\\\", \\\"bar\\\");\\n     *   object.set(\\\"invalid field name\\\", \\\"baz\\\");\\n     *   object.save();\\n     *   object.increment(\\\"foo\\\");\\n     * then this will throw when the save fails and the client tries to merge\\n     * \\\"bar\\\" with the +1.\\n     */\\n    _cancelSave: function() {\\n      var self = this;\\n      var failedChanges = _.first(this._opSetQueue);\\n      this._opSetQueue = _.rest(this._opSetQueue);\\n      var nextChanges = _.first(this._opSetQueue);\\n      Parse._objectEach(failedChanges, function(op, key) {\\n        var op1 = failedChanges[key];\\n        var op2 = nextChanges[key];\\n        if (op1 && op2) {\\n          nextChanges[key] = op2._mergeWithPrevious(op1);\\n        } else if (op1) {\\n          nextChanges[key] = op1;\\n        }\\n      });\\n      this._saving = this._saving - 1;\\n    },\\n\\n    /**\\n     * Called when a save completes successfully. This merges the changes that\\n     * were saved into the known server data, and overrides it with any data\\n     * sent directly from the server.\\n     */\\n    _finishSave: function(serverData) {\\n      // Grab a copy of any object referenced by this object. These instances\\n      // may have already been fetched, and we don't want to lose their data.\\n      // Note that doing it like this means we will unify separate copies of the\\n      // same object, but that's a risk we have to take.\\n      var fetchedObjects = {};\\n      Parse._traverse(this.attributes, function(object) {\\n        if (object instanceof Parse.Object && object.id && object._hasData) {\\n          fetchedObjects[object.id] = object;\\n        }\\n      });\\n\\n      var savedChanges = _.first(this._opSetQueue);\\n      this._opSetQueue = _.rest(this._opSetQueue);\\n      this._applyOpSet(savedChanges, this._serverData);\\n      this._mergeMagicFields(serverData);\\n      var self = this;\\n      Parse._objectEach(serverData, function(value, key) {\\n        self._serverData[key] = Parse._decode(key, value);\\n\\n        // Look for any objects that might have become unfetched and fix them\\n        // by replacing their values with the previously observed values.\\n        var fetched = Parse._traverse(self._serverData[key], function(object) {\\n          if (object instanceof Parse.Object && fetchedObjects[object.id]) {\\n            return fetchedObjects[object.id];\\n          }\\n        });\\n        if (fetched) {\\n          self._serverData[key] = fetched;\\n        }\\n      });\\n      this._rebuildAllEstimatedData();\\n      this._saving = this._saving - 1;\\n    },\\n\\n    /**\\n     * Called when a fetch or login is complete to set the known server data to\\n     * the given object.\\n     */\\n    _finishFetch: function(serverData, hasData) {\\n\\n      this._opSetQueue = [{}];\\n\\n      // Bring in all the new server data.\\n      this._mergeMagicFields(serverData);\\n      this._copyServerData(serverData);\\n\\n      this._hasData = hasData;\\n    },\\n\\n    /**\\n     * Applies the set of Parse.Op in opSet to the object target.\\n     */\\n    _applyOpSet: function(opSet, target) {\\n      var self = this;\\n      Parse._objectEach(opSet, function(change, key) {\\n        target[key] = change._estimate(target[key], self, key);\\n        if (target[key] === Parse.Op._UNSET) {\\n          delete target[key];\\n        }\\n      });\\n    },\\n\\n    /**\\n     * Replaces the cached value for key with the current value.\\n     * Returns true if the new value is different than the old value.\\n     */\\n    _resetCacheForKey: function(key) {\\n      var value = this.attributes[key];\\n      if (_.isObject(value) &&\\n          !(value instanceof Parse.Object) &&\\n          !(value instanceof Parse.File)) {\\n        value = value.toJSON ? value.toJSON() : value;\\n        var json = JSON.stringify(value);\\n        if (this._hashedJSON[key] !== json) {\\n          this._hashedJSON[key] = json;\\n          return true;\\n        }\\n      }\\n      return false;\\n    },\\n\\n    /**\\n     * Populates attributes[key] by starting with the last known data from the\\n     * server, and applying all of the local changes that have been made to that\\n     * key since then.\\n     */\\n    _rebuildEstimatedDataForKey: function(key) {\\n      var self = this;\\n      delete this.attributes[key];\\n      if (this._serverData[key]) {\\n        this.attributes[key] = this._serverData[key];\\n      }\\n      Parse._arrayEach(this._opSetQueue, function(opSet) {\\n        var op = opSet[key];\\n        if (op) {\\n          self.attributes[key] = op._estimate(self.attributes[key], self, key);\\n          if (self.attributes[key] === Parse.Op._UNSET) {\\n            delete self.attributes[key];\\n          } else {\\n            self._resetCacheForKey(key);\\n          }\\n        }\\n      });\\n    },\\n\\n    /**\\n     * Populates attributes by starting with the last known data from the\\n     * server, and applying all of the local changes that have been made since\\n     * then.\\n     */\\n    _rebuildAllEstimatedData: function() {\\n      var self = this;\\n\\n      var previousAttributes = _.clone(this.attributes);\\n\\n      this.attributes = _.clone(this._serverData);\\n      Parse._arrayEach(this._opSetQueue, function(opSet) {\\n        self._applyOpSet(opSet, self.attributes);\\n        Parse._objectEach(opSet, function(op, key) {\\n          self._resetCacheForKey(key);\\n        });\\n      });\\n\\n      // Trigger change events for anything that changed because of the fetch.\\n      Parse._objectEach(previousAttributes, function(oldValue, key) {\\n        if (self.attributes[key] !== oldValue) {\\n          self.trigger('change:' + key, self, self.attributes[key], {});\\n        }\\n      });\\n      Parse._objectEach(this.attributes, function(newValue, key) {\\n        if (!_.has(previousAttributes, key)) {\\n          self.trigger('change:' + key, self, newValue, {});\\n        }\\n      });\\n    },\\n\\n    /**\\n     * Sets a hash of model attributes on the object, firing\\n     * <code>\\\"change\\\"</code> unless you choose to silence it.\\n     *\\n     * <p>You can call it with an object containing keys and values, or with one\\n     * key and value.  For example:<pre>\\n     *   gameTurn.set({\\n     *     player: player1,\\n     *     diceRoll: 2\\n     *   }, {\\n     *     error: function(gameTurnAgain, error) {\\n     *       // The set failed validation.\\n     *     }\\n     *   });\\n     *\\n     *   game.set(\\\"currentPlayer\\\", player2, {\\n     *     error: function(gameTurnAgain, error) {\\n     *       // The set failed validation.\\n     *     }\\n     *   });\\n     *\\n     *   game.set(\\\"finished\\\", true);</pre></p>\\n     *\\n     * @param {String} key The key to set.\\n     * @param {} value The value to give it.\\n     * @param {Object} options A set of Backbone-like options for the set.\\n     *     The only supported options are <code>silent</code>,\\n     *     <code>error</code>, and <code>promise</code>.\\n     * @return {Boolean} true if the set succeeded.\\n     * @see Parse.Object#validate\\n     * @see Parse.Error\\n     */\\n    set: function(key, value, options) {\\n      var attrs, attr;\\n      if (_.isObject(key) || Parse._isNullOrUndefined(key)) {\\n        attrs = key;\\n        Parse._objectEach(attrs, function(v, k) {\\n          attrs[k] = Parse._decode(k, v);\\n        });\\n        options = value;\\n      } else {\\n        attrs = {};\\n        attrs[key] = Parse._decode(key, value);\\n      }\\n\\n      // Extract attributes and options.\\n      options = options || {};\\n      if (!attrs) {\\n        return this;\\n      }\\n      if (attrs instanceof Parse.Object) {\\n        attrs = attrs.attributes;\\n      }\\n\\n      // If the unset option is used, every attribute should be a Unset.\\n      if (options.unset) {\\n        Parse._objectEach(attrs, function(unused_value, key) {\\n          attrs[key] = new Parse.Op.Unset();\\n        });\\n      }\\n\\n      // Apply all the attributes to get the estimated values.\\n      var dataToValidate = _.clone(attrs);\\n      var self = this;\\n      Parse._objectEach(dataToValidate, function(value, key) {\\n        if (value instanceof Parse.Op) {\\n          dataToValidate[key] = value._estimate(self.attributes[key],\\n                                                self, key);\\n          if (dataToValidate[key] === Parse.Op._UNSET) {\\n            delete dataToValidate[key];\\n          }\\n        }\\n      });\\n\\n      // Run validation.\\n      if (!this._validate(attrs, options)) {\\n        return false;\\n      }\\n\\n      this._mergeMagicFields(attrs);\\n\\n      options.changes = {};\\n      var escaped = this._escapedAttributes;\\n      var prev = this._previousAttributes || {};\\n\\n      // Update attributes.\\n      Parse._arrayEach(_.keys(attrs), function(attr) {\\n        var val = attrs[attr];\\n\\n        // If this is a relation object we need to set the parent correctly,\\n        // since the location where it was parsed does not have access to\\n        // this object.\\n        if (val instanceof Parse.Relation) {\\n          val.parent = self;\\n        }\\n\\n        if (!(val instanceof Parse.Op)) {\\n          val = new Parse.Op.Set(val);\\n        }\\n\\n        // See if this change will actually have any effect.\\n        var isRealChange = true;\\n        if (val instanceof Parse.Op.Set &&\\n            _.isEqual(self.attributes[attr], val.value)) {\\n          isRealChange = false;\\n        }\\n\\n        if (isRealChange) {\\n          delete escaped[attr];\\n          if (options.silent) {\\n            self._silent[attr] = true;\\n          } else {\\n            options.changes[attr] = true;\\n          }\\n        }\\n\\n        var currentChanges = _.last(self._opSetQueue);\\n        currentChanges[attr] = val._mergeWithPrevious(currentChanges[attr]);\\n        self._rebuildEstimatedDataForKey(attr);\\n\\n        if (isRealChange) {\\n          self.changed[attr] = self.attributes[attr];\\n          if (!options.silent) {\\n            self._pending[attr] = true;\\n          }\\n        } else {\\n          delete self.changed[attr];\\n          delete self._pending[attr];\\n        }\\n      });\\n\\n      if (!options.silent) {\\n        this.change(options);\\n      }\\n      return this;\\n    },\\n\\n    /**\\n     * Remove an attribute from the model, firing <code>\\\"change\\\"</code> unless\\n     * you choose to silence it. This is a noop if the attribute doesn't\\n     * exist.\\n     */\\n    unset: function(attr, options) {\\n      options = options || {};\\n      options.unset = true;\\n      return this.set(attr, null, options);\\n    },\\n\\n    /**\\n     * Atomically increments the value of the given attribute the next time the\\n     * object is saved. If no amount is specified, 1 is used by default.\\n     *\\n     * @param attr {String} The key.\\n     * @param amount {Number} The amount to increment by.\\n     */\\n    increment: function(attr, amount) {\\n      if (_.isUndefined(amount) || _.isNull(amount)) {\\n        amount = 1;\\n      }\\n      return this.set(attr, new Parse.Op.Increment(amount));\\n    },\\n\\n    /**\\n     * Atomically add an object to the end of the array associated with a given\\n     * key.\\n     * @param attr {String} The key.\\n     * @param item {} The item to add.\\n     */\\n    add: function(attr, item) {\\n      return this.set(attr, new Parse.Op.Add([item]));\\n    },\\n\\n    /**\\n     * Atomically add an object to the array associated with a given key, only\\n     * if it is not already present in the array. The position of the insert is\\n     * not guaranteed.\\n     *\\n     * @param attr {String} The key.\\n     * @param item {} The object to add.\\n     */\\n    addUnique: function(attr, item) {\\n      return this.set(attr, new Parse.Op.AddUnique([item]));\\n    },\\n\\n    /**\\n     * Atomically remove all instances of an object from the array associated\\n     * with a given key.\\n     *\\n     * @param attr {String} The key.\\n     * @param item {} The object to remove.\\n     */\\n    remove: function(attr, item) {\\n      return this.set(attr, new Parse.Op.Remove([item]));\\n    },\\n\\n    /**\\n     * Returns an instance of a subclass of Parse.Op describing what kind of\\n     * modification has been performed on this field since the last time it was\\n     * saved. For example, after calling object.increment(\\\"x\\\"), calling\\n     * object.op(\\\"x\\\") would return an instance of Parse.Op.Increment.\\n     *\\n     * @param attr {String} The key.\\n     * @returns {Parse.Op} The operation, or undefined if none.\\n     */\\n    op: function(attr) {\\n      return _.last(this._opSetQueue)[attr];\\n    },\\n\\n    /**\\n     * Clear all attributes on the model, firing <code>\\\"change\\\"</code> unless\\n     * you choose to silence it.\\n     */\\n    clear: function(options) {\\n      options = options || {};\\n      options.unset = true;\\n      var keysToClear = _.extend(this.attributes, this._operations);\\n      return this.set(keysToClear, options);\\n    },\\n\\n    /**\\n     * Returns a JSON-encoded set of operations to be sent with the next save\\n     * request.\\n     */\\n    _getSaveJSON: function() {\\n      var json = _.clone(_.first(this._opSetQueue));\\n      Parse._objectEach(json, function(op, key) {\\n        json[key] = op.toJSON();\\n      });\\n      return json;\\n    },\\n\\n    /**\\n     * Returns true if this object can be serialized for saving.\\n     */\\n    _canBeSerialized: function() {\\n      return Parse.Object._canBeSerializedAsValue(this.attributes);\\n    },\\n\\n    /**\\n     * Fetch the model from the server. If the server's representation of the\\n     * model differs from its current attributes, they will be overriden,\\n     * triggering a <code>\\\"change\\\"</code> event.\\n     *\\n     * @param {Object} options A Backbone-style callback object.\\n     * Valid options are:<ul>\\n     *   <li>success: A Backbone-style success callback.\\n     *   <li>error: An Backbone-style error callback.\\n     *   <li>useMasterKey: In Cloud Code and Node only, causes the Master Key to\\n     *     be used for this request.\\n     * </ul>\\n     * @return {Parse.Promise} A promise that is fulfilled when the fetch\\n     *     completes.\\n     */\\n    fetch: function(options) {\\n      var self = this;\\n      options = options || {};\\n      var request = Parse._request({\\n        method: 'GET',\\n        route: \\\"classes\\\",\\n        className: this.className,\\n        objectId: this.id,\\n        useMasterKey: options.useMasterKey\\n      });\\n      return request.then(function(response, status, xhr) {\\n        self._finishFetch(self.parse(response, status, xhr), true);\\n        return self;\\n      })._thenRunCallbacks(options, this);\\n    },\\n\\n    /**\\n     * Set a hash of model attributes, and save the model to the server.\\n     * updatedAt will be updated when the request returns.\\n     * You can either call it as:<pre>\\n     *   object.save();</pre>\\n     * or<pre>\\n     *   object.save(null, options);</pre>\\n     * or<pre>\\n     *   object.save(attrs, options);</pre>\\n     * or<pre>\\n     *   object.save(key, value, options);</pre>\\n     *\\n     * For example, <pre>\\n     *   gameTurn.save({\\n     *     player: \\\"Jake Cutter\\\",\\n     *     diceRoll: 2\\n     *   }, {\\n     *     success: function(gameTurnAgain) {\\n     *       // The save was successful.\\n     *     },\\n     *     error: function(gameTurnAgain, error) {\\n     *       // The save failed.  Error is an instance of Parse.Error.\\n     *     }\\n     *   });</pre>\\n     * or with promises:<pre>\\n     *   gameTurn.save({\\n     *     player: \\\"Jake Cutter\\\",\\n     *     diceRoll: 2\\n     *   }).then(function(gameTurnAgain) {\\n     *     // The save was successful.\\n     *   }, function(error) {\\n     *     // The save failed.  Error is an instance of Parse.Error.\\n     *   });</pre>\\n     *\\n     * @param {Object} options A Backbone-style callback object.\\n     * Valid options are:<ul>\\n     *   <li>wait: Set to true to wait for the server to confirm a successful\\n     *   save before modifying the attributes on the object.\\n     *   <li>silent: Set to true to avoid firing the `set` event.\\n     *   <li>success: A Backbone-style success callback.\\n     *   <li>error: An Backbone-style error callback.\\n     *   <li>useMasterKey: In Cloud Code and Node only, causes the Master Key to\\n     *     be used for this request.\\n     * </ul>\\n     * @return {Parse.Promise} A promise that is fulfilled when the save\\n     *     completes.\\n     * @see Parse.Error\\n     */\\n    save: function(arg1, arg2, arg3) {\\n      var i, attrs, current, options, saved;\\n      if (_.isObject(arg1) || Parse._isNullOrUndefined(arg1)) {\\n        attrs = arg1;\\n        options = arg2;\\n      } else {\\n        attrs = {};\\n        attrs[arg1] = arg2;\\n        options = arg3;\\n      }\\n\\n      // Make save({ success: function() {} }) work.\\n      if (!options && attrs) {\\n        var extra_keys = _.reject(attrs, function(value, key) {\\n          return _.include([\\\"success\\\", \\\"error\\\", \\\"wait\\\"], key);\\n        });\\n        if (extra_keys.length === 0) {\\n          var all_functions = true;\\n          if (_.has(attrs, \\\"success\\\") && !_.isFunction(attrs.success)) {\\n            all_functions = false;\\n          }\\n          if (_.has(attrs, \\\"error\\\") && !_.isFunction(attrs.error)) {\\n            all_functions = false;\\n          }\\n          if (all_functions) {\\n            // This attrs object looks like it's really an options object,\\n            // and there's no other options object, so let's just use it.\\n            return this.save(null, attrs);\\n          }\\n        }\\n      }\\n\\n      options = _.clone(options) || {};\\n      if (options.wait) {\\n        current = _.clone(this.attributes);\\n      }\\n\\n      var setOptions = _.clone(options) || {};\\n      if (setOptions.wait) {\\n        setOptions.silent = true;\\n      }\\n      var setError;\\n      setOptions.error = function(model, error) {\\n        setError = error;\\n      };\\n      if (attrs && !this.set(attrs, setOptions)) {\\n        return Parse.Promise.error(setError)._thenRunCallbacks(options, this);\\n      }\\n\\n      var model = this;\\n\\n      // If there is any unsaved child, save it first.\\n      model._refreshCache();\\n\\n\\n\\n      var unsavedChildren = [];\\n      var unsavedFiles = [];\\n      Parse.Object._findUnsavedChildren(model.attributes,\\n                                        unsavedChildren,\\n                                        unsavedFiles);\\n      if (unsavedChildren.length + unsavedFiles.length > 0) {\\n        return Parse.Object._deepSaveAsync(this.attributes, {\\n          useMasterKey: options.useMasterKey\\n        }).then(function() {\\n          return model.save(null, options);\\n        }, function(error) {\\n          return Parse.Promise.error(error)._thenRunCallbacks(options, model);\\n        });\\n      }\\n\\n      this._startSave();\\n      this._saving = (this._saving || 0) + 1;\\n\\n      this._allPreviousSaves = this._allPreviousSaves || Parse.Promise.as();\\n      this._allPreviousSaves = this._allPreviousSaves._continueWith(function() {\\n        var method = model.id ? 'PUT' : 'POST';\\n\\n        var json = model._getSaveJSON();\\n\\n        var route = \\\"classes\\\";\\n        var className = model.className;\\n        if (model.className === \\\"_User\\\" && !model.id) {\\n          // Special-case user sign-up.\\n          route = \\\"users\\\";\\n          className = null;\\n        }\\n        var request = Parse._request({\\n          route: route,\\n          className: className,\\n          objectId: model.id,\\n          method: method,\\n          useMasterKey: options.useMasterKey,\\n          data: json\\n        });\\n\\n        request = request.then(function(resp, status, xhr) {\\n          var serverAttrs = model.parse(resp, status, xhr);\\n          if (options.wait) {\\n            serverAttrs = _.extend(attrs || {}, serverAttrs);\\n          }\\n          model._finishSave(serverAttrs);\\n          if (options.wait) {\\n            model.set(current, setOptions);\\n          }\\n          return model;\\n\\n        }, function(error) {\\n          model._cancelSave();\\n          return Parse.Promise.error(error);\\n\\n        })._thenRunCallbacks(options, model);\\n\\n        return request;\\n      });\\n      return this._allPreviousSaves;\\n    },\\n\\n    /**\\n     * Destroy this model on the server if it was already persisted.\\n     * Optimistically removes the model from its collection, if it has one.\\n     * If `wait: true` is passed, waits for the server to respond\\n     * before removal.\\n     *\\n     * @param {Object} options A Backbone-style callback object.\\n     * Valid options are:<ul>\\n     *   <li>wait: Set to true to wait for the server to confirm successful\\n     *   deletion of the object before triggering the `destroy` event.\\n     *   <li>success: A Backbone-style success callback\\n     *   <li>error: An Backbone-style error callback.\\n     *   <li>useMasterKey: In Cloud Code and Node only, causes the Master Key to\\n     *     be used for this request.\\n     * </ul>\\n     * @return {Parse.Promise} A promise that is fulfilled when the destroy\\n     *     completes.\\n     */\\n    destroy: function(options) {\\n      options = options || {};\\n      var model = this;\\n\\n      var triggerDestroy = function() {\\n        model.trigger('destroy', model, model.collection, options);\\n      };\\n\\n      if (!this.id) {\\n        return triggerDestroy();\\n      }\\n\\n      if (!options.wait) {\\n        triggerDestroy();\\n      }\\n\\n      var request = Parse._request({\\n        route: \\\"classes\\\",\\n        className: this.className,\\n        objectId: this.id,\\n        method: 'DELETE',\\n        useMasterKey: options.useMasterKey\\n      });\\n      return request.then(function() {\\n        if (options.wait) {\\n          triggerDestroy();\\n        }\\n        return model;\\n      })._thenRunCallbacks(options, this);\\n    },\\n\\n    /**\\n     * Converts a response into the hash of attributes to be set on the model.\\n     * @ignore\\n     */\\n    parse: function(resp, status, xhr) {\\n      var output = _.clone(resp);\\n      _([\\\"createdAt\\\", \\\"updatedAt\\\"]).each(function(key) {\\n        if (output[key]) {\\n          output[key] = Parse._parseDate(output[key]);\\n        }\\n      });\\n      if (!output.updatedAt) {\\n        output.updatedAt = output.createdAt;\\n      }\\n      if (status) {\\n        this._existed = (status !== 201);\\n      }\\n      return output;\\n    },\\n\\n    /**\\n     * Creates a new model with identical attributes to this one.\\n     * @return {Parse.Object}\\n     */\\n    clone: function() {\\n      return new this.constructor(this.attributes);\\n    },\\n\\n    /**\\n     * Returns true if this object has never been saved to Parse.\\n     * @return {Boolean}\\n     */\\n    isNew: function() {\\n      return !this.id;\\n    },\\n\\n    /**\\n     * Call this method to manually fire a `\\\"change\\\"` event for this model and\\n     * a `\\\"change:attribute\\\"` event for each changed attribute.\\n     * Calling this will cause all objects observing the model to update.\\n     */\\n    change: function(options) {\\n      options = options || {};\\n      var changing = this._changing;\\n      this._changing = true;\\n\\n      // Silent changes become pending changes.\\n      var self = this;\\n      Parse._objectEach(this._silent, function(attr) {\\n        self._pending[attr] = true;\\n      });\\n\\n      // Silent changes are triggered.\\n      var changes = _.extend({}, options.changes, this._silent);\\n      this._silent = {};\\n      Parse._objectEach(changes, function(unused_value, attr) {\\n        self.trigger('change:' + attr, self, self.get(attr), options);\\n      });\\n      if (changing) {\\n        return this;\\n      }\\n\\n      // This is to get around lint not letting us make a function in a loop.\\n      var deleteChanged = function(value, attr) {\\n        if (!self._pending[attr] && !self._silent[attr]) {\\n          delete self.changed[attr];\\n        }\\n      };\\n\\n      // Continue firing `\\\"change\\\"` events while there are pending changes.\\n      while (!_.isEmpty(this._pending)) {\\n        this._pending = {};\\n        this.trigger('change', this, options);\\n        // Pending and silent changes still remain.\\n        Parse._objectEach(this.changed, deleteChanged);\\n        self._previousAttributes = _.clone(this.attributes);\\n      }\\n\\n      this._changing = false;\\n      return this;\\n    },\\n\\n    /**\\n     * Returns true if this object was created by the Parse server when the\\n     * object might have already been there (e.g. in the case of a Facebook\\n     * login)\\n     */\\n    existed: function() {\\n      return this._existed;\\n    },\\n\\n    /**\\n     * Determine if the model has changed since the last <code>\\\"change\\\"</code>\\n     * event.  If you specify an attribute name, determine if that attribute\\n     * has changed.\\n     * @param {String} attr Optional attribute name\\n     * @return {Boolean}\\n     */\\n    hasChanged: function(attr) {\\n      if (!arguments.length) {\\n        return !_.isEmpty(this.changed);\\n      }\\n      return this.changed && _.has(this.changed, attr);\\n    },\\n\\n    /**\\n     * Returns an object containing all the attributes that have changed, or\\n     * false if there are no changed attributes. Useful for determining what\\n     * parts of a view need to be updated and/or what attributes need to be\\n     * persisted to the server. Unset attributes will be set to undefined.\\n     * You can also pass an attributes object to diff against the model,\\n     * determining if there *would be* a change.\\n     */\\n    changedAttributes: function(diff) {\\n      if (!diff) {\\n        return this.hasChanged() ? _.clone(this.changed) : false;\\n      }\\n      var changed = {};\\n      var old = this._previousAttributes;\\n      Parse._objectEach(diff, function(diffVal, attr) {\\n        if (!_.isEqual(old[attr], diffVal)) {\\n          changed[attr] = diffVal;\\n        }\\n      });\\n      return changed;\\n    },\\n\\n    /**\\n     * Gets the previous value of an attribute, recorded at the time the last\\n     * <code>\\\"change\\\"</code> event was fired.\\n     * @param {String} attr Name of the attribute to get.\\n     */\\n    previous: function(attr) {\\n      if (!arguments.length || !this._previousAttributes) {\\n        return null;\\n      }\\n      return this._previousAttributes[attr];\\n    },\\n\\n    /**\\n     * Gets all of the attributes of the model at the time of the previous\\n     * <code>\\\"change\\\"</code> event.\\n     * @return {Object}\\n     */\\n    previousAttributes: function() {\\n      return _.clone(this._previousAttributes);\\n    },\\n\\n    /**\\n     * Checks if the model is currently in a valid state. It's only possible to\\n     * get into an *invalid* state if you're using silent changes.\\n     * @return {Boolean}\\n     */\\n    isValid: function() {\\n      return !this.validate(this.attributes);\\n    },\\n\\n    /**\\n     * You should not call this function directly unless you subclass\\n     * <code>Parse.Object</code>, in which case you can override this method\\n     * to provide additional validation on <code>set</code> and\\n     * <code>save</code>.  Your implementation should return\\n     *\\n     * @param {Object} attrs The current data to validate.\\n     * @param {Object} options A Backbone-like options object.\\n     * @return {} False if the data is valid.  An error object otherwise.\\n     * @see Parse.Object#set\\n     */\\n    validate: function(attrs, options) {\\n      if (_.has(attrs, \\\"ACL\\\") && !(attrs.ACL instanceof Parse.ACL)) {\\n        return new Parse.Error(Parse.Error.OTHER_CAUSE,\\n                               \\\"ACL must be a Parse.ACL.\\\");\\n      }\\n      var correct = true;\\n      Parse._objectEach(attrs, function(unused_value, key) {\\n        if (!(/^[A-Za-z][0-9A-Za-z_]*$/).test(key)) {\\n          correct = false;\\n        }\\n      });\\n      if (!correct) {\\n        return new Parse.Error(Parse.Error.INVALID_KEY_NAME);\\n      }\\n      return false;\\n    },\\n\\n    /**\\n     * Run validation against a set of incoming attributes, returning `true`\\n     * if all is well. If a specific `error` callback has been passed,\\n     * call that instead of firing the general `\\\"error\\\"` event.\\n     */\\n    _validate: function(attrs, options) {\\n      if (options.silent || !this.validate) {\\n        return true;\\n      }\\n      attrs = _.extend({}, this.attributes, attrs);\\n      var error = this.validate(attrs, options);\\n      if (!error) {\\n        return true;\\n      }\\n      if (options && options.error) {\\n        options.error(this, error, options);\\n      } else {\\n        this.trigger('error', this, error, options);\\n      }\\n      return false;\\n    },\\n\\n    /**\\n     * Returns the ACL for this object.\\n     * @returns {Parse.ACL} An instance of Parse.ACL.\\n     * @see Parse.Object#get\\n     */\\n    getACL: function() {\\n      return this.get(\\\"ACL\\\");\\n    },\\n\\n    /**\\n     * Sets the ACL to be used for this object.\\n     * @param {Parse.ACL} acl An instance of Parse.ACL.\\n     * @param {Object} options Optional Backbone-like options object to be\\n     *     passed in to set.\\n     * @return {Boolean} Whether the set passed validation.\\n     * @see Parse.Object#set\\n     */\\n    setACL: function(acl, options) {\\n      return this.set(\\\"ACL\\\", acl, options);\\n    }\\n\\n  });\\n\\n  /**\\n   * Returns the appropriate subclass for making new instances of the given\\n   * className string.\\n   */\\n  Parse.Object._getSubclass = function(className) {\\n    if (!_.isString(className)) {\\n      throw \\\"Parse.Object._getSubclass requires a string argument.\\\";\\n    }\\n    var ObjectClass = Parse.Object._classMap[className];\\n    if (!ObjectClass) {\\n      ObjectClass = Parse.Object.extend(className);\\n      Parse.Object._classMap[className] = ObjectClass;\\n    }\\n    return ObjectClass;\\n  };\\n\\n  /**\\n   * Creates an instance of a subclass of Parse.Object for the given classname.\\n   */\\n  Parse.Object._create = function(className, attributes, options) {\\n    var ObjectClass = Parse.Object._getSubclass(className);\\n    return new ObjectClass(attributes, options);\\n  };\\n\\n  /**\\n   * Returns a list of object ids given a list of objects.\\n   */\\n  Parse.Object._toObjectIdArray = function(list, omitObjectsWithData) {\\n    if (list.length === 0) {\\n      return Parse.Promise.as(list);\\n    }\\n\\n    var error;\\n    var className = list[0].className;\\n    var objectIds = [];\\n    for (var i = 0; i < list.length; i++) {\\n      var object = list[i];\\n      if (className !== object.className) {\\n        error = new Parse.Error(Parse.Error.INVALID_CLASS_NAME,\\n                                \\\"All objects should be of the same class\\\");\\n        return Parse.Promise.error(error);\\n      } else if (!object.id) {\\n        error = new Parse.Error(Parse.Error.MISSING_OBJECT_ID,\\n                                \\\"All objects must have an ID\\\");\\n        return Parse.Promise.error(error);\\n      } else if (omitObjectsWithData && object._hasData) {\\n        continue;\\n      }\\n      objectIds.push(object.id);\\n    }\\n\\n    return Parse.Promise.as(objectIds);\\n  };\\n\\n  /**\\n   * Updates a list of objects with fetched results.\\n   */\\n  Parse.Object._updateWithFetchedResults = function(list, fetched, forceFetch) {\\n    var fetchedObjectsById = {};\\n    Parse._arrayEach(fetched, function(object, i) {\\n      fetchedObjectsById[object.id] = object;\\n    });\\n\\n    for (var i = 0; i < list.length; i++) {\\n      var object = list[i];\\n      var fetchedObject = fetchedObjectsById[object.id];\\n      if (!fetchedObject && forceFetch) {\\n        var error = new Parse.Error(Parse.Error.OBJECT_NOT_FOUND,\\n                                \\\"All objects must exist on the server\\\");\\n        return Parse.Promise.error(error);\\n      }\\n\\n      object._mergeFromObject(fetchedObject);\\n    }\\n\\n    return Parse.Promise.as(list);\\n  };\\n\\n  /**\\n   * Fetches the objects given in list.  The forceFetch option will fetch all\\n   * objects if true and ignore objects with data if false.\\n   */\\n  Parse.Object._fetchAll = function(list, forceFetch) {\\n    if (list.length === 0) {\\n      return Parse.Promise.as(list);\\n    }\\n\\n    var omitObjectsWithData = !forceFetch;\\n    return Parse.Object._toObjectIdArray(\\n      list,\\n      omitObjectsWithData\\n    ).then(function(objectIds) {\\n      var className = list[0].className;\\n      var query = new Parse.Query(className);\\n      query.containedIn(\\\"objectId\\\", objectIds);\\n      query.limit = objectIds.length;\\n      return query.find();\\n    }).then(function(results) {\\n      return Parse.Object._updateWithFetchedResults(\\n        list,\\n        results,\\n        forceFetch\\n      );\\n    });\\n  };\\n\\n  // Set up a map of className to class so that we can create new instances of\\n  // Parse Objects from JSON automatically.\\n  Parse.Object._classMap = {};\\n\\n  Parse.Object._extend = Parse._extend;\\n\\n  /**\\n   * Creates a new subclass of Parse.Object for the given Parse class name.\\n   *\\n   * <p>Every extension of a Parse class will inherit from the most recent\\n   * previous extension of that class. When a Parse.Object is automatically\\n   * created by parsing JSON, it will use the most recent extension of that\\n   * class.</p>\\n   *\\n   * <p>You should call either:<pre>\\n   *     var MyClass = Parse.Object.extend(\\\"MyClass\\\", {\\n   *         <i>Instance methods</i>,\\n   *         initialize: function(attrs, options) {\\n   *             this.someInstanceProperty = [],\\n   *             <i>Other instance properties</i>\\n   *         }\\n   *     }, {\\n   *         <i>Class properties</i>\\n   *     });</pre>\\n   * or, for Backbone compatibility:<pre>\\n   *     var MyClass = Parse.Object.extend({\\n   *         className: \\\"MyClass\\\",\\n   *         <i>Instance methods</i>,\\n   *         initialize: function(attrs, options) {\\n   *             this.someInstanceProperty = [],\\n   *             <i>Other instance properties</i>\\n   *         }\\n   *     }, {\\n   *         <i>Class properties</i>\\n   *     });</pre></p>\\n   *\\n   * @param {String} className The name of the Parse class backing this model.\\n   * @param {Object} protoProps Instance properties to add to instances of the\\n   *     class returned from this method.\\n   * @param {Object} classProps Class properties to add the class returned from\\n   *     this method.\\n   * @return {Class} A new subclass of Parse.Object.\\n   */\\n  Parse.Object.extend = function(className, protoProps, classProps) {\\n    // Handle the case with only two args.\\n    if (!_.isString(className)) {\\n      if (className && _.has(className, \\\"className\\\")) {\\n        return Parse.Object.extend(className.className, className, protoProps);\\n      } else {\\n        throw new Error(\\n            \\\"Parse.Object.extend's first argument should be the className.\\\");\\n      }\\n    }\\n\\n    // If someone tries to subclass \\\"User\\\", coerce it to the right type.\\n    if (className === \\\"User\\\" && Parse.User._performUserRewrite) {\\n      className = \\\"_User\\\";\\n    }\\n    protoProps = protoProps || {};\\n    protoProps.className = className;\\n\\n    var NewClassObject = null;\\n    if (_.has(Parse.Object._classMap, className)) {\\n      var OldClassObject = Parse.Object._classMap[className];\\n      // This new subclass has been told to extend both from \\\"this\\\" and from\\n      // OldClassObject. This is multiple inheritance, which isn't supported.\\n      // For now, let's just pick one.\\n      NewClassObject = OldClassObject._extend(protoProps, classProps);\\n    } else {\\n      NewClassObject = this._extend(protoProps, classProps);\\n    }\\n    // Extending a subclass should reuse the classname automatically.\\n    NewClassObject.extend = function(arg0) {\\n      if (_.isString(arg0) || (arg0 && _.has(arg0, \\\"className\\\"))) {\\n        return Parse.Object.extend.apply(NewClassObject, arguments);\\n      }\\n      var newArguments = [className].concat(Parse._.toArray(arguments));\\n      return Parse.Object.extend.apply(NewClassObject, newArguments);\\n    };\\n    Parse.Object._classMap[className] = NewClassObject;\\n    return NewClassObject;\\n  };\\n\\n  Parse.Object._findUnsavedChildren = function(object, children, files) {\\n    Parse._traverse(object, function(object) {\\n      if (object instanceof Parse.Object) {\\n        object._refreshCache();\\n        if (object.dirty()) {\\n          children.push(object);\\n        }\\n        return;\\n      }\\n\\n      if (object instanceof Parse.File) {\\n        if (!object.url()) {\\n          files.push(object);\\n        }\\n        return;\\n      }\\n    });\\n  };\\n\\n  Parse.Object._canBeSerializedAsValue = function(object) {\\n\\n    if (object instanceof Parse.Object) {\\n      return !!object.id;\\n    }\\n    if (object instanceof Parse.File) {\\n      // Don't recurse indefinitely into files.\\n      return true;\\n    }\\n\\n    var canBeSerializedAsValue = true;\\n\\n    if (_.isArray(object)) {\\n      Parse._arrayEach(object, function(child) {\\n        if (!Parse.Object._canBeSerializedAsValue(child)) {\\n          canBeSerializedAsValue = false;\\n        }\\n      });\\n    } else if (_.isObject(object)) {\\n      Parse._objectEach(object, function(child) {\\n        if (!Parse.Object._canBeSerializedAsValue(child)) {\\n          canBeSerializedAsValue = false;\\n        }\\n      });\\n    }\\n    return canBeSerializedAsValue;\\n  };\\n\\n  /**\\n   * @param {Object} object The root object.\\n   * @param {Object} options: The only valid option is useMasterKey.\\n   */\\n  Parse.Object._deepSaveAsync = function(object, options) {\\n    var unsavedChildren = [];\\n    var unsavedFiles = [];\\n    Parse.Object._findUnsavedChildren(object, unsavedChildren, unsavedFiles);\\n\\n    var promise = Parse.Promise.as();\\n    _.each(unsavedFiles, function(file) {\\n      promise = promise.then(function() {\\n        return file.save(options);\\n      });\\n    });\\n\\n    var objects = _.uniq(unsavedChildren);\\n    var remaining = _.uniq(objects);\\n\\n    return promise.then(function() {\\n      return Parse.Promise._continueWhile(function() {\\n        return remaining.length > 0;\\n      }, function() {\\n\\n        // Gather up all the objects that can be saved in this batch.\\n        var batch = [];\\n        var newRemaining = [];\\n        Parse._arrayEach(remaining, function(object) {\\n          // Limit batches to 20 objects.\\n          if (batch.length > 20) {\\n            newRemaining.push(object);\\n            return;\\n          }\\n\\n          if (object._canBeSerialized()) {\\n            batch.push(object);\\n          } else {\\n            newRemaining.push(object);\\n          }\\n        });\\n        remaining = newRemaining;\\n\\n        // If we can't save any objects, there must be a circular reference.\\n        if (batch.length === 0) {\\n          return Parse.Promise.error(\\n            new Parse.Error(Parse.Error.OTHER_CAUSE,\\n                            \\\"Tried to save a batch with a cycle.\\\"));\\n        }\\n\\n        // Reserve a spot in every object's save queue.\\n        var readyToStart = Parse.Promise.when(_.map(batch, function(object) {\\n          return object._allPreviousSaves || Parse.Promise.as();\\n        }));\\n        var batchFinished = new Parse.Promise();\\n        Parse._arrayEach(batch, function(object) {\\n          object._allPreviousSaves = batchFinished;\\n        });\\n\\n        // Save a single batch, whether previous saves succeeded or failed.\\n        return readyToStart._continueWith(function() {\\n          return Parse._request({\\n            route: \\\"batch\\\",\\n            method: \\\"POST\\\",\\n            useMasterKey: options.useMasterKey,\\n            data: {\\n              requests: _.map(batch, function(object) {\\n                var json = object._getSaveJSON();\\n                var method = \\\"POST\\\";\\n\\n                var path = \\\"/1/classes/\\\" + object.className;\\n                if (object.id) {\\n                  path = path + \\\"/\\\" + object.id;\\n                  method = \\\"PUT\\\";\\n                }\\n\\n                object._startSave();\\n\\n                return {\\n                  method: method,\\n                  path: path,\\n                  body: json\\n                };\\n              })\\n            }\\n          }).then(function(response, status, xhr) {\\n            var error;\\n            Parse._arrayEach(batch, function(object, i) {\\n              if (response[i].success) {\\n                object._finishSave(\\n                  object.parse(response[i].success, status, xhr));\\n              } else {\\n                error = error || response[i].error;\\n                object._cancelSave();\\n              }\\n            });\\n            if (error) {\\n              return Parse.Promise.error(\\n                new Parse.Error(error.code, error.error));\\n            }\\n\\n          }).then(function(results) {\\n            batchFinished.resolve(results);\\n            return results;\\n          }, function(error) {\\n            batchFinished.reject(error);\\n            return Parse.Promise.error(error);\\n          });\\n        });\\n      });\\n    }).then(function() {\\n      return object;\\n    });\\n  };\\n\\n}(this));\\n\\n(function(root) {\\n  root.Parse = root.Parse || {};\\n  var Parse = root.Parse;\\n  var _ = Parse._;\\n\\n  /**\\n   * Represents a Role on the Parse server. Roles represent groupings of\\n   * Users for the purposes of granting permissions (e.g. specifying an ACL\\n   * for an Object). Roles are specified by their sets of child users and\\n   * child roles, all of which are granted any permissions that the parent\\n   * role has.\\n   *\\n   * <p>Roles must have a name (which cannot be changed after creation of the\\n   * role), and must specify an ACL.</p>\\n   * @class\\n   * A Parse.Role is a local representation of a role persisted to the Parse\\n   * cloud.\\n   */\\n  Parse.Role = Parse.Object.extend(\\\"_Role\\\", /** @lends Parse.Role.prototype */ {\\n    // Instance Methods\\n\\n    /**\\n     * Constructs a new ParseRole with the given name and ACL.\\n     *\\n     * @param {String} name The name of the Role to create.\\n     * @param {Parse.ACL} acl The ACL for this role. Roles must have an ACL.\\n     */\\n    constructor: function(name, acl) {\\n      if (_.isString(name) && (acl instanceof Parse.ACL)) {\\n        Parse.Object.prototype.constructor.call(this, null, null);\\n        this.setName(name);\\n        this.setACL(acl);\\n      } else {\\n        Parse.Object.prototype.constructor.call(this, name, acl);\\n      }\\n    },\\n\\n    /**\\n     * Gets the name of the role.  You can alternatively call role.get(\\\"name\\\")\\n     *\\n     * @return {String} the name of the role.\\n     */\\n    getName: function() {\\n      return this.get(\\\"name\\\");\\n    },\\n\\n    /**\\n     * Sets the name for a role. This value must be set before the role has\\n     * been saved to the server, and cannot be set once the role has been\\n     * saved.\\n     *\\n     * <p>\\n     *   A role's name can only contain alphanumeric characters, _, -, and\\n     *   spaces.\\n     * </p>\\n     *\\n     * <p>This is equivalent to calling role.set(\\\"name\\\", name)</p>\\n     *\\n     * @param {String} name The name of the role.\\n     * @param {Object} options Standard options object with success and error\\n     *     callbacks.\\n     */\\n    setName: function(name, options) {\\n      return this.set(\\\"name\\\", name, options);\\n    },\\n\\n    /**\\n     * Gets the Parse.Relation for the Parse.Users that are direct\\n     * children of this role. These users are granted any privileges that this\\n     * role has been granted (e.g. read or write access through ACLs). You can\\n     * add or remove users from the role through this relation.\\n     *\\n     * <p>This is equivalent to calling role.relation(\\\"users\\\")</p>\\n     *\\n     * @return {Parse.Relation} the relation for the users belonging to this\\n     *     role.\\n     */\\n    getUsers: function() {\\n      return this.relation(\\\"users\\\");\\n    },\\n\\n    /**\\n     * Gets the Parse.Relation for the Parse.Roles that are direct\\n     * children of this role. These roles' users are granted any privileges that\\n     * this role has been granted (e.g. read or write access through ACLs). You\\n     * can add or remove child roles from this role through this relation.\\n     *\\n     * <p>This is equivalent to calling role.relation(\\\"roles\\\")</p>\\n     *\\n     * @return {Parse.Relation} the relation for the roles belonging to this\\n     *     role.\\n     */\\n    getRoles: function() {\\n      return this.relation(\\\"roles\\\");\\n    },\\n\\n    /**\\n     * @ignore\\n     */\\n    validate: function(attrs, options) {\\n      if (\\\"name\\\" in attrs && attrs.name !== this.getName()) {\\n        var newName = attrs.name;\\n        if (this.id && this.id !== attrs.objectId) {\\n          // Check to see if the objectId being set matches this.id.\\n          // This happens during a fetch -- the id is set before calling fetch.\\n          // Let the name be set in this case.\\n          return new Parse.Error(Parse.Error.OTHER_CAUSE,\\n              \\\"A role's name can only be set before it has been saved.\\\");\\n        }\\n        if (!_.isString(newName)) {\\n          return new Parse.Error(Parse.Error.OTHER_CAUSE,\\n              \\\"A role's name must be a String.\\\");\\n        }\\n        if (!(/^[0-9a-zA-Z\\\\-_ ]+$/).test(newName)) {\\n          return new Parse.Error(Parse.Error.OTHER_CAUSE,\\n              \\\"A role's name can only contain alphanumeric characters, _,\\\" +\\n              \\\" -, and spaces.\\\");\\n        }\\n      }\\n      if (Parse.Object.prototype.validate) {\\n        return Parse.Object.prototype.validate.call(this, attrs, options);\\n      }\\n      return false;\\n    }\\n  });\\n}(this));\\n\\n\\n/*global _: false */\\n(function(root) {\\n  root.Parse = root.Parse || {};\\n  var Parse = root.Parse;\\n  var _ = Parse._;\\n\\n  /**\\n   * Creates a new instance with the given models and options.  Typically, you\\n   * will not call this method directly, but will instead make a subclass using\\n   * <code>Parse.Collection.extend</code>.\\n   *\\n   * @param {Array} models An array of instances of <code>Parse.Object</code>.\\n   *\\n   * @param {Object} options An optional object with Backbone-style options.\\n   * Valid options are:<ul>\\n   *   <li>model: The Parse.Object subclass that this collection contains.\\n   *   <li>query: An instance of Parse.Query to use when fetching items.\\n   *   <li>comparator: A string property name or function to sort by.\\n   * </ul>\\n   *\\n   * @see Parse.Collection.extend\\n   *\\n   * @class\\n   *\\n   * <p>Provides a standard collection class for our sets of models, ordered\\n   * or unordered.  For more information, see the\\n   * <a href=\\\"http://documentcloud.github.com/backbone/#Collection\\\">Backbone\\n   * documentation</a>.</p>\\n   */\\n  Parse.Collection = function(models, options) {\\n    options = options || {};\\n    if (options.comparator) {\\n      this.comparator = options.comparator;\\n    }\\n    if (options.model) {\\n      this.model = options.model;\\n    }\\n    if (options.query) {\\n      this.query = options.query;\\n    }\\n    this._reset();\\n    this.initialize.apply(this, arguments);\\n    if (models) {\\n      this.reset(models, {silent: true, parse: options.parse});\\n    }\\n  };\\n\\n  // Define the Collection's inheritable methods.\\n  _.extend(Parse.Collection.prototype, Parse.Events,\\n      /** @lends Parse.Collection.prototype */ {\\n\\n    // The default model for a collection is just a Parse.Object.\\n    // This should be overridden in most cases.\\n\\n    model: Parse.Object,\\n\\n    /**\\n     * Initialize is an empty function by default. Override it with your own\\n     * initialization logic.\\n     */\\n    initialize: function(){},\\n\\n    /**\\n     * The JSON representation of a Collection is an array of the\\n     * models' attributes.\\n     */\\n    toJSON: function() {\\n      return this.map(function(model){ return model.toJSON(); });\\n    },\\n\\n    /**\\n     * Add a model, or list of models to the set. Pass **silent** to avoid\\n     * firing the `add` event for every new model.\\n     *\\n     * @param {Array} models An array of instances of <code>Parse.Object</code>.\\n     *\\n     * @param {Object} options An optional object with Backbone-style options.\\n     * Valid options are:<ul>\\n     *   <li>at: The index at which to add the models.\\n     *   <li>silent: Set to true to avoid firing the `add` event for every new\\n     *   model.\\n     * </ul>\\n     */\\n    add: function(models, options) {\\n      var i, index, length, model, cid, id, cids = {}, ids = {};\\n      options = options || {};\\n      models = _.isArray(models) ? models.slice() : [models];\\n\\n      // Begin by turning bare objects into model references, and preventing\\n      // invalid models or duplicate models from being added.\\n      for (i = 0, length = models.length; i < length; i++) {\\n        models[i] = this._prepareModel(models[i], options);\\n        model = models[i];\\n        if (!model) {\\n          throw new Error(\\\"Can't add an invalid model to a collection\\\");\\n        }\\n        cid = model.cid;\\n        if (cids[cid] || this._byCid[cid]) {\\n          throw new Error(\\\"Duplicate cid: can't add the same model \\\" +\\n                          \\\"to a collection twice\\\");\\n        }\\n        id = model.id;\\n        if (!Parse._isNullOrUndefined(id) && (ids[id] || this._byId[id])) {\\n          throw new Error(\\\"Duplicate id: can't add the same model \\\" +\\n                          \\\"to a collection twice\\\");\\n        }\\n        ids[id] = model;\\n        cids[cid] = model;\\n      }\\n\\n      // Listen to added models' events, and index models for lookup by\\n      // `id` and by `cid`.\\n      for (i = 0; i < length; i++) {\\n        (model = models[i]).on('all', this._onModelEvent, this);\\n        this._byCid[model.cid] = model;\\n        if (model.id) {\\n          this._byId[model.id] = model;\\n        }\\n      }\\n\\n      // Insert models into the collection, re-sorting if needed, and triggering\\n      // `add` events unless silenced.\\n      this.length += length;\\n      index = Parse._isNullOrUndefined(options.at) ?\\n          this.models.length : options.at;\\n      this.models.splice.apply(this.models, [index, 0].concat(models));\\n      if (this.comparator) {\\n        this.sort({silent: true});\\n      }\\n      if (options.silent) {\\n        return this;\\n      }\\n      for (i = 0, length = this.models.length; i < length; i++) {\\n        model = this.models[i];\\n        if (cids[model.cid]) {\\n          options.index = i;\\n          model.trigger('add', model, this, options);\\n        }\\n      }\\n      return this;\\n    },\\n\\n    /**\\n     * Remove a model, or a list of models from the set. Pass silent to avoid\\n     * firing the <code>remove</code> event for every model removed.\\n     *\\n     * @param {Array} models The model or list of models to remove from the\\n     *   collection.\\n     * @param {Object} options An optional object with Backbone-style options.\\n     * Valid options are: <ul>\\n     *   <li>silent: Set to true to avoid firing the `remove` event.\\n     * </ul>\\n     */\\n    remove: function(models, options) {\\n      var i, l, index, model;\\n      options = options || {};\\n      models = _.isArray(models) ? models.slice() : [models];\\n      for (i = 0, l = models.length; i < l; i++) {\\n        model = this.getByCid(models[i]) || this.get(models[i]);\\n        if (!model) {\\n          continue;\\n        }\\n        delete this._byId[model.id];\\n        delete this._byCid[model.cid];\\n        index = this.indexOf(model);\\n        this.models.splice(index, 1);\\n        this.length--;\\n        if (!options.silent) {\\n          options.index = index;\\n          model.trigger('remove', model, this, options);\\n        }\\n        this._removeReference(model);\\n      }\\n      return this;\\n    },\\n\\n    /**\\n     * Gets a model from the set by id.\\n     * @param {String} id The Parse objectId identifying the Parse.Object to\\n     * fetch from this collection.\\n     */\\n    get: function(id) {\\n      return id && this._byId[id.id || id];\\n    },\\n\\n    /**\\n     * Gets a model from the set by client id.\\n     * @param {} cid The Backbone collection id identifying the Parse.Object to\\n     * fetch from this collection.\\n     */\\n    getByCid: function(cid) {\\n      return cid && this._byCid[cid.cid || cid];\\n    },\\n\\n    /**\\n     * Gets the model at the given index.\\n     *\\n     * @param {Number} index The index of the model to return.\\n     */\\n    at: function(index) {\\n      return this.models[index];\\n    },\\n\\n    /**\\n     * Forces the collection to re-sort itself. You don't need to call this\\n     * under normal circumstances, as the set will maintain sort order as each\\n     * item is added.\\n     * @param {Object} options An optional object with Backbone-style options.\\n     * Valid options are: <ul>\\n     *   <li>silent: Set to true to avoid firing the `reset` event.\\n     * </ul>\\n     */\\n    sort: function(options) {\\n      options = options || {};\\n      if (!this.comparator) {\\n        throw new Error('Cannot sort a set without a comparator');\\n      }\\n      var boundComparator = _.bind(this.comparator, this);\\n      if (this.comparator.length === 1) {\\n        this.models = this.sortBy(boundComparator);\\n      } else {\\n        this.models.sort(boundComparator);\\n      }\\n      if (!options.silent) {\\n        this.trigger('reset', this, options);\\n      }\\n      return this;\\n    },\\n\\n    /**\\n     * Plucks an attribute from each model in the collection.\\n     * @param {String} attr The attribute to return from each model in the\\n     * collection.\\n     */\\n    pluck: function(attr) {\\n      return _.map(this.models, function(model){ return model.get(attr); });\\n    },\\n\\n    /**\\n     * When you have more items than you want to add or remove individually,\\n     * you can reset the entire set with a new list of models, without firing\\n     * any `add` or `remove` events. Fires `reset` when finished.\\n     *\\n     * @param {Array} models The model or list of models to remove from the\\n     *   collection.\\n     * @param {Object} options An optional object with Backbone-style options.\\n     * Valid options are: <ul>\\n     *   <li>silent: Set to true to avoid firing the `reset` event.\\n     * </ul>\\n     */\\n    reset: function(models, options) {\\n      var self = this;\\n      models = models || [];\\n      options = options || {};\\n      Parse._arrayEach(this.models, function(model) {\\n        self._removeReference(model);\\n      });\\n      this._reset();\\n      this.add(models, {silent: true, parse: options.parse});\\n      if (!options.silent) {\\n        this.trigger('reset', this, options);\\n      }\\n      return this;\\n    },\\n\\n    /**\\n     * Fetches the default set of models for this collection, resetting the\\n     * collection when they arrive. If `add: true` is passed, appends the\\n     * models to the collection instead of resetting.\\n     *\\n     * @param {Object} options An optional object with Backbone-style options.\\n     * Valid options are:<ul>\\n     *   <li>silent: Set to true to avoid firing `add` or `reset` events for\\n     *   models fetched by this fetch.\\n     *   <li>success: A Backbone-style success callback.\\n     *   <li>error: An Backbone-style error callback.\\n     *   <li>useMasterKey: In Cloud Code and Node only, uses the Master Key for\\n     *       this request.\\n     * </ul>\\n     */\\n    fetch: function(options) {\\n      options = _.clone(options) || {};\\n      if (options.parse === undefined) {\\n        options.parse = true;\\n      }\\n      var collection = this;\\n      var query = this.query || new Parse.Query(this.model);\\n      return query.find({\\n        useMasterKey: options.useMasterKey\\n      }).then(function(results) {\\n        if (options.add) {\\n          collection.add(results, options);\\n        } else {\\n          collection.reset(results, options);\\n        }\\n        return collection;\\n      })._thenRunCallbacks(options, this);\\n    },\\n\\n    /**\\n     * Creates a new instance of a model in this collection. Add the model to\\n     * the collection immediately, unless `wait: true` is passed, in which case\\n     * we wait for the server to agree.\\n     *\\n     * @param {Parse.Object} model The new model to create and add to the\\n     *   collection.\\n     * @param {Object} options An optional object with Backbone-style options.\\n     * Valid options are:<ul>\\n     *   <li>wait: Set to true to wait for the server to confirm creation of the\\n     *       model before adding it to the collection.\\n     *   <li>silent: Set to true to avoid firing an `add` event.\\n     *   <li>success: A Backbone-style success callback.\\n     *   <li>error: An Backbone-style error callback.\\n     *   <li>useMasterKey: In Cloud Code and Node only, uses the Master Key for\\n     *       this request.\\n     * </ul>\\n     */\\n    create: function(model, options) {\\n      var coll = this;\\n      options = options ? _.clone(options) : {};\\n      model = this._prepareModel(model, options);\\n      if (!model) {\\n        return false;\\n      }\\n      if (!options.wait) {\\n        coll.add(model, options);\\n      }\\n      var success = options.success;\\n      options.success = function(nextModel, resp, xhr) {\\n        if (options.wait) {\\n          coll.add(nextModel, options);\\n        }\\n        if (success) {\\n          success(nextModel, resp);\\n        } else {\\n          nextModel.trigger('sync', model, resp, options);\\n        }\\n      };\\n      model.save(null, options);\\n      return model;\\n    },\\n\\n    /**\\n     * Converts a response into a list of models to be added to the collection.\\n     * The default implementation is just to pass it through.\\n     * @ignore\\n     */\\n    parse: function(resp, xhr) {\\n      return resp;\\n    },\\n\\n    /**\\n     * Proxy to _'s chain. Can't be proxied the same way the rest of the\\n     * underscore methods are proxied because it relies on the underscore\\n     * constructor.\\n     */\\n    chain: function() {\\n      return _(this.models).chain();\\n    },\\n\\n    /**\\n     * Reset all internal state. Called when the collection is reset.\\n     */\\n    _reset: function(options) {\\n      this.length = 0;\\n      this.models = [];\\n      this._byId  = {};\\n      this._byCid = {};\\n    },\\n\\n    /**\\n     * Prepare a model or hash of attributes to be added to this collection.\\n     */\\n    _prepareModel: function(model, options) {\\n      if (!(model instanceof Parse.Object)) {\\n        var attrs = model;\\n        options.collection = this;\\n        model = new this.model(attrs, options);\\n        if (!model._validate(model.attributes, options)) {\\n          model = false;\\n        }\\n      } else if (!model.collection) {\\n        model.collection = this;\\n      }\\n      return model;\\n    },\\n\\n    /**\\n     * Internal method to remove a model's ties to a collection.\\n     */\\n    _removeReference: function(model) {\\n      if (this === model.collection) {\\n        delete model.collection;\\n      }\\n      model.off('all', this._onModelEvent, this);\\n    },\\n\\n    /**\\n     * Internal method called every time a model in the set fires an event.\\n     * Sets need to update their indexes when models change ids. All other\\n     * events simply proxy through. \\\"add\\\" and \\\"remove\\\" events that originate\\n     * in other collections are ignored.\\n     */\\n    _onModelEvent: function(ev, model, collection, options) {\\n      if ((ev === 'add' || ev === 'remove') && collection !== this) {\\n        return;\\n      }\\n      if (ev === 'destroy') {\\n        this.remove(model, options);\\n      }\\n      if (model && ev === 'change:objectId') {\\n        delete this._byId[model.previous(\\\"objectId\\\")];\\n        this._byId[model.id] = model;\\n      }\\n      this.trigger.apply(this, arguments);\\n    }\\n\\n  });\\n\\n  // Underscore methods that we want to implement on the Collection.\\n  var methods = ['forEach', 'each', 'map', 'reduce', 'reduceRight', 'find',\\n    'detect', 'filter', 'select', 'reject', 'every', 'all', 'some', 'any',\\n    'include', 'contains', 'invoke', 'max', 'min', 'sortBy', 'sortedIndex',\\n    'toArray', 'size', 'first', 'initial', 'rest', 'last', 'without', 'indexOf',\\n    'shuffle', 'lastIndexOf', 'isEmpty', 'groupBy'];\\n\\n  // Mix in each Underscore method as a proxy to `Collection#models`.\\n  Parse._arrayEach(methods, function(method) {\\n    Parse.Collection.prototype[method] = function() {\\n      return _[method].apply(_, [this.models].concat(_.toArray(arguments)));\\n    };\\n  });\\n\\n  /**\\n   * Creates a new subclass of <code>Parse.Collection</code>.  For example,<pre>\\n   *   var MyCollection = Parse.Collection.extend({\\n   *     // Instance properties\\n   *\\n   *     model: MyClass,\\n   *     query: MyQuery,\\n   *\\n   *     getFirst: function() {\\n   *       return this.at(0);\\n   *     }\\n   *   }, {\\n   *     // Class properties\\n   *\\n   *     makeOne: function() {\\n   *       return new MyCollection();\\n   *     }\\n   *   });\\n   *\\n   *   var collection = new MyCollection();\\n   * </pre>\\n   *\\n   * @function\\n   * @param {Object} instanceProps Instance properties for the collection.\\n   * @param {Object} classProps Class properies for the collection.\\n   * @return {Class} A new subclass of <code>Parse.Collection</code>.\\n   */\\n  Parse.Collection.extend = Parse._extend;\\n\\n}(this));\\n\\n/*global _: false, document: false */\\n(function(root) {\\n  root.Parse = root.Parse || {};\\n  var Parse = root.Parse;\\n  var _ = Parse._;\\n\\n  /**\\n   * Creating a Parse.View creates its initial element outside of the DOM,\\n   * if an existing element is not provided...\\n   * @class\\n   *\\n   * <p>A fork of Backbone.View, provided for your convenience.  If you use this\\n   * class, you must also include jQuery, or another library that provides a\\n   * jQuery-compatible $ function.  For more information, see the\\n   * <a href=\\\"http://documentcloud.github.com/backbone/#View\\\">Backbone\\n   * documentation</a>.</p>\\n   * <p><strong><em>Available in the client SDK only.</em></strong></p>\\n   */\\n  Parse.View = function(options) {\\n    this.cid = _.uniqueId('view');\\n    this._configure(options || {});\\n    this._ensureElement();\\n    this.initialize.apply(this, arguments);\\n    this.delegateEvents();\\n  };\\n\\n  // Cached regex to split keys for `delegate`.\\n  var eventSplitter = /^(\\\\S+)\\\\s*(.*)$/;\\n\\n  // List of view options to be merged as properties.\\n\\n  var viewOptions = ['model', 'collection', 'el', 'id', 'attributes',\\n                     'className', 'tagName'];\\n\\n  // Set up all inheritable **Parse.View** properties and methods.\\n  _.extend(Parse.View.prototype, Parse.Events,\\n           /** @lends Parse.View.prototype */ {\\n\\n    // The default `tagName` of a View's element is `\\\"div\\\"`.\\n    tagName: 'div',\\n\\n    /**\\n     * jQuery delegate for element lookup, scoped to DOM elements within the\\n     * current view. This should be prefered to global lookups where possible.\\n     */\\n    $: function(selector) {\\n      return this.$el.find(selector);\\n    },\\n\\n    /**\\n     * Initialize is an empty function by default. Override it with your own\\n     * initialization logic.\\n     */\\n    initialize: function(){},\\n\\n    /**\\n     * The core function that your view should override, in order\\n     * to populate its element (`this.el`), with the appropriate HTML. The\\n     * convention is for **render** to always return `this`.\\n     */\\n    render: function() {\\n      return this;\\n    },\\n\\n    /**\\n     * Remove this view from the DOM. Note that the view isn't present in the\\n     * DOM by default, so calling this method may be a no-op.\\n     */\\n    remove: function() {\\n      this.$el.remove();\\n      return this;\\n    },\\n\\n    /**\\n     * For small amounts of DOM Elements, where a full-blown template isn't\\n     * needed, use **make** to manufacture elements, one at a time.\\n     * <pre>\\n     *     var el = this.make('li', {'class': 'row'},\\n     *                        this.model.escape('title'));</pre>\\n     */\\n    make: function(tagName, attributes, content) {\\n      var el = document.createElement(tagName);\\n      if (attributes) {\\n        Parse.$(el).attr(attributes);\\n      }\\n      if (content) {\\n        Parse.$(el).html(content);\\n      }\\n      return el;\\n    },\\n\\n    /**\\n     * Changes the view's element (`this.el` property), including event\\n     * re-delegation.\\n     */\\n    setElement: function(element, delegate) {\\n      this.$el = Parse.$(element);\\n      this.el = this.$el[0];\\n      if (delegate !== false) {\\n        this.delegateEvents();\\n      }\\n      return this;\\n    },\\n\\n    /**\\n     * Set callbacks.  <code>this.events</code> is a hash of\\n     * <pre>\\n     * *{\\\"event selector\\\": \\\"callback\\\"}*\\n     *\\n     *     {\\n     *       'mousedown .title':  'edit',\\n     *       'click .button':     'save'\\n     *       'click .open':       function(e) { ... }\\n     *     }\\n     * </pre>\\n     * pairs. Callbacks will be bound to the view, with `this` set properly.\\n     * Uses event delegation for efficiency.\\n     * Omitting the selector binds the event to `this.el`.\\n     * This only works for delegate-able events: not `focus`, `blur`, and\\n     * not `change`, `submit`, and `reset` in Internet Explorer.\\n     */\\n    delegateEvents: function(events) {\\n      events = events || Parse._getValue(this, 'events');\\n      if (!events) {\\n        return;\\n      }\\n      this.undelegateEvents();\\n      var self = this;\\n      Parse._objectEach(events, function(method, key) {\\n        if (!_.isFunction(method)) {\\n          method = self[events[key]];\\n        }\\n        if (!method) {\\n          throw new Error('Event \\\"' + events[key] + '\\\" does not exist');\\n        }\\n        var match = key.match(eventSplitter);\\n        var eventName = match[1], selector = match[2];\\n        method = _.bind(method, self);\\n        eventName += '.delegateEvents' + self.cid;\\n        if (selector === '') {\\n          self.$el.bind(eventName, method);\\n        } else {\\n          self.$el.delegate(selector, eventName, method);\\n        }\\n      });\\n    },\\n\\n    /**\\n     * Clears all callbacks previously bound to the view with `delegateEvents`.\\n     * You usually don't need to use this, but may wish to if you have multiple\\n     * Backbone views attached to the same DOM element.\\n     */\\n    undelegateEvents: function() {\\n      this.$el.unbind('.delegateEvents' + this.cid);\\n    },\\n\\n    /**\\n     * Performs the initial configuration of a View with a set of options.\\n     * Keys with special meaning *(model, collection, id, className)*, are\\n     * attached directly to the view.\\n     */\\n    _configure: function(options) {\\n      if (this.options) {\\n        options = _.extend({}, this.options, options);\\n      }\\n      var self = this;\\n      _.each(viewOptions, function(attr) {\\n        if (options[attr]) {\\n          self[attr] = options[attr];\\n        }\\n      });\\n      this.options = options;\\n    },\\n\\n    /**\\n     * Ensure that the View has a DOM element to render into.\\n     * If `this.el` is a string, pass it through `$()`, take the first\\n     * matching element, and re-assign it to `el`. Otherwise, create\\n     * an element from the `id`, `className` and `tagName` properties.\\n     */\\n    _ensureElement: function() {\\n      if (!this.el) {\\n        var attrs = Parse._getValue(this, 'attributes') || {};\\n        if (this.id) {\\n          attrs.id = this.id;\\n        }\\n        if (this.className) {\\n          attrs['class'] = this.className;\\n        }\\n        this.setElement(this.make(this.tagName, attrs), false);\\n      } else {\\n        this.setElement(this.el, false);\\n      }\\n    }\\n\\n  });\\n\\n  /**\\n   * @function\\n   * @param {Object} instanceProps Instance properties for the view.\\n   * @param {Object} classProps Class properies for the view.\\n   * @return {Class} A new subclass of <code>Parse.View</code>.\\n   */\\n  Parse.View.extend = Parse._extend;\\n\\n}(this));\\n\\n(function(root) {\\n  root.Parse = root.Parse || {};\\n  var Parse = root.Parse;\\n  var _ = Parse._;\\n\\n  /**\\n   * @class\\n   *\\n   * <p>A Parse.User object is a local representation of a user persisted to the\\n   * Parse cloud. This class is a subclass of a Parse.Object, and retains the\\n   * same functionality of a Parse.Object, but also extends it with various\\n   * user specific methods, like authentication, signing up, and validation of\\n   * uniqueness.</p>\\n   */\\n  Parse.User = Parse.Object.extend(\\\"_User\\\", /** @lends Parse.User.prototype */ {\\n    // Instance Variables\\n    _isCurrentUser: false,\\n\\n\\n    // Instance Methods\\n\\n    /**\\n     * Merges another object's attributes into this object.\\n     */\\n    _mergeFromObject: function(other) {\\n      if (other.getSessionToken()) {\\n        this._sessionToken = other.getSessionToken();\\n      }\\n      Parse.User.__super__._mergeFromObject.call(this, other);\\n    },\\n\\n    /**\\n     * Internal method to handle special fields in a _User response.\\n     */\\n    _mergeMagicFields: function(attrs) {\\n      if (attrs.sessionToken) {\\n        this._sessionToken = attrs.sessionToken;\\n        delete attrs.sessionToken;\\n      }\\n      Parse.User.__super__._mergeMagicFields.call(this, attrs);\\n    },\\n\\n    /**\\n     * Removes null values from authData (which exist temporarily for\\n     * unlinking)\\n     */\\n    _cleanupAuthData: function() {\\n      if (!this.isCurrent()) {\\n        return;\\n      }\\n      var authData = this.get('authData');\\n      if (!authData) {\\n        return;\\n      }\\n      Parse._objectEach(this.get('authData'), function(value, key) {\\n        if (!authData[key]) {\\n          delete authData[key];\\n        }\\n      });\\n    },\\n\\n    /**\\n     * Synchronizes authData for all providers.\\n     */\\n    _synchronizeAllAuthData: function() {\\n      var authData = this.get('authData');\\n      if (!authData) {\\n        return;\\n      }\\n\\n      var self = this;\\n      Parse._objectEach(this.get('authData'), function(value, key) {\\n        self._synchronizeAuthData(key);\\n      });\\n    },\\n\\n    /**\\n     * Synchronizes auth data for a provider (e.g. puts the access token in the\\n     * right place to be used by the Facebook SDK).\\n     */\\n    _synchronizeAuthData: function(provider) {\\n      if (!this.isCurrent()) {\\n        return;\\n      }\\n      var authType;\\n      if (_.isString(provider)) {\\n        authType = provider;\\n        provider = Parse.User._authProviders[authType];\\n      } else {\\n        authType = provider.getAuthType();\\n      }\\n      var authData = this.get('authData');\\n      if (!authData || !provider) {\\n        return;\\n      }\\n      var success = provider.restoreAuthentication(authData[authType]);\\n      if (!success) {\\n        this._unlinkFrom(provider);\\n      }\\n    },\\n\\n    _handleSaveResult: function(makeCurrent) {\\n      // Clean up and synchronize the authData object, removing any unset values\\n      if (makeCurrent) {\\n        this._isCurrentUser = true;\\n      }\\n      this._cleanupAuthData();\\n      this._synchronizeAllAuthData();\\n      // Don't keep the password around.\\n      delete this._serverData.password;\\n      this._rebuildEstimatedDataForKey(\\\"password\\\");\\n      this._refreshCache();\\n      if (makeCurrent || this.isCurrent()) {\\n        Parse.User._saveCurrentUser(this);\\n      }\\n    },\\n\\n    /**\\n     * Unlike in the Android/iOS SDKs, logInWith is unnecessary, since you can\\n     * call linkWith on the user (even if it doesn't exist yet on the server).\\n     */\\n    _linkWith: function(provider, options) {\\n      var authType;\\n      if (_.isString(provider)) {\\n        authType = provider;\\n        provider = Parse.User._authProviders[provider];\\n      } else {\\n        authType = provider.getAuthType();\\n      }\\n      if (_.has(options, 'authData')) {\\n        var authData = this.get('authData') || {};\\n        authData[authType] = options.authData;\\n        this.set('authData', authData);\\n\\n        // Overridden so that the user can be made the current user.\\n        var newOptions = _.clone(options) || {};\\n        newOptions.success = function(model) {\\n          model._handleSaveResult(true);\\n          if (options.success) {\\n            options.success.apply(this, arguments);\\n          }\\n        };\\n        return this.save({'authData': authData}, newOptions);\\n      } else {\\n        var self = this;\\n        var promise = new Parse.Promise();\\n        provider.authenticate({\\n          success: function(provider, result) {\\n            self._linkWith(provider, {\\n              authData: result,\\n              success: options.success,\\n              error: options.error\\n            }).then(function() {\\n              promise.resolve(self);\\n            });\\n          },\\n          error: function(provider, error) {\\n            if (options.error) {\\n              options.error(self, error);\\n            }\\n            promise.reject(error);\\n          }\\n        });\\n        return promise;\\n      }\\n    },\\n\\n    /**\\n     * Unlinks a user from a service.\\n     */\\n    _unlinkFrom: function(provider, options) {\\n      var authType;\\n      if (_.isString(provider)) {\\n        authType = provider;\\n        provider = Parse.User._authProviders[provider];\\n      } else {\\n        authType = provider.getAuthType();\\n      }\\n      var newOptions = _.clone(options);\\n      var self = this;\\n      newOptions.authData = null;\\n      newOptions.success = function(model) {\\n        self._synchronizeAuthData(provider);\\n        if (options.success) {\\n          options.success.apply(this, arguments);\\n        }\\n      };\\n      return this._linkWith(provider, newOptions);\\n    },\\n\\n    /**\\n     * Checks whether a user is linked to a service.\\n     */\\n    _isLinked: function(provider) {\\n      var authType;\\n      if (_.isString(provider)) {\\n        authType = provider;\\n      } else {\\n        authType = provider.getAuthType();\\n      }\\n      var authData = this.get('authData') || {};\\n      return !!authData[authType];\\n    },\\n\\n    /**\\n     * Deauthenticates all providers.\\n     */\\n    _logOutWithAll: function() {\\n      var authData = this.get('authData');\\n      if (!authData) {\\n        return;\\n      }\\n      var self = this;\\n      Parse._objectEach(this.get('authData'), function(value, key) {\\n        self._logOutWith(key);\\n      });\\n    },\\n\\n    /**\\n     * Deauthenticates a single provider (e.g. removing access tokens from the\\n     * Facebook SDK).\\n     */\\n    _logOutWith: function(provider) {\\n      if (!this.isCurrent()) {\\n        return;\\n      }\\n      if (_.isString(provider)) {\\n        provider = Parse.User._authProviders[provider];\\n      }\\n      if (provider && provider.deauthenticate) {\\n        provider.deauthenticate();\\n      }\\n    },\\n\\n    /**\\n     * Signs up a new user. You should call this instead of save for\\n     * new Parse.Users. This will create a new Parse.User on the server, and\\n     * also persist the session on disk so that you can access the user using\\n     * <code>current</code>.\\n     *\\n     * <p>A username and password must be set before calling signUp.</p>\\n     *\\n     * <p>Calls options.success or options.error on completion.</p>\\n     *\\n     * @param {Object} attrs Extra fields to set on the new user, or null.\\n     * @param {Object} options A Backbone-style options object.\\n     * @return {Parse.Promise} A promise that is fulfilled when the signup\\n     *     finishes.\\n     * @see Parse.User.signUp\\n     */\\n    signUp: function(attrs, options) {\\n      var error;\\n      options = options || {};\\n\\n      var username = (attrs && attrs.username) || this.get(\\\"username\\\");\\n      if (!username || (username === \\\"\\\")) {\\n        error = new Parse.Error(\\n            Parse.Error.OTHER_CAUSE,\\n            \\\"Cannot sign up user with an empty name.\\\");\\n        if (options && options.error) {\\n          options.error(this, error);\\n        }\\n        return Parse.Promise.error(error);\\n      }\\n\\n      var password = (attrs && attrs.password) || this.get(\\\"password\\\");\\n      if (!password || (password === \\\"\\\")) {\\n        error = new Parse.Error(\\n            Parse.Error.OTHER_CAUSE,\\n            \\\"Cannot sign up user with an empty password.\\\");\\n        if (options && options.error) {\\n          options.error(this, error);\\n        }\\n        return Parse.Promise.error(error);\\n      }\\n\\n      // Overridden so that the user can be made the current user.\\n      var newOptions = _.clone(options);\\n      newOptions.success = function(model) {\\n        model._handleSaveResult(true);\\n        if (options.success) {\\n          options.success.apply(this, arguments);\\n        }\\n      };\\n      return this.save(attrs, newOptions);\\n    },\\n\\n    /**\\n     * Logs in a Parse.User. On success, this saves the session to localStorage,\\n     * so you can retrieve the currently logged in user using\\n     * <code>current</code>.\\n     *\\n     * <p>A username and password must be set before calling logIn.</p>\\n     *\\n     * <p>Calls options.success or options.error on completion.</p>\\n     *\\n     * @param {Object} options A Backbone-style options object.\\n     * @see Parse.User.logIn\\n     * @return {Parse.Promise} A promise that is fulfilled with the user when\\n     *     the login is complete.\\n     */\\n    logIn: function(options) {\\n      var model = this;\\n      options = options || {};\\n      var request = Parse._request({\\n        route: \\\"login\\\",\\n        method: \\\"GET\\\",\\n        useMasterKey: options.useMasterKey,\\n        data: this.toJSON()\\n      });\\n      return request.then(function(resp, status, xhr) {\\n        var serverAttrs = model.parse(resp, status, xhr);\\n        model._finishFetch(serverAttrs);\\n        model._handleSaveResult(true);\\n        return model;\\n      })._thenRunCallbacks(options, this);\\n    },\\n\\n    /**\\n     * @see Parse.Object#save\\n     */\\n    save: function(arg1, arg2, arg3) {\\n      var i, attrs, current, options, saved;\\n      if (_.isObject(arg1) || _.isNull(arg1) || _.isUndefined(arg1)) {\\n        attrs = arg1;\\n        options = arg2;\\n      } else {\\n        attrs = {};\\n        attrs[arg1] = arg2;\\n        options = arg3;\\n      }\\n      options = options || {};\\n\\n      var newOptions = _.clone(options);\\n      newOptions.success = function(model) {\\n        model._handleSaveResult(false);\\n        if (options.success) {\\n          options.success.apply(this, arguments);\\n        }\\n      };\\n      return Parse.Object.prototype.save.call(this, attrs, newOptions);\\n    },\\n\\n    /**\\n     * @see Parse.Object#fetch\\n     */\\n    fetch: function(options) {\\n      var newOptions = options ? _.clone(options) : {};\\n      newOptions.success = function(model) {\\n        model._handleSaveResult(false);\\n        if (options && options.success) {\\n          options.success.apply(this, arguments);\\n        }\\n      };\\n      return Parse.Object.prototype.fetch.call(this, newOptions);\\n    },\\n\\n    /**\\n     * Returns true if <code>current</code> would return this user.\\n     * @see Parse.User#current\\n     */\\n    isCurrent: function() {\\n      return this._isCurrentUser;\\n    },\\n\\n    /**\\n     * Returns get(\\\"username\\\").\\n     * @return {String}\\n     * @see Parse.Object#get\\n     */\\n    getUsername: function() {\\n      return this.get(\\\"username\\\");\\n    },\\n\\n    /**\\n     * Calls set(\\\"username\\\", username, options) and returns the result.\\n     * @param {String} username\\n     * @param {Object} options A Backbone-style options object.\\n     * @return {Boolean}\\n     * @see Parse.Object.set\\n     */\\n    setUsername: function(username, options) {\\n      return this.set(\\\"username\\\", username, options);\\n    },\\n\\n    /**\\n     * Calls set(\\\"password\\\", password, options) and returns the result.\\n     * @param {String} password\\n     * @param {Object} options A Backbone-style options object.\\n     * @return {Boolean}\\n     * @see Parse.Object.set\\n     */\\n    setPassword: function(password, options) {\\n      return this.set(\\\"password\\\", password, options);\\n    },\\n\\n    /**\\n     * Returns get(\\\"email\\\").\\n     * @return {String}\\n     * @see Parse.Object#get\\n     */\\n    getEmail: function() {\\n      return this.get(\\\"email\\\");\\n    },\\n\\n    /**\\n     * Calls set(\\\"email\\\", email, options) and returns the result.\\n     * @param {String} email\\n     * @param {Object} options A Backbone-style options object.\\n     * @return {Boolean}\\n     * @see Parse.Object.set\\n     */\\n    setEmail: function(email, options) {\\n      return this.set(\\\"email\\\", email, options);\\n    },\\n\\n    /**\\n     * Checks whether this user is the current user and has been authenticated.\\n     * @return (Boolean) whether this user is the current user and is logged in.\\n     */\\n    authenticated: function() {\\n      return !!this._sessionToken &&\\n          (Parse.User.current() && Parse.User.current().id === this.id);\\n    },\\n\\n    /**\\n     * Returns the session token for this user, if the user has been logged in,\\n     * or if it is the result of a query with the master key. Otherwise, returns\\n     * undefined.\\n     * @return {String} the session token, or undefined\\n     */\\n    getSessionToken: function() {\\n      return this._sessionToken;\\n    }\\n\\n  }, /** @lends Parse.User */ {\\n    // Class Variables\\n\\n    // The currently logged-in user.\\n    _currentUser: null,\\n\\n    // Whether currentUser is known to match the serialized version on disk.\\n    // This is useful for saving a localstorage check if you try to load\\n    // _currentUser frequently while there is none stored.\\n    _currentUserMatchesDisk: false,\\n\\n    // The localStorage key suffix that the current user is stored under.\\n    _CURRENT_USER_KEY: \\\"currentUser\\\",\\n\\n    // The mapping of auth provider names to actual providers\\n    _authProviders: {},\\n\\n    // Whether to rewrite className User to _User\\n    _performUserRewrite: true,\\n\\n\\n    // Class Methods\\n\\n    /**\\n     * Signs up a new user with a username (or email) and password.\\n     * This will create a new Parse.User on the server, and also persist the\\n     * session in localStorage so that you can access the user using\\n     * {@link #current}.\\n     *\\n     * <p>Calls options.success or options.error on completion.</p>\\n     *\\n     * @param {String} username The username (or email) to sign up with.\\n     * @param {String} password The password to sign up with.\\n     * @param {Object} attrs Extra fields to set on the new user.\\n     * @param {Object} options A Backbone-style options object.\\n     * @return {Parse.Promise} A promise that is fulfilled with the user when\\n     *     the signup completes.\\n     * @see Parse.User#signUp\\n     */\\n    signUp: function(username, password, attrs, options) {\\n      attrs = attrs || {};\\n      attrs.username = username;\\n      attrs.password = password;\\n      var user = Parse.Object._create(\\\"_User\\\");\\n      return user.signUp(attrs, options);\\n    },\\n\\n    /**\\n     * Logs in a user with a username (or email) and password. On success, this\\n     * saves the session to disk, so you can retrieve the currently logged in\\n     * user using <code>current</code>.\\n     *\\n     * <p>Calls options.success or options.error on completion.</p>\\n     *\\n     * @param {String} username The username (or email) to log in with.\\n     * @param {String} password The password to log in with.\\n     * @param {Object} options A Backbone-style options object.\\n     * @return {Parse.Promise} A promise that is fulfilled with the user when\\n     *     the login completes.\\n     * @see Parse.User#logIn\\n     */\\n    logIn: function(username, password, options) {\\n      var user = Parse.Object._create(\\\"_User\\\");\\n      user._finishFetch({ username: username, password: password });\\n      return user.logIn(options);\\n    },\\n\\n    /**\\n     * Logs in a user with a session token. On success, this saves the session\\n     * to disk, so you can retrieve the currently logged in user using\\n     * <code>current</code>.\\n     *\\n     * <p>Calls options.success or options.error on completion.</p>\\n     *\\n     * @param {String} sessionToken The sessionToken to log in with.\\n     * @param {Object} options A Backbone-style options object.\\n     * @return {Parse.Promise} A promise that is fulfilled with the user when\\n     *     the login completes.\\n     */\\n    become: function(sessionToken, options) {\\n      options = options || {};\\n\\n      var user = Parse.Object._create(\\\"_User\\\");\\n      return Parse._request({\\n        route: \\\"users\\\",\\n        className: \\\"me\\\",\\n        method: \\\"GET\\\",\\n        useMasterKey: options.useMasterKey,\\n        sessionToken: sessionToken\\n      }).then(function(resp, status, xhr) {\\n        var serverAttrs = user.parse(resp, status, xhr);\\n        user._finishFetch(serverAttrs);\\n        user._handleSaveResult(true);\\n        return user;\\n\\n      })._thenRunCallbacks(options, user);\\n    },\\n\\n    /**\\n     * Logs out the currently logged in user session. This will remove the\\n     * session from disk, log out of linked services, and future calls to\\n     * <code>current</code> will return <code>null</code>.\\n     */\\n    logOut: function() {\\n      if (Parse.User._currentUser !== null) {\\n        Parse.User._currentUser._logOutWithAll();\\n        Parse.User._currentUser._isCurrentUser = false;\\n      }\\n      Parse.User._currentUserMatchesDisk = true;\\n      Parse.User._currentUser = null;\\n      Parse.localStorage.removeItem(\\n          Parse._getParsePath(Parse.User._CURRENT_USER_KEY));\\n    },\\n\\n    /**\\n     * Requests a password reset email to be sent to the specified email address\\n     * associated with the user account. This email allows the user to securely\\n     * reset their password on the Parse site.\\n     *\\n     * <p>Calls options.success or options.error on completion.</p>\\n     *\\n     * @param {String} email The email address associated with the user that\\n     *     forgot their password.\\n     * @param {Object} options A Backbone-style options object.\\n     */\\n    requestPasswordReset: function(email, options) {\\n      options = options || {};\\n      var request = Parse._request({\\n        route: \\\"requestPasswordReset\\\",\\n        method: \\\"POST\\\",\\n        useMasterKey: options.useMasterKey,\\n        data: { email: email }\\n      });\\n      return request._thenRunCallbacks(options);\\n    },\\n\\n    /**\\n     * Retrieves the currently logged in ParseUser with a valid session,\\n     * either from memory or localStorage, if necessary.\\n     * @return {Parse.Object} The currently logged in Parse.User.\\n     */\\n    current: function() {\\n      if (Parse.User._currentUser) {\\n        return Parse.User._currentUser;\\n      }\\n\\n      if (Parse.User._currentUserMatchesDisk) {\\n\\n        return Parse.User._currentUser;\\n      }\\n\\n      // Load the user from local storage.\\n      Parse.User._currentUserMatchesDisk = true;\\n\\n      var userData = Parse.localStorage.getItem(Parse._getParsePath(\\n          Parse.User._CURRENT_USER_KEY));\\n      if (!userData) {\\n\\n        return null;\\n      }\\n      Parse.User._currentUser = Parse.Object._create(\\\"_User\\\");\\n      Parse.User._currentUser._isCurrentUser = true;\\n\\n      var json = JSON.parse(userData);\\n      Parse.User._currentUser.id = json._id;\\n      delete json._id;\\n      Parse.User._currentUser._sessionToken = json._sessionToken;\\n      delete json._sessionToken;\\n      Parse.User._currentUser._finishFetch(json);\\n\\n      Parse.User._currentUser._synchronizeAllAuthData();\\n      Parse.User._currentUser._refreshCache();\\n      Parse.User._currentUser._opSetQueue = [{}];\\n      return Parse.User._currentUser;\\n    },\\n\\n    /**\\n     * Allow someone to define a custom User class without className\\n     * being rewritten to _User. The default behavior is to rewrite\\n     * User to _User for legacy reasons. This allows developers to\\n     * override that behavior.\\n     *\\n     * @param {Boolean} isAllowed Whether or not to allow custom User class\\n     */\\n    allowCustomUserClass: function(isAllowed) {\\n      this._performUserRewrite = !isAllowed;\\n    },\\n\\n    /**\\n     * Persists a user as currentUser to localStorage, and into the singleton.\\n     */\\n    _saveCurrentUser: function(user) {\\n      if (Parse.User._currentUser !== user) {\\n        Parse.User.logOut();\\n      }\\n      user._isCurrentUser = true;\\n      Parse.User._currentUser = user;\\n      Parse.User._currentUserMatchesDisk = true;\\n\\n      var json = user.toJSON();\\n      json._id = user.id;\\n      json._sessionToken = user._sessionToken;\\n      Parse.localStorage.setItem(\\n          Parse._getParsePath(Parse.User._CURRENT_USER_KEY),\\n          JSON.stringify(json));\\n    },\\n\\n    _registerAuthenticationProvider: function(provider) {\\n      Parse.User._authProviders[provider.getAuthType()] = provider;\\n      // Synchronize the current user with the auth provider.\\n      if (Parse.User.current()) {\\n        Parse.User.current()._synchronizeAuthData(provider.getAuthType());\\n      }\\n    },\\n\\n    _logInWith: function(provider, options) {\\n      var user = Parse.Object._create(\\\"_User\\\");\\n      return user._linkWith(provider, options);\\n    }\\n\\n  });\\n}(this));\\n\\n\\n// Parse.Query is a way to create a list of Parse.Objects.\\n(function(root) {\\n  root.Parse = root.Parse || {};\\n  var Parse = root.Parse;\\n  var _ = Parse._;\\n\\n  /**\\n   * Creates a new parse Parse.Query for the given Parse.Object subclass.\\n   * @param objectClass -\\n   *   An instance of a subclass of Parse.Object, or a Parse className string.\\n   * @class\\n   *\\n   * <p>Parse.Query defines a query that is used to fetch Parse.Objects. The\\n   * most common use case is finding all objects that match a query through the\\n   * <code>find</code> method. For example, this sample code fetches all objects\\n   * of class <code>MyClass</code>. It calls a different function depending on\\n   * whether the fetch succeeded or not.\\n   *\\n   * <pre>\\n   * var query = new Parse.Query(MyClass);\\n   * query.find({\\n   *   success: function(results) {\\n   *     // results is an array of Parse.Object.\\n   *   },\\n   *\\n   *   error: function(error) {\\n   *     // error is an instance of Parse.Error.\\n   *   }\\n   * });</pre></p>\\n   *\\n   * <p>A Parse.Query can also be used to retrieve a single object whose id is\\n   * known, through the get method. For example, this sample code fetches an\\n   * object of class <code>MyClass</code> and id <code>myId</code>. It calls a\\n   * different function depending on whether the fetch succeeded or not.\\n   *\\n   * <pre>\\n   * var query = new Parse.Query(MyClass);\\n   * query.get(myId, {\\n   *   success: function(object) {\\n   *     // object is an instance of Parse.Object.\\n   *   },\\n   *\\n   *   error: function(object, error) {\\n   *     // error is an instance of Parse.Error.\\n   *   }\\n   * });</pre></p>\\n   *\\n   * <p>A Parse.Query can also be used to count the number of objects that match\\n   * the query without retrieving all of those objects. For example, this\\n   * sample code counts the number of objects of the class <code>MyClass</code>\\n   * <pre>\\n   * var query = new Parse.Query(MyClass);\\n   * query.count({\\n   *   success: function(number) {\\n   *     // There are number instances of MyClass.\\n   *   },\\n   *\\n   *   error: function(error) {\\n   *     // error is an instance of Parse.Error.\\n   *   }\\n   * });</pre></p>\\n   */\\n  Parse.Query = function(objectClass) {\\n    if (_.isString(objectClass)) {\\n      objectClass = Parse.Object._getSubclass(objectClass);\\n    }\\n\\n    this.objectClass = objectClass;\\n\\n    this.className = objectClass.prototype.className;\\n\\n    this._where = {};\\n    this._include = [];\\n    this._limit = -1; // negative limit means, do not send a limit\\n    this._skip = 0;\\n    this._extraOptions = {};\\n  };\\n\\n  /**\\n   * Constructs a Parse.Query that is the OR of the passed in queries.  For\\n   * example:\\n   * <pre>var compoundQuery = Parse.Query.or(query1, query2, query3);</pre>\\n   *\\n   * will create a compoundQuery that is an or of the query1, query2, and\\n   * query3.\\n   * @param {...Parse.Query} var_args The list of queries to OR.\\n   * @return {Parse.Query} The query that is the OR of the passed in queries.\\n   */\\n  Parse.Query.or = function() {\\n    var queries = _.toArray(arguments);\\n    var className = null;\\n    Parse._arrayEach(queries, function(q) {\\n      if (_.isNull(className)) {\\n        className = q.className;\\n      }\\n\\n      if (className !== q.className) {\\n        throw \\\"All queries must be for the same class\\\";\\n      }\\n    });\\n    var query = new Parse.Query(className);\\n    query._orQuery(queries);\\n    return query;\\n  };\\n\\n  Parse.Query.prototype = {\\n    /**\\n     * Constructs a Parse.Object whose id is already known by fetching data from\\n     * the server.  Either options.success or options.error is called when the\\n     * find completes.\\n     *\\n     * @param {String} objectId The id of the object to be fetched.\\n     * @param {Object} options A Backbone-style options object.\\n     * Valid options are:<ul>\\n     *   <li>success: A Backbone-style success callback\\n     *   <li>error: An Backbone-style error callback.\\n     *   <li>useMasterKey: In Cloud Code and Node only, causes the Master Key to\\n     *     be used for this request.\\n     * </ul>\\n     */\\n    get: function(objectId, options) {\\n      var self = this;\\n      self.equalTo('objectId', objectId);\\n\\n      var firstOptions = {};\\n      if (options && _.has(options, 'useMasterKey')) {\\n        firstOptions = { useMasterKey: options.useMasterKey };\\n      }\\n\\n      return self.first(firstOptions).then(function(response) {\\n        if (response) {\\n          return response;\\n        }\\n\\n        var errorObject = new Parse.Error(Parse.Error.OBJECT_NOT_FOUND,\\n                                          \\\"Object not found.\\\");\\n        return Parse.Promise.error(errorObject);\\n\\n      })._thenRunCallbacks(options, null);\\n    },\\n\\n    /**\\n     * Returns a JSON representation of this query.\\n     * @return {Object} The JSON representation of the query.\\n     */\\n    toJSON: function() {\\n      var params = {\\n        where: this._where\\n      };\\n\\n      if (this._include.length > 0) {\\n        params.include = this._include.join(\\\",\\\");\\n      }\\n      if (this._select) {\\n        params.keys = this._select.join(\\\",\\\");\\n      }\\n      if (this._limit >= 0) {\\n        params.limit = this._limit;\\n      }\\n      if (this._skip > 0) {\\n        params.skip = this._skip;\\n      }\\n      if (this._order !== undefined) {\\n        params.order = this._order.join(\\\",\\\");\\n      }\\n\\n      Parse._objectEach(this._extraOptions, function(v, k) {\\n        params[k] = v;\\n      });\\n\\n      return params;\\n    },\\n\\n    /**\\n     * Retrieves a list of ParseObjects that satisfy this query.\\n     * Either options.success or options.error is called when the find\\n     * completes.\\n     *\\n     * @param {Object} options A Backbone-style options object. Valid options\\n     * are:<ul>\\n     *   <li>success: Function to call when the find completes successfully.\\n     *   <li>error: Function to call when the find fails.\\n     *   <li>useMasterKey: In Cloud Code and Node only, causes the Master Key to\\n     *     be used for this request.\\n     * </ul>\\n     *\\n     * @return {Parse.Promise} A promise that is resolved with the results when\\n     * the query completes.\\n     */\\n    find: function(options) {\\n      var self = this;\\n      options = options || {};\\n\\n      var request = Parse._request({\\n        route: \\\"classes\\\",\\n        className: this.className,\\n        method: \\\"GET\\\",\\n        useMasterKey: options.useMasterKey,\\n        data: this.toJSON()\\n      });\\n\\n      return request.then(function(response) {\\n        return _.map(response.results, function(json) {\\n          var obj;\\n          if (response.className) {\\n            obj = new Parse.Object(response.className);\\n          } else {\\n            obj = new self.objectClass();\\n          }\\n          obj._finishFetch(json, true);\\n          return obj;\\n        });\\n      })._thenRunCallbacks(options);\\n    },\\n\\n    /**\\n     * Counts the number of objects that match this query.\\n     * Either options.success or options.error is called when the count\\n     * completes.\\n     *\\n     * @param {Object} options A Backbone-style options object. Valid options\\n     * are:<ul>\\n     *   <li>success: Function to call when the count completes successfully.\\n     *   <li>error: Function to call when the find fails.\\n     *   <li>useMasterKey: In Cloud Code and Node only, causes the Master Key to\\n     *     be used for this request.\\n     * </ul>\\n     *\\n     * @return {Parse.Promise} A promise that is resolved with the count when\\n     * the query completes.\\n     */\\n    count: function(options) {\\n      var self = this;\\n      options = options || {};\\n\\n      var params = this.toJSON();\\n      params.limit = 0;\\n      params.count = 1;\\n      var request = Parse._request({\\n        route: \\\"classes\\\",\\n        className: self.className,\\n        method: \\\"GET\\\",\\n        useMasterKey: options.useMasterKey,\\n        data: params\\n      });\\n\\n      return request.then(function(response) {\\n        return response.count;\\n      })._thenRunCallbacks(options);\\n    },\\n\\n    /**\\n     * Retrieves at most one Parse.Object that satisfies this query.\\n     *\\n     * Either options.success or options.error is called when it completes.\\n     * success is passed the object if there is one. otherwise, undefined.\\n     *\\n     * @param {Object} options A Backbone-style options object. Valid options\\n     * are:<ul>\\n     *   <li>success: Function to call when the find completes successfully.\\n     *   <li>error: Function to call when the find fails.\\n     *   <li>useMasterKey: In Cloud Code and Node only, causes the Master Key to\\n     *     be used for this request.\\n     * </ul>\\n     *\\n     * @return {Parse.Promise} A promise that is resolved with the object when\\n     * the query completes.\\n     */\\n    first: function(options) {\\n      var self = this;\\n      options = options || {};\\n\\n      var params = this.toJSON();\\n      params.limit = 1;\\n      var request = Parse._request({\\n        route: \\\"classes\\\",\\n        className: this.className,\\n        method: \\\"GET\\\",\\n        useMasterKey: options.useMasterKey,\\n        data: params\\n      });\\n\\n      return request.then(function(response) {\\n        return _.map(response.results, function(json) {\\n          var obj = new self.objectClass();\\n          obj._finishFetch(json, true);\\n          return obj;\\n        })[0];\\n      })._thenRunCallbacks(options);\\n    },\\n\\n    /**\\n     * Returns a new instance of Parse.Collection backed by this query.\\n     * @param {Array} items An array of instances of <code>Parse.Object</code>\\n     *     with which to start this Collection.\\n     * @param {Object} options An optional object with Backbone-style options.\\n     * Valid options are:<ul>\\n     *   <li>model: The Parse.Object subclass that this collection contains.\\n     *   <li>query: An instance of Parse.Query to use when fetching items.\\n     *   <li>comparator: A string property name or function to sort by.\\n     * </ul>\\n     * @return {Parse.Collection}\\n     */\\n    collection: function(items, options) {\\n      options = options || {};\\n      return new Parse.Collection(items, _.extend(options, {\\n        model: this.objectClass,\\n        query: this\\n      }));\\n    },\\n\\n    /**\\n     * Sets the number of results to skip before returning any results.\\n     * This is useful for pagination.\\n     * Default is to skip zero results.\\n     * @param {Number} n the number of results to skip.\\n     * @return {Parse.Query} Returns the query, so you can chain this call.\\n     */\\n    skip: function(n) {\\n      this._skip = n;\\n      return this;\\n    },\\n\\n    /**\\n     * Sets the limit of the number of results to return. The default limit is\\n     * 100, with a maximum of 1000 results being returned at a time.\\n     * @param {Number} n the number of results to limit to.\\n     * @return {Parse.Query} Returns the query, so you can chain this call.\\n     */\\n    limit: function(n) {\\n      this._limit = n;\\n      return this;\\n    },\\n\\n    /**\\n     * Add a constraint to the query that requires a particular key's value to\\n     * be equal to the provided value.\\n     * @param {String} key The key to check.\\n     * @param value The value that the Parse.Object must contain.\\n     * @return {Parse.Query} Returns the query, so you can chain this call.\\n     */\\n    equalTo: function(key, value) {\\n      if (_.isUndefined(value)) {\\n        return this.doesNotExist(key);\\n      }\\n\\n      this._where[key] = Parse._encode(value);\\n      return this;\\n    },\\n\\n    /**\\n     * Helper for condition queries\\n     */\\n    _addCondition: function(key, condition, value) {\\n      // Check if we already have a condition\\n      if (!this._where[key]) {\\n        this._where[key] = {};\\n      }\\n      this._where[key][condition] = Parse._encode(value);\\n      return this;\\n    },\\n\\n    /**\\n     * Add a constraint to the query that requires a particular key's value to\\n     * be not equal to the provided value.\\n     * @param {String} key The key to check.\\n     * @param value The value that must not be equalled.\\n     * @return {Parse.Query} Returns the query, so you can chain this call.\\n     */\\n    notEqualTo: function(key, value) {\\n      this._addCondition(key, \\\"$ne\\\", value);\\n      return this;\\n    },\\n\\n    /**\\n     * Add a constraint to the query that requires a particular key's value to\\n     * be less than the provided value.\\n     * @param {String} key The key to check.\\n     * @param value The value that provides an upper bound.\\n     * @return {Parse.Query} Returns the query, so you can chain this call.\\n     */\\n    lessThan: function(key, value) {\\n      this._addCondition(key, \\\"$lt\\\", value);\\n      return this;\\n    },\\n\\n    /**\\n     * Add a constraint to the query that requires a particular key's value to\\n     * be greater than the provided value.\\n     * @param {String} key The key to check.\\n     * @param value The value that provides an lower bound.\\n     * @return {Parse.Query} Returns the query, so you can chain this call.\\n     */\\n    greaterThan: function(key, value) {\\n      this._addCondition(key, \\\"$gt\\\", value);\\n      return this;\\n    },\\n\\n    /**\\n     * Add a constraint to the query that requires a particular key's value to\\n     * be less than or equal to the provided value.\\n     * @param {String} key The key to check.\\n     * @param value The value that provides an upper bound.\\n     * @return {Parse.Query} Returns the query, so you can chain this call.\\n     */\\n    lessThanOrEqualTo: function(key, value) {\\n      this._addCondition(key, \\\"$lte\\\", value);\\n      return this;\\n    },\\n\\n    /**\\n     * Add a constraint to the query that requires a particular key's value to\\n     * be greater than or equal to the provided value.\\n     * @param {String} key The key to check.\\n     * @param value The value that provides an lower bound.\\n     * @return {Parse.Query} Returns the query, so you can chain this call.\\n     */\\n    greaterThanOrEqualTo: function(key, value) {\\n      this._addCondition(key, \\\"$gte\\\", value);\\n      return this;\\n    },\\n\\n    /**\\n     * Add a constraint to the query that requires a particular key's value to\\n     * be contained in the provided list of values.\\n     * @param {String} key The key to check.\\n     * @param {Array} values The values that will match.\\n     * @return {Parse.Query} Returns the query, so you can chain this call.\\n     */\\n    containedIn: function(key, values) {\\n      this._addCondition(key, \\\"$in\\\", values);\\n      return this;\\n    },\\n\\n    /**\\n     * Add a constraint to the query that requires a particular key's value to\\n     * not be contained in the provided list of values.\\n     * @param {String} key The key to check.\\n     * @param {Array} values The values that will not match.\\n     * @return {Parse.Query} Returns the query, so you can chain this call.\\n     */\\n    notContainedIn: function(key, values) {\\n      this._addCondition(key, \\\"$nin\\\", values);\\n      return this;\\n    },\\n\\n    /**\\n     * Add a constraint to the query that requires a particular key's value to\\n     * contain each one of the provided list of values.\\n     * @param {String} key The key to check.  This key's value must be an array.\\n     * @param {Array} values The values that will match.\\n     * @return {Parse.Query} Returns the query, so you can chain this call.\\n     */\\n    containsAll: function(key, values) {\\n      this._addCondition(key, \\\"$all\\\", values);\\n      return this;\\n    },\\n\\n\\n    /**\\n     * Add a constraint for finding objects that contain the given key.\\n     * @param {String} key The key that should exist.\\n     * @return {Parse.Query} Returns the query, so you can chain this call.\\n     */\\n    exists: function(key) {\\n      this._addCondition(key, \\\"$exists\\\", true);\\n      return this;\\n    },\\n\\n    /**\\n     * Add a constraint for finding objects that do not contain a given key.\\n     * @param {String} key The key that should not exist\\n     * @return {Parse.Query} Returns the query, so you can chain this call.\\n     */\\n    doesNotExist: function(key) {\\n      this._addCondition(key, \\\"$exists\\\", false);\\n      return this;\\n    },\\n\\n    /**\\n     * Add a regular expression constraint for finding string values that match\\n     * the provided regular expression.\\n     * This may be slow for large datasets.\\n     * @param {String} key The key that the string to match is stored in.\\n     * @param {RegExp} regex The regular expression pattern to match.\\n     * @return {Parse.Query} Returns the query, so you can chain this call.\\n     */\\n    matches: function(key, regex, modifiers) {\\n      this._addCondition(key, \\\"$regex\\\", regex);\\n      if (!modifiers) { modifiers = \\\"\\\"; }\\n      // Javascript regex options support mig as inline options but store them\\n      // as properties of the object. We support mi & should migrate them to\\n      // modifiers\\n      if (regex.ignoreCase) { modifiers += 'i'; }\\n      if (regex.multiline) { modifiers += 'm'; }\\n\\n      if (modifiers && modifiers.length) {\\n        this._addCondition(key, \\\"$options\\\", modifiers);\\n      }\\n      return this;\\n    },\\n\\n    /**\\n     * Add a constraint that requires that a key's value matches a Parse.Query\\n     * constraint.\\n     * @param {String} key The key that the contains the object to match the\\n     *                     query.\\n     * @param {Parse.Query} query The query that should match.\\n     * @return {Parse.Query} Returns the query, so you can chain this call.\\n     */\\n    matchesQuery: function(key, query) {\\n      var queryJSON = query.toJSON();\\n      queryJSON.className = query.className;\\n      this._addCondition(key, \\\"$inQuery\\\", queryJSON);\\n      return this;\\n    },\\n\\n   /**\\n     * Add a constraint that requires that a key's value not matches a\\n     * Parse.Query constraint.\\n     * @param {String} key The key that the contains the object to match the\\n     *                     query.\\n     * @param {Parse.Query} query The query that should not match.\\n     * @return {Parse.Query} Returns the query, so you can chain this call.\\n     */\\n    doesNotMatchQuery: function(key, query) {\\n      var queryJSON = query.toJSON();\\n      queryJSON.className = query.className;\\n      this._addCondition(key, \\\"$notInQuery\\\", queryJSON);\\n      return this;\\n    },\\n\\n\\n    /**\\n     * Add a constraint that requires that a key's value matches a value in\\n     * an object returned by a different Parse.Query.\\n     * @param {String} key The key that contains the value that is being\\n     *                     matched.\\n     * @param {String} queryKey The key in the objects returned by the query to\\n     *                          match against.\\n     * @param {Parse.Query} query The query to run.\\n     * @return {Parse.Query} Returns the query, so you can chain this call.\\n     */\\n    matchesKeyInQuery: function(key, queryKey, query) {\\n      var queryJSON = query.toJSON();\\n      queryJSON.className = query.className;\\n      this._addCondition(key, \\\"$select\\\",\\n                         { key: queryKey, query: queryJSON });\\n      return this;\\n    },\\n\\n    /**\\n     * Add a constraint that requires that a key's value not match a value in\\n     * an object returned by a different Parse.Query.\\n     * @param {String} key The key that contains the value that is being\\n     *                     excluded.\\n     * @param {String} queryKey The key in the objects returned by the query to\\n     *                          match against.\\n     * @param {Parse.Query} query The query to run.\\n     * @return {Parse.Query} Returns the query, so you can chain this call.\\n     */\\n    doesNotMatchKeyInQuery: function(key, queryKey, query) {\\n      var queryJSON = query.toJSON();\\n      queryJSON.className = query.className;\\n      this._addCondition(key, \\\"$dontSelect\\\",\\n                         { key: queryKey, query: queryJSON });\\n      return this;\\n    },\\n\\n    /**\\n     * Add constraint that at least one of the passed in queries matches.\\n     * @param {Array} queries\\n     * @return {Parse.Query} Returns the query, so you can chain this call.\\n     */\\n    _orQuery: function(queries) {\\n      var queryJSON = _.map(queries, function(q) {\\n        return q.toJSON().where;\\n      });\\n\\n      this._where.$or = queryJSON;\\n      return this;\\n    },\\n\\n    /**\\n     * Converts a string into a regex that matches it.\\n     * Surrounding with \\\\Q .. \\\\E does this, we just need to escape \\\\E's in\\n     * the text separately.\\n     */\\n    _quote: function(s) {\\n      return \\\"\\\\\\\\Q\\\" + s.replace(\\\"\\\\\\\\E\\\", \\\"\\\\\\\\E\\\\\\\\\\\\\\\\E\\\\\\\\Q\\\") + \\\"\\\\\\\\E\\\";\\n    },\\n\\n    /**\\n     * Add a constraint for finding string values that contain a provided\\n     * string.  This may be slow for large datasets.\\n     * @param {String} key The key that the string to match is stored in.\\n     * @param {String} substring The substring that the value must contain.\\n     * @return {Parse.Query} Returns the query, so you can chain this call.\\n     */\\n    contains: function(key, value) {\\n      this._addCondition(key, \\\"$regex\\\", this._quote(value));\\n      return this;\\n    },\\n\\n    /**\\n     * Add a constraint for finding string values that start with a provided\\n     * string.  This query will use the backend index, so it will be fast even\\n     * for large datasets.\\n     * @param {String} key The key that the string to match is stored in.\\n     * @param {String} prefix The substring that the value must start with.\\n     * @return {Parse.Query} Returns the query, so you can chain this call.\\n     */\\n    startsWith: function(key, value) {\\n      this._addCondition(key, \\\"$regex\\\", \\\"^\\\" + this._quote(value));\\n      return this;\\n    },\\n\\n    /**\\n     * Add a constraint for finding string values that end with a provided\\n     * string.  This will be slow for large datasets.\\n     * @param {String} key The key that the string to match is stored in.\\n     * @param {String} suffix The substring that the value must end with.\\n     * @return {Parse.Query} Returns the query, so you can chain this call.\\n     */\\n    endsWith: function(key, value) {\\n      this._addCondition(key, \\\"$regex\\\", this._quote(value) + \\\"$\\\");\\n      return this;\\n    },\\n\\n    /**\\n     * Sorts the results in ascending order by the given key.\\n     *\\n     * @param {(String|String[]|...String} key The key to order by, which is a\\n     * string of comma separated values, or an Array of keys, or multiple keys.\\n     * @return {Parse.Query} Returns the query, so you can chain this call.\\n     */\\n    ascending: function() {\\n      this._order = [];\\n      return this.addAscending.apply(this, arguments);\\n    },\\n\\n    /**\\n     * Sorts the results in ascending order by the given key,\\n     * but can also add secondary sort descriptors without overwriting _order.\\n     *\\n     * @param {(String|String[]|...String} key The key to order by, which is a\\n     * string of comma separated values, or an Array of keys, or multiple keys.\\n     * @return {Parse.Query} Returns the query, so you can chain this call.\\n     */\\n    addAscending: function(key) {\\n      var self = this;\\n      if (!this._order) {\\n        this._order = [];\\n      }\\n      Parse._arrayEach(arguments, function(key) {\\n        if (Array.isArray(key)) {\\n          key = key.join();\\n        }\\n        self._order = self._order.concat(key.replace(/\\\\s/g, \\\"\\\").split(\\\",\\\"));\\n      });\\n      return this;\\n    },\\n\\n    /**\\n     * Sorts the results in descending order by the given key.\\n     *\\n     * @param {(String|String[]|...String} key The key to order by, which is a\\n     * string of comma separated values, or an Array of keys, or multiple keys.\\n     * @return {Parse.Query} Returns the query, so you can chain this call.\\n     */\\n    descending: function(key) {\\n      this._order = [];\\n      return this.addDescending.apply(this, arguments);\\n    },\\n\\n    /**\\n     * Sorts the results in descending order by the given key,\\n     * but can also add secondary sort descriptors without overwriting _order.\\n     *\\n     * @param {(String|String[]|...String} key The key to order by, which is a\\n     * string of comma separated values, or an Array of keys, or multiple keys.\\n     * @return {Parse.Query} Returns the query, so you can chain this call.\\n     */\\n    addDescending: function(key) {\\n      var self = this;\\n      if (!this._order) {\\n        this._order = [];\\n      }\\n      Parse._arrayEach(arguments, function(key) {\\n        if (Array.isArray(key)) {\\n          key = key.join();\\n        }\\n        self._order = self._order.concat(\\n          _.map(key.replace(/\\\\s/g, \\\"\\\").split(\\\",\\\"),\\n            function(k) { return \\\"-\\\" + k; }));\\n      });\\n      return this;\\n    },\\n\\n    /**\\n     * Add a proximity based constraint for finding objects with key point\\n     * values near the point given.\\n     * @param {String} key The key that the Parse.GeoPoint is stored in.\\n     * @param {Parse.GeoPoint} point The reference Parse.GeoPoint that is used.\\n     * @return {Parse.Query} Returns the query, so you can chain this call.\\n     */\\n    near: function(key, point) {\\n      if (!(point instanceof Parse.GeoPoint)) {\\n        // Try to cast it to a GeoPoint, so that near(\\\"loc\\\", [20,30]) works.\\n        point = new Parse.GeoPoint(point);\\n      }\\n      this._addCondition(key, \\\"$nearSphere\\\", point);\\n      return this;\\n    },\\n\\n    /**\\n     * Add a proximity based constraint for finding objects with key point\\n     * values near the point given and within the maximum distance given.\\n     * @param {String} key The key that the Parse.GeoPoint is stored in.\\n     * @param {Parse.GeoPoint} point The reference Parse.GeoPoint that is used.\\n     * @param {Number} maxDistance Maximum distance (in radians) of results to\\n     *   return.\\n     * @return {Parse.Query} Returns the query, so you can chain this call.\\n     */\\n    withinRadians: function(key, point, distance) {\\n      this.near(key, point);\\n      this._addCondition(key, \\\"$maxDistance\\\", distance);\\n      return this;\\n    },\\n\\n    /**\\n     * Add a proximity based constraint for finding objects with key point\\n     * values near the point given and within the maximum distance given.\\n     * Radius of earth used is 3958.8 miles.\\n     * @param {String} key The key that the Parse.GeoPoint is stored in.\\n     * @param {Parse.GeoPoint} point The reference Parse.GeoPoint that is used.\\n     * @param {Number} maxDistance Maximum distance (in miles) of results to\\n     *     return.\\n     * @return {Parse.Query} Returns the query, so you can chain this call.\\n     */\\n    withinMiles: function(key, point, distance) {\\n      return this.withinRadians(key, point, distance / 3958.8);\\n    },\\n\\n    /**\\n     * Add a proximity based constraint for finding objects with key point\\n     * values near the point given and within the maximum distance given.\\n     * Radius of earth used is 6371.0 kilometers.\\n     * @param {String} key The key that the Parse.GeoPoint is stored in.\\n     * @param {Parse.GeoPoint} point The reference Parse.GeoPoint that is used.\\n     * @param {Number} maxDistance Maximum distance (in kilometers) of results\\n     *     to return.\\n     * @return {Parse.Query} Returns the query, so you can chain this call.\\n     */\\n    withinKilometers: function(key, point, distance) {\\n      return this.withinRadians(key, point, distance / 6371.0);\\n    },\\n\\n    /**\\n     * Add a constraint to the query that requires a particular key's\\n     * coordinates be contained within a given rectangular geographic bounding\\n     * box.\\n     * @param {String} key The key to be constrained.\\n     * @param {Parse.GeoPoint} southwest\\n     *     The lower-left inclusive corner of the box.\\n     * @param {Parse.GeoPoint} northeast\\n     *     The upper-right inclusive corner of the box.\\n     * @return {Parse.Query} Returns the query, so you can chain this call.\\n     */\\n    withinGeoBox: function(key, southwest, northeast) {\\n      if (!(southwest instanceof Parse.GeoPoint)) {\\n        southwest = new Parse.GeoPoint(southwest);\\n      }\\n      if (!(northeast instanceof Parse.GeoPoint)) {\\n        northeast = new Parse.GeoPoint(northeast);\\n      }\\n      this._addCondition(key, '$within', { '$box': [southwest, northeast] });\\n      return this;\\n    },\\n\\n    /**\\n     * Include nested Parse.Objects for the provided key.  You can use dot\\n     * notation to specify which fields in the included object are also fetch.\\n     * @param {String} key The name of the key to include.\\n     * @return {Parse.Query} Returns the query, so you can chain this call.\\n     */\\n    include: function() {\\n      var self = this;\\n      Parse._arrayEach(arguments, function(key) {\\n        if (_.isArray(key)) {\\n          self._include = self._include.concat(key);\\n        } else {\\n          self._include.push(key);\\n        }\\n      });\\n      return this;\\n    },\\n\\n    /**\\n     * Restrict the fields of the returned Parse.Objects to include only the\\n     * provided keys.  If this is called multiple times, then all of the keys\\n     * specified in each of the calls will be included.\\n     * @param {Array} keys The names of the keys to include.\\n     * @return {Parse.Query} Returns the query, so you can chain this call.\\n     */\\n    select: function() {\\n      var self = this;\\n      this._select = this._select || [];\\n      Parse._arrayEach(arguments, function(key) {\\n        if (_.isArray(key)) {\\n          self._select = self._select.concat(key);\\n        } else {\\n          self._select.push(key);\\n        }\\n      });\\n      return this;\\n    },\\n\\n    /**\\n     * Iterates over each result of a query, calling a callback for each one. If\\n     * the callback returns a promise, the iteration will not continue until\\n     * that promise has been fulfilled. If the callback returns a rejected\\n     * promise, then iteration will stop with that error. The items are\\n     * processed in an unspecified order. The query may not have any sort order,\\n     * and may not use limit or skip.\\n     * @param {Function} callback Callback that will be called with each result\\n     *     of the query.\\n     * @param {Object} options An optional Backbone-like options object with\\n     *     success and error callbacks that will be invoked once the iteration\\n     *     has finished.\\n     * @return {Parse.Promise} A promise that will be fulfilled once the\\n     *     iteration has completed.\\n     */\\n    each: function(callback, options) {\\n      options = options || {};\\n\\n      if (this._order || this._skip || (this._limit >= 0)) {\\n        var error =\\n          \\\"Cannot iterate on a query with sort, skip, or limit.\\\";\\n        return Parse.Promise.error(error)._thenRunCallbacks(options);\\n      }\\n\\n      var promise = new Parse.Promise();\\n\\n      var query = new Parse.Query(this.objectClass);\\n      // We can override the batch size from the options.\\n      // This is undocumented, but useful for testing.\\n      query._limit = options.batchSize || 100;\\n      query._where = _.clone(this._where);\\n      query._include = _.clone(this._include);\\n\\n      query.ascending('objectId');\\n\\n      var finished = false;\\n      return Parse.Promise._continueWhile(function() {\\n        return !finished;\\n\\n      }, function() {\\n        return query.find().then(function(results) {\\n          var callbacksDone = Parse.Promise.as();\\n          Parse._.each(results, function(result) {\\n            callbacksDone = callbacksDone.then(function() {\\n              return callback(result);\\n            });\\n          });\\n\\n          return callbacksDone.then(function() {\\n            if (results.length >= query._limit) {\\n              query.greaterThan(\\\"objectId\\\", results[results.length - 1].id);\\n            } else {\\n              finished = true;\\n            }\\n          });\\n        });\\n      })._thenRunCallbacks(options);\\n    }\\n  };\\n\\n}(this));\\n\\n/*global FB: false , console: false*/\\n(function(root) {\\n  root.Parse = root.Parse || {};\\n  var Parse = root.Parse;\\n  var _ = Parse._;\\n\\n  var PUBLIC_KEY = \\\"*\\\";\\n\\n  var initialized = false;\\n  var requestedPermissions;\\n  var initOptions;\\n  var provider = {\\n    authenticate: function(options) {\\n      var self = this;\\n      FB.login(function(response) {\\n        if (response.authResponse) {\\n          if (options.success) {\\n            options.success(self, {\\n              id: response.authResponse.userID,\\n              access_token: response.authResponse.accessToken,\\n              expiration_date: new Date(response.authResponse.expiresIn * 1000 +\\n                  (new Date()).getTime()).toJSON()\\n            });\\n          }\\n        } else {\\n          if (options.error) {\\n            options.error(self, response);\\n          }\\n        }\\n      }, {\\n        scope: requestedPermissions\\n      });\\n    },\\n    restoreAuthentication: function(authData) {\\n      if (authData) {\\n        var authResponse = {\\n          userID: authData.id,\\n          accessToken: authData.access_token,\\n          expiresIn: (Parse._parseDate(authData.expiration_date).getTime() -\\n              (new Date()).getTime()) / 1000\\n        };\\n        var newOptions = _.clone(initOptions);\\n        newOptions.authResponse = authResponse;\\n\\n        // Suppress checks for login status from the browser.\\n        newOptions.status = false;\\n\\n        // If the user doesn't match the one known by the FB SDK, log out.\\n        // Most of the time, the users will match -- it's only in cases where\\n        // the FB SDK knows of a different user than the one being restored\\n        // from a Parse User that logged in with username/password.\\n        var existingResponse = FB.getAuthResponse();\\n        if (existingResponse &&\\n            existingResponse.userID !== authResponse.userID) {\\n          FB.logout();\\n        }\\n\\n        FB.init(newOptions);\\n      }\\n      return true;\\n    },\\n    getAuthType: function() {\\n      return \\\"facebook\\\";\\n    },\\n    deauthenticate: function() {\\n      this.restoreAuthentication(null);\\n    }\\n  };\\n\\n  /**\\n   * Provides a set of utilities for using Parse with Facebook.\\n   * @namespace\\n   * Provides a set of utilities for using Parse with Facebook.\\n   */\\n  Parse.FacebookUtils = {\\n    /**\\n     * Initializes Parse Facebook integration.  Call this function after you\\n     * have loaded the Facebook Javascript SDK with the same parameters\\n     * as you would pass to<code>\\n     * <a href=\\n     * \\\"https://developers.facebook.com/docs/reference/javascript/FB.init/\\\">\\n     * FB.init()</a></code>.  Parse.FacebookUtils will invoke FB.init() for you\\n     * with these arguments.\\n     *\\n     * @param {Object} options Facebook options argument as described here:\\n     *   <a href=\\n     *   \\\"https://developers.facebook.com/docs/reference/javascript/FB.init/\\\">\\n     *   FB.init()</a>. The status flag will be coerced to 'false' because it\\n     *   interferes with Parse Facebook integration. Call FB.getLoginStatus()\\n     *   explicitly if this behavior is required by your application.\\n     */\\n    init: function(options) {\\n      if (typeof(FB) === 'undefined') {\\n        throw \\\"The Facebook JavaScript SDK must be loaded before calling init.\\\";\\n      }\\n      initOptions = _.clone(options) || {};\\n      if (initOptions.status && typeof(console) !== \\\"undefined\\\") {\\n        var warn = console.warn || console.log || function() {};\\n        warn.call(console, \\\"The 'status' flag passed into\\\" +\\n          \\\" FB.init, when set to true, can interfere with Parse Facebook\\\" +\\n          \\\" integration, so it has been suppressed. Please call\\\" +\\n          \\\" FB.getLoginStatus() explicitly if you require this behavior.\\\");\\n      }\\n      initOptions.status = false;\\n      FB.init(initOptions);\\n      Parse.User._registerAuthenticationProvider(provider);\\n      initialized = true;\\n    },\\n\\n    /**\\n     * Gets whether the user has their account linked to Facebook.\\n     *\\n     * @param {Parse.User} user User to check for a facebook link.\\n     *     The user must be logged in on this device.\\n     * @return {Boolean} <code>true</code> if the user has their account\\n     *     linked to Facebook.\\n     */\\n    isLinked: function(user) {\\n      return user._isLinked(\\\"facebook\\\");\\n    },\\n\\n    /**\\n     * Logs in a user using Facebook. This method delegates to the Facebook\\n     * SDK to authenticate the user, and then automatically logs in (or\\n     * creates, in the case where it is a new user) a Parse.User.\\n     *\\n     * @param {String, Object} permissions The permissions required for Facebook\\n     *    log in.  This is a comma-separated string of permissions.\\n     *    Alternatively, supply a Facebook authData object as described in our\\n     *    REST API docs if you want to handle getting facebook auth tokens\\n     *    yourself.\\n     * @param {Object} options Standard options object with success and error\\n     *    callbacks.\\n     */\\n    logIn: function(permissions, options) {\\n      if (!permissions || _.isString(permissions)) {\\n        if (!initialized) {\\n          throw \\\"You must initialize FacebookUtils before calling logIn.\\\";\\n        }\\n        requestedPermissions = permissions;\\n        return Parse.User._logInWith(\\\"facebook\\\", options);\\n      } else {\\n        var newOptions = _.clone(options) || {};\\n        newOptions.authData = permissions;\\n        return Parse.User._logInWith(\\\"facebook\\\", newOptions);\\n      }\\n    },\\n\\n    /**\\n     * Links Facebook to an existing PFUser. This method delegates to the\\n     * Facebook SDK to authenticate the user, and then automatically links\\n     * the account to the Parse.User.\\n     *\\n     * @param {Parse.User} user User to link to Facebook. This must be the\\n     *     current user.\\n     * @param {String, Object} permissions The permissions required for Facebook\\n     *    log in.  This is a comma-separated string of permissions.\\n     *    Alternatively, supply a Facebook authData object as described in our\\n     *    REST API docs if you want to handle getting facebook auth tokens\\n     *    yourself.\\n     * @param {Object} options Standard options object with success and error\\n     *    callbacks.\\n     */\\n    link: function(user, permissions, options) {\\n      if (!permissions || _.isString(permissions)) {\\n        if (!initialized) {\\n          throw \\\"You must initialize FacebookUtils before calling link.\\\";\\n        }\\n        requestedPermissions = permissions;\\n        return user._linkWith(\\\"facebook\\\", options);\\n      } else {\\n        var newOptions = _.clone(options) || {};\\n        newOptions.authData = permissions;\\n        return user._linkWith(\\\"facebook\\\", newOptions);\\n      }\\n    },\\n\\n    /**\\n     * Unlinks the Parse.User from a Facebook account.\\n     *\\n     * @param {Parse.User} user User to unlink from Facebook. This must be the\\n     *     current user.\\n     * @param {Object} options Standard options object with success and error\\n     *    callbacks.\\n     */\\n    unlink: function(user, options) {\\n      if (!initialized) {\\n        throw \\\"You must initialize FacebookUtils before calling unlink.\\\";\\n      }\\n      return user._unlinkFrom(\\\"facebook\\\", options);\\n    }\\n  };\\n\\n}(this));\\n\\n/*global _: false, document: false, window: false, navigator: false */\\n(function(root) {\\n  root.Parse = root.Parse || {};\\n  var Parse = root.Parse;\\n  var _ = Parse._;\\n\\n  /**\\n   * History serves as a global router (per frame) to handle hashchange\\n   * events or pushState, match the appropriate route, and trigger\\n   * callbacks. You shouldn't ever have to create one of these yourself\\n   * â€” you should use the reference to <code>Parse.history</code>\\n   * that will be created for you automatically if you make use of\\n   * Routers with routes.\\n   * @class\\n   *\\n   * <p>A fork of Backbone.History, provided for your convenience.  If you\\n   * use this class, you must also include jQuery, or another library\\n   * that provides a jQuery-compatible $ function.  For more information,\\n   * see the <a href=\\\"http://documentcloud.github.com/backbone/#History\\\">\\n   * Backbone documentation</a>.</p>\\n   * <p><strong><em>Available in the client SDK only.</em></strong></p>\\n   */\\n  Parse.History = function() {\\n    this.handlers = [];\\n    _.bindAll(this, 'checkUrl');\\n  };\\n\\n  // Cached regex for cleaning leading hashes and slashes .\\n  var routeStripper = /^[#\\\\/]/;\\n\\n  // Cached regex for detecting MSIE.\\n  var isExplorer = /msie [\\\\w.]+/;\\n\\n  // Has the history handling already been started?\\n  Parse.History.started = false;\\n\\n  // Set up all inheritable **Parse.History** properties and methods.\\n  _.extend(Parse.History.prototype, Parse.Events,\\n           /** @lends Parse.History.prototype */ {\\n\\n    // The default interval to poll for hash changes, if necessary, is\\n    // twenty times a second.\\n    interval: 50,\\n\\n    // Gets the true hash value. Cannot use location.hash directly due to bug\\n    // in Firefox where location.hash will always be decoded.\\n    getHash: function(windowOverride) {\\n      var loc = windowOverride ? windowOverride.location : window.location;\\n      var match = loc.href.match(/#(.*)$/);\\n      return match ? match[1] : '';\\n    },\\n\\n    // Get the cross-browser normalized URL fragment, either from the URL,\\n    // the hash, or the override.\\n    getFragment: function(fragment, forcePushState) {\\n      if (Parse._isNullOrUndefined(fragment)) {\\n        if (this._hasPushState || forcePushState) {\\n          fragment = window.location.pathname;\\n          var search = window.location.search;\\n          if (search) {\\n            fragment += search;\\n          }\\n        } else {\\n          fragment = this.getHash();\\n        }\\n      }\\n      if (!fragment.indexOf(this.options.root)) {\\n        fragment = fragment.substr(this.options.root.length);\\n      }\\n      return fragment.replace(routeStripper, '');\\n    },\\n\\n    /**\\n     * Start the hash change handling, returning `true` if the current\\n     * URL matches an existing route, and `false` otherwise.\\n     */\\n    start: function(options) {\\n      if (Parse.History.started) {\\n        throw new Error(\\\"Parse.history has already been started\\\");\\n      }\\n      Parse.History.started = true;\\n\\n      // Figure out the initial configuration. Do we need an iframe?\\n      // Is pushState desired ... is it available?\\n      this.options = _.extend({}, {root: '/'}, this.options, options);\\n      this._wantsHashChange = this.options.hashChange !== false;\\n      this._wantsPushState = !!this.options.pushState;\\n      this._hasPushState = !!(this.options.pushState &&\\n                              window.history &&\\n                              window.history.pushState);\\n      var fragment = this.getFragment();\\n      var docMode = document.documentMode;\\n      var oldIE = (isExplorer.exec(navigator.userAgent.toLowerCase()) &&\\n                   (!docMode || docMode <= 7));\\n\\n      if (oldIE) {\\n        this.iframe = Parse.$('<iframe src=\\\"javascript:0\\\" tabindex=\\\"-1\\\" />')\\n                      .hide().appendTo('body')[0].contentWindow;\\n        this.navigate(fragment);\\n      }\\n\\n      // Depending on whether we're using pushState or hashes, and whether\\n      // 'onhashchange' is supported, determine how we check the URL state.\\n      if (this._hasPushState) {\\n        Parse.$(window).bind('popstate', this.checkUrl);\\n      } else if (this._wantsHashChange &&\\n                 ('onhashchange' in window) &&\\n                 !oldIE) {\\n        Parse.$(window).bind('hashchange', this.checkUrl);\\n      } else if (this._wantsHashChange) {\\n        this._checkUrlInterval = window.setInterval(this.checkUrl,\\n                                                    this.interval);\\n      }\\n\\n      // Determine if we need to change the base url, for a pushState link\\n      // opened by a non-pushState browser.\\n      this.fragment = fragment;\\n      var loc = window.location;\\n      var atRoot  = loc.pathname === this.options.root;\\n\\n      // If we've started off with a route from a `pushState`-enabled browser,\\n      // but we're currently in a browser that doesn't support it...\\n      if (this._wantsHashChange &&\\n          this._wantsPushState &&\\n          !this._hasPushState &&\\n          !atRoot) {\\n        this.fragment = this.getFragment(null, true);\\n        window.location.replace(this.options.root + '#' + this.fragment);\\n        // Return immediately as browser will do redirect to new url\\n        return true;\\n\\n      // Or if we've started out with a hash-based route, but we're currently\\n      // in a browser where it could be `pushState`-based instead...\\n      } else if (this._wantsPushState &&\\n                 this._hasPushState &&\\n                 atRoot &&\\n                 loc.hash) {\\n        this.fragment = this.getHash().replace(routeStripper, '');\\n        window.history.replaceState({}, document.title,\\n            loc.protocol + '//' + loc.host + this.options.root + this.fragment);\\n      }\\n\\n      if (!this.options.silent) {\\n        return this.loadUrl();\\n      }\\n    },\\n\\n    // Disable Parse.history, perhaps temporarily. Not useful in a real app,\\n    // but possibly useful for unit testing Routers.\\n    stop: function() {\\n      Parse.$(window).unbind('popstate', this.checkUrl)\\n                     .unbind('hashchange', this.checkUrl);\\n      window.clearInterval(this._checkUrlInterval);\\n      Parse.History.started = false;\\n    },\\n\\n    // Add a route to be tested when the fragment changes. Routes added later\\n    // may override previous routes.\\n    route: function(route, callback) {\\n      this.handlers.unshift({route: route, callback: callback});\\n    },\\n\\n    // Checks the current URL to see if it has changed, and if it has,\\n    // calls `loadUrl`, normalizing across the hidden iframe.\\n    checkUrl: function(e) {\\n      var current = this.getFragment();\\n      if (current === this.fragment && this.iframe) {\\n        current = this.getFragment(this.getHash(this.iframe));\\n      }\\n      if (current === this.fragment) {\\n        return false;\\n      }\\n      if (this.iframe) {\\n        this.navigate(current);\\n      }\\n      if (!this.loadUrl()) {\\n        this.loadUrl(this.getHash());\\n      }\\n    },\\n\\n    // Attempt to load the current URL fragment. If a route succeeds with a\\n    // match, returns `true`. If no defined routes matches the fragment,\\n    // returns `false`.\\n    loadUrl: function(fragmentOverride) {\\n      var fragment = this.fragment = this.getFragment(fragmentOverride);\\n      var matched = _.any(this.handlers, function(handler) {\\n        if (handler.route.test(fragment)) {\\n          handler.callback(fragment);\\n          return true;\\n        }\\n      });\\n      return matched;\\n    },\\n\\n    // Save a fragment into the hash history, or replace the URL state if the\\n    // 'replace' option is passed. You are responsible for properly URL-encoding\\n    // the fragment in advance.\\n    //\\n    // The options object can contain `trigger: true` if you wish to have the\\n    // route callback be fired (not usually desirable), or `replace: true`, if\\n    // you wish to modify the current URL without adding an entry to the\\n    // history.\\n    navigate: function(fragment, options) {\\n      if (!Parse.History.started) {\\n        return false;\\n      }\\n      if (!options || options === true) {\\n        options = {trigger: options};\\n      }\\n      var frag = (fragment || '').replace(routeStripper, '');\\n      if (this.fragment === frag) {\\n        return;\\n      }\\n\\n      // If pushState is available, we use it to set the fragment as a real URL.\\n      if (this._hasPushState) {\\n        if (frag.indexOf(this.options.root) !== 0) {\\n          frag = this.options.root + frag;\\n        }\\n        this.fragment = frag;\\n        var replaceOrPush = options.replace ? 'replaceState' : 'pushState';\\n        window.history[replaceOrPush]({}, document.title, frag);\\n\\n      // If hash changes haven't been explicitly disabled, update the hash\\n      // fragment to store history.\\n      } else if (this._wantsHashChange) {\\n        this.fragment = frag;\\n        this._updateHash(window.location, frag, options.replace);\\n        if (this.iframe &&\\n            (frag !== this.getFragment(this.getHash(this.iframe)))) {\\n          // Opening and closing the iframe tricks IE7 and earlier\\n          // to push a history entry on hash-tag change.\\n          // When replace is true, we don't want this.\\n          if (!options.replace) {\\n            this.iframe.document.open().close();\\n          }\\n          this._updateHash(this.iframe.location, frag, options.replace);\\n        }\\n\\n      // If you've told us that you explicitly don't want fallback hashchange-\\n      // based history, then `navigate` becomes a page refresh.\\n      } else {\\n        window.location.assign(this.options.root + fragment);\\n      }\\n      if (options.trigger) {\\n        this.loadUrl(fragment);\\n      }\\n    },\\n\\n    // Update the hash location, either replacing the current entry, or adding\\n    // a new one to the browser history.\\n    _updateHash: function(location, fragment, replace) {\\n      if (replace) {\\n        var s = location.toString().replace(/(javascript:|#).*$/, '');\\n        location.replace(s + '#' + fragment);\\n      } else {\\n        location.hash = fragment;\\n      }\\n    }\\n  });\\n}(this));\\n\\n/*global _: false*/\\n(function(root) {\\n  root.Parse = root.Parse || {};\\n  var Parse = root.Parse;\\n  var _ = Parse._;\\n\\n  /**\\n   * Routers map faux-URLs to actions, and fire events when routes are\\n   * matched. Creating a new one sets its `routes` hash, if not set statically.\\n   * @class\\n   *\\n   * <p>A fork of Backbone.Router, provided for your convenience.\\n   * For more information, see the\\n   * <a href=\\\"http://documentcloud.github.com/backbone/#Router\\\">Backbone\\n   * documentation</a>.</p>\\n   * <p><strong><em>Available in the client SDK only.</em></strong></p>\\n   */\\n  Parse.Router = function(options) {\\n    options = options || {};\\n    if (options.routes) {\\n      this.routes = options.routes;\\n    }\\n    this._bindRoutes();\\n    this.initialize.apply(this, arguments);\\n  };\\n\\n  // Cached regular expressions for matching named param parts and splatted\\n  // parts of route strings.\\n  var namedParam    = /:\\\\w+/g;\\n  var splatParam    = /\\\\*\\\\w+/g;\\n  var escapeRegExp  = /[\\\\-\\\\[\\\\]{}()+?.,\\\\\\\\\\\\^\\\\$\\\\|#\\\\s]/g;\\n\\n  // Set up all inheritable **Parse.Router** properties and methods.\\n  _.extend(Parse.Router.prototype, Parse.Events,\\n           /** @lends Parse.Router.prototype */ {\\n\\n    /**\\n     * Initialize is an empty function by default. Override it with your own\\n     * initialization logic.\\n     */\\n    initialize: function(){},\\n\\n    /**\\n     * Manually bind a single named route to a callback. For example:\\n     *\\n     * <pre>this.route('search/:query/p:num', 'search', function(query, num) {\\n     *       ...\\n     *     });</pre>\\n     */\\n    route: function(route, name, callback) {\\n      Parse.history = Parse.history || new Parse.History();\\n      if (!_.isRegExp(route)) {\\n        route = this._routeToRegExp(route);\\n      }\\n      if (!callback) {\\n        callback = this[name];\\n      }\\n      Parse.history.route(route, _.bind(function(fragment) {\\n        var args = this._extractParameters(route, fragment);\\n        if (callback) {\\n          callback.apply(this, args);\\n        }\\n        this.trigger.apply(this, ['route:' + name].concat(args));\\n        Parse.history.trigger('route', this, name, args);\\n      }, this));\\n      return this;\\n    },\\n\\n    /**\\n     * Whenever you reach a point in your application that you'd\\n     * like to save as a URL, call navigate in order to update the\\n     * URL. If you wish to also call the route function, set the\\n     * trigger option to true. To update the URL without creating\\n     * an entry in the browser's history, set the replace option\\n     * to true.\\n     */\\n    navigate: function(fragment, options) {\\n      Parse.history.navigate(fragment, options);\\n    },\\n\\n    // Bind all defined routes to `Parse.history`. We have to reverse the\\n    // order of the routes here to support behavior where the most general\\n    // routes can be defined at the bottom of the route map.\\n    _bindRoutes: function() {\\n      if (!this.routes) {\\n        return;\\n      }\\n      var routes = [];\\n      for (var route in this.routes) {\\n        if (this.routes.hasOwnProperty(route)) {\\n          routes.unshift([route, this.routes[route]]);\\n        }\\n      }\\n      for (var i = 0, l = routes.length; i < l; i++) {\\n        this.route(routes[i][0], routes[i][1], this[routes[i][1]]);\\n      }\\n    },\\n\\n    // Convert a route string into a regular expression, suitable for matching\\n    // against the current location hash.\\n    _routeToRegExp: function(route) {\\n      route = route.replace(escapeRegExp, '\\\\\\\\$&')\\n                   .replace(namedParam, '([^\\\\/]+)')\\n                   .replace(splatParam, '(.*?)');\\n      return new RegExp('^' + route + '$');\\n    },\\n\\n    // Given a route, and a URL fragment that it matches, return the array of\\n    // extracted parameters.\\n    _extractParameters: function(route, fragment) {\\n      return route.exec(fragment).slice(1);\\n    }\\n  });\\n\\n  /**\\n   * @function\\n   * @param {Object} instanceProps Instance properties for the router.\\n   * @param {Object} classProps Class properies for the router.\\n   * @return {Class} A new subclass of <code>Parse.Router</code>.\\n   */\\n  Parse.Router.extend = Parse._extend;\\n}(this));\\n(function(root) {\\n  root.Parse = root.Parse || {};\\n  var Parse = root.Parse;\\n  var _ = Parse._;\\n\\n  /**\\n   * @namespace Contains functions for calling and declaring\\n   * <a href=\\\"/docs/cloud_code_guide#functions\\\">cloud functions</a>.\\n   * <p><strong><em>\\n   *   Some functions are only available from Cloud Code.\\n   * </em></strong></p>\\n   */\\n  Parse.Cloud = Parse.Cloud || {};\\n\\n  _.extend(Parse.Cloud, /** @lends Parse.Cloud */ {\\n    /**\\n     * Makes a call to a cloud function.\\n     * @param {String} name The function name.\\n     * @param {Object} data The parameters to send to the cloud function.\\n     * @param {Object} options A Backbone-style options object\\n     * options.success, if set, should be a function to handle a successful\\n     * call to a cloud function.  options.error should be a function that\\n     * handles an error running the cloud function.  Both functions are\\n     * optional.  Both functions take a single argument.\\n     * @return {Parse.Promise} A promise that will be resolved with the result\\n     * of the function.\\n     */\\n    run: function(name, data, options) {\\n      options = options || {};\\n\\n      var request = Parse._request({\\n        route: \\\"functions\\\",\\n        className: name,\\n        method: 'POST',\\n        useMasterKey: options.useMasterKey,\\n        data: Parse._encode(data, null, true)\\n      });\\n\\n      return request.then(function(resp) {\\n        return Parse._decode(null, resp).result;\\n      })._thenRunCallbacks(options);\\n    }\\n  });\\n}(this));\\n\\n(function(root) {\\n  root.Parse = root.Parse || {};\\n  var Parse = root.Parse;\\n\\n  Parse.Installation = Parse.Object.extend(\\\"_Installation\\\");\\n\\n  /**\\n   * Contains functions to deal with Push in Parse\\n   * @name Parse.Push\\n   * @namespace\\n   */\\n  Parse.Push = Parse.Push || {};\\n\\n  /**\\n   * Sends a push notification.\\n   * @param {Object} data -  The data of the push notification.  Valid fields\\n   * are:\\n   *   <ol>\\n   *     <li>channels - An Array of channels to push to.</li>\\n   *     <li>push_time - A Date object for when to send the push.</li>\\n   *     <li>expiration_time -  A Date object for when to expire\\n   *         the push.</li>\\n   *     <li>expiration_interval - The seconds from now to expire the push.</li>\\n   *     <li>where - A Parse.Query over Parse.Installation that is used to match\\n   *         a set of installations to push to.</li>\\n   *     <li>data - The data to send as part of the push</li>\\n   *   <ol>\\n   * @param {Object} options An object that has an optional success function,\\n   * that takes no arguments and will be called on a successful push, and\\n   * an error function that takes a Parse.Error and will be called if the push\\n   * failed.\\n   */\\n  Parse.Push.send = function(data, options) {\\n    options = options || {};\\n\\n    if (data.where) {\\n      data.where = data.where.toJSON().where;\\n    }\\n\\n    if (data.push_time) {\\n      data.push_time = data.push_time.toJSON();\\n    }\\n\\n    if (data.expiration_time) {\\n      data.expiration_time = data.expiration_time.toJSON();\\n    }\\n\\n    if (data.expiration_time && data.expiration_interval) {\\n      throw \\\"Both expiration_time and expiration_interval can't be set\\\";\\n    }\\n\\n    var request = Parse._request({\\n      route: 'push',\\n      method: 'POST',\\n      data: data,\\n      useMasterKey: options.useMasterKey\\n    });\\n    return request._thenRunCallbacks(options);\\n  };\\n}(this));\\n\"\n\n/***/ },\n/* 143 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// style-loader: Adds some css to the DOM by adding a <style> tag\n\tvar dispose = __webpack_require__(10)\n\t\t// The css code:\n\t\t(__webpack_require__(128))\n\tif(false) {\n\t\tmodule.hot.accept();\n\t\tmodule.hot.dispose(dispose);\n\t}\n\n/***/ },\n/* 144 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// style-loader: Adds some css to the DOM by adding a <style> tag\n\tvar dispose = __webpack_require__(10)\n\t\t// The css code:\n\t\t(__webpack_require__(129))\n\tif(false) {\n\t\tmodule.hot.accept();\n\t\tmodule.hot.dispose(dispose);\n\t}\n\n/***/ },\n/* 145 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// style-loader: Adds some css to the DOM by adding a <style> tag\n\tvar dispose = __webpack_require__(10)\n\t\t// The css code:\n\t\t(__webpack_require__(132))\n\tif(false) {\n\t\tmodule.hot.accept();\n\t\tmodule.hot.dispose(dispose);\n\t}\n\n/***/ },\n/* 146 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// style-loader: Adds some css to the DOM by adding a <style> tag\n\tvar dispose = __webpack_require__(10)\n\t\t// The css code:\n\t\t(__webpack_require__(133))\n\tif(false) {\n\t\tmodule.hot.accept();\n\t\tmodule.hot.dispose(dispose);\n\t}\n\n/***/ },\n/* 147 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// style-loader: Adds some css to the DOM by adding a <style> tag\n\tvar dispose = __webpack_require__(10)\n\t\t// The css code:\n\t\t(__webpack_require__(135))\n\tif(false) {\n\t\tmodule.hot.accept();\n\t\tmodule.hot.dispose(dispose);\n\t}\n\n/***/ },\n/* 148 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// style-loader: Adds some css to the DOM by adding a <style> tag\n\tvar dispose = __webpack_require__(10)\n\t\t// The css code:\n\t\t(__webpack_require__(137))\n\tif(false) {\n\t\tmodule.hot.accept();\n\t\tmodule.hot.dispose(dispose);\n\t}\n\n/***/ },\n/* 149 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// style-loader: Adds some css to the DOM by adding a <style> tag\n\tvar dispose = __webpack_require__(10)\n\t\t// The css code:\n\t\t(__webpack_require__(138))\n\tif(false) {\n\t\tmodule.hot.accept();\n\t\tmodule.hot.dispose(dispose);\n\t}\n\n/***/ }\n/******/ ])\n})\n","\n// The module cache\nvar installedModules = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(installedModules[moduleId])\n\t\treturn installedModules[moduleId].exports;\n\t\n\t// Create a new module (and put it into the cache)\n\tvar module = installedModules[moduleId] = {\n\t\texports: {},\n\t\tid: moduleId,\n\t\tloaded: false\n\t};\n\t\n\t// Execute the module function\n\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\t\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\t\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = modules;\n\n// expose the module cache\n__webpack_require__.c = installedModules;\n\n// __webpack_public_path__\n__webpack_require__.p = \"dist/\";\n\n\n// Load entry module and return exports\nreturn __webpack_require__(0);","# CSS\nrequire 'famous/core/famous.css'\n\n# Polyfills\nrequire 'famous-polyfills/functionPrototypeBind'\nrequire 'famous-polyfills/classList'\nrequire 'famous-polyfills/requestAnimationFrame'\n\n# Famous\nEngine = require 'famous/core/Engine'\nLightbox = require 'famous/views/Lightbox'\nTimer = require 'famous/utilities/Timer'\nTransform = require 'famous/core/Transform'\nEasing = require 'famous/transitions/Easing'\n\n# Facebook\nFacebook = require 'Facebook'\n\n# Views\nAppView = require 'views/AppView'\nFpsMeter = require 'views/FpsMeterView'\nLoginView = require 'views/LoginView'\nSignupView = require 'views/SignupView'\n\n# Stores\nUserStore = require 'stores/UserStore'\nAppStateStore = require 'stores/AppStateStore'\n\n# Actions\nUserActions = require 'actions/UserActions'\n\n# Constants\nConstants = require 'constants/PeggConstants'\n\n# Routes\nRoutes = require 'routes/AppRoutes'\n\n\n# Create the main context\nmainContext = Engine.createContext()\n\n# Chrome maxes out at 60 FPS\nEngine.setFPSCap 60\n\n\n# Set perspective for 3D effects\n# Lower values make effects more pronounced and extreme\nmainContext.setPerspective 2000\n\nappView = new AppView\nloginView = new LoginView\nsignupView = new SignupView\nlightbox = new Lightbox\n  inOpacity: 1\n  outOpacity: 0\n  inOrigin: [.5, 1]\n  outOrigin: [0, 0]\n  showOrigin: [0.5, 0.5]\n  inTransform: Transform.thenMove(Transform.rotateX(1), [0, window.innerHeight, -300])\n  outTransform: Transform.thenMove(Transform.rotateZ(0.7), [0, -window.innerHeight, -1000])\n  inTransition: { duration: 1000, curve: Easing.outExpo }\n  outTransition: { duration: 500, curve: Easing.inCubic }\nmainContext.add lightbox\n\npickView = ->\n  #Wait a couple cycles for Famo.us to boot up, smoother animations\n  if AppStateStore.getCurrentPageID() is \"login\"\n    lightbox.show loginView\n  else if UserStore.getLoggedIn()\n    lightbox.show appView\n  else\n    lightbox.show signupView\n\nAppStateStore.on Constants.stores.CHANGE, pickView\nUserStore.on Constants.stores.CHANGE, pickView\n\nTimer.after (->\n  pickView()\n), 20\n\nmainContext.add new FpsMeter\n\n\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n *\n * Owner: mark@famo.us\n * @license MPL 2.0\n * @copyright Famous Industries, Inc. 2014\n */\n\ndefine(function(require, exports, module) {\n\n    /**\n     *  A high-performance static matrix math library used to calculate\n     *    affine transforms on surfaces and other renderables.\n     *    Famo.us uses 4x4 matrices corresponding directly to\n     *    WebKit matrices (column-major order).\n     *\n     *    The internal \"type\" of a Matrix is a 16-long float array in\n     *    row-major order, with:\n     *    elements [0],[1],[2],[4],[5],[6],[8],[9],[10] forming the 3x3\n     *          transformation matrix;\n     *    elements [12], [13], [14] corresponding to the t_x, t_y, t_z\n     *           translation;\n     *    elements [3], [7], [11] set to 0;\n     *    element [15] set to 1.\n     *    All methods are static.\n     *\n     * @static\n     *\n     * @class Transform\n     */\n    var Transform = {};\n\n    // WARNING: these matrices correspond to WebKit matrices, which are\n    //    transposed from their math counterparts\n    Transform.precision = 1e-6;\n    Transform.identity = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];\n\n    /**\n     * Multiply two or more Transform matrix types to return a Transform matrix.\n     *\n     * @method multiply4x4\n     * @static\n     * @param {Transform} a left matrix\n     * @param {Transform} b right matrix\n     * @return {Transform} the resulting matrix\n     */\n    Transform.multiply4x4 = function multiply4x4(a, b) {\n        return [\n            a[0] * b[0] + a[4] * b[1] + a[8] * b[2] + a[12] * b[3],\n            a[1] * b[0] + a[5] * b[1] + a[9] * b[2] + a[13] * b[3],\n            a[2] * b[0] + a[6] * b[1] + a[10] * b[2] + a[14] * b[3],\n            a[3] * b[0] + a[7] * b[1] + a[11] * b[2] + a[15] * b[3],\n            a[0] * b[4] + a[4] * b[5] + a[8] * b[6] + a[12] * b[7],\n            a[1] * b[4] + a[5] * b[5] + a[9] * b[6] + a[13] * b[7],\n            a[2] * b[4] + a[6] * b[5] + a[10] * b[6] + a[14] * b[7],\n            a[3] * b[4] + a[7] * b[5] + a[11] * b[6] + a[15] * b[7],\n            a[0] * b[8] + a[4] * b[9] + a[8] * b[10] + a[12] * b[11],\n            a[1] * b[8] + a[5] * b[9] + a[9] * b[10] + a[13] * b[11],\n            a[2] * b[8] + a[6] * b[9] + a[10] * b[10] + a[14] * b[11],\n            a[3] * b[8] + a[7] * b[9] + a[11] * b[10] + a[15] * b[11],\n            a[0] * b[12] + a[4] * b[13] + a[8] * b[14] + a[12] * b[15],\n            a[1] * b[12] + a[5] * b[13] + a[9] * b[14] + a[13] * b[15],\n            a[2] * b[12] + a[6] * b[13] + a[10] * b[14] + a[14] * b[15],\n            a[3] * b[12] + a[7] * b[13] + a[11] * b[14] + a[15] * b[15]\n        ];\n    };\n\n    /**\n     * Fast-multiply two or more Transform matrix types to return a\n     *    Matrix, assuming bottom row on each is [0 0 0 1].\n     *\n     * @method multiply\n     * @static\n     * @param {Transform} a left matrix\n     * @param {Transform} b right matrix\n     * @return {Transform} the resulting matrix\n     */\n    Transform.multiply = function multiply(a, b) {\n        return [\n            a[0] * b[0] + a[4] * b[1] + a[8] * b[2],\n            a[1] * b[0] + a[5] * b[1] + a[9] * b[2],\n            a[2] * b[0] + a[6] * b[1] + a[10] * b[2],\n            0,\n            a[0] * b[4] + a[4] * b[5] + a[8] * b[6],\n            a[1] * b[4] + a[5] * b[5] + a[9] * b[6],\n            a[2] * b[4] + a[6] * b[5] + a[10] * b[6],\n            0,\n            a[0] * b[8] + a[4] * b[9] + a[8] * b[10],\n            a[1] * b[8] + a[5] * b[9] + a[9] * b[10],\n            a[2] * b[8] + a[6] * b[9] + a[10] * b[10],\n            0,\n            a[0] * b[12] + a[4] * b[13] + a[8] * b[14] + a[12],\n            a[1] * b[12] + a[5] * b[13] + a[9] * b[14] + a[13],\n            a[2] * b[12] + a[6] * b[13] + a[10] * b[14] + a[14],\n            1\n        ];\n    };\n\n    /**\n     * Return a Transform translated by additional amounts in each\n     *    dimension. This is equivalent to the result of\n     *\n     *    Matrix.multiply(Matrix.translate(t[0], t[1], t[2]), m).\n     *\n     * @method thenMove\n     * @static\n     * @param {Transform} m a matrix\n     * @param {Array.Number} t floats delta vector of length 2 or 3\n     * @return {Transform} the resulting translated matrix\n     */\n    Transform.thenMove = function thenMove(m, t) {\n        if (!t[2]) t[2] = 0;\n        return [m[0], m[1], m[2], 0, m[4], m[5], m[6], 0, m[8], m[9], m[10], 0, m[12] + t[0], m[13] + t[1], m[14] + t[2], 1];\n    };\n\n    /**\n     * Return a Transform atrix which represents the result of a transform matrix\n     *    applied after a move. This is faster than the equivalent multiply.\n     *    This is equivalent to the result of:\n     *\n     *    Transform.multiply(m, Transform.translate(t[0], t[1], t[2])).\n     *\n     * @method moveThen\n     * @static\n     * @param {Array.Number} v vector representing initial movement\n     * @param {Transform} m matrix to apply afterwards\n     * @return {Transform} the resulting matrix\n     */\n    Transform.moveThen = function moveThen(v, m) {\n        if (!v[2]) v[2] = 0;\n        var t0 = v[0] * m[0] + v[1] * m[4] + v[2] * m[8];\n        var t1 = v[0] * m[1] + v[1] * m[5] + v[2] * m[9];\n        var t2 = v[0] * m[2] + v[1] * m[6] + v[2] * m[10];\n        return Transform.thenMove(m, [t0, t1, t2]);\n    };\n\n    /**\n     * Return a Transform which represents a translation by specified\n     *    amounts in each dimension.\n     *\n     * @method translate\n     * @static\n     * @param {Number} x x translation\n     * @param {Number} y y translation\n     * @param {Number} z z translation\n     * @return {Transform} the resulting matrix\n     */\n    Transform.translate = function translate(x, y, z) {\n        if (z === undefined) z = 0;\n        return [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, x, y, z, 1];\n    };\n\n    /**\n     * Return a Transform scaled by a vector in each\n     *    dimension. This is a more performant equivalent to the result of\n     *\n     *    Transform.multiply(Transform.scale(s[0], s[1], s[2]), m).\n     *\n     * @method thenScale\n     * @static\n     * @param {Transform} m a matrix\n     * @param {Array.Number} s delta vector (array of floats &&\n     *    array.length == 3)\n     * @return {Transform} the resulting translated matrix\n     */\n    Transform.thenScale = function thenScale(m, s) {\n        return [\n            s[0] * m[0], s[1] * m[1], s[2] * m[2], 0,\n            s[0] * m[4], s[1] * m[5], s[2] * m[6], 0,\n            s[0] * m[8], s[1] * m[9], s[2] * m[10], 0,\n            s[0] * m[12], s[1] * m[13], s[2] * m[14], 1\n        ];\n    };\n\n    /**\n     * Return a Transform which represents a scale by specified amounts\n     *    in each dimension.\n     *\n     * @method scale\n     * @static\n     * @param {Number} x x scale factor\n     * @param {Number} y y scale factor\n     * @param {Number} z z scale factor\n     * @return {Transform} the resulting matrix\n     */\n    Transform.scale = function scale(x, y, z) {\n        if (z === undefined) z = 1;\n        return [x, 0, 0, 0, 0, y, 0, 0, 0, 0, z, 0, 0, 0, 0, 1];\n    };\n\n    /**\n     * Return a Transform which represents a clockwise\n     *    rotation around the x axis.\n     *\n     * @method rotateX\n     * @static\n     * @param {Number} theta radians\n     * @return {Transform} the resulting matrix\n     */\n    Transform.rotateX = function rotateX(theta) {\n        var cosTheta = Math.cos(theta);\n        var sinTheta = Math.sin(theta);\n        return [1, 0, 0, 0, 0, cosTheta, sinTheta, 0, 0, -sinTheta, cosTheta, 0, 0, 0, 0, 1];\n    };\n\n    /**\n     * Return a Transform which represents a clockwise\n     *    rotation around the y axis.\n     *\n     * @method rotateY\n     * @static\n     * @param {Number} theta radians\n     * @return {Transform} the resulting matrix\n     */\n    Transform.rotateY = function rotateY(theta) {\n        var cosTheta = Math.cos(theta);\n        var sinTheta = Math.sin(theta);\n        return [cosTheta, 0, -sinTheta, 0, 0, 1, 0, 0, sinTheta, 0, cosTheta, 0, 0, 0, 0, 1];\n    };\n\n    /**\n     * Return a Transform which represents a clockwise\n     *    rotation around the z axis.\n     *\n     * @method rotateZ\n     * @static\n     * @param {Number} theta radians\n     * @return {Transform} the resulting matrix\n     */\n    Transform.rotateZ = function rotateZ(theta) {\n        var cosTheta = Math.cos(theta);\n        var sinTheta = Math.sin(theta);\n        return [cosTheta, sinTheta, 0, 0, -sinTheta, cosTheta, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];\n    };\n\n    /**\n     * Return a Transform which represents composed clockwise\n     *    rotations along each of the axes. Equivalent to the result of\n     *    Matrix.multiply(rotateX(phi), rotateY(theta), rotateZ(psi)).\n     *\n     * @method rotate\n     * @static\n     * @param {Number} phi radians to rotate about the positive x axis\n     * @param {Number} theta radians to rotate about the positive y axis\n     * @param {Number} psi radians to rotate about the positive z axis\n     * @return {Transform} the resulting matrix\n     */\n    Transform.rotate = function rotate(phi, theta, psi) {\n        var cosPhi = Math.cos(phi);\n        var sinPhi = Math.sin(phi);\n        var cosTheta = Math.cos(theta);\n        var sinTheta = Math.sin(theta);\n        var cosPsi = Math.cos(psi);\n        var sinPsi = Math.sin(psi);\n        var result = [\n            cosTheta * cosPsi,\n            cosPhi * sinPsi + sinPhi * sinTheta * cosPsi,\n            sinPhi * sinPsi - cosPhi * sinTheta * cosPsi,\n            0,\n            -cosTheta * sinPsi,\n            cosPhi * cosPsi - sinPhi * sinTheta * sinPsi,\n            sinPhi * cosPsi + cosPhi * sinTheta * sinPsi,\n            0,\n            sinTheta,\n            -sinPhi * cosTheta,\n            cosPhi * cosTheta,\n            0,\n            0, 0, 0, 1\n        ];\n        return result;\n    };\n\n    /**\n     * Return a Transform which represents an axis-angle rotation\n     *\n     * @method rotateAxis\n     * @static\n     * @param {Array.Number} v unit vector representing the axis to rotate about\n     * @param {Number} theta radians to rotate clockwise about the axis\n     * @return {Transform} the resulting matrix\n     */\n    Transform.rotateAxis = function rotateAxis(v, theta) {\n        var sinTheta = Math.sin(theta);\n        var cosTheta = Math.cos(theta);\n        var verTheta = 1 - cosTheta; // versine of theta\n\n        var xxV = v[0] * v[0] * verTheta;\n        var xyV = v[0] * v[1] * verTheta;\n        var xzV = v[0] * v[2] * verTheta;\n        var yyV = v[1] * v[1] * verTheta;\n        var yzV = v[1] * v[2] * verTheta;\n        var zzV = v[2] * v[2] * verTheta;\n        var xs = v[0] * sinTheta;\n        var ys = v[1] * sinTheta;\n        var zs = v[2] * sinTheta;\n\n        var result = [\n            xxV + cosTheta, xyV + zs, xzV - ys, 0,\n            xyV - zs, yyV + cosTheta, yzV + xs, 0,\n            xzV + ys, yzV - xs, zzV + cosTheta, 0,\n            0, 0, 0, 1\n        ];\n        return result;\n    };\n\n    /**\n     * Return a Transform which represents a transform matrix applied about\n     * a separate origin point.\n     *\n     * @method aboutOrigin\n     * @static\n     * @param {Array.Number} v origin point to apply matrix\n     * @param {Transform} m matrix to apply\n     * @return {Transform} the resulting matrix\n     */\n    Transform.aboutOrigin = function aboutOrigin(v, m) {\n        var t0 = v[0] - (v[0] * m[0] + v[1] * m[4] + v[2] * m[8]);\n        var t1 = v[1] - (v[0] * m[1] + v[1] * m[5] + v[2] * m[9]);\n        var t2 = v[2] - (v[0] * m[2] + v[1] * m[6] + v[2] * m[10]);\n        return Transform.thenMove(m, [t0, t1, t2]);\n    };\n\n    /**\n     * Return a Transform representation of a skew transformation\n     *\n     * @method skew\n     * @static\n     * @param {Number} phi scale factor skew in the x axis\n     * @param {Number} theta scale factor skew in the y axis\n     * @param {Number} psi scale factor skew in the z axis\n     * @return {Transform} the resulting matrix\n     */\n    Transform.skew = function skew(phi, theta, psi) {\n        return [1, 0, 0, 0, Math.tan(psi), 1, 0, 0, Math.tan(theta), Math.tan(phi), 1, 0, 0, 0, 0, 1];\n    };\n\n    /**\n     * Returns a perspective Transform matrix\n     *\n     * @method perspective\n     * @static\n     * @param {Number} focusZ z position of focal point\n     * @return {Transform} the resulting matrix\n     */\n    Transform.perspective = function perspective(focusZ) {\n        return [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, -1 / focusZ, 0, 0, 0, 1];\n    };\n\n    /**\n     * Return translation vector component of given Transform\n     *\n     * @method getTranslate\n     * @static\n     * @param {Transform} m matrix\n     * @return {Array.Number} the translation vector [t_x, t_y, t_z]\n     */\n    Transform.getTranslate = function getTranslate(m) {\n        return [m[12], m[13], m[14]];\n    };\n\n    /**\n     * Return inverse affine matrix for given Transform.\n     *   Note: This assumes m[3] = m[7] = m[11] = 0, and m[15] = 1.\n     *   Will provide incorrect results if not invertible or preconditions not met.\n     *\n     * @method inverse\n     * @static\n     * @param {Transform} m matrix\n     * @return {Transform} the resulting inverted matrix\n     */\n    Transform.inverse = function inverse(m) {\n        // only need to consider 3x3 section for affine\n        var c0 = m[5] * m[10] - m[6] * m[9];\n        var c1 = m[4] * m[10] - m[6] * m[8];\n        var c2 = m[4] * m[9] - m[5] * m[8];\n        var c4 = m[1] * m[10] - m[2] * m[9];\n        var c5 = m[0] * m[10] - m[2] * m[8];\n        var c6 = m[0] * m[9] - m[1] * m[8];\n        var c8 = m[1] * m[6] - m[2] * m[5];\n        var c9 = m[0] * m[6] - m[2] * m[4];\n        var c10 = m[0] * m[5] - m[1] * m[4];\n        var detM = m[0] * c0 - m[1] * c1 + m[2] * c2;\n        var invD = 1 / detM;\n        var result = [\n            invD * c0, -invD * c4, invD * c8, 0,\n            -invD * c1, invD * c5, -invD * c9, 0,\n            invD * c2, -invD * c6, invD * c10, 0,\n            0, 0, 0, 1\n        ];\n        result[12] = -m[12] * result[0] - m[13] * result[4] - m[14] * result[8];\n        result[13] = -m[12] * result[1] - m[13] * result[5] - m[14] * result[9];\n        result[14] = -m[12] * result[2] - m[13] * result[6] - m[14] * result[10];\n        return result;\n    };\n\n    /**\n     * Returns the transpose of a 4x4 matrix\n     *\n     * @method transpose\n     * @static\n     * @param {Transform} m matrix\n     * @return {Transform} the resulting transposed matrix\n     */\n    Transform.transpose = function transpose(m) {\n        return [m[0], m[4], m[8], m[12], m[1], m[5], m[9], m[13], m[2], m[6], m[10], m[14], m[3], m[7], m[11], m[15]];\n    };\n\n    function _normSquared(v) {\n        return (v.length === 2) ? v[0] * v[0] + v[1] * v[1] : v[0] * v[0] + v[1] * v[1] + v[2] * v[2];\n    }\n    function _norm(v) {\n        return Math.sqrt(_normSquared(v));\n    }\n    function _sign(n) {\n        return (n < 0) ? -1 : 1;\n    }\n\n    /**\n     * Decompose Transform into separate .translate, .rotate, .scale,\n     *    and .skew components.\n     *\n     * @method interpret\n     * @static\n     * @param {Transform} M tranform matrix\n     * @return {Object} matrix spec object with component matrices .translate,\n     *    .rotate, .scale, .skew\n     */\n    Transform.interpret = function interpret(M) {\n\n        // QR decomposition via Householder reflections\n        //FIRST ITERATION\n\n        //default Q1 to the identity matrix;\n        var x = [M[0], M[1], M[2]];                // first column vector\n        var sgn = _sign(x[0]);                     // sign of first component of x (for stability)\n        var xNorm = _norm(x);                      // norm of first column vector\n        var v = [x[0] + sgn * xNorm, x[1], x[2]];  // v = x + sign(x[0])|x|e1\n        var mult = 2 / _normSquared(v);            // mult = 2/v'v\n\n        //bail out if our Matrix is singular\n        if (mult >= Infinity) {\n            return {translate: Transform.getTranslate(M), rotate: [0, 0, 0], scale: [0, 0, 0], skew: [0, 0, 0]};\n        }\n\n        //evaluate Q1 = I - 2vv'/v'v\n        var Q1 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1];\n\n        //diagonals\n        Q1[0]  = 1 - mult * v[0] * v[0];    // 0,0 entry\n        Q1[5]  = 1 - mult * v[1] * v[1];    // 1,1 entry\n        Q1[10] = 1 - mult * v[2] * v[2];    // 2,2 entry\n\n        //upper diagonal\n        Q1[1] = -mult * v[0] * v[1];        // 0,1 entry\n        Q1[2] = -mult * v[0] * v[2];        // 0,2 entry\n        Q1[6] = -mult * v[1] * v[2];        // 1,2 entry\n\n        //lower diagonal\n        Q1[4] = Q1[1];                      // 1,0 entry\n        Q1[8] = Q1[2];                      // 2,0 entry\n        Q1[9] = Q1[6];                      // 2,1 entry\n\n        //reduce first column of M\n        var MQ1 = Transform.multiply(Q1, M);\n\n        //SECOND ITERATION on (1,1) minor\n        var x2 = [MQ1[5], MQ1[6]];\n        var sgn2 = _sign(x2[0]);                    // sign of first component of x (for stability)\n        var x2Norm = _norm(x2);                     // norm of first column vector\n        var v2 = [x2[0] + sgn2 * x2Norm, x2[1]];    // v = x + sign(x[0])|x|e1\n        var mult2 = 2 / _normSquared(v2);           // mult = 2/v'v\n\n        //evaluate Q2 = I - 2vv'/v'v\n        var Q2 = [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1];\n\n        //diagonal\n        Q2[5]  = 1 - mult2 * v2[0] * v2[0]; // 1,1 entry\n        Q2[10] = 1 - mult2 * v2[1] * v2[1]; // 2,2 entry\n\n        //off diagonals\n        Q2[6] = -mult2 * v2[0] * v2[1];     // 2,1 entry\n        Q2[9] = Q2[6];                      // 1,2 entry\n\n        //calc QR decomposition. Q = Q1*Q2, R = Q'*M\n        var Q = Transform.multiply(Q2, Q1);      //note: really Q transpose\n        var R = Transform.multiply(Q, M);\n\n        //remove negative scaling\n        var remover = Transform.scale(R[0] < 0 ? -1 : 1, R[5] < 0 ? -1 : 1, R[10] < 0 ? -1 : 1);\n        R = Transform.multiply(R, remover);\n        Q = Transform.multiply(remover, Q);\n\n        //decompose into rotate/scale/skew matrices\n        var result = {};\n        result.translate = Transform.getTranslate(M);\n        result.rotate = [Math.atan2(-Q[6], Q[10]), Math.asin(Q[2]), Math.atan2(-Q[1], Q[0])];\n        if (!result.rotate[0]) {\n            result.rotate[0] = 0;\n            result.rotate[2] = Math.atan2(Q[4], Q[5]);\n        }\n        result.scale = [R[0], R[5], R[10]];\n        result.skew = [Math.atan2(R[9], result.scale[2]), Math.atan2(R[8], result.scale[2]), Math.atan2(R[4], result.scale[0])];\n\n        //double rotation workaround\n        if (Math.abs(result.rotate[0]) + Math.abs(result.rotate[2]) > 1.5 * Math.PI) {\n            result.rotate[1] = Math.PI - result.rotate[1];\n            if (result.rotate[1] > Math.PI) result.rotate[1] -= 2 * Math.PI;\n            if (result.rotate[1] < -Math.PI) result.rotate[1] += 2 * Math.PI;\n            if (result.rotate[0] < 0) result.rotate[0] += Math.PI;\n            else result.rotate[0] -= Math.PI;\n            if (result.rotate[2] < 0) result.rotate[2] += Math.PI;\n            else result.rotate[2] -= Math.PI;\n        }\n\n        return result;\n    };\n\n    /**\n     * Weighted average between two matrices by averaging their\n     *     translation, rotation, scale, skew components.\n     *     f(M1,M2,t) = (1 - t) * M1 + t * M2\n     *\n     * @method average\n     * @static\n     * @param {Transform} M1 f(M1,M2,0) = M1\n     * @param {Transform} M2 f(M1,M2,1) = M2\n     * @param {Number} t\n     * @return {Transform} resulting matrix\n     */\n    Transform.average = function average(M1, M2, t) {\n        t = (t === undefined) ? 0.5 : t;\n        var specM1 = Transform.interpret(M1);\n        var specM2 = Transform.interpret(M2);\n\n        var specAvg = {\n            translate: [0, 0, 0],\n            rotate: [0, 0, 0],\n            scale: [0, 0, 0],\n            skew: [0, 0, 0]\n        };\n\n        for (var i = 0; i < 3; i++) {\n            specAvg.translate[i] = (1 - t) * specM1.translate[i] + t * specM2.translate[i];\n            specAvg.rotate[i] = (1 - t) * specM1.rotate[i] + t * specM2.rotate[i];\n            specAvg.scale[i] = (1 - t) * specM1.scale[i] + t * specM2.scale[i];\n            specAvg.skew[i] = (1 - t) * specM1.skew[i] + t * specM2.skew[i];\n        }\n        return Transform.build(specAvg);\n    };\n\n    /**\n     * Compose .translate, .rotate, .scale, .skew components into\n     * Transform matrix\n     *\n     * @method build\n     * @static\n     * @param {matrixSpec} spec object with component matrices .translate,\n     *    .rotate, .scale, .skew\n     * @return {Transform} composed martix\n     */\n    Transform.build = function build(spec) {\n        var scaleMatrix = Transform.scale(spec.scale[0], spec.scale[1], spec.scale[2]);\n        var skewMatrix = Transform.skew(spec.skew[0], spec.skew[1], spec.skew[2]);\n        var rotateMatrix = Transform.rotate(spec.rotate[0], spec.rotate[1], spec.rotate[2]);\n        return Transform.thenMove(Transform.multiply(Transform.multiply(rotateMatrix, skewMatrix), scaleMatrix), spec.translate);\n    };\n\n    /**\n     * Determine if two Transforms are component-wise equal\n     *   Warning: breaks on perspective Transforms\n     *\n     * @method equals\n     * @static\n     * @param {Transform} a matrix\n     * @param {Transform} b matrix\n     * @return {boolean}\n     */\n    Transform.equals = function equals(a, b) {\n        return !Transform.notEquals(a, b);\n    };\n\n    /**\n     * Determine if two Transforms are component-wise unequal\n     *   Warning: breaks on perspective Transforms\n     *\n     * @method notEquals\n     * @static\n     * @param {Transform} a matrix\n     * @param {Transform} b matrix\n     * @return {boolean}\n     */\n    Transform.notEquals = function notEquals(a, b) {\n        if (a === b) return false;\n        if (!(a && b)) return true;\n\n        // shortci\n        return !(a && b) ||\n            a[12] !== b[12] || a[13] !== b[13] || a[14] !== b[14] ||\n            a[0] !== b[0] || a[1] !== b[1] || a[2] !== b[2] ||\n            a[4] !== b[4] || a[5] !== b[5] || a[6] !== b[6] ||\n            a[8] !== b[8] || a[9] !== b[9] || a[10] !== b[10];\n    };\n\n    /**\n     * Constrain angle-trio components to range of [-pi, pi).\n     *\n     * @method normalizeRotation\n     * @static\n     * @param {Array.Number} rotation phi, theta, psi (array of floats\n     *    && array.length == 3)\n     * @return {Array.Number} new phi, theta, psi triplet\n     *    (array of floats && array.length == 3)\n     */\n    Transform.normalizeRotation = function normalizeRotation(rotation) {\n        var result = rotation.slice(0);\n        if (result[0] === Math.PI * 0.5 || result[0] === -Math.PI * 0.5) {\n            result[0] = -result[0];\n            result[1] = Math.PI - result[1];\n            result[2] -= Math.PI;\n        }\n        if (result[0] > Math.PI * 0.5) {\n            result[0] = result[0] - Math.PI;\n            result[1] = Math.PI - result[1];\n            result[2] -= Math.PI;\n        }\n        if (result[0] < -Math.PI * 0.5) {\n            result[0] = result[0] + Math.PI;\n            result[1] = -Math.PI - result[1];\n            result[2] -= Math.PI;\n        }\n        while (result[1] < -Math.PI) result[1] += 2 * Math.PI;\n        while (result[1] >= Math.PI) result[1] -= 2 * Math.PI;\n        while (result[2] < -Math.PI) result[2] += 2 * Math.PI;\n        while (result[2] >= Math.PI) result[2] -= 2 * Math.PI;\n        return result;\n    };\n\n    /**\n     * (Property) Array defining a translation forward in z by 1\n     *\n     * @property {array} inFront\n     * @static\n     * @final\n     */\n    Transform.inFront = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1e-3, 1];\n\n    /**\n     * (Property) Array defining a translation backwards in z by 1\n     *\n     * @property {array} behind\n     * @static\n     * @final\n     */\n    Transform.behind = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, -1e-3, 1];\n\n    module.exports = Transform;\n});\n","/**\n * Copyright (c) 2014 Petka Antonov\n * \n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:</p>\n * \n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n * \n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n * \n */\n\"use strict\";\nvar global = require(\"./global.js\");\nvar es5 = require(\"./es5.js\");\nvar haveGetters = (function(){\n    try {\n        var o = {};\n        es5.defineProperty(o, \"f\", {\n            get: function () {\n                return 3;\n            }\n        });\n        return o.f === 3;\n    }\n    catch (e) {\n        return false;\n    }\n\n})();\n\nvar canEvaluate = (function() {\n    if (typeof window !== \"undefined\" && window !== null &&\n        typeof window.document !== \"undefined\" &&\n        typeof navigator !== \"undefined\" && navigator !== null &&\n        typeof navigator.appName === \"string\" &&\n        window === global) {\n        return false;\n    }\n    return true;\n})();\n\nfunction deprecated(msg) {\n    if (typeof console !== \"undefined\" && console !== null &&\n        typeof console.warn === \"function\") {\n        console.warn(\"Bluebird: \" + msg);\n    }\n}\n\nvar errorObj = {e: {}};\nfunction tryCatch1(fn, receiver, arg) {\n    try {\n        return fn.call(receiver, arg);\n    }\n    catch (e) {\n        errorObj.e = e;\n        return errorObj;\n    }\n}\n\nfunction tryCatch2(fn, receiver, arg, arg2) {\n    try {\n        return fn.call(receiver, arg, arg2);\n    }\n    catch (e) {\n        errorObj.e = e;\n        return errorObj;\n    }\n}\n\nfunction tryCatchApply(fn, args, receiver) {\n    try {\n        return fn.apply(receiver, args);\n    }\n    catch (e) {\n        errorObj.e = e;\n        return errorObj;\n    }\n}\n\nvar inherits = function(Child, Parent) {\n    var hasProp = {}.hasOwnProperty;\n\n    function T() {\n        this.constructor = Child;\n        this.constructor$ = Parent;\n        for (var propertyName in Parent.prototype) {\n            if (hasProp.call(Parent.prototype, propertyName) &&\n                propertyName.charAt(propertyName.length-1) !== \"$\"\n           ) {\n                this[propertyName + \"$\"] = Parent.prototype[propertyName];\n            }\n        }\n    }\n    T.prototype = Parent.prototype;\n    Child.prototype = new T();\n    return Child.prototype;\n};\n\nfunction asString(val) {\n    return typeof val === \"string\" ? val : (\"\" + val);\n}\n\nfunction isPrimitive(val) {\n    return val == null || val === true || val === false ||\n        typeof val === \"string\" || typeof val === \"number\";\n\n}\n\nfunction isObject(value) {\n    return !isPrimitive(value);\n}\n\nfunction maybeWrapAsError(maybeError) {\n    if (!isPrimitive(maybeError)) return maybeError;\n\n    return new Error(asString(maybeError));\n}\n\nfunction withAppended(target, appendee) {\n    var len = target.length;\n    var ret = new Array(len + 1);\n    var i;\n    for (i = 0; i < len; ++i) {\n        ret[i] = target[i];\n    }\n    ret[i] = appendee;\n    return ret;\n}\n\n\nfunction notEnumerableProp(obj, name, value) {\n    if (isPrimitive(obj)) return obj;\n    var descriptor = {\n        value: value,\n        configurable: true,\n        enumerable: false,\n        writable: true\n    };\n    es5.defineProperty(obj, name, descriptor);\n    return obj;\n}\n\n\nvar wrapsPrimitiveReceiver = (function() {\n    return this !== \"string\";\n}).call(\"string\");\n\nfunction thrower(r) {\n    throw r;\n}\n\n\nfunction toFastProperties(obj) {\n    /*jshint -W027*/\n    function f() {}\n    f.prototype = obj;\n    return f;\n    eval(obj);\n}\n\nvar ret = {\n    thrower: thrower,\n    isArray: es5.isArray,\n    haveGetters: haveGetters,\n    notEnumerableProp: notEnumerableProp,\n    isPrimitive: isPrimitive,\n    isObject: isObject,\n    canEvaluate: canEvaluate,\n    deprecated: deprecated,\n    errorObj: errorObj,\n    tryCatch1: tryCatch1,\n    tryCatch2: tryCatch2,\n    tryCatchApply: tryCatchApply,\n    inherits: inherits,\n    withAppended: withAppended,\n    asString: asString,\n    maybeWrapAsError: maybeWrapAsError,\n    wrapsPrimitiveReceiver: wrapsPrimitiveReceiver,\n    toFastProperties: toFastProperties\n};\n\nmodule.exports = ret;\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n *\n * Owner: mark@famo.us\n * @license MPL 2.0\n * @copyright Famous Industries, Inc. 2014\n */\n\ndefine(function(require, exports, module) {\n    var Entity = require('./Entity');\n    var EventHandler = require('./EventHandler');\n    var Transform = require('./Transform');\n\n    var devicePixelRatio = window.devicePixelRatio || 1;\n    var usePrefix = document.createElement('div').style.webkitTransform !== undefined;\n\n    /**\n     * A base class for viewable content and event\n     *   targets inside a Famo.us application, containing a renderable document\n     *   fragment. Like an HTML div, it can accept internal markup,\n     *   properties, classes, and handle events.\n     *\n     * @class Surface\n     * @constructor\n     *\n     * @param {Object} [options] default option overrides\n     * @param {Array.Number} [options.size] [width, height] in pixels\n     * @param {Array.string} [options.classes] CSS classes to set on inner content\n     * @param {Array} [options.properties] string dictionary of HTML attributes to set on target div\n     * @param {string} [options.content] inner (HTML) content of surface\n     */\n    function Surface(options) {\n        this.options = {};\n\n        this.properties = {};\n        this.content = '';\n        this.classList = [];\n        this.size = null;\n\n        this._classesDirty = true;\n        this._stylesDirty = true;\n        this._sizeDirty = true;\n        this._contentDirty = true;\n\n        this._dirtyClasses = [];\n\n        this._matrix = null;\n        this._opacity = 1;\n        this._origin = null;\n        this._size = null;\n\n        /** @ignore */\n        this.eventForwarder = function eventForwarder(event) {\n            this.emit(event.type, event);\n        }.bind(this);\n        this.eventHandler = new EventHandler();\n        this.eventHandler.bindThis(this);\n\n        this.id = Entity.register(this);\n\n        if (options) this.setOptions(options);\n\n        this._currTarget = null;\n    }\n    Surface.prototype.elementType = 'div';\n    Surface.prototype.elementClass = 'famous-surface';\n\n    /**\n     * Bind a callback function to an event type handled by this object.\n     *\n     * @method \"on\"\n     *\n     * @param {string} type event type key (for example, 'click')\n     * @param {function(string, Object)} fn handler callback\n     * @return {EventHandler} this\n     */\n    Surface.prototype.on = function on(type, fn) {\n        if (this._currTarget) this._currTarget.addEventListener(type, this.eventForwarder);\n        this.eventHandler.on(type, fn);\n    };\n\n    /**\n     * Unbind an event by type and handler.\n     *   This undoes the work of \"on\"\n     *\n     * @method removeListener\n     * @param {string} type event type key (for example, 'click')\n     * @param {function(string, Object)} fn handler\n     */\n    Surface.prototype.removeListener = function removeListener(type, fn) {\n        this.eventHandler.removeListener(type, fn);\n    };\n\n    /**\n     * Trigger an event, sending to all downstream handlers\n     *   listening for provided 'type' key.\n     *\n     * @method emit\n     *\n     * @param {string} type event type key (for example, 'click')\n     * @param {Object} [event] event data\n     * @return {EventHandler} this\n     */\n    Surface.prototype.emit = function emit(type, event) {\n        if (event && !event.origin) event.origin = this;\n        var handled = this.eventHandler.emit(type, event);\n        if (handled && event && event.stopPropagation) event.stopPropagation();\n        return handled;\n    };\n\n    /**\n     * Add event handler object to set of downstream handlers.\n     *\n     * @method pipe\n     *\n     * @param {EventHandler} target event handler target object\n     * @return {EventHandler} passed event handler\n     */\n    Surface.prototype.pipe = function pipe(target) {\n        return this.eventHandler.pipe(target);\n    };\n\n    /**\n     * Remove handler object from set of downstream handlers.\n     *   Undoes work of \"pipe\"\n     *\n     * @method unpipe\n     *\n     * @param {EventHandler} target target handler object\n     * @return {EventHandler} provided target\n     */\n    Surface.prototype.unpipe = function unpipe(target) {\n        return this.eventHandler.unpipe(target);\n    };\n\n    /**\n     * Return spec for this surface. Note that for a base surface, this is\n     *    simply an id.\n     *\n     * @method render\n     * @private\n     * @return {Object} render spec for this surface (spec id)\n     */\n    Surface.prototype.render = function render() {\n        return this.id;\n    };\n\n    /**\n     * Set CSS-style properties on this Surface. Note that this will cause\n     *    dirtying and thus re-rendering, even if values do not change.\n     *\n     * @method setProperties\n     * @param {Object} properties property dictionary of \"key\" => \"value\"\n     */\n    Surface.prototype.setProperties = function setProperties(properties) {\n        for (var n in properties) {\n            this.properties[n] = properties[n];\n        }\n        this._stylesDirty = true;\n    };\n\n    /**\n     * Get CSS-style properties on this Surface.\n     *\n     * @method getProperties\n     *\n     * @return {Object} Dictionary of this Surface's properties.\n     */\n    Surface.prototype.getProperties = function getProperties() {\n        return this.properties;\n    };\n\n    /**\n     * Add CSS-style class to the list of classes on this Surface. Note\n     *   this will map directly to the HTML property of the actual\n     *   corresponding rendered <div>.\n     *\n     * @method addClass\n     * @param {string} className name of class to add\n     */\n    Surface.prototype.addClass = function addClass(className) {\n        if (this.classList.indexOf(className) < 0) {\n            this.classList.push(className);\n            this._classesDirty = true;\n        }\n    };\n\n    /**\n     * Remove CSS-style class from the list of classes on this Surface.\n     *   Note this will map directly to the HTML property of the actual\n     *   corresponding rendered <div>.\n     *\n     * @method removeClass\n     * @param {string} className name of class to remove\n     */\n    Surface.prototype.removeClass = function removeClass(className) {\n        var i = this.classList.indexOf(className);\n        if (i >= 0) {\n            this._dirtyClasses.push(this.classList.splice(i, 1)[0]);\n            this._classesDirty = true;\n        }\n    };\n\n    /**\n     * Reset class list to provided dictionary.\n     * @method setClasses\n     * @param {Array.string} classList\n     */\n    Surface.prototype.setClasses = function setClasses(classList) {\n        var i = 0;\n        var removal = [];\n        for (i = 0; i < this.classList.length; i++) {\n            if (classList.indexOf(this.classList[i]) < 0) removal.push(this.classList[i]);\n        }\n        for (i = 0; i < removal.length; i++) this.removeClass(removal[i]);\n        // duplicates are already checked by addClass()\n        for (i = 0; i < classList.length; i++) this.addClass(classList[i]);\n    };\n\n    /**\n     * Get array of CSS-style classes attached to this div.\n     *\n     * @method getClasslist\n     * @return {Array.string} array of class names\n     */\n    Surface.prototype.getClassList = function getClassList() {\n        return this.classList;\n    };\n\n    /**\n     * Set or overwrite inner (HTML) content of this surface. Note that this\n     *    causes a re-rendering if the content has changed.\n     *\n     * @method setContent\n     * @param {string} content HTML content\n     */\n    Surface.prototype.setContent = function setContent(content) {\n        if (this.content !== content) {\n            this.content = content;\n            this._contentDirty = true;\n        }\n    };\n\n    /**\n     * Return inner (HTML) content of this surface.\n     *\n     * @method getContent\n     *\n     * @return {string} inner (HTML) content\n     */\n    Surface.prototype.getContent = function getContent() {\n        return this.content;\n    };\n\n    /**\n     * Set options for this surface\n     *\n     * @method setOptions\n     * @param {Object} [options] overrides for default options.  See constructor.\n     */\n    Surface.prototype.setOptions = function setOptions(options) {\n        if (options.size) this.setSize(options.size);\n        if (options.classes) this.setClasses(options.classes);\n        if (options.properties) this.setProperties(options.properties);\n        if (options.content) this.setContent(options.content);\n    };\n\n    //  Attach Famous event handling to document events emanating from target\n    //    document element.  This occurs just after deployment to the document.\n    //    Calling this enables methods like #on and #pipe.\n    function _addEventListeners(target) {\n        for (var i in this.eventHandler.listeners) {\n            target.addEventListener(i, this.eventForwarder);\n        }\n    }\n\n    //  Detach Famous event handling from document events emanating from target\n    //  document element.  This occurs just before recall from the document.\n    function _removeEventListeners(target) {\n        for (var i in this.eventHandler.listeners) {\n            target.removeEventListener(i, this.eventForwarder);\n        }\n    }\n\n     //  Apply to document all changes from removeClass() since last setup().\n    function _cleanupClasses(target) {\n        for (var i = 0; i < this._dirtyClasses.length; i++) target.classList.remove(this._dirtyClasses[i]);\n        this._dirtyClasses = [];\n    }\n\n    // Apply values of all Famous-managed styles to the document element.\n    //  These will be deployed to the document on call to #setup().\n    function _applyStyles(target) {\n        for (var n in this.properties) {\n            target.style[n] = this.properties[n];\n        }\n    }\n\n    // Clear all Famous-managed styles from the document element.\n    // These will be deployed to the document on call to #setup().\n    function _cleanupStyles(target) {\n        for (var n in this.properties) {\n            target.style[n] = '';\n        }\n    }\n\n    /**\n     * Return a Matrix's webkit css representation to be used with the\n     *    CSS3 -webkit-transform style.\n     *    Example: -webkit-transform: matrix3d(1,0,0,0,0,1,0,0,0,0,1,0,716,243,0,1)\n     *\n     * @method _formatCSSTransform\n     * @private\n     * @param {FamousMatrix} m matrix\n     * @return {string} matrix3d CSS style representation of the transform\n     */\n    function _formatCSSTransform(m) {\n        m[12] = Math.round(m[12] * devicePixelRatio) / devicePixelRatio;\n        m[13] = Math.round(m[13] * devicePixelRatio) / devicePixelRatio;\n\n        var result = 'matrix3d(';\n        for (var i = 0; i < 15; i++) {\n            result += (m[i] < 0.000001 && m[i] > -0.000001) ? '0,' : m[i] + ',';\n        }\n        result += m[15] + ')';\n        return result;\n    }\n\n    /**\n     * Directly apply given FamousMatrix to the document element as the\n     *   appropriate webkit CSS style.\n     *\n     * @method setMatrix\n     *\n     * @static\n     * @private\n     * @param {Element} element document element\n     * @param {FamousMatrix} matrix\n     */\n\n    var _setMatrix;\n    if (navigator.userAgent.toLowerCase().indexOf('firefox') > -1) {\n        _setMatrix = function(element, matrix) {\n            element.style.zIndex = (matrix[14] * 1000000) | 0;    // fix for Firefox z-buffer issues\n            element.style.transform = _formatCSSTransform(matrix);\n        };\n    }\n    else if (usePrefix) {\n        _setMatrix = function(element, matrix) {\n            element.style.webkitTransform = _formatCSSTransform(matrix);\n        };\n    }\n    else {\n        _setMatrix = function(element, matrix) {\n            element.style.transform = _formatCSSTransform(matrix);\n        };\n    }\n\n    // format origin as CSS percentage string\n    function _formatCSSOrigin(origin) {\n        return (100 * origin[0]) + '% ' + (100 * origin[1]) + '%';\n    }\n\n     // Directly apply given origin coordinates to the document element as the\n     // appropriate webkit CSS style.\n    var _setOrigin = usePrefix ? function(element, origin) {\n        element.style.webkitTransformOrigin = _formatCSSOrigin(origin);\n    } : function(element, origin) {\n        element.style.transformOrigin = _formatCSSOrigin(origin);\n    };\n\n     // Shrink given document element until it is effectively invisible.\n    var _setInvisible = usePrefix ? function(element) {\n        element.style.webkitTransform = 'scale3d(0.0001,0.0001,1)';\n        element.style.opacity = 0;\n    } : function(element) {\n        element.style.transform = 'scale3d(0.0001,0.0001,1)';\n        element.style.opacity = 0;\n    };\n\n    function _xyNotEquals(a, b) {\n        return (a && b) ? (a[0] !== b[0] || a[1] !== b[1]) : a !== b;\n    }\n\n    /**\n     * One-time setup for an element to be ready for commits to document.\n     *\n     * @private\n     * @method setup\n     *\n     * @param {ElementAllocator} allocator document element pool for this context\n     */\n    Surface.prototype.setup = function setup(allocator) {\n        var target = allocator.allocate(this.elementType);\n        if (this.elementClass) {\n            if (this.elementClass instanceof Array) {\n                for (var i = 0; i < this.elementClass.length; i++) {\n                    target.classList.add(this.elementClass[i]);\n                }\n            }\n            else {\n                target.classList.add(this.elementClass);\n            }\n        }\n        target.style.display = '';\n        _addEventListeners.call(this, target);\n        this._currTarget = target;\n        this._stylesDirty = true;\n        this._classesDirty = true;\n        this._sizeDirty = true;\n        this._contentDirty = true;\n        this._matrix = null;\n        this._opacity = undefined;\n        this._origin = null;\n        this._size = null;\n    };\n\n    /**\n     * Apply changes from this component to the corresponding document element.\n     * This includes changes to classes, styles, size, content, opacity, origin,\n     * and matrix transforms.\n     *\n     * @private\n     * @method commit\n     * @param {Context} context commit context\n     */\n    Surface.prototype.commit = function commit(context) {\n        if (!this._currTarget) this.setup(context.allocator);\n        var target = this._currTarget;\n\n        var matrix = context.transform;\n        var opacity = context.opacity;\n        var origin = context.origin;\n        var size = context.size;\n\n        if (this._classesDirty) {\n            _cleanupClasses.call(this, target);\n            var classList = this.getClassList();\n            for (var i = 0; i < classList.length; i++) target.classList.add(classList[i]);\n            this._classesDirty = false;\n        }\n\n        if (this._stylesDirty) {\n            _applyStyles.call(this, target);\n            this._stylesDirty = false;\n        }\n\n        if (this._contentDirty) {\n            this.deploy(target);\n            this.eventHandler.emit('deploy');\n            this._contentDirty = false;\n        }\n\n        if (this.size) {\n            var origSize = size;\n            size = [this.size[0], this.size[1]];\n            if (size[0] === undefined && origSize[0]) size[0] = origSize[0];\n            if (size[1] === undefined && origSize[1]) size[1] = origSize[1];\n        }\n\n        if (size[0] === true) size[0] = target.clientWidth;\n        if (size[1] === true) size[1] = target.clientHeight;\n\n        if (_xyNotEquals(this._size, size)) {\n            if (!this._size) this._size = [0, 0];\n            this._size[0] = size[0];\n            this._size[1] = size[1];\n            this._sizeDirty = true;\n        }\n\n        if (!matrix && this._matrix) {\n            this._matrix = null;\n            this._opacity = 0;\n            _setInvisible(target);\n            return;\n        }\n\n        if (this._opacity !== opacity) {\n            this._opacity = opacity;\n            target.style.opacity = (opacity >= 1) ? '0.999999' : opacity;\n        }\n\n        if (_xyNotEquals(this._origin, origin) || Transform.notEquals(this._matrix, matrix) || this._sizeDirty) {\n            if (!matrix) matrix = Transform.identity;\n            this._matrix = matrix;\n            var aaMatrix = matrix;\n            if (origin) {\n                if (!this._origin) this._origin = [0, 0];\n                this._origin[0] = origin[0];\n                this._origin[1] = origin[1];\n                aaMatrix = Transform.thenMove(matrix, [-this._size[0] * origin[0], -this._size[1] * origin[1], 0]);\n                _setOrigin(target, origin);\n            }\n            _setMatrix(target, aaMatrix);\n        }\n\n        if (this._sizeDirty) {\n            if (this._size) {\n                target.style.width = (this.size && this.size[0] === true) ? '' : this._size[0] + 'px';\n                target.style.height = (this.size && this.size[1] === true) ?  '' : this._size[1] + 'px';\n            }\n            this._sizeDirty = false;\n        }\n    };\n\n    /**\n     *  Remove all Famous-relevant attributes from a document element.\n     *    This is called by SurfaceManager's detach().\n     *    This is in some sense the reverse of .deploy().\n     *\n     * @private\n     * @method cleanup\n     * @param {ElementAllocator} allocator\n     */\n    Surface.prototype.cleanup = function cleanup(allocator) {\n        var i = 0;\n        var target = this._currTarget;\n        this.eventHandler.emit('recall');\n        this.recall(target);\n        target.style.display = 'none';\n        target.style.width = '';\n        target.style.height = '';\n        this._size = null;\n        _cleanupStyles.call(this, target);\n        var classList = this.getClassList();\n        _cleanupClasses.call(this, target);\n        for (i = 0; i < classList.length; i++) target.classList.remove(classList[i]);\n        if (this.elementClass) {\n            if (this.elementClass instanceof Array) {\n                for (i = 0; i < this.elementClass.length; i++) {\n                    target.classList.remove(this.elementClass[i]);\n                }\n            }\n            else {\n                target.classList.remove(this.elementClass);\n            }\n        }\n        _removeEventListeners.call(this, target);\n        this._currTarget = null;\n        allocator.deallocate(target);\n        _setInvisible(target);\n    };\n\n    /**\n     * Place the document element that this component manages into the document.\n     *\n     * @private\n     * @method deploy\n     * @param {Node} target document parent of this container\n     */\n    Surface.prototype.deploy = function deploy(target) {\n        var content = this.getContent();\n        if (content instanceof Node) {\n            while (target.hasChildNodes()) target.removeChild(target.firstChild);\n            target.appendChild(content);\n        }\n        else target.innerHTML = content;\n    };\n\n    /**\n     * Remove any contained document content associated with this surface\n     *   from the actual document.\n     *\n     * @private\n     * @method recall\n     */\n    Surface.prototype.recall = function recall(target) {\n        var df = document.createDocumentFragment();\n        while (target.hasChildNodes()) df.appendChild(target.firstChild);\n        this.setContent(df);\n    };\n\n    /**\n     *  Get the x and y dimensions of the surface.\n     *\n     * @method getSize\n     * @param {boolean} actual return computed size rather than provided\n     * @return {Array.Number} [x,y] size of surface\n     */\n    Surface.prototype.getSize = function getSize(actual) {\n        return actual ? this._size : (this.size || this._size);\n    };\n\n    /**\n     * Set x and y dimensions of the surface.\n     *\n     * @method setSize\n     * @param {Array.Number} size as [width, height]\n     */\n    Surface.prototype.setSize = function setSize(size) {\n        this.size = size ? [size[0], size[1]] : null;\n        this._sizeDirty = true;\n    };\n\n    module.exports = Surface;\n});\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n *\n * Owner: mark@famo.us\n * @license MPL 2.0\n * @copyright Famous Industries, Inc. 2014\n */\n\ndefine(function(require, exports, module) {\n    var EventHandler = require('./EventHandler');\n    var OptionsManager = require('./OptionsManager');\n    var RenderNode = require('./RenderNode');\n\n    /**\n     * Useful for quickly creating elements within applications\n     *   with large event systems.  Consists of a RenderNode paired with\n     *   an input EventHandler and an output EventHandler.\n     *   Meant to be extended by the developer.\n     *\n     * @class View\n     * @uses EventHandler\n     * @uses OptionsManager\n     * @uses RenderNode\n     * @constructor\n     */\n    function View(options) {\n        this._node = new RenderNode();\n\n        this._eventInput = new EventHandler();\n        this._eventOutput = new EventHandler();\n        EventHandler.setInputHandler(this, this._eventInput);\n        EventHandler.setOutputHandler(this, this._eventOutput);\n\n        this.options = Object.create(this.constructor.DEFAULT_OPTIONS || View.DEFAULT_OPTIONS);\n        this._optionsManager = new OptionsManager(this.options);\n\n        if (options) this.setOptions(options);\n    }\n\n    View.DEFAULT_OPTIONS = {}; // no defaults\n\n    /**\n     * Look up options value by key\n     * @method getOptions\n     *\n     * @param {string} key key\n     * @return {Object} associated object\n     */\n    View.prototype.getOptions = function getOptions() {\n        return this._optionsManager.value();\n    };\n\n    /*\n     *  Set internal options.\n     *  No defaults options are set in View.\n     *\n     *  @method setOptions\n     *  @param {Object} options\n     */\n    View.prototype.setOptions = function setOptions(options) {\n        this._optionsManager.patch(options);\n    };\n\n    /**\n     * Add a child renderable to the view.\n     *   Note: This is meant to be used by an inheriting class\n     *   rather than from outside the prototype chain.\n     *\n     * @method add\n     * @return {RenderNode}\n     * @protected\n     */\n    View.prototype.add = function add() {\n        return this._node.add.apply(this._node, arguments);\n    };\n\n    /**\n     * Alias for add\n     * @method _add\n     */\n    View.prototype._add = View.prototype.add;\n\n    /**\n     * Generate a render spec from the contents of this component.\n     *\n     * @private\n     * @method render\n     * @return {number} Render spec for this component\n     */\n    View.prototype.render = function render() {\n        return this._node.render();\n    };\n\n    /**\n     * Return size of contained element.\n     *\n     * @method getSize\n     * @return {Array.Number} [width, height]\n     */\n    View.prototype.getSize = function getSize() {\n        if (this._node && this._node.getSize) {\n            return this._node.getSize.apply(this._node, arguments) || this.options.size;\n        }\n        else return this.options.size;\n    };\n\n    module.exports = View;\n});\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n *\n * Owner: mark@famo.us\n * @license MPL 2.0\n * @copyright Famous Industries, Inc. 2014\n */\n\ndefine(function(require, exports, module) {\n    var Modifier = require('famous/core/Modifier');\n    var Transform = require('famous/core/Transform');\n    var Transitionable = require('famous/transitions/Transitionable');\n    var TransitionableTransform = require('famous/transitions/TransitionableTransform');\n\n    /**\n     *  A collection of visual changes to be\n     *    applied to another renderable component, strongly coupled with the state that defines\n     *    those changes. This collection includes a\n     *    transform matrix, an opacity constant, a size, an origin specifier, and an alignment specifier.\n     *    StateModifier objects can be added to any RenderNode or object\n     *    capable of displaying renderables.  The StateModifier's children and descendants\n     *    are transformed by the amounts specified in the modifier's properties.\n     *\n     * @class StateModifier\n     * @constructor\n     * @param {Object} [options] overrides of default options\n     * @param {Transform} [options.transform] affine transformation matrix\n     * @param {Number} [options.opacity]\n     * @param {Array.Number} [options.origin] origin adjustment\n     * @param {Array.Number} [options.align] align adjustment\n     * @param {Array.Number} [options.size] size to apply to descendants\n     */\n    function StateModifier(options) {\n        this._transformState = new TransitionableTransform(Transform.identity);\n        this._opacityState = new Transitionable(1);\n        this._originState = new Transitionable([0, 0]);\n        this._alignState = new Transitionable([0, 0]);\n        this._sizeState = new Transitionable([0, 0]);\n\n        this._modifier = new Modifier({\n            transform: this._transformState,\n            opacity: this._opacityState,\n            origin: null,\n            align: null,\n            size: null\n        });\n\n        this._hasOrigin = false;\n        this._hasAlign = false;\n        this._hasSize = false;\n\n        if (options) {\n            if (options.transform) this.setTransform(options.transform);\n            if (options.opacity !== undefined) this.setOpacity(options.opacity);\n            if (options.origin) this.setOrigin(options.origin);\n            if (options.align) this.setAlign(options.align);\n            if (options.size) this.setSize(options.size);\n        }\n    }\n\n    /**\n     * Set the transform matrix of this modifier, either statically or\n     *   through a provided Transitionable.\n     *\n     * @method setTransform\n     *\n     * @param {Transform} transform Transform to transition to.\n     * @param {Transitionable} [transition] Valid transitionable object\n     * @param {Function} [callback] callback to call after transition completes\n     * @return {StateModifier} this\n     */\n    StateModifier.prototype.setTransform = function setTransform(transform, transition, callback) {\n        this._transformState.set(transform, transition, callback);\n        return this;\n    };\n\n    /**\n     * Set the opacity of this modifier, either statically or\n     *   through a provided Transitionable.\n     *\n     * @method setOpacity\n     *\n     * @param {Number} opacity Opacity value to transition to.\n     * @param {Transitionable} transition Valid transitionable object\n     * @param {Function} callback callback to call after transition completes\n     * @return {StateModifier} this\n     */\n    StateModifier.prototype.setOpacity = function setOpacity(opacity, transition, callback) {\n        this._opacityState.set(opacity, transition, callback);\n        return this;\n    };\n\n    /**\n     * Set the origin of this modifier, either statically or\n     *   through a provided Transitionable.\n     *\n     * @method setOrigin\n     *\n     * @param {Array.Number} origin two element array with values between 0 and 1.\n     * @param {Transitionable} transition Valid transitionable object\n     * @param {Function} callback callback to call after transition completes\n     * @return {StateModifier} this\n     */\n    StateModifier.prototype.setOrigin = function setOrigin(origin, transition, callback) {\n        if (origin === null) {\n            if (this._hasOrigin) {\n                this._modifier.originFrom(null);\n                this._hasOrigin = false;\n            }\n            return this;\n        }\n        else if (!this._hasOrigin) {\n            this._hasOrigin = true;\n            this._modifier.originFrom(this._originState);\n        }\n        this._originState.set(origin, transition, callback);\n        return this;\n    };\n\n    /**\n     * Set the alignment of this modifier, either statically or\n     *   through a provided Transitionable.\n     *\n     * @method setAlign\n     *\n     * @param {Array.Number} align two element array with values between 0 and 1.\n     * @param {Transitionable} transition Valid transitionable object\n     * @param {Function} callback callback to call after transition completes\n     * @return {StateModifier} this\n     */\n    StateModifier.prototype.setAlign = function setOrigin(align, transition, callback) {\n        if (align === null) {\n            if (this._hasAlign) {\n                this._modifier.alignFrom(null);\n                this._hasAlign = false;\n            }\n            return this;\n        }\n        else if (!this._hasAlign) {\n            this._hasAlign = true;\n            this._modifier.alignFrom(this._alignState);\n        }\n        this._alignState.set(align, transition, callback);\n        return this;\n    };\n\n    /**\n     * Set the size of this modifier, either statically or\n     *   through a provided Transitionable.\n     *\n     * @method setSize\n     *\n     * @param {Array.Number} size two element array with values between 0 and 1.\n     * @param {Transitionable} transition Valid transitionable object\n     * @param {Function} callback callback to call after transition completes\n     * @return {StateModifier} this\n     */\n    StateModifier.prototype.setSize = function setSize(size, transition, callback) {\n        if (size === null) {\n            if (this._hasSize) {\n                this._modifier.sizeFrom(null);\n                this._hasSize = false;\n            }\n            return this;\n        }\n        else if (!this._hasSize) {\n            this._hasSize = true;\n            this._modifier.sizeFrom(this._sizeState);\n        }\n        this._sizeState.set(size, transition, callback);\n        return this;\n    };\n\n    /**\n     * Stop the transition.\n     *\n     * @method halt\n     */\n    StateModifier.prototype.halt = function halt() {\n        this._transformState.halt();\n        this._opacityState.halt();\n        this._originState.halt();\n        this._alignState.halt();\n        this._sizeState.halt();\n    };\n\n    /**\n     * Get the current state of the transform matrix component.\n     *\n     * @method getTransform\n     * @return {Object} transform provider object\n     */\n    StateModifier.prototype.getTransform = function getTransform() {\n        return this._transformState.get();\n    };\n\n    /**\n     * Get the destination state of the transform component.\n     *\n     * @method getFinalTransform\n     * @return {Transform} transform matrix\n     */\n    StateModifier.prototype.getFinalTransform = function getFinalTransform() {\n        return this._transformState.getFinal();\n    };\n\n    /**\n     * Get the current state of the opacity component.\n     *\n     * @method getOpacity\n     * @return {Object} opacity provider object\n     */\n    StateModifier.prototype.getOpacity = function getOpacity() {\n        return this._opacityState.get();\n    };\n\n    /**\n     * Get the current state of the origin component.\n     *\n     * @method getOrigin\n     * @return {Object} origin provider object\n     */\n    StateModifier.prototype.getOrigin = function getOrigin() {\n        return this._hasOrigin ? this._originState.get() : null;\n    };\n\n    /**\n     * Get the current state of the align component.\n     *\n     * @method getAlign\n     * @return {Object} align provider object\n     */\n    StateModifier.prototype.getAlign = function getAlign() {\n        return this._hasAlign ? this._alignState.get() : null;\n    };\n\n    /**\n     * Get the current state of the size component.\n     *\n     * @method getSize\n     * @return {Object} size provider object\n     */\n    StateModifier.prototype.getSize = function getSize() {\n        return this._hasSize ? this._sizeState.get() : null;\n    };\n\n    /**\n     * Return render spec for this StateModifier, applying to the provided\n     *    target component.  This is similar to render() for Surfaces.\n     *\n     * @private\n     * @method modify\n     *\n     * @param {Object} target (already rendered) render spec to\n     *    which to apply the transform.\n     * @return {Object} render spec for this StateModifier, including the\n     *    provided target\n     */\n    StateModifier.prototype.modify = function modify(target) {\n        return this._modifier.modify(target);\n    };\n\n    module.exports = StateModifier;\n});\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n *\n * Owner: mark@famo.us\n * @license MPL 2.0\n * @copyright Famous Industries, Inc. 2014\n */\n\ndefine(function(require, exports, module) {\n    var EventEmitter = require('./EventEmitter');\n\n    /**\n     * EventHandler forwards received events to a set of provided callback functions.\n     * It allows events to be captured, processed, and optionally piped through to other event handlers.\n     *\n     * @class EventHandler\n     * @extends EventEmitter\n     * @constructor\n     */\n    function EventHandler() {\n        EventEmitter.apply(this, arguments);\n\n        this.downstream = []; // downstream event handlers\n        this.downstreamFn = []; // downstream functions\n\n        this.upstream = []; // upstream event handlers\n        this.upstreamListeners = {}; // upstream listeners\n    }\n    EventHandler.prototype = Object.create(EventEmitter.prototype);\n    EventHandler.prototype.constructor = EventHandler;\n\n    /**\n     * Assign an event handler to receive an object's input events.\n     *\n     * @method setInputHandler\n     * @static\n     *\n     * @param {Object} object object to mix trigger, subscribe, and unsubscribe functions into\n     * @param {EventHandler} handler assigned event handler\n     */\n    EventHandler.setInputHandler = function setInputHandler(object, handler) {\n        object.trigger = handler.trigger.bind(handler);\n        if (handler.subscribe && handler.unsubscribe) {\n            object.subscribe = handler.subscribe.bind(handler);\n            object.unsubscribe = handler.unsubscribe.bind(handler);\n        }\n    };\n\n    /**\n     * Assign an event handler to receive an object's output events.\n     *\n     * @method setOutputHandler\n     * @static\n     *\n     * @param {Object} object object to mix pipe, unpipe, on, addListener, and removeListener functions into\n     * @param {EventHandler} handler assigned event handler\n     */\n    EventHandler.setOutputHandler = function setOutputHandler(object, handler) {\n        if (handler instanceof EventHandler) handler.bindThis(object);\n        object.pipe = handler.pipe.bind(handler);\n        object.unpipe = handler.unpipe.bind(handler);\n        object.on = handler.on.bind(handler);\n        object.addListener = object.on;\n        object.removeListener = handler.removeListener.bind(handler);\n    };\n\n    /**\n     * Trigger an event, sending to all downstream handlers\n     *   listening for provided 'type' key.\n     *\n     * @method emit\n     *\n     * @param {string} type event type key (for example, 'click')\n     * @param {Object} event event data\n     * @return {EventHandler} this\n     */\n    EventHandler.prototype.emit = function emit(type, event) {\n        EventEmitter.prototype.emit.apply(this, arguments);\n        var i = 0;\n        for (i = 0; i < this.downstream.length; i++) {\n            if (this.downstream[i].trigger) this.downstream[i].trigger(type, event);\n        }\n        for (i = 0; i < this.downstreamFn.length; i++) {\n            this.downstreamFn[i](type, event);\n        }\n        return this;\n    };\n\n    /**\n     * Alias for emit\n     * @method addListener\n     */\n    EventHandler.prototype.trigger = EventHandler.prototype.emit;\n\n    /**\n     * Add event handler object to set of downstream handlers.\n     *\n     * @method pipe\n     *\n     * @param {EventHandler} target event handler target object\n     * @return {EventHandler} passed event handler\n     */\n    EventHandler.prototype.pipe = function pipe(target) {\n        if (target.subscribe instanceof Function) return target.subscribe(this);\n\n        var downstreamCtx = (target instanceof Function) ? this.downstreamFn : this.downstream;\n        var index = downstreamCtx.indexOf(target);\n        if (index < 0) downstreamCtx.push(target);\n\n        if (target instanceof Function) target('pipe', null);\n        else if (target.trigger) target.trigger('pipe', null);\n\n        return target;\n    };\n\n    /**\n     * Remove handler object from set of downstream handlers.\n     *   Undoes work of \"pipe\".\n     *\n     * @method unpipe\n     *\n     * @param {EventHandler} target target handler object\n     * @return {EventHandler} provided target\n     */\n    EventHandler.prototype.unpipe = function unpipe(target) {\n        if (target.unsubscribe instanceof Function) return target.unsubscribe(this);\n\n        var downstreamCtx = (target instanceof Function) ? this.downstreamFn : this.downstream;\n        var index = downstreamCtx.indexOf(target);\n        if (index >= 0) {\n            downstreamCtx.splice(index, 1);\n            if (target instanceof Function) target('unpipe', null);\n            else if (target.trigger) target.trigger('unpipe', null);\n            return target;\n        }\n        else return false;\n    };\n\n    /**\n     * Bind a callback function to an event type handled by this object.\n     *\n     * @method \"on\"\n     *\n     * @param {string} type event type key (for example, 'click')\n     * @param {function(string, Object)} handler callback\n     * @return {EventHandler} this\n     */\n    EventHandler.prototype.on = function on(type, handler) {\n        EventEmitter.prototype.on.apply(this, arguments);\n        if (!(type in this.upstreamListeners)) {\n            var upstreamListener = this.trigger.bind(this, type);\n            this.upstreamListeners[type] = upstreamListener;\n            for (var i = 0; i < this.upstream.length; i++) {\n                this.upstream[i].on(type, upstreamListener);\n            }\n        }\n        return this;\n    };\n\n    /**\n     * Alias for \"on\"\n     * @method addListener\n     */\n    EventHandler.prototype.addListener = EventHandler.prototype.on;\n\n    /**\n     * Listen for events from an upstream event handler.\n     *\n     * @method subscribe\n     *\n     * @param {EventEmitter} source source emitter object\n     * @return {EventHandler} this\n     */\n    EventHandler.prototype.subscribe = function subscribe(source) {\n        var index = this.upstream.indexOf(source);\n        if (index < 0) {\n            this.upstream.push(source);\n            for (var type in this.upstreamListeners) {\n                source.on(type, this.upstreamListeners[type]);\n            }\n        }\n        return this;\n    };\n\n    /**\n     * Stop listening to events from an upstream event handler.\n     *\n     * @method unsubscribe\n     *\n     * @param {EventEmitter} source source emitter object\n     * @return {EventHandler} this\n     */\n    EventHandler.prototype.unsubscribe = function unsubscribe(source) {\n        var index = this.upstream.indexOf(source);\n        if (index >= 0) {\n            this.upstream.splice(index, 1);\n            for (var type in this.upstreamListeners) {\n                source.removeListener(type, this.upstreamListeners[type]);\n            }\n        }\n        return this;\n    };\n\n    module.exports = EventHandler;\n});\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n *\n * Owner: mark@famo.us\n * @license MPL 2.0\n * @copyright Famous Industries, Inc. 2014\n */\n// TODO fix func-style\n/*eslint func-style: [0, \"declaration\"] */\n\ndefine(function(require, exports, module) {\n    /**\n     * An internal library to reproduce javascript time-based scheduling.\n     *   Using standard javascript setTimeout methods can have a negative performance impact\n     *   when combined with the Famous rendering process, so instead require Timer and call\n     *   Timer.setTimeout, Timer.setInterval, etc.\n     *\n     * @class Timer\n     * @constructor\n     */\n    var FamousEngine = require('famous/core/Engine');\n\n    var _event  = 'prerender';\n\n    var getTime = (window.performance) ?\n        function() {\n            return window.performance.now();\n        }\n        : function() {\n            return Date.now();\n        };\n\n    /**\n     * Add a function to be run on every prerender\n     *\n     * @method addTimerFunction\n     *\n     * @param {function} fn function to be run every prerender\n     *\n     * @return {function} function passed in as parameter\n     */\n    function addTimerFunction(fn) {\n        FamousEngine.on(_event, fn);\n        return fn;\n    }\n\n    /**\n     * Wraps a function to be invoked after a certain amount of time.\n     *  After a set duration has passed, it executes the function and\n     *  removes it as a listener to 'prerender'.\n     *\n     * @method setTimeout\n     *\n     * @param {function} fn function to be run after a specified duration\n     * @param {number} duration milliseconds from now to execute the function\n     *\n     * @return {function} function passed in as parameter\n     */\n    function setTimeout(fn, duration) {\n        var t = getTime();\n        var callback = function() {\n            var t2 = getTime();\n            if (t2 - t >= duration) {\n                fn.apply(this, arguments);\n                FamousEngine.removeListener(_event, callback);\n            }\n        };\n        return addTimerFunction(callback);\n    }\n\n    /**\n     * Wraps a function to be invoked after a certain amount of time.\n     *  After a set duration has passed, it executes the function and\n     *  resets the execution time.\n     *\n     * @method setInterval\n     *\n     * @param {function} fn function to be run after a specified duration\n     * @param {number} duration interval to execute function in milliseconds\n     *\n     * @return {function} function passed in as parameter\n     */\n    function setInterval(fn, duration) {\n        var t = getTime();\n        var callback = function() {\n            var t2 = getTime();\n            if (t2 - t >= duration) {\n                fn.apply(this, arguments);\n                t = getTime();\n            }\n        };\n        return addTimerFunction(callback);\n    }\n\n    /**\n     * Wraps a function to be invoked after a certain amount of prerender ticks.\n     *  Similar use to setTimeout but tied to the engine's run speed.\n     *\n     * @method after\n     *\n     * @param {function} fn function to be run after a specified amount of ticks\n     * @param {number} numTicks number of prerender frames to wait\n     *\n     * @return {function} function passed in as parameter\n     */\n    function after(fn, numTicks) {\n        if (numTicks === undefined) return undefined;\n        var callback = function() {\n            numTicks--;\n            if (numTicks <= 0) { //in case numTicks is fraction or negative\n                fn.apply(this, arguments);\n                clear(callback);\n            }\n        };\n        return addTimerFunction(callback);\n    }\n\n    /**\n     * Wraps a function to be continually invoked after a certain amount of prerender ticks.\n     *  Similar use to setInterval but tied to the engine's run speed.\n     *\n     * @method every\n     *\n     * @param {function} fn function to be run after a specified amount of ticks\n     * @param {number} numTicks number of prerender frames to wait\n     *\n     * @return {function} function passed in as parameter\n     */\n    function every(fn, numTicks) {\n        numTicks = numTicks || 1;\n        var initial = numTicks;\n        var callback = function() {\n            numTicks--;\n            if (numTicks <= 0) { //in case numTicks is fraction or negative\n                fn.apply(this, arguments);\n                numTicks = initial;\n            }\n        };\n        return addTimerFunction(callback);\n    }\n\n    /**\n     * Remove a function that gets called every prerender\n     *\n     * @method clear\n     *\n     * @param {function} fn event linstener\n     */\n    function clear(fn) {\n        FamousEngine.removeListener(_event, fn);\n    }\n\n    /**\n     * Executes a function after a certain amount of time. Makes sure\n     *  the function is not run multiple times.\n     *\n     * @method debounce\n     *\n     * @param {function} func function to run after certain amount of time\n     * @param {number} wait amount of time\n     *\n     * @return {function} function that is not able to debounce\n     */\n    function debounce(func, wait) {\n        var timeout;\n        var ctx;\n        var timestamp;\n        var result;\n        var args;\n        return function() {\n            ctx = this;\n            args = arguments;\n            timestamp = getTime();\n\n            var fn = function() {\n                var last = getTime - timestamp;\n\n                if (last < wait) {\n                    timeout = setTimeout(fn, wait - last);\n                } else {\n                    timeout = null;\n                    result = func.apply(ctx, args);\n                }\n            };\n\n            if (!timeout) {\n                timeout = setTimeout(fn, wait);\n            }\n\n            return result;\n        };\n    }\n\n    module.exports = {\n        setTimeout : setTimeout,\n        setInterval : setInterval,\n        debounce : debounce,\n        after : after,\n        every : every,\n        clear : clear\n    };\n\n});\n","/**\n * Copyright (c) 2014 Petka Antonov\n * \n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:</p>\n * \n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n * \n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n * \n */\n\"use strict\";\nvar global = require(\"./global.js\");\nvar Objectfreeze = require(\"./es5.js\").freeze;\nvar util = require(\"./util.js\");\nvar inherits = util.inherits;\nvar notEnumerableProp = util.notEnumerableProp;\nvar Error = global.Error;\n\nfunction markAsOriginatingFromRejection(e) {\n    try {\n        notEnumerableProp(e, \"isAsync\", true);\n    }\n    catch(ignore) {}\n}\n\nfunction originatesFromRejection(e) {\n    if (e == null) return false;\n    return ((e instanceof RejectionError) ||\n        e[\"isAsync\"] === true);\n}\n\nfunction isError(obj) {\n    return obj instanceof Error;\n}\n\nfunction canAttach(obj) {\n    return isError(obj);\n}\n\nfunction subError(nameProperty, defaultMessage) {\n    function SubError(message) {\n        if (!(this instanceof SubError)) return new SubError(message);\n        this.message = typeof message === \"string\" ? message : defaultMessage;\n        this.name = nameProperty;\n        if (Error.captureStackTrace) {\n            Error.captureStackTrace(this, this.constructor);\n        }\n    }\n    inherits(SubError, Error);\n    return SubError;\n}\n\nvar TypeError = global.TypeError;\nif (typeof TypeError !== \"function\") {\n    TypeError = subError(\"TypeError\", \"type error\");\n}\nvar RangeError = global.RangeError;\nif (typeof RangeError !== \"function\") {\n    RangeError = subError(\"RangeError\", \"range error\");\n}\nvar CancellationError = subError(\"CancellationError\", \"cancellation error\");\nvar TimeoutError = subError(\"TimeoutError\", \"timeout error\");\n\nfunction RejectionError(message) {\n    this.name = \"RejectionError\";\n    this.message = message;\n    this.cause = message;\n    this.isAsync = true;\n\n    if (message instanceof Error) {\n        this.message = message.message;\n        this.stack = message.stack;\n    }\n    else if (Error.captureStackTrace) {\n        Error.captureStackTrace(this, this.constructor);\n    }\n\n}\ninherits(RejectionError, Error);\n\nvar key = \"__BluebirdErrorTypes__\";\nvar errorTypes = global[key];\nif (!errorTypes) {\n    errorTypes = Objectfreeze({\n        CancellationError: CancellationError,\n        TimeoutError: TimeoutError,\n        RejectionError: RejectionError\n    });\n    notEnumerableProp(global, key, errorTypes);\n}\n\nmodule.exports = {\n    Error: Error,\n    TypeError: TypeError,\n    RangeError: RangeError,\n    CancellationError: errorTypes.CancellationError,\n    RejectionError: errorTypes.RejectionError,\n    TimeoutError: errorTypes.TimeoutError,\n    originatesFromRejection: originatesFromRejection,\n    markAsOriginatingFromRejection: markAsOriginatingFromRejection,\n    canAttach: canAttach\n};\n","Utils = require 'Utils'\n\nmodule.exports =\n  actions: Utils.keyMirror\n    MENU_SELECT: null\n    PEGGBOX_FETCH: null\n    GAME_FETCH: null\n    CARD_ANSWER: null\n    CARD_RATE: null\n    CARD_PICK: null\n    USER_LOGIN: null\n    USER_LOGOUT: null\n    SUBSCRIBER_SUBMIT: null\n    PLAY_CONTINUE: null\n\n  stores: Utils.keyMirror\n    # Generic\n    CHANGE: null\n\n    # Specific ... probably make these more explicit\n    # e.g. CARD_ANSWERED\n    CARD_ANSWERED: null\n    CARD_RATED: null\n    UNLOCK_ACHIEVED: null\n    PLAY_CONTINUED: null\n    SUBSCRIBE_PASS: null\n    SUBSCRIBE_FAIL: null\n","/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\nmodule.exports = function addStyle(cssCode) {\r\n\tif(typeof DEBUG !== \"undefined\" && DEBUG) {\r\n\t\tif(typeof document !== \"object\") throw new Error(\"The style-loader cannot be used in a non-browser environment\");\r\n\t}\r\n\tvar styleElement = document.createElement(\"style\");\r\n\tstyleElement.type = \"text/css\";\r\n\tif (styleElement.styleSheet) {\r\n\t\tstyleElement.styleSheet.cssText = cssCode;\r\n\t} else {\r\n\t\tstyleElement.appendChild(document.createTextNode(cssCode));\r\n\t}\r\n\tvar head = document.getElementsByTagName(\"head\")[0];\r\n\thead.appendChild(styleElement);\r\n\treturn function() {\r\n\t\thead.removeChild(styleElement);\r\n\t};\r\n}","\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n *\n * Owner: mark@famo.us\n * @license MPL 2.0\n * @copyright Famous Industries, Inc. 2014\n */\n\ndefine(function(require, exports, module) {\n    var Surface = require('famous/core/Surface');\n\n    /**\n     * A surface containing image content.\n     *   This extends the Surface class.\n     *\n     * @class ImageSurface\n     *\n     * @extends Surface\n     * @constructor\n     * @param {Object} [options] overrides of default options\n     */\n    function ImageSurface(options) {\n        this._imageUrl = undefined;\n        Surface.apply(this, arguments);\n    }\n\n    ImageSurface.prototype = Object.create(Surface.prototype);\n    ImageSurface.prototype.constructor = ImageSurface;\n    ImageSurface.prototype.elementType = 'img';\n    ImageSurface.prototype.elementClass = 'famous-surface';\n\n    /**\n     * Set content URL.  This will cause a re-rendering.\n     * @method setContent\n     * @param {string} imageUrl\n     */\n    ImageSurface.prototype.setContent = function setContent(imageUrl) {\n        this._imageUrl = imageUrl;\n        this._contentDirty = true;\n    };\n\n    /**\n     * Place the document element that this component manages into the document.\n     *\n     * @private\n     * @method deploy\n     * @param {Node} target document parent of this container\n     */\n    ImageSurface.prototype.deploy = function deploy(target) {\n        target.src = this._imageUrl || '';\n    };\n\n    /**\n     * Remove this component and contained content from the document\n     *\n     * @private\n     * @method recall\n     *\n     * @param {Node} target node to which the component was deployed\n     */\n    ImageSurface.prototype.recall = function recall(target) {\n        target.src = '';\n    };\n\n    module.exports = ImageSurface;\n});\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n *\n * Owner: david@famo.us\n * @license MPL 2.0\n * @copyright Famous Industries, Inc. 2014\n */\n\ndefine(function(require, exports, module) {\n\n    /*\n     * A library of curves which map an animation explicitly as a function of time.\n     *\n     * @class Easing\n     */\n    var Easing = {\n\n        /**\n         * @property inQuad\n         * @static\n         */\n        inQuad: function(t) {\n            return t*t;\n        },\n\n        /**\n         * @property outQuad\n         * @static\n         */\n        outQuad: function(t) {\n            return -(t-=1)*t+1;\n        },\n\n        /**\n         * @property inOutQuad\n         * @static\n         */\n        inOutQuad: function(t) {\n            if ((t/=.5) < 1) return .5*t*t;\n            return -.5*((--t)*(t-2) - 1);\n        },\n\n        /**\n         * @property inCubic\n         * @static\n         */\n        inCubic: function(t) {\n            return t*t*t;\n        },\n\n        /**\n         * @property outCubic\n         * @static\n         */\n        outCubic: function(t) {\n            return ((--t)*t*t + 1);\n        },\n\n        /**\n         * @property inOutCubic\n         * @static\n         */\n        inOutCubic: function(t) {\n            if ((t/=.5) < 1) return .5*t*t*t;\n            return .5*((t-=2)*t*t + 2);\n        },\n\n        /**\n         * @property inQuart\n         * @static\n         */\n        inQuart: function(t) {\n            return t*t*t*t;\n        },\n\n        /**\n         * @property outQuart\n         * @static\n         */\n        outQuart: function(t) {\n            return -((--t)*t*t*t - 1);\n        },\n\n        /**\n         * @property inOutQuart\n         * @static\n         */\n        inOutQuart: function(t) {\n            if ((t/=.5) < 1) return .5*t*t*t*t;\n            return -.5 * ((t-=2)*t*t*t - 2);\n        },\n\n        /**\n         * @property inQuint\n         * @static\n         */\n        inQuint: function(t) {\n            return t*t*t*t*t;\n        },\n\n        /**\n         * @property outQuint\n         * @static\n         */\n        outQuint: function(t) {\n            return ((--t)*t*t*t*t + 1);\n        },\n\n        /**\n         * @property inOutQuint\n         * @static\n         */\n        inOutQuint: function(t) {\n            if ((t/=.5) < 1) return .5*t*t*t*t*t;\n            return .5*((t-=2)*t*t*t*t + 2);\n        },\n\n        /**\n         * @property inSine\n         * @static\n         */\n        inSine: function(t) {\n            return -1.0*Math.cos(t * (Math.PI/2)) + 1.0;\n        },\n\n        /**\n         * @property outSine\n         * @static\n         */\n        outSine: function(t) {\n            return Math.sin(t * (Math.PI/2));\n        },\n\n        /**\n         * @property inOutSine\n         * @static\n         */\n        inOutSine: function(t) {\n            return -.5*(Math.cos(Math.PI*t) - 1);\n        },\n\n        /**\n         * @property inExpo\n         * @static\n         */\n        inExpo: function(t) {\n            return (t===0) ? 0.0 : Math.pow(2, 10 * (t - 1));\n        },\n\n        /**\n         * @property outExpo\n         * @static\n         */\n        outExpo: function(t) {\n            return (t===1.0) ? 1.0 : (-Math.pow(2, -10 * t) + 1);\n        },\n\n        /**\n         * @property inOutExpo\n         * @static\n         */\n        inOutExpo: function(t) {\n            if (t===0) return 0.0;\n            if (t===1.0) return 1.0;\n            if ((t/=.5) < 1) return .5 * Math.pow(2, 10 * (t - 1));\n            return .5 * (-Math.pow(2, -10 * --t) + 2);\n        },\n\n        /**\n         * @property inCirc\n         * @static\n         */\n        inCirc: function(t) {\n            return -(Math.sqrt(1 - t*t) - 1);\n        },\n\n        /**\n         * @property outCirc\n         * @static\n         */\n        outCirc: function(t) {\n            return Math.sqrt(1 - (--t)*t);\n        },\n\n        /**\n         * @property inOutCirc\n         * @static\n         */\n        inOutCirc: function(t) {\n            if ((t/=.5) < 1) return -.5 * (Math.sqrt(1 - t*t) - 1);\n            return .5 * (Math.sqrt(1 - (t-=2)*t) + 1);\n        },\n\n        /**\n         * @property inElastic\n         * @static\n         */\n        inElastic: function(t) {\n            var s=1.70158;var p=0;var a=1.0;\n            if (t===0) return 0.0;  if (t===1) return 1.0;  if (!p) p=.3;\n            s = p/(2*Math.PI) * Math.asin(1.0/a);\n            return -(a*Math.pow(2,10*(t-=1)) * Math.sin((t-s)*(2*Math.PI)/ p));\n        },\n\n        /**\n         * @property outElastic\n         * @static\n         */\n        outElastic: function(t) {\n            var s=1.70158;var p=0;var a=1.0;\n            if (t===0) return 0.0;  if (t===1) return 1.0;  if (!p) p=.3;\n            s = p/(2*Math.PI) * Math.asin(1.0/a);\n            return a*Math.pow(2,-10*t) * Math.sin((t-s)*(2*Math.PI)/p) + 1.0;\n        },\n\n        /**\n         * @property inOutElastic\n         * @static\n         */\n        inOutElastic: function(t) {\n            var s=1.70158;var p=0;var a=1.0;\n            if (t===0) return 0.0;  if ((t/=.5)===2) return 1.0;  if (!p) p=(.3*1.5);\n            s = p/(2*Math.PI) * Math.asin(1.0/a);\n            if (t < 1) return -.5*(a*Math.pow(2,10*(t-=1)) * Math.sin((t-s)*(2*Math.PI)/p));\n            return a*Math.pow(2,-10*(t-=1)) * Math.sin((t-s)*(2*Math.PI)/p)*.5 + 1.0;\n        },\n\n        /**\n         * @property inBack\n         * @static\n         */\n        inBack: function(t, s) {\n            if (s === undefined) s = 1.70158;\n            return t*t*((s+1)*t - s);\n        },\n\n        /**\n         * @property outBack\n         * @static\n         */\n        outBack: function(t, s) {\n            if (s === undefined) s = 1.70158;\n            return ((--t)*t*((s+1)*t + s) + 1);\n        },\n\n        /**\n         * @property inOutBack\n         * @static\n         */\n        inOutBack: function(t, s) {\n            if (s === undefined) s = 1.70158;\n            if ((t/=.5) < 1) return .5*(t*t*(((s*=(1.525))+1)*t - s));\n            return .5*((t-=2)*t*(((s*=(1.525))+1)*t + s) + 2);\n        },\n\n        /**\n         * @property inBounce\n         * @static\n         */\n        inBounce: function(t) {\n            return 1.0 - Easing.outBounce(1.0-t);\n        },\n\n        /**\n         * @property outBounce\n         * @static\n         */\n        outBounce: function(t) {\n            if (t < (1/2.75)) {\n                return (7.5625*t*t);\n            } else if (t < (2/2.75)) {\n                return (7.5625*(t-=(1.5/2.75))*t + .75);\n            } else if (t < (2.5/2.75)) {\n                return (7.5625*(t-=(2.25/2.75))*t + .9375);\n            } else {\n                return (7.5625*(t-=(2.625/2.75))*t + .984375);\n            }\n        },\n\n        /**\n         * @property inOutBounce\n         * @static\n         */\n        inOutBounce: function(t) {\n            if (t < .5) return Easing.inBounce(t*2) * .5;\n            return Easing.outBounce(t*2-1.0) * .5 + .5;\n        }\n    };\n\n    module.exports = Easing;\n});\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n *\n * Owner: mark@famo.us\n * @license MPL 2.0\n * @copyright Famous Industries, Inc. 2014\n */\n\ndefine(function(require, exports, module) {\n    /**\n     * This namespace holds standalone functionality.\n     *  Currently includes name mapping for transition curves,\n     *  name mapping for origin pairs, and the after() function.\n     *\n     * @class Utility\n     * @static\n     */\n    var Utility = {};\n\n    /**\n     * Table of direction array positions\n     *\n     * @property {object} Direction\n     * @final\n     */\n    Utility.Direction = {\n        X: 0,\n        Y: 1,\n        Z: 2\n    };\n\n    /**\n     * Return wrapper around callback function. Once the wrapper is called N\n     *   times, invoke the callback function. Arguments and scope preserved.\n     *\n     * @method after\n     *\n     * @param {number} count number of calls before callback function invoked\n     * @param {Function} callback wrapped callback function\n     *\n     * @return {function} wrapped callback with coundown feature\n     */\n    Utility.after = function after(count, callback) {\n        var counter = count;\n        return function() {\n            counter--;\n            if (counter === 0) callback.apply(this, arguments);\n        };\n    };\n\n    /**\n     * Load a URL and return its contents in a callback\n     *\n     * @method loadURL\n     *\n     * @param {string} url URL of object\n     * @param {function} callback callback to dispatch with content\n     */\n    Utility.loadURL = function loadURL(url, callback) {\n        var xhr = new XMLHttpRequest();\n        xhr.onreadystatechange = function onreadystatechange() {\n            if (this.readyState === 4) {\n                if (callback) callback(this.responseText);\n            }\n        };\n        xhr.open('GET', url);\n        xhr.send();\n    };\n\n    /**\n     * Create a document fragment from a string of HTML\n     *\n     * @method createDocumentFragmentFromHTML\n     *\n     * @param {string} html HTML to convert to DocumentFragment\n     *\n     * @return {DocumentFragment} DocumentFragment representing input HTML\n     */\n    Utility.createDocumentFragmentFromHTML = function createDocumentFragmentFromHTML(html) {\n        var element = document.createElement('div');\n        element.innerHTML = html;\n        var result = document.createDocumentFragment();\n        while (element.hasChildNodes()) result.appendChild(element.firstChild);\n        return result;\n    };\n\n    module.exports = Utility;\n});\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n *\n * Owner: david@famo.us\n * @license MPL 2.0\n * @copyright Famous Industries, Inc. 2014\n */\n\ndefine(function(require, exports, module) {\n    var MultipleTransition = require('./MultipleTransition');\n    var TweenTransition = require('./TweenTransition');\n\n    /**\n     * A state maintainer for a smooth transition between\n     *    numerically-specified states. Example numeric states include floats or\n     *    Transform objects.\n     *\n     * An initial state is set with the constructor or set(startState). A\n     *    corresponding end state and transition are set with set(endState,\n     *    transition). Subsequent calls to set(endState, transition) begin at\n     *    the last state. Calls to get(timestamp) provide the interpolated state\n     *    along the way.\n     *\n     * Note that there is no event loop here - calls to get() are the only way\n     *    to find state projected to the current (or provided) time and are\n     *    the only way to trigger callbacks. Usually this kind of object would\n     *    be part of the render() path of a visible component.\n     *\n     * @class Transitionable\n     * @constructor\n     * @param {number|Array.Number|Object.<number|string, number>} start\n     *    beginning state\n     */\n    function Transitionable(start) {\n        this.currentAction = null;\n        this.actionQueue = [];\n        this.callbackQueue = [];\n\n        this.state = 0;\n        this.velocity = undefined;\n        this._callback = undefined;\n        this._engineInstance = null;\n        this._currentMethod = null;\n\n        this.set(start);\n    }\n\n    var transitionMethods = {};\n\n    Transitionable.registerMethod = function registerMethod(name, engineClass) {\n        if (!(name in transitionMethods)) {\n            transitionMethods[name] = engineClass;\n            return true;\n        }\n        else return false;\n    };\n\n    Transitionable.unregisterMethod = function unregisterMethod(name) {\n        if (name in transitionMethods) {\n            delete transitionMethods[name];\n            return true;\n        }\n        else return false;\n    };\n\n    function _loadNext() {\n        if (this._callback) {\n            var callback = this._callback;\n            this._callback = undefined;\n            callback();\n        }\n        if (this.actionQueue.length <= 0) {\n            this.set(this.get()); // no update required\n            return;\n        }\n        this.currentAction = this.actionQueue.shift();\n        this._callback = this.callbackQueue.shift();\n\n        var method = null;\n        var endValue = this.currentAction[0];\n        var transition = this.currentAction[1];\n        if (transition instanceof Object && transition.method) {\n            method = transition.method;\n            if (typeof method === 'string') method = transitionMethods[method];\n        }\n        else {\n            method = TweenTransition;\n        }\n\n        if (this._currentMethod !== method) {\n            if (!(endValue instanceof Object) || method.SUPPORTS_MULTIPLE === true || endValue.length <= method.SUPPORTS_MULTIPLE) {\n                this._engineInstance = new method();\n            }\n            else {\n                this._engineInstance = new MultipleTransition(method);\n            }\n            this._currentMethod = method;\n        }\n\n        this._engineInstance.reset(this.state, this.velocity);\n        if (this.velocity !== undefined) transition.velocity = this.velocity;\n        this._engineInstance.set(endValue, transition, _loadNext.bind(this));\n    }\n\n    /**\n     * Add transition to end state to the queue of pending transitions. Special\n     *    Use: calling without a transition resets the object to that state with\n     *    no pending actions\n     *\n     * @method set\n     *\n     * @param {number|FamousMatrix|Array.Number|Object.<number, number>} endState\n     *    end state to which we interpolate\n     * @param {transition=} transition object of type {duration: number, curve:\n     *    f[0,1] -> [0,1] or name}. If transition is omitted, change will be\n     *    instantaneous.\n     * @param {function()=} callback Zero-argument function to call on observed\n     *    completion (t=1)\n     */\n    Transitionable.prototype.set = function set(endState, transition, callback) {\n        if (!transition) {\n            this.reset(endState);\n            if (callback) callback();\n            return this;\n        }\n\n        var action = [endState, transition];\n        this.actionQueue.push(action);\n        this.callbackQueue.push(callback);\n        if (!this.currentAction) _loadNext.call(this);\n        return this;\n    };\n\n    /**\n     * Cancel all transitions and reset to a stable state\n     *\n     * @method reset\n     *\n     * @param {number|Array.Number|Object.<number, number>} startState\n     *    stable state to set to\n     */\n    Transitionable.prototype.reset = function reset(startState, startVelocity) {\n        this._currentMethod = null;\n        this._engineInstance = null;\n        this.state = startState;\n        this.velocity = startVelocity;\n        this.currentAction = null;\n        this.actionQueue = [];\n        this.callbackQueue = [];\n    };\n\n    /**\n     * Add delay action to the pending action queue queue.\n     *\n     * @method delay\n     *\n     * @param {number} duration delay time (ms)\n     * @param {function} callback Zero-argument function to call on observed\n     *    completion (t=1)\n     */\n    Transitionable.prototype.delay = function delay(duration, callback) {\n        this.set(this._engineInstance.get(), {duration: duration,\n            curve: function() {\n                return 0;\n            }},\n            callback);\n    };\n\n    /**\n     * Get interpolated state of current action at provided time. If the last\n     *    action has completed, invoke its callback.\n     *\n     * @method get\n     *\n     * @param {number=} timestamp Evaluate the curve at a normalized version of this\n     *    time. If omitted, use current time. (Unix epoch time)\n     * @return {number|Object.<number|string, number>} beginning state\n     *    interpolated to this point in time.\n     */\n    Transitionable.prototype.get = function get(timestamp) {\n        if (this._engineInstance) {\n            if (this._engineInstance.getVelocity)\n                this.velocity = this._engineInstance.getVelocity();\n            this.state = this._engineInstance.get(timestamp);\n        }\n        return this.state;\n    };\n\n    /**\n     * Is there at least one action pending completion?\n     *\n     * @method isActive\n     *\n     * @return {boolean}\n     */\n    Transitionable.prototype.isActive = function isActive() {\n        return !!this.currentAction;\n    };\n\n    /**\n     * Halt transition at current state and erase all pending actions.\n     *\n     * @method halt\n     */\n    Transitionable.prototype.halt = function halt() {\n        this.set(this.get());\n    };\n\n    module.exports = Transitionable;\n});\n","Dispatcher = require 'dispatchers/Dispatcher'\n\n\nclass AppDispatcher extends Dispatcher\n  ###\n  A bridge function between the views and the dispatcher, marking the action\n  as a view action.  Another variant here could be handleServerAction.\n  @param  {object} action The data coming from the view.\n  ###\n  handleViewAction: (action) ->\n    @dispatch\n      source: 'VIEW_ACTION'\n      action: action\n\n\n# Export singleton\ndispatch = new AppDispatcher\nmodule.exports = dispatch\n","# Configure and modularize Parse\n\n# This is an example of how to shim a library that injects itself\n# into the global scope. Other options include using imports\n# and exports loaders if the library is parsable by webpack.\n# The Parse lib is not safely parsable by webpack.\n# See http://webpack.github.io/docs/shimming-modules.html\n\n# Example using imports and exports loaders\n# Parse = require 'imports?window=>{}!exports?window.Parse!./parse-1.2.18_fixed-parsedate'\n\nrequire 'script!./parse-1.2.18_fixed-parsedate'\nConfig = require('Config').public.parse\n\nParse = window.Parse\ndelete window.Parse\n\nParse.initialize Config.appId, Config.jsKey\n\nmodule.exports = Parse\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n *\n * Owner: mark@famo.us\n * @license MPL 2.0\n * @copyright Famous Industries, Inc. 2014\n */\n\ndefine(function(require, exports, module) {\n    var Transform = require('./Transform');\n\n    /* TODO: remove these dependencies when deprecation complete */\n    var Transitionable = require('famous/transitions/Transitionable');\n    var TransitionableTransform = require('famous/transitions/TransitionableTransform');\n\n    /**\n     *\n     *  A collection of visual changes to be\n     *    applied to another renderable component. This collection includes a\n     *    transform matrix, an opacity constant, a size, an origin specifier.\n     *    Modifier objects can be added to any RenderNode or object\n     *    capable of displaying renderables.  The Modifier's children and descendants\n     *    are transformed by the amounts specified in the Modifier's properties.\n     *\n     * @class Modifier\n     * @constructor\n     * @param {Object} [options] overrides of default options\n     * @param {Transform} [options.transform] affine transformation matrix\n     * @param {Number} [options.opacity]\n     * @param {Array.Number} [options.origin] origin adjustment\n     * @param {Array.Number} [options.size] size to apply to descendants\n     */\n    function Modifier(options) {\n        this._transformGetter = null;\n        this._opacityGetter = null;\n        this._originGetter = null;\n        this._alignGetter = null;\n        this._sizeGetter = null;\n\n        /* TODO: remove this when deprecation complete */\n        this._legacyStates = {};\n\n        this._output = {\n            transform: Transform.identity,\n            opacity: 1,\n            origin: null,\n            align: null,\n            size: null,\n            target: null\n        };\n\n        if (options) {\n            if (options.transform) this.transformFrom(options.transform);\n            if (options.opacity !== undefined) this.opacityFrom(options.opacity);\n            if (options.origin) this.originFrom(options.origin);\n            if (options.align) this.alignFrom(options.align);\n            if (options.size) this.sizeFrom(options.size);\n        }\n    }\n\n    /**\n     * Function, object, or static transform matrix which provides the transform.\n     *   This is evaluated on every tick of the engine.\n     *\n     * @method transformFrom\n     *\n     * @param {Object} transform transform provider object\n     * @return {Modifier} this\n     */\n    Modifier.prototype.transformFrom = function transformFrom(transform) {\n        if (transform instanceof Function) this._transformGetter = transform;\n        else if (transform instanceof Object && transform.get) this._transformGetter = transform.get.bind(transform);\n        else {\n            this._transformGetter = null;\n            this._output.transform = transform;\n        }\n        return this;\n    };\n\n    /**\n     * Set function, object, or number to provide opacity, in range [0,1].\n     *\n     * @method opacityFrom\n     *\n     * @param {Object} opacity provider object\n     * @return {Modifier} this\n     */\n    Modifier.prototype.opacityFrom = function opacityFrom(opacity) {\n        if (opacity instanceof Function) this._opacityGetter = opacity;\n        else if (opacity instanceof Object && opacity.get) this._opacityGetter = opacity.get.bind(opacity);\n        else {\n            this._opacityGetter = null;\n            this._output.opacity = opacity;\n        }\n        return this;\n    };\n\n    /**\n     * Set function, object, or numerical array to provide origin, as [x,y],\n     *   where x and y are in the range [0,1].\n     *\n     * @method originFrom\n     *\n     * @param {Object} origin provider object\n     * @return {Modifier} this\n     */\n    Modifier.prototype.originFrom = function originFrom(origin) {\n        if (origin instanceof Function) this._originGetter = origin;\n        else if (origin instanceof Object && origin.get) this._originGetter = origin.get.bind(origin);\n        else {\n            this._originGetter = null;\n            this._output.origin = origin;\n        }\n        return this;\n    };\n\n    /**\n     * Set function, object, or numerical array to provide align, as [x,y],\n     *   where x and y are in the range [0,1].\n     *\n     * @method alignFrom\n     *\n     * @param {Object} align provider object\n     * @return {Modifier} this\n     */\n    Modifier.prototype.alignFrom = function alignFrom(align) {\n        if (align instanceof Function) this._alignGetter = align;\n        else if (align instanceof Object && align.get) this._alignGetter = align.get.bind(align);\n        else {\n            this._alignGetter = null;\n            this._output.align = align;\n        }\n        return this;\n    };\n\n    /**\n     * Set function, object, or numerical array to provide size, as [width, height].\n     *\n     * @method sizeFrom\n     *\n     * @param {Object} size provider object\n     * @return {Modifier} this\n     */\n    Modifier.prototype.sizeFrom = function sizeFrom(size) {\n        if (size instanceof Function) this._sizeGetter = size;\n        else if (size instanceof Object && size.get) this._sizeGetter = size.get.bind(size);\n        else {\n            this._sizeGetter = null;\n            this._output.size = size;\n        }\n        return this;\n    };\n\n     /**\n     * Deprecated: Prefer transformFrom with static Transform, or use a TransitionableTransform.\n     * @deprecated\n     * @method setTransform\n     *\n     * @param {Transform} transform Transform to transition to\n     * @param {Transitionable} transition Valid transitionable object\n     * @param {Function} callback callback to call after transition completes\n     * @return {Modifier} this\n     */\n    Modifier.prototype.setTransform = function setTransform(transform, transition, callback) {\n        if (transition || this._legacyStates.transform) {\n            if (!this._legacyStates.transform) {\n                this._legacyStates.transform = new TransitionableTransform(this._output.transform);\n            }\n            if (!this._transformGetter) this.transformFrom(this._legacyStates.transform);\n\n            this._legacyStates.transform.set(transform, transition, callback);\n            return this;\n        }\n        else return this.transformFrom(transform);\n    };\n\n    /**\n     * Deprecated: Prefer opacityFrom with static opacity array, or use a Transitionable with that opacity.\n     * @deprecated\n     * @method setOpacity\n     *\n     * @param {Number} opacity Opacity value to transition to.\n     * @param {Transitionable} transition Valid transitionable object\n     * @param {Function} callback callback to call after transition completes\n     * @return {Modifier} this\n     */\n    Modifier.prototype.setOpacity = function setOpacity(opacity, transition, callback) {\n        if (transition || this._legacyStates.opacity) {\n            if (!this._legacyStates.opacity) {\n                this._legacyStates.opacity = new Transitionable(this._output.opacity);\n            }\n            if (!this._opacityGetter) this.opacityFrom(this._legacyStates.opacity);\n\n            return this._legacyStates.opacity.set(opacity, transition, callback);\n        }\n        else return this.opacityFrom(opacity);\n    };\n\n    /**\n     * Deprecated: Prefer originFrom with static origin array, or use a Transitionable with that origin.\n     * @deprecated\n     * @method setOrigin\n     *\n     * @param {Array.Number} origin two element array with values between 0 and 1.\n     * @param {Transitionable} transition Valid transitionable object\n     * @param {Function} callback callback to call after transition completes\n     * @return {Modifier} this\n     */\n    Modifier.prototype.setOrigin = function setOrigin(origin, transition, callback) {\n        /* TODO: remove this if statement when deprecation complete */\n        if (transition || this._legacyStates.origin) {\n\n            if (!this._legacyStates.origin) {\n                this._legacyStates.origin = new Transitionable(this._output.origin || [0, 0]);\n            }\n            if (!this._originGetter) this.originFrom(this._legacyStates.origin);\n\n            this._legacyStates.origin.set(origin, transition, callback);\n            return this;\n        }\n        else return this.originFrom(origin);\n    };\n\n    /**\n     * Deprecated: Prefer alignFrom with static align array, or use a Transitionable with that align.\n     * @deprecated\n     * @method setAlign\n     *\n     * @param {Array.Number} align two element array with values between 0 and 1.\n     * @param {Transitionable} transition Valid transitionable object\n     * @param {Function} callback callback to call after transition completes\n     * @return {Modifier} this\n     */\n    Modifier.prototype.setAlign = function setAlign(align, transition, callback) {\n        /* TODO: remove this if statement when deprecation complete */\n        if (transition || this._legacyStates.align) {\n\n            if (!this._legacyStates.align) {\n                this._legacyStates.align = new Transitionable(this._output.align || [0, 0]);\n            }\n            if (!this._alignGetter) this.alignFrom(this._legacyStates.align);\n\n            this._legacyStates.align.set(align, transition, callback);\n            return this;\n        }\n        else return this.alignFrom(align);\n    };\n\n    /**\n     * Deprecated: Prefer sizeFrom with static origin array, or use a Transitionable with that size.\n     * @deprecated\n     * @method setSize\n     * @param {Array.Number} size two element array of [width, height]\n     * @param {Transitionable} transition Valid transitionable object\n     * @param {Function} callback callback to call after transition completes\n     * @return {Modifier} this\n     */\n    Modifier.prototype.setSize = function setSize(size, transition, callback) {\n        if (size && (transition || this._legacyStates.size)) {\n            if (!this._legacyStates.size) {\n                this._legacyStates.size = new Transitionable(this._output.size || [0, 0]);\n            }\n            if (!this._sizeGetter) this.sizeFrom(this._legacyStates.size);\n\n            this._legacyStates.size.set(size, transition, callback);\n            return this;\n        }\n        else return this.sizeFrom(size);\n    };\n\n    /**\n     * Deprecated: Prefer to stop transform in your provider object.\n     * @deprecated\n     * @method halt\n     */\n    Modifier.prototype.halt = function halt() {\n        if (this._legacyStates.transform) this._legacyStates.transform.halt();\n        if (this._legacyStates.opacity) this._legacyStates.opacity.halt();\n        if (this._legacyStates.origin) this._legacyStates.origin.halt();\n        if (this._legacyStates.align) this._legacyStates.align.halt();\n        if (this._legacyStates.size) this._legacyStates.size.halt();\n        this._transformGetter = null;\n        this._opacityGetter = null;\n        this._originGetter = null;\n        this._alignGetter = null;\n        this._sizeGetter = null;\n    };\n\n    /**\n     * Deprecated: Prefer to use your provided transform or output of your transform provider.\n     * @deprecated\n     * @method getTransform\n     * @return {Object} transform provider object\n     */\n    Modifier.prototype.getTransform = function getTransform() {\n        return this._transformGetter();\n    };\n\n    /**\n     * Deprecated: Prefer to determine the end state of your transform from your transform provider\n     * @deprecated\n     * @method getFinalTransform\n     * @return {Transform} transform matrix\n     */\n    Modifier.prototype.getFinalTransform = function getFinalTransform() {\n        return this._legacyStates.transform ? this._legacyStates.transform.getFinal() : this._output.transform;\n    };\n\n    /**\n     * Deprecated: Prefer to use your provided opacity or output of your opacity provider.\n     * @deprecated\n     * @method getOpacity\n     * @return {Object} opacity provider object\n     */\n    Modifier.prototype.getOpacity = function getOpacity() {\n        return this._opacityGetter();\n    };\n\n    /**\n     * Deprecated: Prefer to use your provided origin or output of your origin provider.\n     * @deprecated\n     * @method getOrigin\n     * @return {Object} origin provider object\n     */\n    Modifier.prototype.getOrigin = function getOrigin() {\n        return this._originGetter();\n    };\n\n    /**\n     * Deprecated: Prefer to use your provided align or output of your align provider.\n     * @deprecated\n     * @method getAlign\n     * @return {Object} align provider object\n     */\n    Modifier.prototype.getAlign = function getAlign() {\n        return this._alignGetter();\n    };\n\n    /**\n     * Deprecated: Prefer to use your provided size or output of your size provider.\n     * @deprecated\n     * @method getSize\n     * @return {Object} size provider object\n     */\n    Modifier.prototype.getSize = function getSize() {\n        return this._sizeGetter ? this._sizeGetter() : this._output.size;\n    };\n\n    // call providers on tick to receive render spec elements to apply\n    function _update() {\n        if (this._transformGetter) this._output.transform = this._transformGetter();\n        if (this._opacityGetter) this._output.opacity = this._opacityGetter();\n        if (this._originGetter) this._output.origin = this._originGetter();\n        if (this._alignGetter) this._output.align = this._alignGetter();\n        if (this._sizeGetter) this._output.size = this._sizeGetter();\n    }\n\n    /**\n     * Return render spec for this Modifier, applying to the provided\n     *    target component.  This is similar to render() for Surfaces.\n     *\n     * @private\n     * @method modify\n     *\n     * @param {Object} target (already rendered) render spec to\n     *    which to apply the transform.\n     * @return {Object} render spec for this Modifier, including the\n     *    provided target\n     */\n    Modifier.prototype.modify = function modify(target) {\n        _update.call(this);\n        this._output.target = target;\n        return this._output;\n    };\n\n    module.exports = Modifier;\n});\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n *\n * Owner: mark@famo.us\n * @license MPL 2.0\n * @copyright Famous Industries, Inc. 2014\n */\n\ndefine(function(require, exports, module) {\n    var EventHandler = require('./EventHandler');\n\n    /**\n     *  A collection of methods for setting options which can be extended\n     *  onto other classes.\n     *\n     *\n     *  **** WARNING ****\n     *  You can only pass through objects that will compile into valid JSON.\n     *\n     *  Valid options:\n     *      Strings,\n     *      Arrays,\n     *      Objects,\n     *      Numbers,\n     *      Nested Objects,\n     *      Nested Arrays.\n     *\n     *    This excludes:\n     *        Document Fragments,\n     *        Functions\n     * @class OptionsManager\n     * @constructor\n     * @param {Object} value options dictionary\n     */\n    function OptionsManager(value) {\n        this._value = value;\n        this.eventOutput = null;\n    }\n\n    /**\n     * Create options manager from source dictionary with arguments overriden by patch dictionary.\n     *\n     * @static\n     * @method OptionsManager.patch\n     *\n     * @param {Object} source source arguments\n     * @param {...Object} data argument additions and overwrites\n     * @return {Object} source object\n     */\n    OptionsManager.patch = function patchObject(source, data) {\n        var manager = new OptionsManager(source);\n        for (var i = 1; i < arguments.length; i++) manager.patch(arguments[i]);\n        return source;\n    };\n\n    function _createEventOutput() {\n        this.eventOutput = new EventHandler();\n        this.eventOutput.bindThis(this);\n        EventHandler.setOutputHandler(this, this.eventOutput);\n    }\n\n    /**\n     * Create OptionsManager from source with arguments overriden by patches.\n     *   Triggers 'change' event on this object's event handler if the state of\n     *   the OptionsManager changes as a result.\n     *\n     * @method patch\n     *\n     * @param {...Object} arguments list of patch objects\n     * @return {OptionsManager} this\n     */\n    OptionsManager.prototype.patch = function patch() {\n        var myState = this._value;\n        for (var i = 0; i < arguments.length; i++) {\n            var data = arguments[i];\n            for (var k in data) {\n                if ((k in myState) && (data[k] && data[k].constructor === Object) && (myState[k] && myState[k].constructor === Object)) {\n                    if (!myState.hasOwnProperty(k)) myState[k] = Object.create(myState[k]);\n                    this.key(k).patch(data[k]);\n                    if (this.eventOutput) this.eventOutput.emit('change', {id: k, value: this.key(k).value()});\n                }\n                else this.set(k, data[k]);\n            }\n        }\n        return this;\n    };\n\n    /**\n     * Alias for patch\n     *\n     * @method setOptions\n     *\n     */\n    OptionsManager.prototype.setOptions = OptionsManager.prototype.patch;\n\n    /**\n     * Return OptionsManager based on sub-object retrieved by key\n     *\n     * @method key\n     *\n     * @param {string} identifier key\n     * @return {OptionsManager} new options manager with the value\n     */\n    OptionsManager.prototype.key = function key(identifier) {\n        var result = new OptionsManager(this._value[identifier]);\n        if (!(result._value instanceof Object) || result._value instanceof Array) result._value = {};\n        return result;\n    };\n\n    /**\n     * Look up value by key\n     * @method get\n     *\n     * @param {string} key key\n     * @return {Object} associated object\n     */\n    OptionsManager.prototype.get = function get(key) {\n        return this._value[key];\n    };\n\n    /**\n     * Alias for get\n     * @method getOptions\n     */\n    OptionsManager.prototype.getOptions = OptionsManager.prototype.get;\n\n    /**\n     * Set key to value.  Outputs 'change' event if a value is overwritten.\n     *\n     * @method set\n     *\n     * @param {string} key key string\n     * @param {Object} value value object\n     * @return {OptionsManager} new options manager based on the value object\n     */\n    OptionsManager.prototype.set = function set(key, value) {\n        var originalValue = this.get(key);\n        this._value[key] = value;\n        if (this.eventOutput && value !== originalValue) this.eventOutput.emit('change', {id: key, value: value});\n        return this;\n    };\n\n    /**\n     * Return entire object contents of this OptionsManager.\n     *\n     * @method value\n     *\n     * @return {Object} current state of options\n     */\n    OptionsManager.prototype.value = function value() {\n        return this._value;\n    };\n\n    /**\n     * Bind a callback function to an event type handled by this object.\n     *\n     * @method \"on\"\n     *\n     * @param {string} type event type key (for example, 'change')\n     * @param {function(string, Object)} handler callback\n     * @return {EventHandler} this\n     */\n    OptionsManager.prototype.on = function on() {\n        _createEventOutput.call(this);\n        return this.on.apply(this, arguments);\n    };\n\n    /**\n     * Unbind an event by type and handler.\n     *   This undoes the work of \"on\".\n     *\n     * @method removeListener\n     *\n     * @param {string} type event type key (for example, 'change')\n     * @param {function} handler function object to remove\n     * @return {EventHandler} internal event handler object (for chaining)\n     */\n    OptionsManager.prototype.removeListener = function removeListener() {\n        _createEventOutput.call(this);\n        return this.removeListener.apply(this, arguments);\n    };\n\n    /**\n     * Add event handler object to set of downstream handlers.\n     *\n     * @method pipe\n     *\n     * @param {EventHandler} target event handler target object\n     * @return {EventHandler} passed event handler\n     */\n    OptionsManager.prototype.pipe = function pipe() {\n        _createEventOutput.call(this);\n        return this.pipe.apply(this, arguments);\n    };\n\n    /**\n     * Remove handler object from set of downstream handlers.\n     * Undoes work of \"pipe\"\n     *\n     * @method unpipe\n     *\n     * @param {EventHandler} target target handler object\n     * @return {EventHandler} provided target\n     */\n    OptionsManager.prototype.unpipe = function unpipe() {\n        _createEventOutput.call(this);\n        return this.unpipe.apply(this, arguments);\n    };\n\n    module.exports = OptionsManager;\n});\n","/**\n * Copyright (c) 2014 Petka Antonov\n * \n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:</p>\n * \n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n * \n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n * \n */\nvar isES5 = (function(){\n    \"use strict\";\n    return this === void 0;\n})();\n\nif (isES5) {\n    module.exports = {\n        freeze: Object.freeze,\n        defineProperty: Object.defineProperty,\n        keys: Object.keys,\n        getPrototypeOf: Object.getPrototypeOf,\n        isArray: Array.isArray,\n        isES5: isES5\n    };\n}\n\nelse {\n    var has = {}.hasOwnProperty;\n    var str = {}.toString;\n    var proto = {}.constructor.prototype;\n\n    var ObjectKeys = function ObjectKeys(o) {\n        var ret = [];\n        for (var key in o) {\n            if (has.call(o, key)) {\n                ret.push(key);\n            }\n        }\n        return ret;\n    }\n\n    var ObjectDefineProperty = function ObjectDefineProperty(o, key, desc) {\n        o[key] = desc.value;\n        return o;\n    }\n\n    var ObjectFreeze = function ObjectFreeze(obj) {\n        return obj;\n    }\n\n    var ObjectGetPrototypeOf = function ObjectGetPrototypeOf(obj) {\n        try {\n            return Object(obj).constructor.prototype;\n        }\n        catch (e) {\n            return proto;\n        }\n    }\n\n    var ArrayIsArray = function ArrayIsArray(obj) {\n        try {\n            return str.call(obj) === \"[object Array]\";\n        }\n        catch(e) {\n            return false;\n        }\n    }\n\n    module.exports = {\n        isArray: ArrayIsArray,\n        keys: ObjectKeys,\n        defineProperty: ObjectDefineProperty,\n        freeze: ObjectFreeze,\n        getPrototypeOf: ObjectGetPrototypeOf,\n        isES5: isES5\n    };\n}\n","/**\n * Copyright (c) 2014 Petka Antonov\n * \n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:</p>\n * \n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n * \n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n * \n */\n\"use strict\";\nvar schedule = require(\"./schedule.js\");\nvar Queue = require(\"./queue.js\");\nvar errorObj = require(\"./util.js\").errorObj;\nvar tryCatch1 = require(\"./util.js\").tryCatch1;\nvar process = require(\"./global.js\").process;\n\nfunction Async() {\n    this._isTickUsed = false;\n    this._length = 0;\n    this._lateBuffer = new Queue();\n    this._functionBuffer = new Queue(25000 * 3);\n    var self = this;\n    this.consumeFunctionBuffer = function Async$consumeFunctionBuffer() {\n        self._consumeFunctionBuffer();\n    };\n}\n\nAsync.prototype.haveItemsQueued = function Async$haveItemsQueued() {\n    return this._length > 0;\n};\n\nAsync.prototype.invokeLater = function Async$invokeLater(fn, receiver, arg) {\n    if (process !== void 0 &&\n        process.domain != null &&\n        !fn.domain) {\n        fn = process.domain.bind(fn);\n    }\n    this._lateBuffer.push(fn, receiver, arg);\n    this._queueTick();\n};\n\nAsync.prototype.invoke = function Async$invoke(fn, receiver, arg) {\n    if (process !== void 0 &&\n        process.domain != null &&\n        !fn.domain) {\n        fn = process.domain.bind(fn);\n    }\n    var functionBuffer = this._functionBuffer;\n    functionBuffer.push(fn, receiver, arg);\n    this._length = functionBuffer.length();\n    this._queueTick();\n};\n\nAsync.prototype._consumeFunctionBuffer =\nfunction Async$_consumeFunctionBuffer() {\n    var functionBuffer = this._functionBuffer;\n    while(functionBuffer.length() > 0) {\n        var fn = functionBuffer.shift();\n        var receiver = functionBuffer.shift();\n        var arg = functionBuffer.shift();\n        fn.call(receiver, arg);\n    }\n    this._reset();\n    this._consumeLateBuffer();\n};\n\nAsync.prototype._consumeLateBuffer = function Async$_consumeLateBuffer() {\n    var buffer = this._lateBuffer;\n    while(buffer.length() > 0) {\n        var fn = buffer.shift();\n        var receiver = buffer.shift();\n        var arg = buffer.shift();\n        var res = tryCatch1(fn, receiver, arg);\n        if (res === errorObj) {\n            this._queueTick();\n            if (fn.domain != null) {\n                fn.domain.emit(\"error\", res.e);\n            }\n            else {\n                throw res.e;\n            }\n        }\n    }\n};\n\nAsync.prototype._queueTick = function Async$_queue() {\n    if (!this._isTickUsed) {\n        schedule(this.consumeFunctionBuffer);\n        this._isTickUsed = true;\n    }\n};\n\nAsync.prototype._reset = function Async$_reset() {\n    this._isTickUsed = false;\n    this._length = 0;\n};\n\nmodule.exports = new Async();\n","/**\n * Copyright (c) 2014 Petka Antonov\n * \n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:</p>\n * \n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n * \n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n * \n */\nmodule.exports = (function() {\n    if (this !== void 0) return this;\n    try {return global;}\n    catch(e) {}\n    try {return window;}\n    catch(e) {}\n    try {return self;}\n    catch(e) {}\n})();\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n *\n * Owner: mark@famo.us\n * @license MPL 2.0\n * @copyright Famous Industries, Inc. 2014\n */\n\ndefine(function(require, exports, module) {\n    /**\n     * EventEmitter represents a channel for events.\n     *\n     * @class EventEmitter\n     * @constructor\n     */\n    function EventEmitter() {\n        this.listeners = {};\n        this._owner = this;\n    }\n\n    /**\n     * Trigger an event, sending to all downstream handlers\n     *   listening for provided 'type' key.\n     *\n     * @method emit\n     *\n     * @param {string} type event type key (for example, 'click')\n     * @param {Object} event event data\n     * @return {EventHandler} this\n     */\n    EventEmitter.prototype.emit = function emit(type, event) {\n        var handlers = this.listeners[type];\n        if (handlers) {\n            for (var i = 0; i < handlers.length; i++) {\n                handlers[i].call(this._owner, event);\n            }\n        }\n        return this;\n    };\n\n    /**\n     * Bind a callback function to an event type handled by this object.\n     *\n     * @method \"on\"\n     *\n     * @param {string} type event type key (for example, 'click')\n     * @param {function(string, Object)} handler callback\n     * @return {EventHandler} this\n     */\n   EventEmitter.prototype.on = function on(type, handler) {\n        if (!(type in this.listeners)) this.listeners[type] = [];\n        var index = this.listeners[type].indexOf(handler);\n        if (index < 0) this.listeners[type].push(handler);\n        return this;\n    };\n\n    /**\n     * Alias for \"on\".\n     * @method addListener\n     */\n    EventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\n   /**\n     * Unbind an event by type and handler.\n     *   This undoes the work of \"on\".\n     *\n     * @method removeListener\n     *\n     * @param {string} type event type key (for example, 'click')\n     * @param {function} handler function object to remove\n     * @return {EventEmitter} this\n     */\n    EventEmitter.prototype.removeListener = function removeListener(type, handler) {\n        var index = this.listeners[type].indexOf(handler);\n        if (index >= 0) this.listeners[type].splice(index, 1);\n        return this;\n    };\n\n    /**\n     * Call event handlers with this set to owner.\n     *\n     * @method bindThis\n     *\n     * @param {Object} owner object this EventEmitter belongs to\n     */\n    EventEmitter.prototype.bindThis = function bindThis(owner) {\n        this._owner = owner;\n    };\n\n    module.exports = EventEmitter;\n});\n","\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n *\n * Owner: mark@famo.us\n * @license MPL 2.0\n * @copyright Famous Industries, Inc. 2014\n */\n\ndefine(function(require, exports, module) {\n    var Surface = require('famous/core/Surface');\n    var Context = require('famous/core/Context');\n\n    /**\n     * ContainerSurface is an object designed to contain surfaces and\n     *   set properties to be applied to all of them at once.\n     *   This extends the Surface class.\n     *   A container surface will enforce these properties on the\n     *   surfaces it contains:\n     *\n     *   size (clips contained surfaces to its own width and height);\n     *\n     *   origin;\n     *\n     *   its own opacity and transform, which will be automatically\n     *   applied to  all Surfaces contained directly and indirectly.\n     *\n     * @class ContainerSurface\n     * @extends Surface\n     * @constructor\n     * @param {Array.Number} [options.size] [width, height] in pixels\n     * @param {Array.string} [options.classes] CSS classes to set on all inner content\n     * @param {Array} [options.properties] string dictionary of HTML attributes to set on target div\n     * @param {string} [options.content] inner (HTML) content of surface (should not be used)\n     */\n    function ContainerSurface(options) {\n        Surface.call(this, options);\n        this._container = document.createElement('div');\n        this._container.classList.add('famous-group');\n        this._container.classList.add('famous-container-group');\n        this._shouldRecalculateSize = false;\n        this.context = new Context(this._container);\n        this.setContent(this._container);\n    }\n\n    ContainerSurface.prototype = Object.create(Surface.prototype);\n    ContainerSurface.prototype.constructor = ContainerSurface;\n    ContainerSurface.prototype.elementType = 'div';\n    ContainerSurface.prototype.elementClass = 'famous-surface';\n\n    /**\n     * Add renderables to this object's render tree\n     *\n     * @method add\n     *\n     * @param {Object} obj renderable object\n     * @return {RenderNode} RenderNode wrapping this object, if not already a RenderNode\n     */\n    ContainerSurface.prototype.add = function add() {\n        return this.context.add.apply(this.context, arguments);\n    };\n\n    /**\n     * Return spec for this surface.  Note: Can result in a size recalculation.\n     *\n     * @private\n     * @method render\n     *\n     * @return {Object} render spec for this surface (spec id)\n     */\n    ContainerSurface.prototype.render = function render() {\n        if (this._sizeDirty) this._shouldRecalculateSize = true;\n        return Surface.prototype.render.apply(this, arguments);\n    };\n\n    /**\n     * Place the document element this component manages into the document.\n     *\n     * @private\n     * @method deploy\n     * @param {Node} target document parent of this container\n     */\n    ContainerSurface.prototype.deploy = function deploy() {\n        this._shouldRecalculateSize = true;\n        return Surface.prototype.deploy.apply(this, arguments);\n    };\n\n    /**\n     * Apply changes from this component to the corresponding document element.\n     * This includes changes to classes, styles, size, content, opacity, origin,\n     * and matrix transforms.\n     *\n     * @private\n     * @method commit\n     * @param {Context} context commit context\n     * @param {Transform} transform unused TODO\n     * @param {Number} opacity  unused TODO\n     * @param {Array.Number} origin unused TODO\n     * @param {Array.Number} size unused TODO\n     * @return {undefined} TODO returns an undefined value\n     */\n    ContainerSurface.prototype.commit = function commit(context, transform, opacity, origin, size) {\n        var previousSize = this._size ? [this._size[0], this._size[1]] : null;\n        var result = Surface.prototype.commit.apply(this, arguments);\n        if (this._shouldRecalculateSize || (previousSize && (this._size[0] !== previousSize[0] || this._size[1] !== previousSize[1]))) {\n            this.context.setSize();\n            this._shouldRecalculateSize = false;\n        }\n        this.context.update();\n        return result;\n    };\n\n    module.exports = ContainerSurface;\n});\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n *\n * Owner: mark@famo.us\n * @license MPL 2.0\n * @copyright Famous Industries, Inc. 2014\n */\n\ndefine(function(require, exports, module) {\n\n    /**\n     * The singleton object initiated upon process\n     *   startup which manages all active Context instances, runs\n     *   the render dispatch loop, and acts as a listener and dispatcher\n     *   for events.  All methods are therefore static.\n     *\n     *   On static initialization, window.requestAnimationFrame is called with\n     *     the event loop function.\n     *\n     *   Note: Any window in which Engine runs will prevent default\n     *     scrolling behavior on the 'touchmove' event.\n     *\n     * @static\n     * @class Engine\n     */\n    var Context = require('./Context');\n    var EventHandler = require('./EventHandler');\n    var OptionsManager = require('./OptionsManager');\n\n    var Engine = {};\n\n    var contexts = [];\n    var nextTickQueue = [];\n    var deferQueue = [];\n\n    var lastTime = Date.now();\n    var frameTime;\n    var frameTimeLimit;\n    var loopEnabled = true;\n    var eventForwarders = {};\n    var eventHandler = new EventHandler();\n\n    var options = {\n        containerType: 'div',\n        containerClass: 'famous-container',\n        fpsCap: undefined,\n        runLoop: true\n    };\n    var optionsManager = new OptionsManager(options);\n\n    /** @const */\n    var MAX_DEFER_FRAME_TIME = 10;\n\n    /**\n     * Inside requestAnimationFrame loop, step() is called, which:\n     *   calculates current FPS (throttling loop if it is over limit set in setFPSCap),\n     *   emits dataless 'prerender' event on start of loop,\n     *   calls in order any one-shot functions registered by nextTick on last loop,\n     *   calls Context.update on all Context objects registered,\n     *   and emits dataless 'postrender' event on end of loop.\n     *\n     * @static\n     * @private\n     * @method step\n     */\n    Engine.step = function step() {\n        var currentTime = Date.now();\n\n        // skip frame if we're over our framerate cap\n        if (frameTimeLimit && currentTime - lastTime < frameTimeLimit) return;\n\n        var i = 0;\n\n        frameTime = currentTime - lastTime;\n        lastTime = currentTime;\n\n        eventHandler.emit('prerender');\n\n        // empty the queue\n        for (i = 0; i < nextTickQueue.length; i++) nextTickQueue[i].call(this);\n        nextTickQueue.splice(0);\n\n        // limit total execution time for deferrable functions\n        while (deferQueue.length && (Date.now() - currentTime) < MAX_DEFER_FRAME_TIME) {\n            deferQueue.shift().call(this);\n        }\n\n        for (i = 0; i < contexts.length; i++) contexts[i].update();\n\n        eventHandler.emit('postrender');\n    };\n\n    // engage requestAnimationFrame\n    function loop() {\n        if (options.runLoop) {\n            Engine.step();\n            requestAnimationFrame(loop);\n        }\n        else loopEnabled = false;\n    }\n    requestAnimationFrame(loop);\n\n    //\n    // Upon main document window resize (unless on an \"input\" HTML element):\n    //   scroll to the top left corner of the window,\n    //   and for each managed Context: emit the 'resize' event and update its size.\n    // @param {Object=} event document event\n    //\n    function handleResize(event) {\n        for (var i = 0; i < contexts.length; i++) {\n            contexts[i].emit('resize');\n        }\n        eventHandler.emit('resize');\n    }\n    window.addEventListener('resize', handleResize, false);\n    handleResize();\n\n    // prevent scrolling via browser\n    window.addEventListener('touchmove', function(event) {\n        event.preventDefault();\n    }, true);\n\n    /**\n     * Add event handler object to set of downstream handlers.\n     *\n     * @method pipe\n     *\n     * @param {EventHandler} target event handler target object\n     * @return {EventHandler} passed event handler\n     */\n    Engine.pipe = function pipe(target) {\n        if (target.subscribe instanceof Function) return target.subscribe(Engine);\n        else return eventHandler.pipe(target);\n    };\n\n    /**\n     * Remove handler object from set of downstream handlers.\n     *   Undoes work of \"pipe\".\n     *\n     * @method unpipe\n     *\n     * @param {EventHandler} target target handler object\n     * @return {EventHandler} provided target\n     */\n    Engine.unpipe = function unpipe(target) {\n        if (target.unsubscribe instanceof Function) return target.unsubscribe(Engine);\n        else return eventHandler.unpipe(target);\n    };\n\n    /**\n     * Bind a callback function to an event type handled by this object.\n     *\n     * @static\n     * @method \"on\"\n     *\n     * @param {string} type event type key (for example, 'click')\n     * @param {function(string, Object)} handler callback\n     * @return {EventHandler} this\n     */\n    Engine.on = function on(type, handler) {\n        if (!(type in eventForwarders)) {\n            eventForwarders[type] = eventHandler.emit.bind(eventHandler, type);\n            if (document.body) {\n                document.body.addEventListener(type, eventForwarders[type]);\n            }\n            else {\n                Engine.nextTick(function(type, forwarder) {\n                    document.body.addEventListener(type, forwarder);\n                }.bind(this, type, eventForwarders[type]));\n            }\n        }\n        return eventHandler.on(type, handler);\n    };\n\n    /**\n     * Trigger an event, sending to all downstream handlers\n     *   listening for provided 'type' key.\n     *\n     * @method emit\n     *\n     * @param {string} type event type key (for example, 'click')\n     * @param {Object} event event data\n     * @return {EventHandler} this\n     */\n    Engine.emit = function emit(type, event) {\n        return eventHandler.emit(type, event);\n    };\n\n    /**\n     * Unbind an event by type and handler.\n     *   This undoes the work of \"on\".\n     *\n     * @static\n     * @method removeListener\n     *\n     * @param {string} type event type key (for example, 'click')\n     * @param {function} handler function object to remove\n     * @return {EventHandler} internal event handler object (for chaining)\n     */\n    Engine.removeListener = function removeListener(type, handler) {\n        return eventHandler.removeListener(type, handler);\n    };\n\n    /**\n     * Return the current calculated frames per second of the Engine.\n     *\n     * @static\n     * @method getFPS\n     *\n     * @return {Number} calculated fps\n     */\n    Engine.getFPS = function getFPS() {\n        return 1000 / frameTime;\n    };\n\n    /**\n     * Set the maximum fps at which the system should run. If internal render\n     *    loop is called at a greater frequency than this FPSCap, Engine will\n     *    throttle render and update until this rate is achieved.\n     *\n     * @static\n     * @method setFPSCap\n     *\n     * @param {Number} fps maximum frames per second\n     */\n    Engine.setFPSCap = function setFPSCap(fps) {\n        frameTimeLimit = Math.floor(1000 / fps);\n    };\n\n    /**\n     * Return engine options.\n     *\n     * @static\n     * @method getOptions\n     * @param {string} key\n     * @return {Object} engine options\n     */\n    Engine.getOptions = function getOptions() {\n        return optionsManager.getOptions.apply(optionsManager, arguments);\n    };\n\n    /**\n     * Set engine options\n     *\n     * @static\n     * @method setOptions\n     *\n     * @param {Object} [options] overrides of default options\n     * @param {Number} [options.fpsCap]  maximum fps at which the system should run\n     * @param {boolean} [options.runLoop=true] whether the run loop should continue\n     * @param {string} [options.containerType=\"div\"] type of container element.  Defaults to 'div'.\n     * @param {string} [options.containerClass=\"famous-container\"] type of container element.  Defaults to 'famous-container'.\n     */\n    Engine.setOptions = function setOptions(options) {\n        return optionsManager.setOptions.apply(optionsManager, arguments);\n    };\n\n    /**\n     * Creates a new Context for rendering and event handling with\n     *    provided document element as top of each tree. This will be tracked by the\n     *    process-wide Engine.\n     *\n     * @static\n     * @method createContext\n     *\n     * @param {Node} el will be top of Famo.us document element tree\n     * @return {Context} new Context within el\n     */\n    Engine.createContext = function createContext(el) {\n        var needMountContainer = false;\n        if (!el) {\n            el = document.createElement(options.containerType);\n            el.classList.add(options.containerClass);\n            needMountContainer = true;\n        }\n        var context = new Context(el);\n        Engine.registerContext(context);\n        if (needMountContainer) {\n            Engine.nextTick(function(context, el) {\n                document.body.appendChild(el);\n                context.emit('resize');\n            }.bind(this, context, el));\n        }\n        return context;\n    };\n\n    /**\n     * Registers an existing context to be updated within the run loop.\n     *\n     * @static\n     * @method registerContext\n     *\n     * @param {Context} context Context to register\n     * @return {FamousContext} provided context\n     */\n    Engine.registerContext = function registerContext(context) {\n        contexts.push(context);\n        return context;\n    };\n\n    /**\n     * Queue a function to be executed on the next tick of the\n     *    Engine.\n     *\n     * @static\n     * @method nextTick\n     *\n     * @param {function(Object)} fn function accepting window object\n     */\n    Engine.nextTick = function nextTick(fn) {\n        nextTickQueue.push(fn);\n    };\n\n    /**\n     * Queue a function to be executed sometime soon, at a time that is\n     *    unlikely to affect frame rate.\n     *\n     * @static\n     * @method defer\n     *\n     * @param {Function} fn\n     */\n    Engine.defer = function defer(fn) {\n        deferQueue.push(fn);\n    };\n\n    optionsManager.on('change', function(data) {\n        if (data.id === 'fpsCap') Engine.setFPSCap(data.value);\n        else if (data.id === 'runLoop') {\n            // kick off the loop only if it was stopped\n            if (!loopEnabled && data.value) {\n                loopEnabled = true;\n                requestAnimationFrame(loop);\n            }\n        }\n    });\n\n    module.exports = Engine;\n});\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n *\n * Owner: mark@famo.us\n * @license MPL 2.0\n * @copyright Famous Industries, Inc. 2014\n */\n\ndefine(function(require, exports, module) {\n    /**\n     * A singleton that maintains a global registry of Surfaces.\n     *   Private.\n     *\n     * @private\n     * @static\n     * @class Entity\n     */\n\n    var entities = [];\n\n    /**\n     * Get entity from global index.\n     *\n     * @private\n     * @method get\n     * @param {Number} id entity reigstration id\n     * @return {Surface} entity in the global index\n     */\n    function get(id) {\n        return entities[id];\n    }\n\n    /**\n     * Overwrite entity in the global index\n     *\n     * @private\n     * @method set\n     * @param {Number} id entity reigstration id\n     * @return {Surface} entity to add to the global index\n     */\n    function set(id, entity) {\n        entities[id] = entity;\n    }\n\n    /**\n     * Add entity to global index\n     *\n     * @private\n     * @method register\n     * @param {Surface} entity to add to global index\n     * @return {Number} new id\n     */\n    function register(entity) {\n        var id = entities.length;\n        set(id, entity);\n        return id;\n    }\n\n    /**\n     * Remove entity from global index\n     *\n     * @private\n     * @method unregister\n     * @param {Number} id entity reigstration id\n     */\n    function unregister(id) {\n        set(id, null);\n    }\n\n    module.exports = {\n        register: register,\n        unregister: unregister,\n        get: get,\n        set: set\n    };\n});\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n *\n * Owner: mark@famo.us\n * @license MPL 2.0\n * @copyright Famous Industries, Inc. 2014\n */\n\ndefine(function(require, exports, module) {\n    var Entity = require('./Entity');\n    var SpecParser = require('./SpecParser');\n\n    /**\n     * A wrapper for inserting a renderable component (like a Modifer or\n     *   Surface) into the render tree.\n     *\n     * @class RenderNode\n     * @constructor\n     *\n     * @param {Object} object Target renderable component\n     */\n    function RenderNode(object) {\n        this._object = null;\n        this._child = null;\n        this._hasMultipleChildren = false;\n        this._isRenderable = false;\n        this._isModifier = false;\n\n        this._resultCache = {};\n        this._prevResults = {};\n\n        this._childResult = null;\n\n        if (object) this.set(object);\n    }\n\n    /**\n     * Append a renderable to the list of this node's children.\n     *   This produces a new RenderNode in the tree.\n     *   Note: Does not double-wrap if child is a RenderNode already.\n     *\n     * @method add\n     * @param {Object} child renderable object\n     * @return {RenderNode} new render node wrapping child\n     */\n    RenderNode.prototype.add = function add(child) {\n        var childNode = (child instanceof RenderNode) ? child : new RenderNode(child);\n        if (this._child instanceof Array) this._child.push(childNode);\n        else if (this._child) {\n            this._child = [this._child, childNode];\n            this._hasMultipleChildren = true;\n            this._childResult = []; // to be used later\n        }\n        else this._child = childNode;\n\n        return childNode;\n    };\n\n    /**\n     * Return the single wrapped object.  Returns null if this node has multiple child nodes.\n     *\n     * @method get\n     *\n     * @return {Ojbect} contained renderable object\n     */\n    RenderNode.prototype.get = function get() {\n        return this._object || (this._hasMultipleChildren ? null : (this._child ? this._child.get() : null));\n    };\n\n    /**\n     * Overwrite the list of children to contain the single provided object\n     *\n     * @method set\n     * @param {Object} child renderable object\n     * @return {RenderNode} this render node, or child if it is a RenderNode\n     */\n    RenderNode.prototype.set = function set(child) {\n        this._childResult = null;\n        this._hasMultipleChildren = false;\n        this._isRenderable = child.render ? true : false;\n        this._isModifier = child.modify ? true : false;\n        this._object = child;\n        this._child = null;\n        if (child instanceof RenderNode) return child;\n        else return this;\n    };\n\n    /**\n     * Get render size of contained object.\n     *\n     * @method getSize\n     * @return {Array.Number} size of this or size of single child.\n     */\n    RenderNode.prototype.getSize = function getSize() {\n        var result = null;\n        var target = this.get();\n        if (target && target.getSize) result = target.getSize();\n        if (!result && this._child && this._child.getSize) result = this._child.getSize();\n        return result;\n    };\n\n    // apply results of rendering this subtree to the document\n    function _applyCommit(spec, context, cacheStorage) {\n        var result = SpecParser.parse(spec, context);\n        var keys = Object.keys(result);\n        for (var i = 0; i < keys.length; i++) {\n            var id = keys[i];\n            var childNode = Entity.get(id);\n            var commitParams = result[id];\n            commitParams.allocator = context.allocator;\n            var commitResult = childNode.commit(commitParams);\n            if (commitResult) _applyCommit(commitResult, context, cacheStorage);\n            else cacheStorage[id] = commitParams;\n        }\n    }\n\n    /**\n     * Commit the content change from this node to the document.\n     *\n     * @private\n     * @method commit\n     * @param {Context} context render context\n     */\n    RenderNode.prototype.commit = function commit(context) {\n        // free up some divs from the last loop\n        var prevKeys = Object.keys(this._prevResults);\n        for (var i = 0; i < prevKeys.length; i++) {\n            var id = prevKeys[i];\n            if (this._resultCache[id] === undefined) {\n                var object = Entity.get(id);\n                if (object.cleanup) object.cleanup(context.allocator);\n            }\n        }\n\n        this._prevResults = this._resultCache;\n        this._resultCache = {};\n        _applyCommit(this.render(), context, this._resultCache);\n    };\n\n    /**\n     * Generate a render spec from the contents of the wrapped component.\n     *\n     * @private\n     * @method render\n     *\n     * @return {Object} render specification for the component subtree\n     *    only under this node.\n     */\n    RenderNode.prototype.render = function render() {\n        if (this._isRenderable) return this._object.render();\n\n        var result = null;\n        if (this._hasMultipleChildren) {\n            result = this._childResult;\n            var children = this._child;\n            for (var i = 0; i < children.length; i++) {\n                result[i] = children[i].render();\n            }\n        }\n        else if (this._child) result = this._child.render();\n\n        return this._isModifier ? this._object.modify(result) : result;\n    };\n\n    module.exports = RenderNode;\n});\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n *\n * Owner: david@famo.us\n * @license MPL 2.0\n * @copyright Famous Industries, Inc. 2014\n */\n\ndefine(function(require, exports, module) {\n\n    /**\n     * Three-element floating point vector.\n     *\n     * @class Vector\n     * @constructor\n     *\n     * @param {number} x x element value\n     * @param {number} y y element value\n     * @param {number} z z element value\n     */\n    function Vector(x,y,z) {\n        if (arguments.length === 1) this.set(x);\n        else {\n            this.x = x || 0;\n            this.y = y || 0;\n            this.z = z || 0;\n        }\n        return this;\n    }\n\n    var _register = new Vector(0,0,0);\n\n    /**\n     * Add this element-wise to another Vector, element-wise.\n     *   Note: This sets the internal result register, so other references to that vector will change.\n     *\n     * @method add\n     * @param {Vector} v addend\n     * @return {Vector} vector sum\n     */\n    Vector.prototype.add = function add(v) {\n        return _setXYZ.call(_register,\n            this.x + v.x,\n            this.y + v.y,\n            this.z + v.z\n        );\n    };\n\n    /**\n     * Subtract another vector from this vector, element-wise.\n     *   Note: This sets the internal result register, so other references to that vector will change.\n     *\n     * @method sub\n     * @param {Vector} v subtrahend\n     * @return {Vector} vector difference\n     */\n    Vector.prototype.sub = function sub(v) {\n        return _setXYZ.call(_register,\n            this.x - v.x,\n            this.y - v.y,\n            this.z - v.z\n        );\n    };\n\n    /**\n     * Scale Vector by floating point r.\n     *   Note: This sets the internal result register, so other references to that vector will change.\n     *\n     * @method mult\n     *\n     * @param {number} r scalar\n     * @return {Vector} vector result\n     */\n    Vector.prototype.mult = function mult(r) {\n        return _setXYZ.call(_register,\n            r * this.x,\n            r * this.y,\n            r * this.z\n        );\n    };\n\n    /**\n     * Scale Vector by floating point 1/r.\n     *   Note: This sets the internal result register, so other references to that vector will change.\n     *\n     * @method div\n     *\n     * @param {number} r scalar\n     * @return {Vector} vector result\n     */\n    Vector.prototype.div = function div(r) {\n        return this.mult(1 / r);\n    };\n\n    /**\n     * Given another vector v, return cross product (v)x(this).\n     *   Note: This sets the internal result register, so other references to that vector will change.\n     *\n     * @method cross\n     * @param {Vector} v Left Hand Vector\n     * @return {Vector} vector result\n     */\n    Vector.prototype.cross = function cross(v) {\n        var x = this.x;\n        var y = this.y;\n        var z = this.z;\n        var vx = v.x;\n        var vy = v.y;\n        var vz = v.z;\n\n        return _setXYZ.call(_register,\n            z * vy - y * vz,\n            x * vz - z * vx,\n            y * vx - x * vy\n        );\n    };\n\n    /**\n     * Component-wise equality test between this and Vector v.\n     * @method equals\n     * @param {Vector} v vector to compare\n     * @return {boolean}\n     */\n    Vector.prototype.equals = function equals(v) {\n        return (v.x === this.x && v.y === this.y && v.z === this.z);\n    };\n\n    /**\n     * Rotate clockwise around x-axis by theta radians.\n     *   Note: This sets the internal result register, so other references to that vector will change.\n     * @method rotateX\n     * @param {number} theta radians\n     * @return {Vector} rotated vector\n     */\n    Vector.prototype.rotateX = function rotateX(theta) {\n        var x = this.x;\n        var y = this.y;\n        var z = this.z;\n\n        var cosTheta = Math.cos(theta);\n        var sinTheta = Math.sin(theta);\n\n        return _setXYZ.call(_register,\n            x,\n            y * cosTheta - z * sinTheta,\n            y * sinTheta + z * cosTheta\n        );\n    };\n\n    /**\n     * Rotate clockwise around y-axis by theta radians.\n     *   Note: This sets the internal result register, so other references to that vector will change.\n     * @method rotateY\n     * @param {number} theta radians\n     * @return {Vector} rotated vector\n     */\n    Vector.prototype.rotateY = function rotateY(theta) {\n        var x = this.x;\n        var y = this.y;\n        var z = this.z;\n\n        var cosTheta = Math.cos(theta);\n        var sinTheta = Math.sin(theta);\n\n        return _setXYZ.call(_register,\n            z * sinTheta + x * cosTheta,\n            y,\n            z * cosTheta - x * sinTheta\n        );\n    };\n\n    /**\n     * Rotate clockwise around z-axis by theta radians.\n     *   Note: This sets the internal result register, so other references to that vector will change.\n     * @method rotateZ\n     * @param {number} theta radians\n     * @return {Vector} rotated vector\n     */\n    Vector.prototype.rotateZ = function rotateZ(theta) {\n        var x = this.x;\n        var y = this.y;\n        var z = this.z;\n\n        var cosTheta = Math.cos(theta);\n        var sinTheta = Math.sin(theta);\n\n        return _setXYZ.call(_register,\n            x * cosTheta - y * sinTheta,\n            x * sinTheta + y * cosTheta,\n            z\n        );\n    };\n\n    /**\n     * Return dot product of this with a second Vector\n     * @method dot\n     * @param {Vector} v second vector\n     * @return {number} dot product\n     */\n    Vector.prototype.dot = function dot(v) {\n        return this.x * v.x + this.y * v.y + this.z * v.z;\n    };\n\n    /**\n     * Return squared length of this vector\n     * @method normSquared\n     * @return {number} squared length\n     */\n    Vector.prototype.normSquared = function normSquared() {\n        return this.dot(this);\n    };\n\n    /**\n     * Return length of this vector\n     * @method norm\n     * @return {number} length\n     */\n    Vector.prototype.norm = function norm() {\n        return Math.sqrt(this.normSquared());\n    };\n\n    /**\n     * Scale Vector to specified length.\n     *   If length is less than internal tolerance, set vector to [length, 0, 0].\n     *   Note: This sets the internal result register, so other references to that vector will change.\n     * @method normalize\n     *\n     * @param {number} length target length, default 1.0\n     * @return {Vector}\n     */\n    Vector.prototype.normalize = function normalize(length) {\n        if (arguments.length === 0) length = 1;\n        var norm = this.norm();\n\n        if (norm > 1e-7) return _setFromVector.call(_register, this.mult(length / norm));\n        else return _setXYZ.call(_register, length, 0, 0);\n    };\n\n    /**\n     * Make a separate copy of the Vector.\n     *\n     * @method clone\n     *\n     * @return {Vector}\n     */\n    Vector.prototype.clone = function clone() {\n        return new Vector(this);\n    };\n\n    /**\n     * True if and only if every value is 0 (or falsy)\n     *\n     * @method isZero\n     *\n     * @return {boolean}\n     */\n    Vector.prototype.isZero = function isZero() {\n        return !(this.x || this.y || this.z);\n    };\n\n    function _setXYZ(x,y,z) {\n        this.x = x;\n        this.y = y;\n        this.z = z;\n        return this;\n    }\n\n    function _setFromArray(v) {\n        return _setXYZ.call(this,v[0],v[1],v[2] || 0);\n    }\n\n    function _setFromVector(v) {\n        return _setXYZ.call(this, v.x, v.y, v.z);\n    }\n\n    function _setFromNumber(x) {\n        return _setXYZ.call(this,x,0,0);\n    }\n\n    /**\n     * Set this Vector to the values in the provided Array or Vector.\n     *\n     * @method set\n     * @param {object} v array, Vector, or number\n     * @return {Vector} this\n     */\n    Vector.prototype.set = function set(v) {\n        if (v instanceof Array)    return _setFromArray.call(this, v);\n        if (v instanceof Vector)   return _setFromVector.call(this, v);\n        if (typeof v === 'number') return _setFromNumber.call(this, v);\n    };\n\n    Vector.prototype.setXYZ = function(x,y,z) {\n        return _setXYZ.apply(this, arguments);\n    };\n\n    Vector.prototype.set1D = function(x) {\n        return _setFromNumber.call(this, x);\n    };\n\n    /**\n     * Put result of last internal register calculation in specified output vector.\n     *\n     * @method put\n     * @param {Vector} v destination vector\n     * @return {Vector} destination vector\n     */\n\n    Vector.prototype.put = function put(v) {\n        _setFromVector.call(v, _register);\n    };\n\n    /**\n     * Set this vector to [0,0,0]\n     *\n     * @method clear\n     */\n    Vector.prototype.clear = function clear() {\n        return _setXYZ.call(this,0,0,0);\n    };\n\n    /**\n     * Scale this Vector down to specified \"cap\" length.\n     *   If Vector shorter than cap, or cap is Infinity, do nothing.\n     *   Note: This sets the internal result register, so other references to that vector will change.\n     *\n     * @method cap\n     * @return {Vector} capped vector\n     */\n    Vector.prototype.cap = function cap(cap) {\n        if (cap === Infinity) return _setFromVector.call(_register, this);\n        var norm = this.norm();\n        if (norm > cap) return _setFromVector.call(_register, this.mult(cap / norm));\n        else return _setFromVector.call(_register, this);\n    };\n\n    /**\n     * Return projection of this Vector onto another.\n     *   Note: This sets the internal result register, so other references to that vector will change.\n     *\n     * @method project\n     * @param {Vector} n vector to project upon\n     * @return {Vector} projected vector\n     */\n    Vector.prototype.project = function project(n) {\n        return n.mult(this.dot(n));\n    };\n\n    /**\n     * Reflect this Vector across provided vector.\n     *   Note: This sets the internal result register, so other references to that vector will change.\n     *\n     * @method reflectAcross\n     * @param {Vector} n vector to reflect across\n     * @return {Vector} reflected vector\n     */\n    Vector.prototype.reflectAcross = function reflectAcross(n) {\n        n.normalize().put(n);\n        return _setFromVector(_register, this.sub(this.project(n).mult(2)));\n    };\n\n    /**\n     * Convert Vector to three-element array.\n     *\n     * @method get\n     * @return {array<number>} three-element array\n     */\n    Vector.prototype.get = function get() {\n        return [this.x, this.y, this.z];\n    };\n\n    Vector.prototype.get1D = function() {\n        return this.x;\n    };\n\n    module.exports = Vector;\n\n});\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n *\n * Owner: felix@famo.us\n * @license MPL 2.0\n * @copyright Famous Industries, Inc. 2014\n */\n\ndefine(function(require, exports, module) {\n    var PhysicsEngine = require('famous/physics/PhysicsEngine');\n    var Particle = require('famous/physics/bodies/Particle');\n    var Drag = require('famous/physics/forces/Drag');\n    var Spring = require('famous/physics/forces/Spring');\n\n    var EventHandler = require('famous/core/EventHandler');\n    var OptionsManager = require('famous/core/OptionsManager');\n    var ViewSequence = require('famous/core/ViewSequence');\n    var Scroller = require('famous/views/Scroller');\n    var Utility = require('famous/utilities/Utility');\n\n    var GenericSync = require('famous/inputs/GenericSync');\n    var ScrollSync = require('famous/inputs/ScrollSync');\n    var TouchSync = require('famous/inputs/TouchSync');\n    GenericSync.register({scroll : ScrollSync, touch : TouchSync});\n\n    /**\n     * Scrollview will lay out a collection of renderables sequentially in the specified direction, and will\n     * allow you to scroll through them with mousewheel or touch events.\n     * @class Scrollview\n     * @constructor\n     * @param {Options} [options] An object of configurable options.\n     * @param {Number} [options.direction=Utility.Direction.Y] Using the direction helper found in the famous Utility\n     * module, this option will lay out the Scrollview instance's renderables either horizontally\n     * (x) or vertically (y). Utility's direction is essentially either zero (X) or one (Y), so feel free\n     * to just use integers as well.\n     * @param {Boolean} [options.rails=true] When true, Scrollview's genericSync will only process input in it's primary access.\n     * @param {Number} [clipSize=undefined] The size of the area (in pixels) that Scrollview will display content in.\n     * @param {Number} [margin=undefined] The size of the area (in pixels) that Scrollview will process renderables' associated calculations in.\n     * @param {Number} [friction=0.001] Input resistance proportional to the velocity of the input.\n     * Controls the feel of the Scrollview instance at low velocities.\n     * @param {Number} [drag=0.0001] Input resistance proportional to the square of the velocity of the input.\n     * Affects Scrollview instance more prominently at high velocities.\n     * @param {Number} [edgeGrip=0.5] A coefficient for resistance against after-touch momentum.\n     * @param {Number} [egePeriod=300] Sets the period on the spring that handles the physics associated\n     * with hitting the end of a scrollview.\n     * @param {Number} [edgeDamp=1] Sets the damping on the spring that handles the physics associated\n     * with hitting the end of a scrollview.\n     * @param {Boolean} [paginated=false] A paginated scrollview will scroll through items discretely\n     * rather than continously.\n     * @param {Number} [pagePeriod=500] Sets the period on the spring that handles the physics associated\n     * with pagination.\n     * @param {Number} [pageDamp=0.8] Sets the damping on the spring that handles the physics associated\n     * with pagination.\n     * @param {Number} [pageStopSpeed=Infinity] The threshold for determining the amount of velocity\n     * required to trigger pagination. The lower the threshold, the easier it is to scroll continuosly.\n     * @param {Number} [pageSwitchSpeed=1] The threshold for momentum-based velocity pagination.\n     * @param {Number} [speedLimit=10] The highest scrolling speed you can reach.\n     */\n    function Scrollview(options) {\n        this.options = Object.create(Scrollview.DEFAULT_OPTIONS);\n        this._optionsManager = new OptionsManager(this.options);\n\n        this._node = null;\n\n        this._physicsEngine = new PhysicsEngine();\n        this._particle = new Particle();\n        this._physicsEngine.addBody(this._particle);\n\n        this.spring = new Spring({anchor: [0, 0, 0]});\n\n        this.drag = new Drag({forceFunction: Drag.FORCE_FUNCTIONS.QUADRATIC});\n        this.friction = new Drag({forceFunction: Drag.FORCE_FUNCTIONS.LINEAR});\n\n        this.sync = new GenericSync(['scroll', 'touch'], {direction : this.options.direction});\n\n        this._eventInput = new EventHandler();\n        this._eventOutput = new EventHandler();\n\n        this._eventInput.pipe(this.sync);\n        this.sync.pipe(this._eventInput);\n\n        EventHandler.setInputHandler(this, this._eventInput);\n        EventHandler.setOutputHandler(this, this._eventOutput);\n\n        this._touchCount = 0;\n        this._springState = 0;\n        this._onEdge = 0; // -1 for top, 1 for bottom\n        this._pageSpringPosition = 0;\n        this._edgeSpringPosition = 0;\n        this._touchVelocity = undefined;\n        this._earlyEnd = false;\n        this._needsPaginationCheck = false;\n\n        this._scroller = new Scroller();\n        this._scroller.positionFrom(this.getPosition.bind(this));\n\n        this.setOptions(options);\n\n        _bindEvents.call(this);\n    }\n\n    /** @const */\n    var TOLERANCE = 0.5;\n\n    Scrollview.DEFAULT_OPTIONS = {\n        direction: Utility.Direction.Y,\n        rails: true,\n        friction: 0.001,\n        drag: 0.0001,\n        edgeGrip: 0.5,\n        edgePeriod: 300,\n        edgeDamp: 1,\n        margin: 1000,       // mostly safe\n        paginated: false,\n        pagePeriod: 500,\n        pageDamp: 0.8,\n        pageStopSpeed: 10,\n        pageSwitchSpeed: 0.5,\n        speedLimit: 10,\n        groupScroll: false\n    };\n\n    /** @enum */\n    var SpringStates = {\n        NONE: 0,\n        EDGE: 1,\n        PAGE: 2\n    };\n\n    function _handleStart(event) {\n        this._touchCount = event.count;\n        if (event.count === undefined) this._touchCount = 1;\n\n        _detachAgents.call(this);\n        this.setVelocity(0);\n        this._touchVelocity = 0;\n        this._earlyEnd = false;\n    }\n\n    function _handleMove(event) {\n        var velocity = -event.velocity;\n        var delta = -event.delta;\n\n        if (this._onEdge && event.slip) {\n            if ((velocity < 0 && this._onEdge < 0) || (velocity > 0 && this._onEdge > 0)) {\n                if (!this._earlyEnd) {\n                    _handleEnd.call(this, event);\n                    this._earlyEnd = true;\n                }\n            }\n            else if (this._earlyEnd && (Math.abs(velocity) > Math.abs(this.getVelocity()))) {\n                _handleStart.call(this, event);\n            }\n        }\n        if (this._earlyEnd) return;\n        this._touchVelocity = velocity;\n\n        if (event.slip) this.setVelocity(velocity);\n        else this.setPosition(this.getPosition() + delta);\n    }\n\n    function _handleEnd(event) {\n        this._touchCount = event.count || 0;\n        if (!this._touchCount) {\n            _detachAgents.call(this);\n            if (this._onEdge) _setSpring.call(this, this._edgeSpringPosition, SpringStates.EDGE);\n            _attachAgents.call(this);\n            var velocity = -event.velocity;\n            var speedLimit = this.options.speedLimit;\n            if (event.slip) speedLimit *= this.options.edgeGrip;\n            if (velocity < -speedLimit) velocity = -speedLimit;\n            else if (velocity > speedLimit) velocity = speedLimit;\n            this.setVelocity(velocity);\n            this._touchVelocity = undefined;\n            this._needsPaginationCheck = true;\n        }\n    }\n\n    function _bindEvents() {\n        this._eventInput.bindThis(this);\n        this._eventInput.on('start', _handleStart);\n        this._eventInput.on('update', _handleMove);\n        this._eventInput.on('end', _handleEnd);\n\n        this._scroller.on('edgeHit', function(data) {\n            this._edgeSpringPosition = data.position;\n        }.bind(this));\n    }\n\n    function _attachAgents() {\n        if (this._springState) this._physicsEngine.attach([this.spring], this._particle);\n        else this._physicsEngine.attach([this.drag, this.friction], this._particle);\n    }\n\n    function _detachAgents() {\n        this._springState = SpringStates.NONE;\n        this._physicsEngine.detachAll();\n    }\n\n    function _nodeSizeForDirection(node) {\n        var direction = this.options.direction;\n        var nodeSize = (node.getSize() || this._scroller.getSize())[direction];\n        if (!nodeSize) nodeSize = this._scroller.getSize()[direction];\n        return nodeSize;\n    }\n\n    function _handleEdge(edgeDetected) {\n        if (!this._onEdge && edgeDetected) {\n            this.sync.setOptions({scale: this.options.edgeGrip});\n            if (!this._touchCount && this._springState !== SpringStates.EDGE) {\n                _setSpring.call(this, this._edgeSpringPosition, SpringStates.EDGE);\n            }\n        }\n        else if (this._onEdge && !edgeDetected) {\n            this.sync.setOptions({scale: 1});\n            if (this._springState && Math.abs(this.getVelocity()) < 0.001) {\n                // reset agents, detaching the spring\n                _detachAgents.call(this);\n                _attachAgents.call(this);\n            }\n        }\n        this._onEdge = edgeDetected;\n    }\n\n    function _handlePagination() {\n        if (!this._needsPaginationCheck) return;\n\n        if (this._touchCount) return;\n        if (this._springState === SpringStates.EDGE) return;\n\n        var velocity = this.getVelocity();\n        if (Math.abs(velocity) >= this.options.pageStopSpeed) return;\n\n        var position = this.getPosition();\n        var velocitySwitch = Math.abs(velocity) > this.options.pageSwitchSpeed;\n\n        // parameters to determine when to switch\n        var nodeSize = _nodeSizeForDirection.call(this, this._node);\n        var positionNext = position > 0.5 * nodeSize;\n        var velocityNext = velocity > 0;\n\n        if ((positionNext && !velocitySwitch) || (velocitySwitch && velocityNext)) this.goToNextPage();\n        else _setSpring.call(this, 0, SpringStates.PAGE);\n\n        this._needsPaginationCheck = false;\n    }\n\n    function _setSpring(position, springState) {\n        var springOptions;\n        if (springState === SpringStates.EDGE) {\n            this._edgeSpringPosition = position;\n            springOptions = {\n                anchor: [this._edgeSpringPosition, 0, 0],\n                period: this.options.edgePeriod,\n                dampingRatio: this.options.edgeDamp\n            };\n        }\n        else if (springState === SpringStates.PAGE) {\n            this._pageSpringPosition = position;\n            springOptions = {\n                anchor: [this._pageSpringPosition, 0, 0],\n                period: this.options.pagePeriod,\n                dampingRatio: this.options.pageDamp\n            };\n        }\n\n        this.spring.setOptions(springOptions);\n        if (springState && !this._springState) {\n            _detachAgents.call(this);\n            this._springState = springState;\n            _attachAgents.call(this);\n        }\n        this._springState = springState;\n    }\n\n    function _normalizeState() {\n        var position = this.getPosition();\n        var nodeSize = _nodeSizeForDirection.call(this, this._node);\n        var nextNode = this._node.getNext();\n\n        while (position > nodeSize + TOLERANCE && nextNode) {\n            _shiftOrigin.call(this, -nodeSize);\n            position -= nodeSize;\n            this._scroller.sequenceFrom(nextNode);\n            this._node = nextNode;\n            nextNode = this._node.getNext();\n            nodeSize = _nodeSizeForDirection.call(this, this._node);\n        }\n\n        var previousNode = this._node.getPrevious();\n        var previousNodeSize;\n\n        while (position < -TOLERANCE && previousNode) {\n            previousNodeSize = _nodeSizeForDirection.call(this, previousNode);\n            this._scroller.sequenceFrom(previousNode);\n            this._node = previousNode;\n            _shiftOrigin.call(this, previousNodeSize);\n            position += previousNodeSize;\n            previousNode = this._node.getPrevious();\n        }\n    }\n\n    function _shiftOrigin(amount) {\n        this._edgeSpringPosition += amount;\n        this._pageSpringPosition += amount;\n        this.setPosition(this.getPosition() + amount);\n        if (this._springState === SpringStates.EDGE) {\n            this.spring.setOptions({anchor: [this._edgeSpringPosition, 0, 0]});\n        }\n        else if (this._springState === SpringStates.PAGE) {\n            this.spring.setOptions({anchor: [this._pageSpringPosition, 0, 0]});\n        }\n    }\n\n    Scrollview.prototype.outputFrom = function outputFrom() {\n        return this._scroller.outputFrom.apply(this._scroller, arguments);\n    };\n\n    /**\n     * Returns the position associated with the Scrollview instance's current node\n     *  (generally the node currently at the top).\n     * @method getPosition\n     * @param {number} [node] If specified, returns the position of the node at that index in the\n     * Scrollview instance's currently managed collection.\n     * @return {number} The position of either the specified node, or the Scrollview's current Node,\n     * in pixels translated.\n     */\n    Scrollview.prototype.getPosition = function getPosition() {\n        return this._particle.getPosition1D();\n    };\n\n    /**\n     * Sets position of the physics particle that controls Scrollview instance's \"position\"\n     * @method setPosition\n     * @param {number} x The amount of pixels you want your scrollview to progress by.\n     */\n    Scrollview.prototype.setPosition = function setPosition(x) {\n        this._particle.setPosition1D(x);\n    };\n\n    /**\n     * Returns the Scrollview instance's velocity.\n     * @method getVelocity\n     * @return {Number} The velocity.\n     */\n\n    Scrollview.prototype.getVelocity = function getVelocity() {\n        return this._touchCount ? this._touchVelocity : this._particle.getVelocity1D();\n    };\n\n    /**\n     * Sets the Scrollview instance's velocity. Until affected by input or another call of setVelocity\n     *  the Scrollview instance will scroll at the passed-in velocity.\n     * @method setVelocity\n     * @param {number} v TThe magnitude of the velocity.\n     */\n    Scrollview.prototype.setVelocity = function setVelocity(v) {\n        this._particle.setVelocity1D(v);\n    };\n\n    /**\n     * Patches the Scrollview instance's options with the passed-in ones.\n     * @method setOptions\n     * @param {Options} options An object of configurable options for the Scrollview instance.\n     */\n    Scrollview.prototype.setOptions = function setOptions(options) {\n        if (options) {\n            if (options.direction !== undefined) {\n                if (options.direction === 'x') options.direction = Utility.Direction.X;\n                else if (options.direction === 'y') options.direction = Utility.Direction.Y;\n            }\n\n            this._scroller.setOptions(options);\n            this._optionsManager.setOptions(options);\n        }\n\n        this.drag.setOptions({strength: this.options.drag});\n        this.friction.setOptions({strength: this.options.friction});\n\n        this.spring.setOptions({\n            period: this.options.edgePeriod,\n            dampingRatio: this.options.edgeDamp\n        });\n\n        this.sync.setOptions({\n            rails: this.options.rails,\n            direction: (this.options.direction === Utility.Direction.X) ? GenericSync.DIRECTION_X : GenericSync.DIRECTION_Y\n        });\n    };\n\n    /**\n     * goToPreviousPage paginates your Scrollview instance backwards by one item.\n     * @method goToPreviousPage\n     * @return {ViewSequence} The previous node.\n     */\n    Scrollview.prototype.goToPreviousPage = function goToPreviousPage() {\n        if (!this._node) return null;\n        var previousNode = this._node.getPrevious();\n        if (previousNode) {\n            var currentPosition = this.getPosition();\n            var previousNodeSize = _nodeSizeForDirection.call(this, previousNode);\n            this._scroller.sequenceFrom(previousNode);\n            this._node = previousNode;\n            var previousSpringPosition = (currentPosition < TOLERANCE) ? -previousNodeSize : 0;\n            _setSpring.call(this, previousSpringPosition, SpringStates.PAGE);\n            _shiftOrigin.call(this, previousNodeSize);\n        }\n        this._eventOutput.emit('pageChange', {direction: -1});\n        return previousNode;\n    };\n\n    /**\n     * goToNextPage paginates your Scrollview instance forwards by one item.\n     * @method goToNextPage\n     * @return {ViewSequence} The next node.\n     */\n    Scrollview.prototype.goToNextPage = function goToNextPage() {\n        if (!this._node) return null;\n        var nextNode = this._node.getNext();\n        if (nextNode) {\n            var currentPosition = this.getPosition();\n            var currentNodeSize = _nodeSizeForDirection.call(this, this._node);\n            var nextNodeSize = _nodeSizeForDirection.call(this, nextNode);\n            this._scroller.sequenceFrom(nextNode);\n            this._node = nextNode;\n            var nextSpringPosition = (currentPosition > currentNodeSize - TOLERANCE) ? currentNodeSize + nextNodeSize : currentNodeSize;\n            _setSpring.call(this, nextSpringPosition, SpringStates.PAGE);\n            _shiftOrigin.call(this, -currentNodeSize);\n        }\n        this._eventOutput.emit('pageChange', {direction: 1});\n        return nextNode;\n    };\n\n    /**\n     * Sets the collection of renderables under the Scrollview instance's control, by\n     *  setting its current node to the passed in ViewSequence. If you\n     *  pass in an array, the Scrollview instance will set its node as a ViewSequence instantiated with\n     *  the passed-in array.\n     *\n     * @method sequenceFrom\n     * @param {Array|ViewSequence} node Either an array of renderables or a Famous viewSequence.\n     */\n    Scrollview.prototype.sequenceFrom = function sequenceFrom(node) {\n        if (node instanceof Array) node = new ViewSequence({array: node});\n        this._node = node;\n        return this._scroller.sequenceFrom(node);\n    };\n\n    /**\n     * Returns the width and the height of the Scrollview instance.\n     *\n     * @method getSize\n     * @return {Array} A two value array of the Scrollview instance's current width and height (in that order).\n     */\n    Scrollview.prototype.getSize = function getSize() {\n        return this._scroller.getSize.apply(this._scroller, arguments);\n    };\n\n    /**\n     * Generate a render spec from the contents of this component.\n     *\n     * @private\n     * @method render\n     * @return {number} Render spec for this component\n     */\n    Scrollview.prototype.render = function render() {\n        if (!this._node) return null;\n\n        _normalizeState.call(this);\n        _handleEdge.call(this, this._scroller.onEdge());\n        if (this.options.paginated) _handlePagination.call(this);\n\n        return this._scroller.render();\n    };\n\n    module.exports = Scrollview;\n});\n","/**\n * Copyright (c) 2014 Petka Antonov\n * \n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:</p>\n * \n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n * \n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n * \n */\n\"use strict\";\nmodule.exports = function(Promise) {\nvar TypeError = require('./errors.js').TypeError;\n\nfunction apiRejection(msg) {\n    var error = new TypeError(msg);\n    var ret = Promise.rejected(error);\n    var parent = ret._peekContext();\n    if (parent != null) {\n        parent._attachExtraTrace(error);\n    }\n    return ret;\n}\n\nreturn apiRejection;\n};\n","AppDispatcher = require 'dispatchers/AppDispatcher'\nConstants = require('constants/PeggConstants').actions\n\nMenuActions =\n  selectMenuItem: (pageID) ->\n    AppDispatcher.handleViewAction\n      actionType: Constants.MENU_SELECT\n      pageID: pageID\n\nmodule.exports = MenuActions\n","AppDispatcher = require 'dispatchers/AppDispatcher'\nConstants = require('constants/PeggConstants')\n\nPlayActions =\n  load: (game) ->\n    AppDispatcher.handleViewAction\n      actionType: Constants.actions.GAME_FETCH\n      gameID: game\n\n  answer: (choice) ->\n    AppDispatcher.handleViewAction\n      actionType: Constants.actions.CARD_ANSWER\n      choice: choice\n\n  rate: (rating) ->\n    AppDispatcher.handleViewAction\n      actionType: Constants.actions.CARD_RATE\n      rating: rating\n\n  pick: (card) ->\n    AppDispatcher.handleViewAction\n      actionType: Constants.actions.CARD_PICK\n      cardID: card\n\n  continue: () ->\n    AppDispatcher.handleViewAction\n      actionType: Constants.actions.PLAY_CONTINUE\n\nmodule.exports = PlayActions\n","AppDispatcher = require 'dispatchers/AppDispatcher'\nConstants = require 'constants/PeggConstants'\n\nUserActions =\n  login: ->\n    AppDispatcher.handleViewAction\n      actionType: Constants.actions.USER_LOGIN\n\n  logout: ->\n    AppDispatcher.handleViewAction\n      actionType: Constants.actions.USER_LOGOUT\n\n  subscribe: (email) ->\n    AppDispatcher.handleViewAction\n      actionType: Constants.actions.SUBSCRIBER_SUBMIT\n      email: email\n\nmodule.exports = UserActions\n","EventEmitter = require 'famous/core/EventEmitter'\nConstants = require 'constants/PeggConstants'\nAppDispatcher = require 'dispatchers/AppDispatcher'\nParse = require 'Parse'\n\nclass UserStore extends EventEmitter\n  _subscribed: false\n\n  login: ->\n    Parse.FacebookUtils.logIn null,\n      success: (user) =>\n        FB.api(\"/me\", \"get\", (res) =>\n          user.save\n            avatar_url: \"https://graph.facebook.com/#{user.get('authData').facebook.id}/picture\"\n            first_name: res.first_name\n            last_name: res.last_name\n            gender: res.gender\n          ,\n            wait: false\n            error: ->\n              debugger\n            success: =>\n              @emit Constants.stores.CHANGE\n        )\n        unless user.existed()\n          console.log 'User signed up and logged in through Facebook!'\n        else\n          console.log 'User logged in through Facebook!'\n\n      error: (user, error) =>\n        console.log \"UserStore.login Error: \" + user + \" - \" + error\n        @emit Constants.stores.CHANGE\n        Parse.User.logOut()\n\n  subscribe: (email) ->\n    Subscriber = Parse.Object.extend(\"Subscriber\")\n    subscriber = new Subscriber()\n    subscriber.set \"email\", email\n    subscriber.save null,\n      success: (subscriber) =>\n        @_subscribed = true\n        @emit Constants.stores.SUBSCRIBE_PASS\n        console.log \"Subscriber created with objectId: \" + subscriber.id\n        return\n\n      error: (subscriber, error) ->\n        @_subscribed = false\n        @emit Constants.stores.SUBSCRIBE_FAIL\n        console.log \"Failed to create subscriber, with error code: \" + error.description\n        return\n\n\n  logout: ->\n    Parse.User.logOut()\n    @emit Constants.stores.CHANGE\n\n  getUser: ->\n    Parse.User.current()\n\n  getName: (part) ->\n    if Parse.User.current()\n      return Parse.User.current().get(\"#{part}_name\")\n\n  getAvatar: (type)->\n    if Parse.User.current()\n      return Parse.User.current().get('avatar_url') + \"?type=#{type}\"\n\n  getLoggedIn: ->\n    if Parse.User.current()\n      return true\n    else\n      return false\n\n  getSubscriptionStatus: ->\n    return @_subscribed\n\nuser = new UserStore\n\n\n# Register callback with AppDispatcher to be notified of events\nAppDispatcher.register (payload) ->\n  action = payload.action\n\n  # Pay attention to events relevant to PlayStore\n  switch action.actionType\n    when Constants.actions.USER_LOGIN\n      user.login()\n    when Constants.actions.USER_LOGOUT\n      user.logout()\n    when Constants.actions.SUBSCRIBER_SUBMIT\n      user.subscribe action.email\n\nmodule.exports = user\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n *\n * Owner: mark@famo.us\n * @license MPL 2.0\n * @copyright Famous Industries, Inc. 2014\n */\n\ndefine(function(require, exports, module) {\n    var RenderNode = require('./RenderNode');\n    var EventHandler = require('./EventHandler');\n    var ElementAllocator = require('./ElementAllocator');\n    var Transform = require('./Transform');\n    var Transitionable = require('famous/transitions/Transitionable');\n\n    var _originZeroZero = [0, 0];\n\n    function _getElementSize(element) {\n        return [element.clientWidth, element.clientHeight];\n    }\n\n    /**\n     * The top-level container for a Famous-renderable piece of the document.\n     *   It is directly updated by the process-wide Engine object, and manages one\n     *   render tree root, which can contain other renderables.\n     *\n     * @class Context\n     * @constructor\n     * @private\n     * @param {Node} container Element in which content will be inserted\n     */\n    function Context(container) {\n        this.container = container;\n        this._allocator = new ElementAllocator(container);\n\n        this._node = new RenderNode();\n        this._eventOutput = new EventHandler();\n        this._size = _getElementSize(this.container);\n\n        this._perspectiveState = new Transitionable(0);\n        this._perspective = undefined;\n\n        this._nodeContext = {\n            allocator: this._allocator,\n            transform: Transform.identity,\n            opacity: 1,\n            origin: _originZeroZero,\n            align: null,\n            size: this._size\n        };\n\n        this._eventOutput.on('resize', function() {\n            this.setSize(_getElementSize(this.container));\n        }.bind(this));\n\n    }\n\n    // Note: Unused\n    Context.prototype.getAllocator = function getAllocator() {\n        return this._allocator;\n    };\n\n    /**\n     * Add renderables to this Context's render tree.\n     *\n     * @method add\n     *\n     * @param {Object} obj renderable object\n     * @return {RenderNode} RenderNode wrapping this object, if not already a RenderNode\n     */\n    Context.prototype.add = function add(obj) {\n        return this._node.add(obj);\n    };\n\n    /**\n     * Move this Context to another containing document element.\n     *\n     * @method migrate\n     *\n     * @param {Node} container Element to which content will be migrated\n     */\n    Context.prototype.migrate = function migrate(container) {\n        if (container === this.container) return;\n        this.container = container;\n        this._allocator.migrate(container);\n    };\n\n    /**\n     * Gets viewport size for Context.\n     *\n     * @method getSize\n     *\n     * @return {Array.Number} viewport size as [width, height]\n     */\n    Context.prototype.getSize = function getSize() {\n        return this._size;\n    };\n\n    /**\n     * Sets viewport size for Context.\n     *\n     * @method setSize\n     *\n     * @param {Array.Number} size [width, height].  If unspecified, use size of root document element.\n     */\n    Context.prototype.setSize = function setSize(size) {\n        if (!size) size = _getElementSize(this.container);\n        this._size[0] = size[0];\n        this._size[1] = size[1];\n    };\n\n    /**\n     * Commit this Context's content changes to the document.\n     *\n     * @private\n     * @method update\n     * @param {Object} contextParameters engine commit specification\n     */\n    Context.prototype.update = function update(contextParameters) {\n        if (contextParameters) {\n            if (contextParameters.transform) this._nodeContext.transform = contextParameters.transform;\n            if (contextParameters.opacity) this._nodeContext.opacity = contextParameters.opacity;\n            if (contextParameters.origin) this._nodeContext.origin = contextParameters.origin;\n            if (contextParameters.align) this._nodeContext.align = contextParameters.align;\n            if (contextParameters.size) this._nodeContext.size = contextParameters.size;\n        }\n        var perspective = this._perspectiveState.get();\n        if (perspective !== this._perspective) {\n            this.container.style.perspective = perspective ? perspective.toFixed() + 'px' : '';\n            this.container.style.webkitPerspective = perspective ? perspective.toFixed() : '';\n            this._perspective = perspective;\n        }\n\n        this._node.commit(this._nodeContext);\n    };\n\n    /**\n     * Get current perspective of this context in pixels.\n     *\n     * @method getPerspective\n     * @return {Number} depth perspective in pixels\n     */\n    Context.prototype.getPerspective = function getPerspective() {\n        return this._perspectiveState.get();\n    };\n\n    /**\n     * Set current perspective of this context in pixels.\n     *\n     * @method setPerspective\n     * @param {Number} perspective in pixels\n     * @param {Object} [transition] Transitionable object for applying the change\n     * @param {function(Object)} callback function called on completion of transition\n     */\n    Context.prototype.setPerspective = function setPerspective(perspective, transition, callback) {\n        return this._perspectiveState.set(perspective, transition, callback);\n    };\n\n    /**\n     * Trigger an event, sending to all downstream handlers\n     *   listening for provided 'type' key.\n     *\n     * @method emit\n     *\n     * @param {string} type event type key (for example, 'click')\n     * @param {Object} event event data\n     * @return {EventHandler} this\n     */\n    Context.prototype.emit = function emit(type, event) {\n        return this._eventOutput.emit(type, event);\n    };\n\n    /**\n     * Bind a callback function to an event type handled by this object.\n     *\n     * @method \"on\"\n     *\n     * @param {string} type event type key (for example, 'click')\n     * @param {function(string, Object)} handler callback\n     * @return {EventHandler} this\n     */\n    Context.prototype.on = function on(type, handler) {\n        return this._eventOutput.on(type, handler);\n    };\n\n    /**\n     * Unbind an event by type and handler.\n     *   This undoes the work of \"on\".\n     *\n     * @method removeListener\n     *\n     * @param {string} type event type key (for example, 'click')\n     * @param {function} handler function object to remove\n     * @return {EventHandler} internal event handler object (for chaining)\n     */\n    Context.prototype.removeListener = function removeListener(type, handler) {\n        return this._eventOutput.removeListener(type, handler);\n    };\n\n    /**\n     * Add event handler object to set of downstream handlers.\n     *\n     * @method pipe\n     *\n     * @param {EventHandler} target event handler target object\n     * @return {EventHandler} passed event handler\n     */\n    Context.prototype.pipe = function pipe(target) {\n        return this._eventOutput.pipe(target);\n    };\n\n    /**\n     * Remove handler object from set of downstream handlers.\n     *   Undoes work of \"pipe\".\n     *\n     * @method unpipe\n     *\n     * @param {EventHandler} target target handler object\n     * @return {EventHandler} provided target\n     */\n    Context.prototype.unpipe = function unpipe(target) {\n        return this._eventOutput.unpipe(target);\n    };\n\n    module.exports = Context;\n});\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n *\n * Owner: david@famo.us\n * @license MPL 2.0\n * @copyright Famous Industries, Inc. 2014\n */\n\ndefine(function(require, exports, module) {\n    var Transitionable = require('./Transitionable');\n    var Transform = require('famous/core/Transform');\n    var Utility = require('famous/utilities/Utility');\n\n    /**\n     * A class for transitioning the state of a Transform by transitioning\n     * its translate, scale, skew and rotate components independently.\n     *\n     * @class TransitionableTransform\n     * @constructor\n     *\n     * @param [transform=Transform.identity] {Transform} The initial transform state\n     */\n    function TransitionableTransform(transform) {\n        this._final = Transform.identity.slice();\n        this.translate = new Transitionable([0, 0, 0]);\n        this.rotate = new Transitionable([0, 0, 0]);\n        this.skew = new Transitionable([0, 0, 0]);\n        this.scale = new Transitionable([1, 1, 1]);\n\n        if (transform) this.set(transform);\n    }\n\n    function _build() {\n        return Transform.build({\n            translate: this.translate.get(),\n            rotate: this.rotate.get(),\n            skew: this.skew.get(),\n            scale: this.scale.get()\n        });\n    }\n\n    /**\n     * An optimized way of setting only the translation component of a Transform\n     *\n     * @method setTranslate\n     * @chainable\n     *\n     * @param translate {Array}     New translation state\n     * @param [transition] {Object} Transition definition\n     * @param [callback] {Function} Callback\n     * @return {TransitionableTransform}\n     */\n    TransitionableTransform.prototype.setTranslate = function setTranslate(translate, transition, callback) {\n        this.translate.set(translate, transition, callback);\n        this._final = this._final.slice();\n        this._final[12] = translate[0];\n        this._final[13] = translate[1];\n        if (translate[2] !== undefined) this._final[14] = translate[2];\n        return this;\n    };\n\n    /**\n     * An optimized way of setting only the scale component of a Transform\n     *\n     * @method setTranslate\n     * @chainable\n     *\n     * @param scale {Array}         New scale state\n     * @param [transition] {Object} Transition definition\n     * @param [callback] {Function} Callback\n     * @return {TransitionableTransform}\n     */\n    TransitionableTransform.prototype.setScale = function setScale(scale, transition, callback) {\n        this.scale.set(scale, transition, callback);\n        this._final = this._final.slice();\n        this._final[0] = scale[0];\n        this._final[5] = scale[1];\n        if (scale[2] !== undefined) this._final[10] = scale[2];\n        return this;\n    };\n\n    /**\n     * An optimized way of setting only the rotational component of a Transform\n     *\n     * @method setTranslate\n     * @chainable\n     *\n     * @param eulerAngles {Array}   Euler angles for new rotation state\n     * @param [transition] {Object} Transition definition\n     * @param [callback] {Function} Callback\n     * @return {TransitionableTransform}\n     */\n    TransitionableTransform.prototype.setRotate = function setRotate(eulerAngles, transition, callback) {\n        this.rotate.set(eulerAngles, transition, callback);\n        this._final = _build.call(this);\n        this._final = Transform.build({\n            translate: this.translate.get(),\n            rotate: eulerAngles,\n            scale: this.scale.get(),\n            skew: this.skew.get()\n        });\n        return this;\n    };\n\n    /**\n     * An optimized way of setting only the skew component of a Transform\n     *\n     * @method setTranslate\n     * @chainable\n     *\n     * @param skewAngles {Array}    New skew state\n     * @param [transition] {Object} Transition definition\n     * @param [callback] {Function} Callback\n     * @return {TransitionableTransform}\n     */\n    TransitionableTransform.prototype.setSkew = function setSkew(skewAngles, transition, callback) {\n        this.skew.set(skewAngles, transition, callback);\n        this._final = Transform.build({\n            translate: this.translate.get(),\n            rotate: this.rotate.get(),\n            scale: this.scale.get(),\n            skew: skewAngles\n        });\n        return this;\n    };\n\n    /**\n     * Setter for a TransitionableTransform with optional parameters to transition\n     * between Transforms\n     *\n     * @method setTranslate\n     * @chainable\n     *\n     * @param transform {Array}     New transform state\n     * @param [transition] {Object} Transition definition\n     * @param [callback] {Function} Callback\n     * @return {TransitionableTransform}\n     */\n    TransitionableTransform.prototype.set = function set(transform, transition, callback) {\n        this._final = transform;\n        var components = Transform.interpret(transform);\n\n        var _callback = callback ? Utility.after(4, callback) : null;\n        this.translate.set(components.translate, transition, _callback);\n        this.rotate.set(components.rotate, transition, _callback);\n        this.skew.set(components.skew, transition, _callback);\n        this.scale.set(components.scale, transition, _callback);\n        return this;\n    };\n\n    /**\n     * Sets the default transition to use for transitioning betwen Transform states\n     *\n     * @method setDefaultTransition\n     *\n     * @param transition {Object} Transition definition\n     */\n    TransitionableTransform.prototype.setDefaultTransition = function setDefaultTransition(transition) {\n        this.translate.setDefault(transition);\n        this.rotate.setDefault(transition);\n        this.skew.setDefault(transition);\n        this.scale.setDefault(transition);\n    };\n\n    /**\n     * Getter. Returns the current state of the Transform\n     *\n     * @method get\n     *\n     * @return {Transform}\n     */\n    TransitionableTransform.prototype.get = function get() {\n        if (this.isActive()) {\n            return _build.call(this);\n        }\n        else return this._final;\n    };\n\n    /**\n     * Get the destination state of the Transform\n     *\n     * @method getFinal\n     *\n     * @return Transform {Transform}\n     */\n    TransitionableTransform.prototype.getFinal = function getFinal() {\n        return this._final;\n    };\n\n    /**\n     * Determine if the TransitionalTransform is currently transitioning\n     *\n     * @method isActive\n     *\n     * @return {Boolean}\n     */\n    TransitionableTransform.prototype.isActive = function isActive() {\n        return this.translate.isActive() || this.rotate.isActive() || this.scale.isActive() || this.skew.isActive();\n    };\n\n    /**\n     * Halts the transition\n     *\n     * @method halt\n     */\n    TransitionableTransform.prototype.halt = function halt() {\n        this._final = this.get();\n        this.translate.halt();\n        this.rotate.halt();\n        this.skew.halt();\n        this.scale.halt();\n    };\n\n    module.exports = TransitionableTransform;\n});\n","require './scss/peggbox'\n\nView = require 'famous/core/View'\nTransform = require 'famous/core/Transform'\nSurface = require 'famous/core/Surface'\nStateModifier = require 'famous/modifiers/StateModifier'\n\nclass ListItemView extends View\n  @DEFAULT_OPTIONS:\n    itemID: null\n    message: null\n    pic: null\n    height: 100\n\n  constructor: (options) ->\n    super\n    @init()\n\n  init: ->\n    @build()\n\n  build: ->\n\n    #pic = @options.get \"pic\"\n    message = @options.get \"message\"\n\n    item = new Surface\n      size: [window.innerWidth, @options.height]\n      content: message\n      properties:\n        width: window.innerWidth\n      classes: ['peggbox__item']\n\n    item.pipe @_eventOutput\n\n    item.on 'click', =>\n      @_eventOutput.emit 'selectItem', @\n\n    item.on 'mousedown', (options) =>\n      @_eventOutput.emit 'scroll', @\n\n    itemModifier = new StateModifier\n\n    @add(itemModifier).add item\n\nmodule.exports = ListItemView\n","module.exports =\n  public: require 'config/public'\n","// style-loader: Adds some css to the DOM by adding a <style> tag\nvar dispose = require(\"!/Users/auggernaut/Github/pegg/node_modules/style-loader/addStyle.js\")\n\t// The css code:\n\t(require(\"!!/Users/auggernaut/Github/pegg/node_modules/sass-loader/index.js?outputStyle=expanded&includePaths[]=./bower_components/!/Users/auggernaut/Github/pegg/src/app/views/scss/peggbox.scss\"))\nif(module.hot) {\n\tmodule.hot.accept();\n\tmodule.hot.dispose(dispose);\n}","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n *\n * Owner: mark@famo.us\n * @license MPL 2.0\n * @copyright Famous Industries, Inc. 2014\n */\n\ndefine(function(require, exports, module) {\n\n    /**\n     * Helper object used to iterate through items sequentially. Used in\n     *   views that deal with layout.  A ViewSequence object conceptually points\n     *   to a node in a linked list.\n     *\n     * @class ViewSequence\n     *\n     * @constructor\n     * @param {Object|Array} options Options object, or content array.\n     * @param {Number} [options.index] starting index.\n     * @param {Number} [options.array] Array of elements to populate the ViewSequence\n     * @param {Object} [options._] Optional backing store (internal\n     * @param {Boolean} [options.loop] Whether to wrap when accessing elements just past the end\n     *   (or beginning) of the sequence.\n     */\n    function ViewSequence(options) {\n        if (!options) options = [];\n        if (options instanceof Array) options = {array: options};\n\n        this._ = null;\n        this.index = options.index || 0;\n\n        if (options.array) this._ = new (this.constructor.Backing)(options.array);\n        else if (options._) this._ = options._;\n\n        if (this.index === this._.firstIndex) this._.firstNode = this;\n        if (this.index === this._.firstIndex + this._.array.length - 1) this._.lastNode = this;\n\n        if (options.loop !== undefined) this._.loop = options.loop;\n\n        this._previousNode = null;\n        this._nextNode = null;\n    }\n\n    // constructor for internal storage\n    ViewSequence.Backing = function Backing(array) {\n        this.array = array;\n        this.firstIndex = 0;\n        this.loop = false;\n        this.firstNode = null;\n        this.lastNode = null;\n    };\n\n    // Get value \"i\" slots away from the first index.\n    ViewSequence.Backing.prototype.getValue = function getValue(i) {\n        var _i = i - this.firstIndex;\n        if (_i < 0 || _i >= this.array.length) return null;\n        return this.array[_i];\n    };\n\n    // Set value \"i\" slots away from the first index.\n    ViewSequence.Backing.prototype.setValue = function setValue(i, value) {\n        this.array[i - this.firstIndex] = value;\n    };\n\n    // After splicing into the backing store, restore the indexes of each node correctly.\n    ViewSequence.Backing.prototype.reindex = function reindex(start, removeCount, insertCount) {\n        if (!this.array[0]) return;\n\n        var i = 0;\n        var index = this.firstIndex;\n        var indexShiftAmount = insertCount - removeCount;\n        var node = this.firstNode;\n\n        // find node to begin\n        while (index < start - 1) {\n            node = node.getNext();\n            index++;\n        }\n        // skip removed nodes\n        var spliceStartNode = node;\n        for (i = 0; i < removeCount; i++) {\n            node = node.getNext();\n            if (node) node._previousNode = spliceStartNode;\n        }\n        var spliceResumeNode = node ? node.getNext() : null;\n        // generate nodes for inserted items\n        spliceStartNode._nextNode = null;\n        node = spliceStartNode;\n        for (i = 0; i < insertCount; i++) node = node.getNext();\n        index += insertCount;\n        // resume the chain\n        if (node !== spliceResumeNode) {\n            node._nextNode = spliceResumeNode;\n            if (spliceResumeNode) spliceResumeNode._previousNode = node;\n        }\n        if (spliceResumeNode) {\n            node = spliceResumeNode;\n            index++;\n            while (node && index < this.array.length + this.firstIndex) {\n                if (node._nextNode) node.index += indexShiftAmount;\n                else node.index = index;\n                node = node.getNext();\n                index++;\n            }\n        }\n    };\n\n    /**\n     * Return ViewSequence node previous to this node in the list, respecting looping if applied.\n     *\n     * @method getPrevious\n     * @return {ViewSequence} previous node.\n     */\n    ViewSequence.prototype.getPrevious = function getPrevious() {\n        if (this.index === this._.firstIndex) {\n            if (this._.loop) {\n                this._previousNode = this._.lastNode || new (this.constructor)({_: this._, index: this._.firstIndex + this._.array.length - 1});\n                this._previousNode._nextNode = this;\n            }\n            else {\n                this._previousNode = null;\n            }\n        }\n        else if (!this._previousNode) {\n            this._previousNode = new (this.constructor)({_: this._, index: this.index - 1});\n            this._previousNode._nextNode = this;\n        }\n        return this._previousNode;\n    };\n\n    /**\n     * Return ViewSequence node next after this node in the list, respecting looping if applied.\n     *\n     * @method getNext\n     * @return {ViewSequence} previous node.\n     */\n    ViewSequence.prototype.getNext = function getNext() {\n        if (this.index === this._.firstIndex + this._.array.length - 1) {\n            if (this._.loop) {\n                this._nextNode = this._.firstNode || new (this.constructor)({_: this._, index: this._.firstIndex});\n                this._nextNode._previousNode = this;\n            }\n            else {\n                this._nextNode = null;\n            }\n        }\n        else if (!this._nextNode) {\n            this._nextNode = new (this.constructor)({_: this._, index: this.index + 1});\n            this._nextNode._previousNode = this;\n        }\n        return this._nextNode;\n    };\n\n    /**\n     * Return index of this ViewSequence node.\n     *\n     * @method getIndex\n     * @return {Number} index\n     */\n    ViewSequence.prototype.getIndex = function getIndex() {\n        return this.index;\n    };\n\n    /**\n     * Return printable version of this ViewSequence node.\n     *\n     * @method toString\n     * @return {string} this index as a string\n     */\n    ViewSequence.prototype.toString = function toString() {\n        return '' + this.index;\n    };\n\n    /**\n     * Add one or more objects to the beginning of the sequence.\n     *\n     * @method unshift\n     * @param {...Object} value arguments array of objects\n     */\n    ViewSequence.prototype.unshift = function unshift(value) {\n        this._.array.unshift.apply(this._.array, arguments);\n        this._.firstIndex -= arguments.length;\n    };\n\n    /**\n     * Add one or more objects to the end of the sequence.\n     *\n     * @method push\n     * @param {...Object} value arguments array of objects\n     */\n    ViewSequence.prototype.push = function push(value) {\n        this._.array.push.apply(this._.array, arguments);\n    };\n\n    /**\n     * Remove objects from the sequence\n     *\n     * @method splice\n     * @param {Number} index starting index for removal\n     * @param {Number} howMany how many elements to remove\n     * @param {...Object} value arguments array of objects\n     */\n    ViewSequence.prototype.splice = function splice(index, howMany) {\n        var values = Array.prototype.slice.call(arguments, 2);\n        this._.array.splice.apply(this._.array, [index - this._.firstIndex, howMany].concat(values));\n        this._.reindex(index, howMany, values.length);\n    };\n\n    /**\n     * Exchange this element's sequence position with another's.\n     *\n     * @method swap\n     * @param {ViewSequence} other element to swap with.\n     */\n    ViewSequence.prototype.swap = function swap(other) {\n        var otherValue = other.get();\n        var myValue = this.get();\n        this._.setValue(this.index, otherValue);\n        this._.setValue(other.index, myValue);\n\n        var myPrevious = this._previousNode;\n        var myNext = this._nextNode;\n        var myIndex = this.index;\n        var otherPrevious = other._previousNode;\n        var otherNext = other._nextNode;\n        var otherIndex = other.index;\n\n        this.index = otherIndex;\n        this._previousNode = (otherPrevious === this) ? other : otherPrevious;\n        if (this._previousNode) this._previousNode._nextNode = this;\n        this._nextNode = (otherNext === this) ? other : otherNext;\n        if (this._nextNode) this._nextNode._previousNode = this;\n\n        other.index = myIndex;\n        other._previousNode = (myPrevious === other) ? this : myPrevious;\n        if (other._previousNode) other._previousNode._nextNode = other;\n        other._nextNode = (myNext === other) ? this : myNext;\n        if (other._nextNode) other._nextNode._previousNode = other;\n\n        if (this.index === this._.firstIndex) this._.firstNode = this;\n        else if (this.index === this._.firstIndex + this._.array.length - 1) this._.lastNode = this;\n        if (other.index === this._.firstIndex) this._.firstNode = other;\n        else if (other.index === this._.firstIndex + this._.array.length - 1) this._.lastNode = other;\n    };\n\n   /**\n     * Return value of this ViewSequence node.\n     *\n     * @method get\n     * @return {Object} value of thiss\n     */\n    ViewSequence.prototype.get = function get() {\n        return this._.getValue(this.index);\n    };\n\n   /**\n     * Call getSize() on the contained View.\n     *\n     * @method getSize\n     * @return {Array.Number} [width, height]\n     */\n    ViewSequence.prototype.getSize = function getSize() {\n        var target = this.get();\n        return target ? target.getSize() : null;\n    };\n\n    /**\n     * Generate a render spec from the contents of this component.\n     * Specifically, this will render the value at the current index.\n     * @private\n     * @method render\n     * @return {number} Render spec for this component\n     */\n    ViewSequence.prototype.render = function render() {\n        var target = this.get();\n        return target ? target.render.apply(target, arguments) : null;\n    };\n\n    module.exports = ViewSequence;\n});\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n *\n * @license MPL 2.0\n * @copyright Famous Industries, Inc. 2014\n */\ndefine(function(require, exports, module) {\n    var EventHandler = require('famous/core/EventHandler');\n\n    /**\n     * The Physics Engine is responsible for mediating Bodies and their\n     * interaction with forces and constraints. The Physics Engine handles the\n     * logic of adding and removing bodies, updating their state of the over\n     * time.\n     *\n     * @class PhysicsEngine\n     * @constructor\n     * @param options {Object} options\n     */\n    function PhysicsEngine(options) {\n        this.options = Object.create(PhysicsEngine.DEFAULT_OPTIONS);\n        if (options) this.setOptions(options);\n\n        this._particles      = [];   //list of managed particles\n        this._bodies         = [];   //list of managed bodies\n        this._agents         = {};   //hash of managed agents\n        this._forces         = [];   //list of IDs of agents that are forces\n        this._constraints    = [];   //list of IDs of agents that are constraints\n\n        this._buffer         = 0.0;\n        this._prevTime       = now();\n        this._isSleeping     = false;\n        this._eventHandler   = null;\n        this._currAgentId    = 0;\n        this._hasBodies      = false;\n    }\n\n    var TIMESTEP = 17;\n    var MIN_TIME_STEP = 17;\n    var MAX_TIME_STEP = 1000 / 120;\n\n    /**\n     * @property PhysicsEngine.DEFAULT_OPTIONS\n     * @type Object\n     * @protected\n     * @static\n     */\n    PhysicsEngine.DEFAULT_OPTIONS = {\n\n        /**\n         * The number of iterations the engine takes to resolve constraints\n         * @attribute constraintSteps\n         * @type Number\n         */\n        constraintSteps : 1,\n\n        /**\n         * The energy threshold before the Engine stops updating\n         * @attribute sleepTolerance\n         * @type Number\n         */\n        sleepTolerance  : 1e-7\n    };\n\n    var now = (function() {\n        return Date.now;\n    })();\n\n    /**\n     * Options setter\n     * @method setOptions\n     * @param options {Object}\n     */\n    PhysicsEngine.prototype.setOptions = function setOptions(opts) {\n        for (var key in opts) if (this.options[key]) this.options[key] = opts[key];\n    };\n\n    /**\n     * Method to add a physics body to the engine. Necessary to update the\n     * body over time.\n     *\n     * @method addBody\n     * @param body {Body}\n     * @return body {Body}\n     */\n    PhysicsEngine.prototype.addBody = function addBody(body) {\n        body._engine = this;\n        if (body.isBody) {\n            this._bodies.push(body);\n            this._hasBodies = true;\n        }\n        else this._particles.push(body);\n        return body;\n    };\n\n    /**\n     * Remove a body from the engine. Detaches body from all forces and\n     * constraints.\n     *\n     * @method removeBody\n     * @param body {Body}\n     */\n    PhysicsEngine.prototype.removeBody = function removeBody(body) {\n        var array = (body.isBody) ? this._bodies : this._particles;\n        var index = array.indexOf(body);\n        if (index > -1) {\n            for (var i = 0; i < Object.keys(this._agents).length; i++) this.detachFrom(i, body);\n            array.splice(index,1);\n        }\n        if (this.getBodies().length === 0) this._hasBodies = false;\n    };\n\n    function _mapAgentArray(agent) {\n        if (agent.applyForce)      return this._forces;\n        if (agent.applyConstraint) return this._constraints;\n    }\n\n    function _attachOne(agent, targets, source) {\n        if (targets === undefined) targets = this.getParticlesAndBodies();\n        if (!(targets instanceof Array)) targets = [targets];\n\n        this._agents[this._currAgentId] = {\n            agent   : agent,\n            targets : targets,\n            source  : source\n        };\n\n        _mapAgentArray.call(this, agent).push(this._currAgentId);\n        return this._currAgentId++;\n    }\n\n    /**\n     * Attaches a force or constraint to a Body. Returns an AgentId of the\n     * attached agent which can be used to detach the agent.\n     *\n     * @method attach\n     * @param agent {Agent|Array.Agent} A force, constraint, or array of them.\n     * @param [targets=All] {Body|Array.Body} The Body or Bodies affected by the agent\n     * @param [source] {Body} The source of the agent\n     * @return AgentId {Number}\n     */\n    PhysicsEngine.prototype.attach = function attach(agents, targets, source) {\n        if (agents instanceof Array) {\n            var agentIDs = [];\n            for (var i = 0; i < agents.length; i++)\n                agentIDs[i] = _attachOne.call(this, agents[i], targets, source);\n            return agentIDs;\n        }\n        else return _attachOne.call(this, agents, targets, source);\n    };\n\n    /**\n     * Append a body to the targets of a previously defined physics agent.\n     *\n     * @method attachTo\n     * @param agentID {AgentId} The agentId of a previously defined agent\n     * @param target {Body} The Body affected by the agent\n     */\n    PhysicsEngine.prototype.attachTo = function attachTo(agentID, target) {\n        _getBoundAgent.call(this, agentID).targets.push(target);\n    };\n\n    /**\n     * Undoes PhysicsEngine.attach. Removes an agent and its associated\n     * effect on its affected Bodies.\n     *\n     * @method detach\n     * @param agentID {AgentId} The agentId of a previously defined agent\n     */\n    PhysicsEngine.prototype.detach = function detach(id) {\n        // detach from forces/constraints array\n        var agent = this.getAgent(id);\n        var agentArray = _mapAgentArray.call(this, agent);\n        var index = agentArray.indexOf(id);\n        agentArray.splice(index,1);\n\n        // detach agents array\n        delete this._agents[id];\n    };\n\n    /**\n     * Remove a single Body from a previously defined agent.\n     *\n     * @method detach\n     * @param agentID {AgentId} The agentId of a previously defined agent\n     * @param target {Body} The body to remove from the agent\n     */\n    PhysicsEngine.prototype.detachFrom = function detachFrom(id, target) {\n        var boundAgent = _getBoundAgent.call(this, id);\n        if (boundAgent.source === target) this.detach(id);\n        else {\n            var targets = boundAgent.targets;\n            var index = targets.indexOf(target);\n            if (index > -1) targets.splice(index,1);\n        }\n    };\n\n    /**\n     * A convenience method to give the Physics Engine a clean slate of\n     * agents. Preserves all added Body objects.\n     *\n     * @method detachAll\n     */\n    PhysicsEngine.prototype.detachAll = function detachAll() {\n        this._agents        = {};\n        this._forces        = [];\n        this._constraints   = [];\n        this._currAgentId   = 0;\n    };\n\n    function _getBoundAgent(id) {\n        return this._agents[id];\n    }\n\n    /**\n     * Returns the corresponding agent given its agentId.\n     *\n     * @method getAgent\n     * @param id {AgentId}\n     */\n    PhysicsEngine.prototype.getAgent = function getAgent(id) {\n        return _getBoundAgent.call(this, id).agent;\n    };\n\n    /**\n     * Returns all particles that are currently managed by the Physics Engine.\n     *\n     * @method getParticles\n     * @return particles {Array.Particles}\n     */\n    PhysicsEngine.prototype.getParticles = function getParticles() {\n        return this._particles;\n    };\n\n    /**\n     * Returns all bodies, except particles, that are currently managed by the Physics Engine.\n     *\n     * @method getBodies\n     * @return bodies {Array.Bodies}\n     */\n    PhysicsEngine.prototype.getBodies = function getBodies() {\n        return this._bodies;\n    };\n\n    /**\n     * Returns all bodies that are currently managed by the Physics Engine.\n     *\n     * @method getBodies\n     * @return bodies {Array.Bodies}\n     */\n    PhysicsEngine.prototype.getParticlesAndBodies = function getParticlesAndBodies() {\n        return this.getParticles().concat(this.getBodies());\n    };\n\n    /**\n     * Iterates over every Particle and applies a function whose first\n     * argument is the Particle\n     *\n     * @method forEachParticle\n     * @param fn {Function} Function to iterate over\n     * @param [dt] {Number} Delta time\n     */\n    PhysicsEngine.prototype.forEachParticle = function forEachParticle(fn, dt) {\n        var particles = this.getParticles();\n        for (var index = 0, len = particles.length; index < len; index++)\n            fn.call(this, particles[index], dt);\n    };\n\n    /**\n     * Iterates over every Body that isn't a Particle and applies\n     * a function whose first argument is the Body\n     *\n     * @method forEachBody\n     * @param fn {Function} Function to iterate over\n     * @param [dt] {Number} Delta time\n     */\n    PhysicsEngine.prototype.forEachBody = function forEachBody(fn, dt) {\n        if (!this._hasBodies) return;\n        var bodies = this.getBodies();\n        for (var index = 0, len = bodies.length; index < len; index++)\n            fn.call(this, bodies[index], dt);\n    };\n\n    /**\n     * Iterates over every Body and applies a function whose first\n     * argument is the Body\n     *\n     * @method forEach\n     * @param fn {Function} Function to iterate over\n     * @param [dt] {Number} Delta time\n     */\n    PhysicsEngine.prototype.forEach = function forEach(fn, dt) {\n        this.forEachParticle(fn, dt);\n        this.forEachBody(fn, dt);\n    };\n\n    function _updateForce(index) {\n        var boundAgent = _getBoundAgent.call(this, this._forces[index]);\n        boundAgent.agent.applyForce(boundAgent.targets, boundAgent.source);\n    }\n\n    function _updateForces() {\n        for (var index = this._forces.length - 1; index > -1; index--)\n            _updateForce.call(this, index);\n    }\n\n    function _updateConstraint(index, dt) {\n        var boundAgent = this._agents[this._constraints[index]];\n        return boundAgent.agent.applyConstraint(boundAgent.targets, boundAgent.source, dt);\n    }\n\n    function _updateConstraints(dt) {\n        var iteration = 0;\n        while (iteration < this.options.constraintSteps) {\n            for (var index = this._constraints.length - 1; index > -1; index--)\n                _updateConstraint.call(this, index, dt);\n            iteration++;\n        }\n    }\n\n    function _updateVelocities(particle, dt) {\n        particle.integrateVelocity(dt);\n    }\n\n    function _updateAngularVelocities(body, dt) {\n        body.integrateAngularMomentum(dt);\n        body.updateAngularVelocity();\n    }\n\n    function _updateOrientations(body, dt) {\n        body.integrateOrientation(dt);\n    }\n\n    function _updatePositions(particle, dt) {\n        particle.integratePosition(dt);\n        particle.emit('update', particle);\n    }\n\n    function _integrate(dt) {\n        _updateForces.call(this, dt);\n        this.forEach(_updateVelocities, dt);\n        this.forEachBody(_updateAngularVelocities, dt);\n        _updateConstraints.call(this, dt);\n        this.forEachBody(_updateOrientations, dt);\n        this.forEach(_updatePositions, dt);\n    }\n\n    function _getEnergyParticles() {\n        var energy = 0.0;\n        var particleEnergy = 0.0;\n        this.forEach(function(particle) {\n            particleEnergy = particle.getEnergy();\n            energy += particleEnergy;\n            if (particleEnergy < particle.sleepTolerance) particle.sleep();\n        });\n        return energy;\n    }\n\n    function _getEnergyForces() {\n        var energy = 0;\n        for (var index = this._forces.length - 1; index > -1; index--)\n            energy += this._forces[index].getEnergy() || 0.0;\n        return energy;\n    }\n\n    function _getEnergyConstraints() {\n        var energy = 0;\n        for (var index = this._constraints.length - 1; index > -1; index--)\n            energy += this._constraints[index].getEnergy() || 0.0;\n        return energy;\n    }\n\n    /**\n     * Calculates the kinetic energy of all Body objects and potential energy\n     * of all attached agents.\n     *\n     * TODO: implement.\n     * @method getEnergy\n     * @return energy {Number}\n     */\n    PhysicsEngine.prototype.getEnergy = function getEnergy() {\n        return _getEnergyParticles.call(this) + _getEnergyForces.call(this) + _getEnergyConstraints.call(this);\n    };\n\n    /**\n     * Updates all Body objects managed by the physics engine over the\n     * time duration since the last time step was called.\n     *\n     * @method step\n     */\n    PhysicsEngine.prototype.step = function step() {\n//        if (this.getEnergy() < this.options.sleepTolerance) {\n//            this.sleep();\n//            return;\n//        };\n\n        //set current frame's time\n        var currTime = now();\n\n        //milliseconds elapsed since last frame\n        var dtFrame = currTime - this._prevTime;\n\n        this._prevTime = currTime;\n\n        if (dtFrame < MIN_TIME_STEP) return;\n        if (dtFrame > MAX_TIME_STEP) dtFrame = MAX_TIME_STEP;\n\n        //robust integration\n//        this._buffer += dtFrame;\n//        while (this._buffer > this._timestep){\n//            _integrate.call(this, this._timestep);\n//            this._buffer -= this._timestep;\n//        };\n//        _integrate.call(this, this._buffer);\n//        this._buffer = 0.0;\n        _integrate.call(this, TIMESTEP);\n\n//        this.emit('update', this);\n    };\n\n    /**\n     * Tells whether the Physics Engine is sleeping or awake.\n     * @method isSleeping\n     * @return {Boolean}\n     */\n    PhysicsEngine.prototype.isSleeping = function isSleeping() {\n        return this._isSleeping;\n    };\n\n    /**\n     * Stops the Physics Engine from updating. Emits an 'end' event.\n     * @method sleep\n     */\n    PhysicsEngine.prototype.sleep = function sleep() {\n        this.emit('end', this);\n        this._isSleeping = true;\n    };\n\n    /**\n     * Starts the Physics Engine from updating. Emits an 'start' event.\n     * @method wake\n     */\n    PhysicsEngine.prototype.wake = function wake() {\n        this._prevTime = now();\n        this.emit('start', this);\n        this._isSleeping = false;\n    };\n\n    PhysicsEngine.prototype.emit = function emit(type, data) {\n        if (this._eventHandler === null) return;\n        this._eventHandler.emit(type, data);\n    };\n\n    PhysicsEngine.prototype.on = function on(event, fn) {\n        if (this._eventHandler === null) this._eventHandler = new EventHandler();\n        this._eventHandler.on(event, fn);\n    };\n\n    module.exports = PhysicsEngine;\n});\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n *\n * Owner: david@famo.us\n * @license MPL 2.0\n * @copyright Famous Industries, Inc. 2014\n */\n\ndefine(function(require, exports, module) {\n    var Vector = require('famous/math/Vector');\n    var Transform = require('famous/core/Transform');\n    var EventHandler = require('famous/core/EventHandler');\n    var Integrator = require('../integrators/SymplecticEuler');\n\n    /**\n     * A point body that is controlled by the Physics Engine. A particle has\n     *   position and velocity states that are updated by the Physics Engine.\n     *   Ultimately, a particle is a _special type of modifier, and can be added to\n     *   the Famous render tree like any other modifier.\n     *\n     * @constructor\n     * @class Particle\n     * @uses EventHandler\n     * @uses Modifier\n     * @extensionfor Body\n     * @param {Options} [options] An object of configurable options.\n     * @param {Array} [options.position] The position of the particle.\n     * @param {Array} [options.velocity] The velocity of the particle.\n     * @param {Number} [options.mass] The mass of the particle.\n     * @param {Hexadecimal} [options.axis] The axis a particle can move along. Can be bitwise ORed e.g., Particle.AXES.X, Particle.AXES.X | Particle.AXES.Y\n     *\n     */\n     function Particle(options) {\n        options = options || {};\n\n        // registers\n        this.position = new Vector();\n        this.velocity = new Vector();\n        this.force    = new Vector();\n\n        var defaults  = Particle.DEFAULT_OPTIONS;\n\n        // set vectors\n        this.setPosition(options.position || defaults.position);\n        this.setVelocity(options.velocity || defaults.velocity);\n        this.force.set(options.force || [0,0,0]);\n\n        // set scalars\n        this.mass = (options.mass !== undefined)\n            ? options.mass\n            : defaults.mass;\n\n        this.axis = (options.axis !== undefined)\n            ? options.axis\n            : defaults.axis;\n\n        this.inverseMass = 1 / this.mass;\n\n        // state variables\n        this._isSleeping     = false;\n        this._engine         = null;\n        this._eventOutput    = null;\n        this._positionGetter = null;\n\n        this.transform = Transform.identity.slice();\n\n        // cached _spec\n        this._spec = {\n            transform : this.transform,\n            target    : null\n        };\n    }\n\n    Particle.DEFAULT_OPTIONS = {\n        position : [0,0,0],\n        velocity : [0,0,0],\n        mass : 1,\n        axis : undefined\n    };\n\n    /**\n     * Kinetic energy threshold needed to update the body\n     *\n     * @property SLEEP_TOLERANCE\n     * @type Number\n     * @static\n     * @default 1e-7\n     */\n    Particle.SLEEP_TOLERANCE = 1e-7;\n\n    /**\n     * Axes by which a body can translate\n     *\n     * @property AXES\n     * @type Hexadecimal\n     * @static\n     * @default 1e-7\n     */\n    Particle.AXES = {\n        X : 0x00, // hexadecimal for 0\n        Y : 0x01, // hexadecimal for 1\n        Z : 0x02  // hexadecimal for 2\n    };\n\n    // Integrator for updating the particle's state\n    // TODO: make this a singleton\n    Particle.INTEGRATOR = new Integrator();\n\n    //Catalogue of outputted events\n    var _events = {\n        start  : 'start',\n        update : 'update',\n        end    : 'end'\n    };\n\n    // Cached timing function\n    var now = (function() {\n        return Date.now;\n    })();\n\n    /**\n     * Stops the particle from updating\n     * @method sleep\n     */\n    Particle.prototype.sleep = function sleep() {\n        if (this._isSleeping) return;\n        this.emit(_events.end, this);\n        this._isSleeping = true;\n    };\n\n    /**\n     * Starts the particle update\n     * @method wake\n     */\n    Particle.prototype.wake = function wake() {\n        if (!this._isSleeping) return;\n        this.emit(_events.start, this);\n        this._isSleeping = false;\n        this._prevTime = now();\n    };\n\n    /**\n     * @attribute isBody\n     * @type Boolean\n     * @static\n     */\n    Particle.prototype.isBody = false;\n\n    /**\n     * Basic setter for position\n     * @method getPosition\n     * @param position {Array|Vector}\n     */\n    Particle.prototype.setPosition = function setPosition(position) {\n        this.position.set(position);\n    };\n\n    /**\n     * 1-dimensional setter for position\n     * @method setPosition1D\n     * @param value {Number}\n     */\n    Particle.prototype.setPosition1D = function setPosition1D(x) {\n        this.position.x = x;\n    };\n\n    /**\n     * Basic getter function for position\n     * @method getPosition\n     * @return position {Array}\n     */\n    Particle.prototype.getPosition = function getPosition() {\n        if (this._positionGetter instanceof Function)\n            this.setPosition(this._positionGetter());\n\n        this._engine.step();\n\n        return this.position.get();\n    };\n\n    /**\n     * 1-dimensional getter for position\n     * @method getPosition1D\n     * @return value {Number}\n     */\n    Particle.prototype.getPosition1D = function getPosition1D() {\n        this._engine.step();\n        return this.position.x;\n    };\n\n    /**\n     * Defines the position from outside the Physics Engine\n     * @method positionFrom\n     * @param positionGetter {Function}\n     */\n    Particle.prototype.positionFrom = function positionFrom(positionGetter) {\n        this._positionGetter = positionGetter;\n    };\n\n    /**\n     * Basic setter function for velocity Vector\n     * @method setVelocity\n     * @function\n     */\n    Particle.prototype.setVelocity = function setVelocity(velocity) {\n        this.velocity.set(velocity);\n        this.wake();\n    };\n\n    /**\n     * 1-dimensional setter for velocity\n     * @method setVelocity1D\n     * @param velocity {Number}\n     */\n    Particle.prototype.setVelocity1D = function setVelocity1D(x) {\n        this.velocity.x = x;\n        this.wake();\n    };\n\n    /**\n     * Basic getter function for velocity Vector\n     * @method getVelocity\n     * @return velocity {Array}\n     */\n    Particle.prototype.getVelocity = function getVelocity() {\n        return this.velocity.get();\n    };\n\n    /**\n     * 1-dimensional getter for velocity\n     * @method getVelocity1D\n     * @return velocity {Number}\n     */\n    Particle.prototype.getVelocity1D = function getVelocity1D() {\n        return this.velocity.x;\n    };\n\n    /**\n     * Basic setter function for mass quantity\n     * @method setMass\n     * @param mass {Number} mass\n     */\n    Particle.prototype.setMass = function setMass(mass) {\n        this.mass = mass;\n        this.inverseMass = 1 / mass;\n    };\n\n    /**\n     * Basic getter function for mass quantity\n     * @method getMass\n     * @return mass {Number}\n     */\n    Particle.prototype.getMass = function getMass() {\n        return this.mass;\n    };\n\n    /**\n     * Reset position and velocity\n     * @method reset\n     * @param position {Array|Vector}\n     * @param velocity {Array|Vector}\n     */\n    Particle.prototype.reset = function reset(position, velocity) {\n        this.setPosition(position || [0,0,0]);\n        this.setVelocity(velocity || [0,0,0]);\n    };\n\n    /**\n     * Add force vector to existing internal force Vector\n     * @method applyForce\n     * @param force {Vector}\n     */\n    Particle.prototype.applyForce = function applyForce(force) {\n        if (force.isZero()) return;\n        this.force.add(force).put(this.force);\n        this.wake();\n    };\n\n    /**\n     * Add impulse (change in velocity) Vector to this Vector's velocity.\n     * @method applyImpulse\n     * @param impulse {Vector}\n     */\n    Particle.prototype.applyImpulse = function applyImpulse(impulse) {\n        if (impulse.isZero()) return;\n        var velocity = this.velocity;\n        velocity.add(impulse.mult(this.inverseMass)).put(velocity);\n    };\n\n    /**\n     * Update a particle's velocity from its force accumulator\n     * @method integrateVelocity\n     * @param dt {Number} Time differential\n     */\n    Particle.prototype.integrateVelocity = function integrateVelocity(dt) {\n        Particle.INTEGRATOR.integrateVelocity(this, dt);\n    };\n\n    /**\n     * Update a particle's position from its velocity\n     * @method integratePosition\n     * @param dt {Number} Time differential\n     */\n    Particle.prototype.integratePosition = function integratePosition(dt) {\n        Particle.INTEGRATOR.integratePosition(this, dt);\n    };\n\n    /**\n     * Update the position and velocity of the particle\n     * @method _integrate\n     * @protected\n     * @param dt {Number} Time differential\n     */\n    Particle.prototype._integrate = function _integrate(dt) {\n        this.integrateVelocity(dt);\n        this.integratePosition(dt);\n    };\n\n    /**\n     * Get kinetic energy of the particle.\n     * @method getEnergy\n     * @function\n     */\n    Particle.prototype.getEnergy = function getEnergy() {\n        return 0.5 * this.mass * this.velocity.normSquared();\n    };\n\n    /**\n     * Generate transform from the current position state\n     * @method getTransform\n     * @return Transform {Transform}\n     */\n    Particle.prototype.getTransform = function getTransform() {\n        this._engine.step();\n\n        var position = this.position;\n        var axis = this.axis;\n        var transform = this.transform;\n\n        if (axis !== undefined) {\n            if (axis & ~Particle.AXES.X) {\n                position.x = 0;\n            }\n            if (axis & ~Particle.AXES.Y) {\n                position.y = 0;\n            }\n            if (axis & ~Particle.AXES.Z) {\n                position.z = 0;\n            }\n        }\n\n        transform[12] = position.x;\n        transform[13] = position.y;\n        transform[14] = position.z;\n\n        return transform;\n    };\n\n    /**\n     * The modify interface of a Modifier\n     * @method modify\n     * @param target {Spec}\n     * @return Spec {Spec}\n     */\n    Particle.prototype.modify = function modify(target) {\n        var _spec = this._spec;\n        _spec.transform = this.getTransform();\n        _spec.target = target;\n        return _spec;\n    };\n\n    // private\n    function _createEventOutput() {\n        this._eventOutput = new EventHandler();\n        this._eventOutput.bindThis(this);\n        //overrides on/removeListener/pipe/unpipe methods\n        EventHandler.setOutputHandler(this, this._eventOutput);\n    }\n\n    Particle.prototype.emit = function emit(type, data) {\n        if (!this._eventOutput) return;\n        this._eventOutput.emit(type, data);\n    };\n\n    Particle.prototype.on = function on() {\n        _createEventOutput.call(this);\n        return this.on.apply(this, arguments);\n    };\n    Particle.prototype.removeListener = function removeListener() {\n        _createEventOutput.call(this);\n        return this.removeListener.apply(this, arguments);\n    };\n    Particle.prototype.pipe = function pipe() {\n        _createEventOutput.call(this);\n        return this.pipe.apply(this, arguments);\n    };\n    Particle.prototype.unpipe = function unpipe() {\n        _createEventOutput.call(this);\n        return this.unpipe.apply(this, arguments);\n    };\n\n    module.exports = Particle;\n});\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n *\n * Owner: david@famo.us\n * @license MPL 2.0\n * @copyright Famous Industries, Inc. 2014\n */\n\ndefine(function(require, exports, module) {\n    var Vector = require('famous/math/Vector');\n    var EventHandler = require('famous/core/EventHandler');\n\n    /**\n     * Force base class.\n     *\n     * @class Force\n     * @uses EventHandler\n     * @constructor\n     */\n    function Force(force) {\n        this.force = new Vector(force);\n        this._energy = 0.0;\n        this._eventOutput = null;\n    }\n\n    /**\n     * Basic setter for options\n     *\n     * @method setOptions\n     * @param options {Objects}\n     */\n    Force.prototype.setOptions = function setOptions(options) {\n        for (var key in options) this.options[key] = options[key];\n    };\n\n    /**\n     * Adds a force to a physics body's force accumulator.\n     *\n     * @method applyForce\n     * @param body {Body}\n     */\n    Force.prototype.applyForce = function applyForce(body) {\n        body.applyForce(this.force);\n    };\n\n    /**\n     * Getter for a force's potential energy.\n     *\n     * @method getEnergy\n     * @return energy {Number}\n     */\n    Force.prototype.getEnergy = function getEnergy() {\n        return this._energy;\n    };\n\n    /*\n     * Setter for a force's potential energy.\n     *\n     * @method setEnergy\n     * @param energy {Number}\n     */\n    Force.prototype.setEnergy = function setEnergy(energy) {\n        this._energy = energy;\n    };\n\n    function _createEventOutput() {\n        this._eventOutput = new EventHandler();\n        this._eventOutput.bindThis(this);\n        EventHandler.setOutputHandler(this, this._eventOutput);\n    }\n\n    Force.prototype.on = function on() {\n        _createEventOutput.call(this);\n        return this.on.apply(this, arguments);\n    };\n    Force.prototype.addListener = function addListener() {\n        _createEventOutput.call(this);\n        return this.addListener.apply(this, arguments);\n    };\n    Force.prototype.pipe = function pipe() {\n        _createEventOutput.call(this);\n        return this.pipe.apply(this, arguments);\n    };\n    Force.prototype.removeListener = function removeListener() {\n        return this.removeListener.apply(this, arguments);\n    };\n    Force.prototype.unpipe = function unpipe() {\n        return this.unpipe.apply(this, arguments);\n    };\n\n    module.exports = Force;\n});\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n *\n * Owner: david@famo.us\n * @license MPL 2.0\n * @copyright Famous Industries, Inc. 2014\n */\n\ndefine(function(require, exports, module) {\n    var Force = require('./Force');\n    var Vector = require('famous/math/Vector');\n\n    /**\n     *  A force that moves a physics body to a location with a spring motion.\n     *    The body can be moved to another physics body, or an anchor point.\n     *\n     *  @class Spring\n     *  @constructor\n     *  @extends Force\n     *  @param {Object} options options to set on drag\n     */\n    function Spring(options) {\n        this.options = Object.create(this.constructor.DEFAULT_OPTIONS);\n        if (options) this.setOptions(options);\n\n        //registers\n        this.disp = new Vector(0,0,0);\n\n        _init.call(this);\n        Force.call(this);\n    }\n\n    Spring.prototype = Object.create(Force.prototype);\n    Spring.prototype.constructor = Spring;\n\n    /** @const */ var pi = Math.PI;\n\n    /**\n     * @property Spring.FORCE_FUNCTIONS\n     * @type Object\n     * @protected\n     * @static\n     */\n    Spring.FORCE_FUNCTIONS = {\n\n        /**\n         * A FENE (Finitely Extensible Nonlinear Elastic) spring force\n         *      see: http://en.wikipedia.org/wiki/FENE\n         * @attribute FENE\n         * @type Function\n         * @param {Number} dist current distance target is from source body\n         * @param {Number} rMax maximum range of influence\n         * @return {Number} unscaled force\n         */\n        FENE : function(dist, rMax) {\n            var rMaxSmall = rMax * .99;\n            var r = Math.max(Math.min(dist, rMaxSmall), -rMaxSmall);\n            return r / (1 - r * r/(rMax * rMax));\n        },\n\n        /**\n         * A Hookean spring force, linear in the displacement\n         *      see: http://en.wikipedia.org/wiki/FENE\n         * @attribute FENE\n         * @type Function\n         * @param {Number} dist current distance target is from source body\n         * @return {Number} unscaled force\n         */\n        HOOK : function(dist) {\n            return dist;\n        }\n    };\n\n    /**\n     * @property Spring.DEFAULT_OPTIONS\n     * @type Object\n     * @protected\n     * @static\n     */\n    Spring.DEFAULT_OPTIONS = {\n\n        /**\n         * The amount of time in milliseconds taken for one complete oscillation\n         * when there is no damping\n         *    Range : [150, Infinity]\n         * @attribute period\n         * @type Number\n         * @default 300\n         */\n        period        : 300,\n\n        /**\n         * The damping of the spring.\n         *    Range : [0, 1]\n         *    0 = no damping, and the spring will oscillate forever\n         *    1 = critically damped (the spring will never oscillate)\n         * @attribute dampingRatio\n         * @type Number\n         * @default 0.1\n         */\n        dampingRatio : 0.1,\n\n        /**\n         * The rest length of the spring\n         *    Range : [0, Infinity]\n         * @attribute length\n         * @type Number\n         * @default 0\n         */\n        length : 0,\n\n        /**\n         * The maximum length of the spring (for a FENE spring)\n         *    Range : [0, Infinity]\n         * @attribute length\n         * @type Number\n         * @default Infinity\n         */\n        maxLength : Infinity,\n\n        /**\n         * The location of the spring's anchor, if not another physics body\n         *\n         * @attribute anchor\n         * @type Array\n         * @optional\n         */\n        anchor : undefined,\n\n        /**\n         * The type of spring force\n         * @attribute forceFunction\n         * @type Function\n         */\n        forceFunction : Spring.FORCE_FUNCTIONS.HOOK\n    };\n\n    function _setForceFunction(fn) {\n        this.forceFunction = fn;\n    }\n\n    function _calcStiffness() {\n        var options = this.options;\n        options.stiffness = Math.pow(2 * pi / options.period, 2);\n    }\n\n    function _calcDamping() {\n        var options = this.options;\n        options.damping = 4 * pi * options.dampingRatio / options.period;\n    }\n\n    function _calcEnergy(strength, dist) {\n        return 0.5 * strength * dist * dist;\n    }\n\n    function _init() {\n        _setForceFunction.call(this, this.options.forceFunction);\n        _calcStiffness.call(this);\n        _calcDamping.call(this);\n    }\n\n    /**\n     * Basic options setter\n     *\n     * @method setOptions\n     * @param options {Objects}\n     */\n    Spring.prototype.setOptions = function setOptions(options) {\n        if (options.anchor !== undefined) {\n            if (options.anchor.position instanceof Vector) this.options.anchor = options.anchor.position;\n            if (options.anchor   instanceof Vector)  this.options.anchor = options.anchor;\n            if (options.anchor   instanceof Array)  this.options.anchor = new Vector(options.anchor);\n        }\n        if (options.period !== undefined) this.options.period = options.period;\n        if (options.dampingRatio !== undefined) this.options.dampingRatio = options.dampingRatio;\n        if (options.length !== undefined) this.options.length = options.length;\n        if (options.forceFunction !== undefined) this.options.forceFunction = options.forceFunction;\n        if (options.maxLength !== undefined) this.options.maxLength = options.maxLength;\n\n        _init.call(this);\n    };\n\n    /**\n     * Adds a spring force to a physics body's force accumulator.\n     *\n     * @method applyForce\n     * @param targets {Array.Body} Array of bodies to apply force to.\n     */\n    Spring.prototype.applyForce = function applyForce(targets, source) {\n        var force        = this.force;\n        var disp         = this.disp;\n        var options      = this.options;\n\n        var stiffness    = options.stiffness;\n        var damping      = options.damping;\n        var restLength   = options.length;\n        var lMax         = options.maxLength;\n        var anchor       = options.anchor || source.position;\n\n        for (var i = 0; i < targets.length; i++) {\n            var target = targets[i];\n            var p2 = target.position;\n            var v2 = target.velocity;\n\n            anchor.sub(p2).put(disp);\n            var dist = disp.norm() - restLength;\n\n            if (dist === 0) return;\n\n            //if dampingRatio specified, then override strength and damping\n            var m      = target.mass;\n            stiffness *= m;\n            damping   *= m;\n\n            disp.normalize(stiffness * this.forceFunction(dist, lMax))\n                .put(force);\n\n            if (damping)\n                if (source) force.add(v2.sub(source.velocity).mult(-damping)).put(force);\n                else force.add(v2.mult(-damping)).put(force);\n\n            target.applyForce(force);\n            if (source) source.applyForce(force.mult(-1));\n\n            this.setEnergy(_calcEnergy(stiffness, dist));\n        }\n    };\n\n    /**\n     * Calculates the potential energy of the spring.\n     *\n     * @method getEnergy\n     * @param target {Body}     The physics body attached to the spring\n     * @return energy {Number}\n     */\n    Spring.prototype.getEnergy = function getEnergy(target) {\n        var options        = this.options;\n        var restLength  = options.length;\n        var anchor      = options.anchor;\n        var strength    = options.stiffness;\n\n        var dist = anchor.sub(target.position).norm() - restLength;\n        return 0.5 * strength * dist * dist;\n    };\n\n    /**\n     * Sets the anchor to a new position\n     *\n     * @method setAnchor\n     * @param anchor {Array}    New anchor of the spring\n     */\n    Spring.prototype.setAnchor = function setAnchor(anchor) {\n        if (!this.options.anchor) this.options.anchor = new Vector();\n        this.options.anchor.set(anchor);\n    };\n\n    module.exports = Spring;\n});\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n *\n * Owner: david@famo.us\n * @license MPL 2.0\n * @copyright Famous Industries, Inc. 2014\n */\n\n/*global console*/\n\ndefine(function(require, exports, module) {\n    var PE = require('famous/physics/PhysicsEngine');\n    var Particle = require('famous/physics/bodies/Particle');\n    var Spring = require('famous/physics/forces/Spring');\n    var Vector = require('famous/math/Vector');\n\n    /**\n     * SpringTransition is a method of transitioning between two values (numbers,\n     * or arrays of numbers) with a bounce. The transition will overshoot the target\n     * state depending on the parameters of the transition.\n     *\n     * @class SpringTransition\n     * @constructor\n     *\n     * @param {Number|Array} [state=0] Initial state\n     */\n    function SpringTransition(state) {\n        state = state || 0;\n        this.endState  = new Vector(state);\n        this.initState = new Vector();\n\n        this._dimensions       = undefined;\n        this._restTolerance    = 1e-10;\n        this._absRestTolerance = this._restTolerance;\n        this._callback         = undefined;\n\n        this.PE       = new PE();\n        this.spring   = new Spring({anchor : this.endState});\n        this.particle = new Particle();\n\n        this.PE.addBody(this.particle);\n        this.PE.attach(this.spring, this.particle);\n    }\n\n    SpringTransition.SUPPORTS_MULTIPLE = 3;\n\n    /**\n     * @property SpringTransition.DEFAULT_OPTIONS\n     * @type Object\n     * @protected\n     * @static\n     */\n    SpringTransition.DEFAULT_OPTIONS = {\n\n        /**\n         * The amount of time in milliseconds taken for one complete oscillation\n         * when there is no damping\n         *    Range : [0, Infinity]\n         *\n         * @attribute period\n         * @type Number\n         * @default 300\n         */\n        period : 300,\n\n        /**\n         * The damping of the snap.\n         *    Range : [0, 1]\n         *    0 = no damping, and the spring will oscillate forever\n         *    1 = critically damped (the spring will never oscillate)\n         *\n         * @attribute dampingRatio\n         * @type Number\n         * @default 0.5\n         */\n        dampingRatio : 0.5,\n\n        /**\n         * The initial velocity of the transition.\n         *\n         * @attribute velocity\n         * @type Number|Array\n         * @default 0\n         */\n        velocity : 0\n    };\n\n    function _getEnergy() {\n        return this.particle.getEnergy() + this.spring.getEnergy(this.particle);\n    }\n\n    function _setParticlePosition(p) {\n        this.particle.setPosition(p);\n    }\n\n    function _setParticleVelocity(v) {\n        this.particle.setVelocity(v);\n    }\n\n    function _getParticlePosition() {\n        return (this._dimensions === 0)\n            ? this.particle.getPosition1D()\n            : this.particle.getPosition();\n    }\n\n    function _getParticleVelocity() {\n        return (this._dimensions === 0)\n            ? this.particle.getVelocity1D()\n            : this.particle.getVelocity();\n    }\n\n    function _setCallback(callback) {\n        this._callback = callback;\n    }\n\n    function _wake() {\n        this.PE.wake();\n    }\n\n    function _sleep() {\n        this.PE.sleep();\n    }\n\n    function _update() {\n        if (this.PE.isSleeping()) {\n            if (this._callback) {\n                var cb = this._callback;\n                this._callback = undefined;\n                cb();\n            }\n            return;\n        }\n\n        if (_getEnergy.call(this) < this._absRestTolerance) {\n            _setParticlePosition.call(this, this.endState);\n            _setParticleVelocity.call(this, [0,0,0]);\n            _sleep.call(this);\n        }\n    }\n\n    function _setupDefinition(definition) {\n        // TODO fix no-console error\n        /* eslint no-console: 0 */\n        var defaults = SpringTransition.DEFAULT_OPTIONS;\n        if (definition.period === undefined)       definition.period       = defaults.period;\n        if (definition.dampingRatio === undefined) definition.dampingRatio = defaults.dampingRatio;\n        if (definition.velocity === undefined)     definition.velocity     = defaults.velocity;\n\n        if (definition.period < 150) {\n            definition.period = 150;\n            console.warn('The period of a SpringTransition is capped at 150 ms. Use a SnapTransition for faster transitions');\n        }\n\n        //setup spring\n        this.spring.setOptions({\n            period       : definition.period,\n            dampingRatio : definition.dampingRatio\n        });\n\n        //setup particle\n        _setParticleVelocity.call(this, definition.velocity);\n    }\n\n    function _setAbsoluteRestTolerance() {\n        var distance = this.endState.sub(this.initState).normSquared();\n        this._absRestTolerance = (distance === 0)\n            ? this._restTolerance\n            : this._restTolerance * distance;\n    }\n\n    function _setTarget(target) {\n        this.endState.set(target);\n        _setAbsoluteRestTolerance.call(this);\n    }\n\n    /**\n     * Resets the position and velocity\n     *\n     * @method reset\n     *\n     * @param {Number|Array.Number} pos positional state\n     * @param {Number|Array} vel velocity\n     */\n    SpringTransition.prototype.reset = function reset(pos, vel) {\n        this._dimensions = (pos instanceof Array)\n            ? pos.length\n            : 0;\n\n        this.initState.set(pos);\n        _setParticlePosition.call(this, pos);\n        _setTarget.call(this, pos);\n        if (vel) _setParticleVelocity.call(this, vel);\n        _setCallback.call(this, undefined);\n    };\n\n    /**\n     * Getter for velocity\n     *\n     * @method getVelocity\n     *\n     * @return {Number|Array} velocity\n     */\n    SpringTransition.prototype.getVelocity = function getVelocity() {\n        return _getParticleVelocity.call(this);\n    };\n\n    /**\n     * Setter for velocity\n     *\n     * @method setVelocity\n     *\n     * @return {Number|Array} velocity\n     */\n    SpringTransition.prototype.setVelocity = function setVelocity(v) {\n        this.call(this, _setParticleVelocity(v));\n    };\n\n    /**\n     * Detects whether a transition is in progress\n     *\n     * @method isActive\n     *\n     * @return {Boolean}\n     */\n    SpringTransition.prototype.isActive = function isActive() {\n        return !this.PE.isSleeping();\n    };\n\n    /**\n     * Halt the transition\n     *\n     * @method halt\n     */\n    SpringTransition.prototype.halt = function halt() {\n        this.set(this.get());\n    };\n\n    /**\n     * Get the current position of the transition\n     *\n     * @method get\n     *\n     * @return {Number|Array} state\n     */\n    SpringTransition.prototype.get = function get() {\n        _update.call(this);\n        return _getParticlePosition.call(this);\n    };\n\n    /**\n     * Set the end position and transition, with optional callback on completion.\n     *\n     * @method set\n     *\n     * @param  {Number|Array} endState Final state\n     * @param {Object}  definition  Transition definition\n     * @param  {Function} callback Callback\n     */\n    SpringTransition.prototype.set = function set(endState, definition, callback) {\n        if (!definition) {\n            this.reset(endState);\n            if (callback) callback();\n            return;\n        }\n\n        this._dimensions = (endState instanceof Array)\n            ? endState.length\n            : 0;\n\n        _wake.call(this);\n        _setupDefinition.call(this, definition);\n        _setTarget.call(this, endState);\n        _setCallback.call(this, callback);\n    };\n\n    module.exports = SpringTransition;\n});\n","define(function(require, exports, module) {\n    var Transform = require('famous/core/Transform');\n    var Modifier = require('famous/core/Modifier');\n    var RenderNode = require('famous/core/RenderNode');\n    var Utility = require('famous/utilities/Utility');\n    var OptionsManager = require('famous/core/OptionsManager');\n    var Transitionable = require('famous/transitions/Transitionable');\n    var TransitionableTransform = require('famous/transitions/TransitionableTransform');\n\n    /**\n     * Lightbox, using transitions, shows and hides different renderables. Lightbox can essentially be\n     * thought of as RenderController with a stateful implementation and interface.\n     *\n     * @class Lightbox\n     * @constructor\n     * @param {Options} [options] An object of configurable options.\n     * @param {Transform} [options.inTransform] The transform at the start of transitioning in a shown renderable.\n     * @param {Transform} [options.outTransform] The transform at the end of transitioning out a renderable.\n     * @param {Transform} [options.showTransform] The transform applied to your shown renderable in its state of equilibrium.\n     * @param {Number} [options.inOpacity] A number between one and zero that defines the state of a shown renderables opacity upon initially\n     * being transitioned in.\n     * @param {Number} [options.outOpacity] A number between one and zero that defines the state of a shown renderables opacity upon being\n     * fully transitioned out.\n     * @param {Number} [options.showOpacity] A number between one and zero that defines the state of a shown renderables opacity\n     * once succesfully transitioned in.\n     * @param {Array<Number>} [options.inOrigin] A two value array of numbers between one and zero that defines the state of a shown renderables\n     * origin upon intially being transitioned in.\n     * @param {Array<Number>} [options.outOrigin] A two value array of numbers between one and zero that defines the state of a shown renderable\n     * once fully hidden.\n     * @param {Array<Number>} [options.showOrigin] A two value array of numbers between one and zero that defines the state of a shown renderables\n     * origin upon succesfully being shown.\n     * @param {Transition} [options.inTransition=true] The transition in charge of showing a renderable.\n     * @param {Transition} [options.outTransition=true]  The transition in charge of removing your previous renderable when\n     * you show a new one, or hiding your current renderable.\n     * @param {Boolean} [options.overlap=false] When showing a new renderable, overlap determines if the\n     *   out transition of the old one executes concurrently with the in transition of the new one,\n      *  or synchronously beforehand.\n     */\n    function Lightbox(options) {\n        this.options = Object.create(Lightbox.DEFAULT_OPTIONS);\n        this._optionsManager = new OptionsManager(this.options);\n\n        if (options) this.setOptions(options);\n\n        this._showing = false;\n        this.nodes = [];\n        this.transforms = [];\n        this.states = [];\n    }\n\n    Lightbox.DEFAULT_OPTIONS = {\n        inTransform: Transform.scale(0.001, 0.001, 0.001),\n        inOpacity: 0,\n        inOrigin: [0.5, 0.5],\n        outTransform: Transform.scale(0.001, 0.001, 0.001),\n        outOpacity: 0,\n        outOrigin: [0.5, 0.5],\n        showTransform: Transform.identity,\n        showOpacity: 1,\n        showOrigin: [0.5, 0.5],\n        inTransition: true,\n        outTransition: true,\n        overlap: false\n    };\n\n    /**\n     * Patches the Lightbox instance's options with the passed-in ones.\n     *\n     * @method setOptions\n     * @param {Options} options An object of configurable options for the Lightbox instance.\n     */\n    Lightbox.prototype.setOptions = function setOptions(options) {\n        return this._optionsManager.setOptions(options);\n    };\n\n   /**\n     * Show displays the targeted renderable with a transition and an optional callback to\n     *  execute afterwards.\n     * @method show\n     * @param {Object} renderable The renderable you want to show.\n     * @param {Transition} [transition] Overwrites the default transition in to display the\n     * passed-in renderable.\n     * @param {function} [callback] Executes after transitioning in the renderable.\n     */\n    Lightbox.prototype.show = function show(renderable, transition, callback) {\n        if (!renderable) {\n            return this.hide(callback);\n        }\n\n        if (transition instanceof Function) {\n            callback = transition;\n            transition = undefined;\n        }\n\n        if (this._showing) {\n            if (this.options.overlap) this.hide();\n            else {\n                return this.hide(this.show.bind(this, renderable, transition, callback));\n            }\n        }\n        this._showing = true;\n\n        var stateItem = {\n            transform: new TransitionableTransform(this.options.inTransform),\n            origin: new Transitionable(this.options.inOrigin),\n            opacity: new Transitionable(this.options.inOpacity)\n        };\n\n        var transform = new Modifier({\n            transform: stateItem.transform,\n            opacity: stateItem.opacity,\n            origin: stateItem.origin\n        });\n        var node = new RenderNode();\n        node.add(transform).add(renderable);\n        this.nodes.push(node);\n        this.states.push(stateItem);\n        this.transforms.push(transform);\n\n        var _cb = callback ? Utility.after(3, callback) : undefined;\n\n        if (!transition) transition = this.options.inTransition;\n        stateItem.transform.set(this.options.showTransform, transition, _cb);\n        stateItem.opacity.set(this.options.showOpacity, transition, _cb);\n        stateItem.origin.set(this.options.showOrigin, transition, _cb);\n    };\n\n    /**\n     * Hide hides the currently displayed renderable with an out transition.\n     * @method hide\n     * @param {Transition} [transition] Overwrites the default transition in to hide the\n     * currently controlled renderable.\n     * @param {function} [callback] Executes after transitioning out the renderable.\n     */\n    Lightbox.prototype.hide = function hide(transition, callback) {\n        if (!this._showing) return;\n        this._showing = false;\n\n        if (transition instanceof Function) {\n            callback = transition;\n            transition = undefined;\n        }\n\n        var node = this.nodes[this.nodes.length - 1];\n        var transform = this.transforms[this.transforms.length - 1];\n        var stateItem = this.states[this.states.length - 1];\n        var _cb = Utility.after(3, function() {\n            this.nodes.splice(this.nodes.indexOf(node), 1);\n            this.states.splice(this.states.indexOf(stateItem), 1);\n            this.transforms.splice(this.transforms.indexOf(transform), 1);\n            if (callback) callback.call(this);\n        }.bind(this));\n\n        if (!transition) transition = this.options.outTransition;\n        stateItem.transform.set(this.options.outTransform, transition, _cb);\n        stateItem.opacity.set(this.options.outOpacity, transition, _cb);\n        stateItem.origin.set(this.options.outOrigin, transition, _cb);\n    };\n\n    /**\n     * Generate a render spec from the contents of this component.\n     *\n     * @private\n     * @method render\n     * @return {number} Render spec for this component\n     */\n    Lightbox.prototype.render = function render() {\n        var result = [];\n        for (var i = 0; i < this.nodes.length; i++) {\n            result.push(this.nodes[i].render());\n        }\n        return result;\n    };\n\n    module.exports = Lightbox;\n});\n","/**\n * Copyright (c) 2014 Petka Antonov\n * \n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:</p>\n * \n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n * \n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n * \n */\n\"use strict\";\nvar util = require(\"./util.js\");\nvar maybeWrapAsError = util.maybeWrapAsError;\nvar errors = require(\"./errors.js\");\nvar TimeoutError = errors.TimeoutError;\nvar RejectionError = errors.RejectionError;\nvar async = require(\"./async.js\");\nvar haveGetters = util.haveGetters;\nvar es5 = require(\"./es5.js\");\n\nfunction isUntypedError(obj) {\n    return obj instanceof Error &&\n        es5.getPrototypeOf(obj) === Error.prototype;\n}\n\nfunction wrapAsRejectionError(obj) {\n    var ret;\n    if (isUntypedError(obj)) {\n        ret = new RejectionError(obj);\n    }\n    else {\n        ret = obj;\n    }\n    errors.markAsOriginatingFromRejection(ret);\n    return ret;\n}\n\nfunction nodebackForPromise(promise) {\n    function PromiseResolver$_callback(err, value) {\n        if (promise === null) return;\n\n        if (err) {\n            var wrapped = wrapAsRejectionError(maybeWrapAsError(err));\n            promise._attachExtraTrace(wrapped);\n            promise._reject(wrapped);\n        }\n        else {\n            if (arguments.length > 2) {\n                var $_len = arguments.length;var args = new Array($_len - 1); for(var $_i = 1; $_i < $_len; ++$_i) {args[$_i - 1] = arguments[$_i];}\n                promise._fulfill(args);\n            }\n            else {\n                promise._fulfill(value);\n            }\n        }\n\n        promise = null;\n    }\n    return PromiseResolver$_callback;\n}\n\n\nvar PromiseResolver;\nif (!haveGetters) {\n    PromiseResolver = function PromiseResolver(promise) {\n        this.promise = promise;\n        this.asCallback = nodebackForPromise(promise);\n        this.callback = this.asCallback;\n    };\n}\nelse {\n    PromiseResolver = function PromiseResolver(promise) {\n        this.promise = promise;\n    };\n}\nif (haveGetters) {\n    var prop = {\n        get: function() {\n            return nodebackForPromise(this.promise);\n        }\n    };\n    es5.defineProperty(PromiseResolver.prototype, \"asCallback\", prop);\n    es5.defineProperty(PromiseResolver.prototype, \"callback\", prop);\n}\n\nPromiseResolver._nodebackForPromise = nodebackForPromise;\n\nPromiseResolver.prototype.toString = function PromiseResolver$toString() {\n    return \"[object PromiseResolver]\";\n};\n\nPromiseResolver.prototype.resolve =\nPromiseResolver.prototype.fulfill = function PromiseResolver$resolve(value) {\n    var promise = this.promise;\n    if ((promise === void 0) || (promise._tryFollow === void 0)) {\n        throw new TypeError(\"Illegal invocation, resolver resolve/reject must be called within a resolver context. Consider using the promise constructor instead.\");\n    }\n    if (promise._tryFollow(value)) {\n        return;\n    }\n    async.invoke(promise._fulfill, promise, value);\n};\n\nPromiseResolver.prototype.reject = function PromiseResolver$reject(reason) {\n    var promise = this.promise;\n    if ((promise === void 0) || (promise._attachExtraTrace === void 0)) {\n        throw new TypeError(\"Illegal invocation, resolver resolve/reject must be called within a resolver context. Consider using the promise constructor instead.\");\n    }\n    errors.markAsOriginatingFromRejection(reason);\n    var trace = errors.canAttach(reason) ? reason : new Error(reason + \"\");\n    promise._attachExtraTrace(trace);\n    async.invoke(promise._reject, promise, reason);\n    if (trace !== reason) {\n        async.invoke(this._setCarriedStackTrace, this, trace);\n    }\n};\n\nPromiseResolver.prototype.progress =\nfunction PromiseResolver$progress(value) {\n    async.invoke(this.promise._progress, this.promise, value);\n};\n\nPromiseResolver.prototype.cancel = function PromiseResolver$cancel() {\n    async.invoke(this.promise.cancel, this.promise, void 0);\n};\n\nPromiseResolver.prototype.timeout = function PromiseResolver$timeout() {\n    this.reject(new TimeoutError(\"timeout\"));\n};\n\nPromiseResolver.prototype.isResolved = function PromiseResolver$isResolved() {\n    return this.promise.isResolved();\n};\n\nPromiseResolver.prototype.toJSON = function PromiseResolver$toJSON() {\n    return this.promise.toJSON();\n};\n\nPromiseResolver.prototype._setCarriedStackTrace =\nfunction PromiseResolver$_setCarriedStackTrace(trace) {\n    if (this.promise.isRejected()) {\n        this.promise._setCarriedStackTrace(trace);\n    }\n};\n\nmodule.exports = PromiseResolver;\n","/**\n * Copyright (c) 2014 Petka Antonov\n * \n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:</p>\n * \n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n * \n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n * \n */\n\"use strict\";\nmodule.exports = function (PromiseArray) {\nvar util = require(\"./util.js\");\nvar RangeError = require(\"./errors.js\").RangeError;\nvar inherits = util.inherits;\nvar isArray = util.isArray;\n\nfunction SomePromiseArray(values, boundTo) {\n    this.constructor$(values, boundTo);\n    this._howMany = 0;\n    this._unwrap = false;\n    this._initialized = false;\n}\ninherits(SomePromiseArray, PromiseArray);\n\nSomePromiseArray.prototype._init = function SomePromiseArray$_init() {\n    if (!this._initialized) {\n        return;\n    }\n    if (this._howMany === 0) {\n        this._resolve([]);\n        return;\n    }\n    this._init$(void 0, -2);\n    var isArrayResolved = isArray(this._values);\n    this._holes = isArrayResolved ? this._values.length - this.length() : 0;\n\n    if (!this._isResolved() &&\n        isArrayResolved &&\n        this._howMany > this._canPossiblyFulfill()) {\n        var message = \"(Promise.some) input array contains less than \" +\n                        this._howMany  + \" promises\";\n        this._reject(new RangeError(message));\n    }\n};\n\nSomePromiseArray.prototype.init = function SomePromiseArray$init() {\n    this._initialized = true;\n    this._init();\n};\n\nSomePromiseArray.prototype.setUnwrap = function SomePromiseArray$setUnwrap() {\n    this._unwrap = true;\n};\n\nSomePromiseArray.prototype.howMany = function SomePromiseArray$howMany() {\n    return this._howMany;\n};\n\nSomePromiseArray.prototype.setHowMany =\nfunction SomePromiseArray$setHowMany(count) {\n    if (this._isResolved()) return;\n    this._howMany = count;\n};\n\nSomePromiseArray.prototype._promiseFulfilled =\nfunction SomePromiseArray$_promiseFulfilled(value) {\n    if (this._isResolved()) return;\n    this._addFulfilled(value);\n    if (this._fulfilled() === this.howMany()) {\n        this._values.length = this.howMany();\n        if (this.howMany() === 1 && this._unwrap) {\n            this._resolve(this._values[0]);\n        }\n        else {\n            this._resolve(this._values);\n        }\n    }\n\n};\nSomePromiseArray.prototype._promiseRejected =\nfunction SomePromiseArray$_promiseRejected(reason) {\n    if (this._isResolved()) return;\n    this._addRejected(reason);\n    if (this.howMany() > this._canPossiblyFulfill()) {\n        if (this._values.length === this.length()) {\n            this._reject([]);\n        }\n        else {\n            this._reject(this._values.slice(this.length() + this._holes));\n        }\n    }\n};\n\nSomePromiseArray.prototype._fulfilled = function SomePromiseArray$_fulfilled() {\n    return this._totalResolved;\n};\n\nSomePromiseArray.prototype._rejected = function SomePromiseArray$_rejected() {\n    return this._values.length - this.length() - this._holes;\n};\n\nSomePromiseArray.prototype._addRejected =\nfunction SomePromiseArray$_addRejected(reason) {\n    this._values.push(reason);\n};\n\nSomePromiseArray.prototype._addFulfilled =\nfunction SomePromiseArray$_addFulfilled(value) {\n    this._values[this._totalResolved++] = value;\n};\n\nSomePromiseArray.prototype._canPossiblyFulfill =\nfunction SomePromiseArray$_canPossiblyFulfill() {\n    return this.length() - this._rejected();\n};\n\nreturn SomePromiseArray;\n};\n","# App state handler.\n#\n# Manages the navigation and top level app states.\n# AppStateStore listens to events broadcast by AppDispatcher,\n# acts upon relevant events by fetching/storing state and\n# rebroadcasts events to its listeners.\n#\n# For top level navigation, AppView listens to CHANGE events on\n# the AppStateStore. AppStateStore triggers CHANGE events when it\n# receives MENU_SELECT events from menu items via the AppDispatcher.\n#\n# TODO: refactor with state machine.\n# See http://statejs.org\n\nEventEmitter = require 'famous/core/EventEmitter'\nConstants = require 'constants/PeggConstants'\nAppDispatcher = require 'dispatchers/AppDispatcher'\n\n\nclass AppStateStore extends EventEmitter\n  _currentPageID: 'play'\n\n  changePage: (pageID) ->\n    @_currentPageID = pageID\n    @emit Constants.stores.CHANGE\n    # TODO: stash currentPageID in Parse or localStorage and\n    #   auto load previous app state when user returns to app.\n\n  getCurrentPageID: ->\n    @_currentPageID\n\n\nappstate = new AppStateStore\n\n# Register callback with AppDispatcher to be notified of events\nAppDispatcher.register (payload) ->\n  action = payload.action\n\n  # Pay attention to events relevant to AppStateStore\n  switch action.actionType\n    when Constants.actions.MENU_SELECT\n      appstate.changePage action.pageID\n\n\nmodule.exports = appstate\n","EventEmitter = require 'famous/core/EventEmitter'\nConstants = require 'constants/PeggConstants'\nAppDispatcher = require 'dispatchers/AppDispatcher'\nParse = require 'Parse'\n\n\nclass PlayStore extends EventEmitter\n  _game: null\n  _card: null\n\n  fetchGame: (gameID) ->\n    # TODO: if offline, load from localStorage\n    Sets = Parse.Object.extend(\"Sets\")\n    query = new Parse.Query(Sets)\n    #query.equalTo \"approved\", true\n    query.equalTo \"approved\", null\n    query.find\n      success: (results) =>\n        #debugger\n        @_game = results\n        @emit Constants.stores.CHANGE\n        return\n      error: (error) ->\n        console.log \"Error: \" + error.code + \" \" + error.message\n        return\n\n  saveAnswer: (choice) ->\n    console.log \"choice: \" + choice\n    #TODO: send data to Parse\n    @emit Constants.stores.CARD_ANSWERED\n\n  saveRating: (rating) ->\n    console.log \"rating: \" + rating\n      #TODO: send data to Parse\n    if @_card is \"qZxzk3ipSd\"\n      @emit Constants.stores.UNLOCK_ACHIEVED\n    @emit Constants.stores.CARD_RATED\n\n  saveStatusAck: ->\n    console.log \"yep\"\n    @emit Constants.stores.PLAY_CONTINUED\n\n  savePlay: (cardID) ->\n    console.log \"cardID: \" + cardID\n    @_card = cardID\n\n  getGame: ->\n    @_game\n\nplay = new PlayStore\n\n\n# Register callback with AppDispatcher to be notified of events\nAppDispatcher.register (payload) ->\n  action = payload.action\n\n  # Pay attention to events relevant to PlayStore\n  switch action.actionType\n    when Constants.actions.GAME_FETCH\n      play.fetchGame action.gameID\n    when Constants.actions.CARD_ANSWER\n      play.saveAnswer action.choice\n    when Constants.actions.CARD_RATE\n      play.saveRating action.rating\n    when Constants.actions.CARD_PICK\n      play.savePlay action.cardID\n    when Constants.actions.PLAY_CONTINUE\n      play.saveStatusAck()\n\n\nmodule.exports = play\n","require './scss/peggbox.scss'\n\nView = require 'famous/core/View'\nContainerSurface = require 'famous/surfaces/ContainerSurface'\nScrollview = require 'famous/views/Scrollview'\n\nListItemView = require 'views/ListItemView'\n\nclass ActivityView extends View\n  @DEFAULT_OPTIONS:\n    itemDensity: null\n\n  constructor: () ->\n    super\n    @init()\n\n  init: ->\n    @items = []\n\n  load: (data) ->\n\n    @items = data\n\n    surfaces = []\n    scrollview = new Scrollview\n      size: [window.innerWidth, window.innerHeight]\n    scrollview.sequenceFrom surfaces\n\n    i = 0\n    while i < @items.length\n      item = new ListItemView @items[i]\n      item.on 'scroll', =>\n        @_eventOutput.emit 'scroll'\n      item.pipe scrollview\n      surfaces.push item\n      i++\n\n\n\n    container = new ContainerSurface\n      size: [undefined, undefined]\n      properties:\n        overflow: \"hidden\"\n\n    container.add scrollview\n    @add container\n\n\n\nmodule.exports = ActivityView\n","// style-loader: Adds some css to the DOM by adding a <style> tag\nvar dispose = require(\"!/Users/auggernaut/Github/pegg/node_modules/style-loader/addStyle.js\")\n\t// The css code:\n\t(require(\"!!/Users/auggernaut/Github/pegg/node_modules/sass-loader/index.js?outputStyle=expanded&includePaths[]=./bower_components/!/Users/auggernaut/Github/pegg/src/app/views/scss/bandmenu.scss\"))\nif(module.hot) {\n\tmodule.hot.accept();\n\tmodule.hot.dispose(dispose);\n}","// style-loader: Adds some css to the DOM by adding a <style> tag\nvar dispose = require(\"!/Users/auggernaut/Github/pegg/node_modules/style-loader/addStyle.js\")\n\t// The css code:\n\t(require(\"!!/Users/auggernaut/Github/pegg/node_modules/sass-loader/index.js?outputStyle=expanded&includePaths[]=./bower_components/!/Users/auggernaut/Github/pegg/src/app/views/scss/card.scss\"))\nif(module.hot) {\n\tmodule.hot.accept();\n\tmodule.hot.dispose(dispose);\n}","// style-loader: Adds some css to the DOM by adding a <style> tag\nvar dispose = require(\"!/Users/auggernaut/Github/pegg/node_modules/style-loader/addStyle.js\")\n\t// The css code:\n\t(require(\"!!/Users/auggernaut/Github/pegg/node_modules/sass-loader/index.js?outputStyle=expanded&includePaths[]=./bower_components/!/Users/auggernaut/Github/pegg/src/app/views/scss/login.scss\"))\nif(module.hot) {\n\tmodule.hot.accept();\n\tmodule.hot.dispose(dispose);\n}","// style-loader: Adds some css to the DOM by adding a <style> tag\nvar dispose = require(\"!/Users/auggernaut/Github/pegg/node_modules/style-loader/addStyle.js\")\n\t// The css code:\n\t(require(\"!!/Users/auggernaut/Github/pegg/node_modules/sass-loader/index.js?outputStyle=expanded&includePaths[]=./bower_components/!/Users/auggernaut/Github/pegg/src/app/views/scss/tabmenu.scss\"))\nif(module.hot) {\n\tmodule.hot.accept();\n\tmodule.hot.dispose(dispose);\n}","// shim for using process in browser\n\nvar process = module.exports = {};\n\nprocess.nextTick = (function () {\n    var canSetImmediate = typeof window !== 'undefined'\n    && window.setImmediate;\n    var canPost = typeof window !== 'undefined'\n    && window.postMessage && window.addEventListener\n    ;\n\n    if (canSetImmediate) {\n        return function (f) { return window.setImmediate(f) };\n    }\n\n    if (canPost) {\n        var queue = [];\n        window.addEventListener('message', function (ev) {\n            var source = ev.source;\n            if ((source === window || source === null) && ev.data === 'process-tick') {\n                ev.stopPropagation();\n                if (queue.length > 0) {\n                    var fn = queue.shift();\n                    fn();\n                }\n            }\n        }, true);\n\n        return function nextTick(fn) {\n            queue.push(fn);\n            window.postMessage('process-tick', '*');\n        };\n    }\n\n    return function nextTick(fn) {\n        setTimeout(fn, 0);\n    };\n})();\n\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n}\n\n// TODO(shtylman)\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\n","\n/*\n * classList.js: Cross-browser full element.classList implementation.\n * 2011-06-15\n *\n * By Eli Grey, http://eligrey.com\n * Public Domain.\n * NO WARRANTY EXPRESSED OR IMPLIED. USE AT YOUR OWN RISK.\n */\n\n/*global self, document, DOMException */\n\n/*! @source http://purl.eligrey.com/github/classList.js/blob/master/classList.js*/\n\nif (typeof document !== \"undefined\" && !(\"classList\" in document.createElement(\"a\"))) {\n\n(function (view) {\n\n\"use strict\";\n\nvar\n      classListProp = \"classList\"\n    , protoProp = \"prototype\"\n    , elemCtrProto = (view.HTMLElement || view.Element)[protoProp]\n    , objCtr = Object\n    , strTrim = String[protoProp].trim || function () {\n        return this.replace(/^\\s+|\\s+$/g, \"\");\n    }\n    , arrIndexOf = Array[protoProp].indexOf || function (item) {\n        var\n              i = 0\n            , len = this.length\n        ;\n        for (; i < len; i++) {\n            if (i in this && this[i] === item) {\n                return i;\n            }\n        }\n        return -1;\n    }\n    // Vendors: please allow content code to instantiate DOMExceptions\n    , DOMEx = function (type, message) {\n        this.name = type;\n        this.code = DOMException[type];\n        this.message = message;\n    }\n    , checkTokenAndGetIndex = function (classList, token) {\n        if (token === \"\") {\n            throw new DOMEx(\n                  \"SYNTAX_ERR\"\n                , \"An invalid or illegal string was specified\"\n            );\n        }\n        if (/\\s/.test(token)) {\n            throw new DOMEx(\n                  \"INVALID_CHARACTER_ERR\"\n                , \"String contains an invalid character\"\n            );\n        }\n        return arrIndexOf.call(classList, token);\n    }\n    , ClassList = function (elem) {\n        var\n              trimmedClasses = strTrim.call(elem.className)\n            , classes = trimmedClasses ? trimmedClasses.split(/\\s+/) : []\n            , i = 0\n            , len = classes.length\n        ;\n        for (; i < len; i++) {\n            this.push(classes[i]);\n        }\n        this._updateClassName = function () {\n            elem.className = this.toString();\n        };\n    }\n    , classListProto = ClassList[protoProp] = []\n    , classListGetter = function () {\n        return new ClassList(this);\n    }\n;\n// Most DOMException implementations don't allow calling DOMException's toString()\n// on non-DOMExceptions. Error's toString() is sufficient here.\nDOMEx[protoProp] = Error[protoProp];\nclassListProto.item = function (i) {\n    return this[i] || null;\n};\nclassListProto.contains = function (token) {\n    token += \"\";\n    return checkTokenAndGetIndex(this, token) !== -1;\n};\nclassListProto.add = function (token) {\n    token += \"\";\n    if (checkTokenAndGetIndex(this, token) === -1) {\n        this.push(token);\n        this._updateClassName();\n    }\n};\nclassListProto.remove = function (token) {\n    token += \"\";\n    var index = checkTokenAndGetIndex(this, token);\n    if (index !== -1) {\n        this.splice(index, 1);\n        this._updateClassName();\n    }\n};\nclassListProto.toggle = function (token) {\n    token += \"\";\n    if (checkTokenAndGetIndex(this, token) === -1) {\n        this.add(token);\n    } else {\n        this.remove(token);\n    }\n};\nclassListProto.toString = function () {\n    return this.join(\" \");\n};\n\nif (objCtr.defineProperty) {\n    var classListPropDesc = {\n          get: classListGetter\n        , enumerable: true\n        , configurable: true\n    };\n    try {\n        objCtr.defineProperty(elemCtrProto, classListProp, classListPropDesc);\n    } catch (ex) { // IE 8 doesn't support enumerable:true\n        if (ex.number === -0x7FF5EC54) {\n            classListPropDesc.enumerable = false;\n            objCtr.defineProperty(elemCtrProto, classListProp, classListPropDesc);\n        }\n    }\n} else if (objCtr[protoProp].__defineGetter__) {\n    elemCtrProto.__defineGetter__(classListProp, classListGetter);\n}\n\n}(self));\n\n}\n","if (!Function.prototype.bind) {\n    Function.prototype.bind = function (oThis) {\n        if (typeof this !== \"function\") {\n            // closest thing possible to the ECMAScript 5 internal IsCallable function\n            throw new TypeError(\"Function.prototype.bind - what is trying to be bound is not callable\");\n        }\n\n        var aArgs = Array.prototype.slice.call(arguments, 1),\n        fToBind = this,\n        fNOP = function () {},\n        fBound = function () {\n            return fToBind.apply(this instanceof fNOP && oThis\n                ? this\n                : oThis,\n                aArgs.concat(Array.prototype.slice.call(arguments)));\n        };\n\n        fNOP.prototype = this.prototype;\n        fBound.prototype = new fNOP();\n\n        return fBound;\n    };\n}\n","// adds requestAnimationFrame functionality\n// Source: http://strd6.com/2011/05/better-window-requestanimationframe-shim/\n\nwindow.requestAnimationFrame || (window.requestAnimationFrame =\n  window.webkitRequestAnimationFrame ||\n  window.mozRequestAnimationFrame    ||\n  window.oRequestAnimationFrame      ||\n  window.msRequestAnimationFrame     ||\n  function(callback, element) {\n    return window.setTimeout(function() {\n      callback(+new Date());\n  }, 1000 / 60);\n});\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n *\n * Owner: mark@famo.us\n * @license MPL 2.0\n * @copyright Famous Industries, Inc. 2014\n */\n\ndefine(function(require, exports, module) {\n\n    /**\n     * Internal helper object to Context that handles the process of\n     *   creating and allocating DOM elements within a managed div.\n     *   Private.\n     *\n     * @class ElementAllocator\n     * @constructor\n     * @private\n     * @param {Node} container document element in which Famo.us content will be inserted\n     */\n    function ElementAllocator(container) {\n        if (!container) container = document.createDocumentFragment();\n        this.container = container;\n        this.detachedNodes = {};\n        this.nodeCount = 0;\n    }\n\n    /**\n     * Move the document elements from their original container to a new one.\n     *\n     * @private\n     * @method migrate\n     *\n     * @param {Node} container document element to which Famo.us content will be migrated\n     */\n    ElementAllocator.prototype.migrate = function migrate(container) {\n        var oldContainer = this.container;\n        if (container === oldContainer) return;\n\n        if (oldContainer instanceof DocumentFragment) {\n            container.appendChild(oldContainer);\n        }\n        else {\n            while (oldContainer.hasChildNodes()) {\n                container.appendChild(oldContainer.removeChild(oldContainer.firstChild));\n            }\n        }\n\n        this.container = container;\n    };\n\n    /**\n     * Allocate an element of specified type from the pool.\n     *\n     * @private\n     * @method allocate\n     *\n     * @param {string} type type of element, e.g. 'div'\n     * @return {Node} allocated document element\n     */\n    ElementAllocator.prototype.allocate = function allocate(type) {\n        type = type.toLowerCase();\n        if (!(type in this.detachedNodes)) this.detachedNodes[type] = [];\n        var nodeStore = this.detachedNodes[type];\n        var result;\n        if (nodeStore.length > 0) {\n            result = nodeStore.pop();\n        }\n        else {\n            result = document.createElement(type);\n            this.container.appendChild(result);\n        }\n        this.nodeCount++;\n        return result;\n    };\n\n    /**\n     * De-allocate an element of specified type to the pool.\n     *\n     * @private\n     * @method deallocate\n     *\n     * @param {Node} element document element to deallocate\n     */\n    ElementAllocator.prototype.deallocate = function deallocate(element) {\n        var nodeType = element.nodeName.toLowerCase();\n        var nodeStore = this.detachedNodes[nodeType];\n        nodeStore.push(element);\n        this.nodeCount--;\n    };\n\n    /**\n     * Get count of total allocated nodes in the document.\n     *\n     * @private\n     * @method getNodeCount\n     *\n     * @return {Number} total node count\n     */\n    ElementAllocator.prototype.getNodeCount = function getNodeCount() {\n        return this.nodeCount;\n    };\n\n    module.exports = ElementAllocator;\n});\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n *\n * Owner: mark@famo.us\n * @license MPL 2.0\n * @copyright Famous Industries, Inc. 2014\n */\n\ndefine(function(require, exports, module) {\n    var Context = require('./Context');\n    var Transform = require('./Transform');\n    var Surface = require('./Surface');\n\n    /**\n     * A Context designed to contain surfaces and set properties\n     *   to be applied to all of them at once.\n     *   This is primarily used for specific performance improvements in the rendering engine.\n     *   Private.\n     *\n     * @private\n     * @class Group\n     * @extends Surface\n     * @constructor\n     * @param {Object} [options] Surface options array (see Surface})\n     */\n    function Group(options) {\n        Surface.call(this, options);\n        this._shouldRecalculateSize = false;\n        this._container = document.createDocumentFragment();\n        this.context = new Context(this._container);\n        this.setContent(this._container);\n        this._groupSize = [undefined, undefined];\n    }\n\n    /** @const */\n    Group.SIZE_ZERO = [0, 0];\n\n    Group.prototype = Object.create(Surface.prototype);\n    Group.prototype.elementType = 'div';\n    Group.prototype.elementClass = 'famous-group';\n\n    /**\n     * Add renderables to this component's render tree.\n     *\n     * @method add\n     * @private\n     * @param {Object} obj renderable object\n     * @return {RenderNode} Render wrapping provided object, if not already a RenderNode\n     */\n    Group.prototype.add = function add() {\n        return this.context.add.apply(this.context, arguments);\n    };\n\n    /**\n     * Generate a render spec from the contents of this component.\n     *\n     * @private\n     * @method render\n     * @return {Number} Render spec for this component\n     */\n    Group.prototype.render = function render() {\n        return Surface.prototype.render.call(this);\n    };\n\n    /**\n     * Place the document element this component manages into the document.\n     *\n     * @private\n     * @method deploy\n     * @param {Node} target document parent of this container\n     */\n    Group.prototype.deploy = function deploy(target) {\n        this.context.migrate(target);\n    };\n\n    /**\n     * Remove this component and contained content from the document\n     *\n     * @private\n     * @method recall\n     *\n     * @param {Node} target node to which the component was deployed\n     */\n    Group.prototype.recall = function recall(target) {\n        this._container = document.createDocumentFragment();\n        this.context.migrate(this._container);\n    };\n\n    /**\n     * Apply changes from this component to the corresponding document element.\n     *\n     * @private\n     * @method commit\n     *\n     * @param {Object} context update spec passed in from above in the render tree.\n     */\n    Group.prototype.commit = function commit(context) {\n        var transform = context.transform;\n        var origin = context.origin;\n        var opacity = context.opacity;\n        var size = context.size;\n        var result = Surface.prototype.commit.call(this, {\n            allocator: context.allocator,\n            transform: Transform.thenMove(transform, [-origin[0] * size[0], -origin[1] * size[1], 0]),\n            opacity: opacity,\n            origin: origin,\n            size: Group.SIZE_ZERO\n        });\n        if (size[0] !== this._groupSize[0] || size[1] !== this._groupSize[1]) {\n            this._groupSize[0] = size[0];\n            this._groupSize[1] = size[1];\n            this.context.setSize(size);\n        }\n        this.context.update({\n            transform: Transform.translate(-origin[0] * size[0], -origin[1] * size[1], 0),\n            origin: origin,\n            size: size\n        });\n        return result;\n    };\n\n    module.exports = Group;\n});\n","\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n *\n * Owner: mark@famo.us\n * @license MPL 2.0\n * @copyright Famous Industries, Inc. 2014\n */\n\ndefine(function(require, exports, module) {\n    var Transform = require('./Transform');\n\n    /**\n     *\n     * This object translates the rendering instructions (\"render specs\")\n     *   that renderable components generate into document update\n     *   instructions (\"update specs\").  Private.\n     *\n     * @private\n     * @class SpecParser\n     * @constructor\n     */\n    function SpecParser() {\n        this.result = {};\n    }\n    SpecParser._instance = new SpecParser();\n\n    /**\n     * Convert a render spec coming from the context's render chain to an\n     *    update spec for the update chain. This is the only major entry point\n     *    for a consumer of this class.\n     *\n     * @method parse\n     * @static\n     * @private\n     *\n     * @param {renderSpec} spec input render spec\n     * @param {Object} context context to do the parse in\n     * @return {Object} the resulting update spec (if no callback\n     *   specified, else none)\n     */\n    SpecParser.parse = function parse(spec, context) {\n        return SpecParser._instance.parse(spec, context);\n    };\n\n    /**\n     * Convert a renderSpec coming from the context's render chain to an update\n     *    spec for the update chain. This is the only major entrypoint for a\n     *    consumer of this class.\n     *\n     * @method parse\n     *\n     * @private\n     * @param {renderSpec} spec input render spec\n     * @param {Context} context\n     * @return {updateSpec} the resulting update spec\n     */\n    SpecParser.prototype.parse = function parse(spec, context) {\n        this.reset();\n        this._parseSpec(spec, context, Transform.identity);\n        return this.result;\n    };\n\n    /**\n     * Prepare SpecParser for re-use (or first use) by setting internal state\n     *  to blank.\n     *\n     * @private\n     * @method reset\n     */\n    SpecParser.prototype.reset = function reset() {\n        this.result = {};\n    };\n\n    // Multiply matrix M by vector v\n    function _vecInContext(v, m) {\n        return [\n            v[0] * m[0] + v[1] * m[4] + v[2] * m[8],\n            v[0] * m[1] + v[1] * m[5] + v[2] * m[9],\n            v[0] * m[2] + v[1] * m[6] + v[2] * m[10]\n        ];\n    }\n\n    var _originZeroZero = [0, 0];\n\n    // From the provided renderSpec tree, recursively compose opacities,\n    //    origins, transforms, and sizes corresponding to each surface id from\n    //    the provided renderSpec tree structure. On completion, those\n    //    properties of 'this' object should be ready to use to build an\n    //    updateSpec.\n    SpecParser.prototype._parseSpec = function _parseSpec(spec, parentContext, sizeContext) {\n        var id;\n        var target;\n        var transform;\n        var opacity;\n        var origin;\n        var align;\n        var size;\n\n        if (typeof spec === 'number') {\n            id = spec;\n            transform = parentContext.transform;\n            align = parentContext.align || parentContext.origin;\n            if (parentContext.size && align && (align[0] || align[1])) {\n                var alignAdjust = [align[0] * parentContext.size[0], align[1] * parentContext.size[1], 0];\n                transform = Transform.thenMove(transform, _vecInContext(alignAdjust, sizeContext));\n            }\n            this.result[id] = {\n                transform: transform,\n                opacity: parentContext.opacity,\n                origin: parentContext.origin || _originZeroZero,\n                align: parentContext.align || parentContext.origin || _originZeroZero,\n                size: parentContext.size\n            };\n        }\n        else if (!spec) { // placed here so 0 will be cached earlier\n            return;\n        }\n        else if (spec instanceof Array) {\n            for (var i = 0; i < spec.length; i++) {\n                this._parseSpec(spec[i], parentContext, sizeContext);\n            }\n        }\n        else {\n            target = spec.target;\n            transform = parentContext.transform;\n            opacity = parentContext.opacity;\n            origin = parentContext.origin;\n            align = parentContext.align;\n            size = parentContext.size;\n            var nextSizeContext = sizeContext;\n\n            if (spec.opacity !== undefined) opacity = parentContext.opacity * spec.opacity;\n            if (spec.transform) transform = Transform.multiply(parentContext.transform, spec.transform);\n            if (spec.origin) {\n                origin = spec.origin;\n                nextSizeContext = parentContext.transform;\n            }\n            if (spec.align) align = spec.align;\n            if (spec.size) {\n                var parentSize = parentContext.size;\n                size = [\n                    spec.size[0] !== undefined ? spec.size[0] : parentSize[0],\n                    spec.size[1] !== undefined ? spec.size[1] : parentSize[1]\n                ];\n                if (parentSize) {\n                    if (!align) align = origin;\n                    if (align && (align[0] || align[1])) transform = Transform.thenMove(transform, _vecInContext([align[0] * parentSize[0], align[1] * parentSize[1], 0], sizeContext));\n                    if (origin && (origin[0] || origin[1])) transform = Transform.moveThen([-origin[0] * size[0], -origin[1] * size[1], 0], transform);\n                }\n                nextSizeContext = parentContext.transform;\n                origin = null;\n                align = null;\n            }\n\n            this._parseSpec(target, {\n                transform: transform,\n                opacity: opacity,\n                origin: origin,\n                align: align,\n                size: size\n            }, nextSizeContext);\n        }\n    };\n\n    module.exports = SpecParser;\n});\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n *\n * Owner: mark@famo.us\n * @license MPL 2.0\n * @copyright Famous Industries, Inc. 2014\n */\n\ndefine(function(require, exports, module) {\n    var EventHandler = require('famous/core/EventHandler');\n\n    /**\n     * Combines multiple types of sync classes (e.g. mouse, touch,\n     *  scrolling) into one standardized interface for inclusion in widgets.\n     *\n     *  Sync classes are first registered with a key, and then can be accessed\n     *  globally by key.\n     *\n     *  Emits 'start', 'update' and 'end' events as a union of the sync class\n     *  providers.\n     *\n     * @class GenericSync\n     * @constructor\n     * @param syncs {Object|Array} object with fields {sync key : sync options}\n     *    or an array of registered sync keys\n     * @param [options] {Object|Array} options object to set on all syncs\n     */\n    function GenericSync(syncs, options) {\n        this._eventInput = new EventHandler();\n        this._eventOutput = new EventHandler();\n\n        EventHandler.setInputHandler(this, this._eventInput);\n        EventHandler.setOutputHandler(this, this._eventOutput);\n\n        this._syncs = {};\n        if (syncs) this.addSync(syncs);\n        if (options) this.setOptions(options);\n    }\n\n    GenericSync.DIRECTION_X = 0;\n    GenericSync.DIRECTION_Y = 1;\n    GenericSync.DIRECTION_Z = 2;\n\n    // Global registry of sync classes. Append only.\n    var registry = {};\n\n    /**\n     * Register a global sync class with an identifying key\n     *\n     * @static\n     * @method register\n     *\n     * @param syncObject {Object} an object of {sync key : sync options} fields\n     */\n    GenericSync.register = function register(syncObject) {\n        for (var key in syncObject){\n            if (registry[key]){\n                if (registry[key] === syncObject[key]) return; // redundant registration\n                else throw new Error('this key is registered to a different sync class');\n            }\n            else registry[key] = syncObject[key];\n        }\n    };\n\n    /**\n     * Helper to set options on all sync instances\n     *\n     * @method setOptions\n     * @param options {Object} options object\n     */\n    GenericSync.prototype.setOptions = function(options) {\n        for (var key in this._syncs){\n            this._syncs[key].setOptions(options);\n        }\n    };\n\n    /**\n     * Pipe events to a sync class\n     *\n     * @method pipeSync\n     * @param key {String} identifier for sync class\n     */\n    GenericSync.prototype.pipeSync = function pipeToSync(key) {\n        var sync = this._syncs[key];\n        this._eventInput.pipe(sync);\n        sync.pipe(this._eventOutput);\n    };\n\n    /**\n     * Unpipe events from a sync class\n     *\n     * @method unpipeSync\n     * @param key {String} identifier for sync class\n     */\n    GenericSync.prototype.unpipeSync = function unpipeFromSync(key) {\n        var sync = this._syncs[key];\n        this._eventInput.unpipe(sync);\n        sync.unpipe(this._eventOutput);\n    };\n\n    function _addSingleSync(key, options) {\n        if (!registry[key]) return;\n        this._syncs[key] = new (registry[key])(options);\n        this.pipeSync(key);\n    }\n\n    /**\n     * Add a sync class to from the registered classes\n     *\n     * @method addSync\n     * @param syncs {Object|Array.String} an array of registered sync keys\n     *    or an object with fields {sync key : sync options}\n     */\n    GenericSync.prototype.addSync = function addSync(syncs) {\n        if (syncs instanceof Array)\n            for (var i = 0; i < syncs.length; i++)\n                _addSingleSync.call(this, syncs[i]);\n        else if (syncs instanceof Object)\n            for (var key in syncs)\n                _addSingleSync.call(this, key, syncs[key]);\n    };\n\n    module.exports = GenericSync;\n});\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n *\n * Owner: mark@famo.us\n * @license MPL 2.0\n * @copyright Famous Industries, Inc. 2014\n */\n\ndefine(function(require, exports, module) {\n    var EventHandler = require('famous/core/EventHandler');\n    var Engine = require('famous/core/Engine');\n\n    /**\n     * Handles piped in mousewheel events.\n     *   Emits 'start', 'update', and 'end' events with payloads including:\n     *   delta: change since last position,\n     *   position: accumulated deltas,\n     *   velocity: speed of change in pixels per ms,\n     *   slip: true (unused).\n     *\n     *   Can be used as delegate of GenericSync.\n     *\n     * @class ScrollSync\n     * @constructor\n     * @param {Object} [options] overrides of default options\n     * @param {Number} [options.direction] Pay attention to x changes (ScrollSync.DIRECTION_X),\n     *   y changes (ScrollSync.DIRECTION_Y) or both (undefined)\n     * @param {Number} [options.minimumEndSpeed] End speed calculation floors at this number, in pixels per ms\n     * @param {boolean} [options.rails] whether to snap position calculations to nearest axis\n     * @param {Number | Array.Number} [options.scale] scale outputs in by scalar or pair of scalars\n     * @param {Number} [options.stallTime] reset time for velocity calculation in ms\n     */\n    function ScrollSync(options) {\n        this.options = Object.create(ScrollSync.DEFAULT_OPTIONS);\n        if (options) this.setOptions(options);\n\n        this._payload = {\n            delta    : null,\n            position : null,\n            velocity : null,\n            slip     : true\n        };\n\n        this._eventInput = new EventHandler();\n        this._eventOutput = new EventHandler();\n\n        EventHandler.setInputHandler(this, this._eventInput);\n        EventHandler.setOutputHandler(this, this._eventOutput);\n\n        this._position = (this.options.direction === undefined) ? [0,0] : 0;\n        this._prevTime = undefined;\n        this._prevVel = undefined;\n        this._eventInput.on('mousewheel', _handleMove.bind(this));\n        this._eventInput.on('wheel', _handleMove.bind(this));\n        this._inProgress = false;\n        this._loopBound = false;\n    }\n\n    ScrollSync.DEFAULT_OPTIONS = {\n        direction: undefined,\n        minimumEndSpeed: Infinity,\n        rails: false,\n        scale: 1,\n        stallTime: 50,\n        lineHeight: 40\n    };\n\n    ScrollSync.DIRECTION_X = 0;\n    ScrollSync.DIRECTION_Y = 1;\n\n    var MINIMUM_TICK_TIME = 8;\n\n    var _now = Date.now;\n\n    function _newFrame() {\n        if (this._inProgress && (_now() - this._prevTime) > this.options.stallTime) {\n            this._position = (this.options.direction === undefined) ? [0,0] : 0;\n            this._inProgress = false;\n\n            var finalVel = (Math.abs(this._prevVel) >= this.options.minimumEndSpeed)\n                ? this._prevVel\n                : 0;\n\n            var payload = this._payload;\n            payload.position = this._position;\n            payload.velocity = finalVel;\n            payload.slip = true;\n\n            this._eventOutput.emit('end', payload);\n        }\n    }\n\n    function _handleMove(event) {\n        event.preventDefault();\n\n        if (!this._inProgress) {\n            this._inProgress = true;\n\n            payload = this._payload;\n            payload.slip = true;\n            payload.position = this._position;\n            payload.clientX = event.clientX;\n            payload.clientY = event.clientY;\n            payload.offsetX = event.offsetX;\n            payload.offsetY = event.offsetY;\n            this._eventOutput.emit('start', payload);\n            if (!this._loopBound) {\n                Engine.on('prerender', _newFrame.bind(this));\n                this._loopBound = true;\n            }\n        }\n\n        var currTime = _now();\n        var prevTime = this._prevTime || currTime;\n\n        var diffX = (event.wheelDeltaX !== undefined) ? event.wheelDeltaX : -event.deltaX;\n        var diffY = (event.wheelDeltaY !== undefined) ? event.wheelDeltaY : -event.deltaY;\n\n        if (event.deltaMode === 1) { // units in lines, not pixels\n            diffX *= this.options.lineHeight;\n            diffY *= this.options.lineHeight;\n        }\n\n        if (this.options.rails) {\n            if (Math.abs(diffX) > Math.abs(diffY)) diffY = 0;\n            else diffX = 0;\n        }\n\n        var diffTime = Math.max(currTime - prevTime, MINIMUM_TICK_TIME); // minimum tick time\n\n        var velX = diffX / diffTime;\n        var velY = diffY / diffTime;\n\n        var scale = this.options.scale;\n        var nextVel;\n        var nextDelta;\n\n        if (this.options.direction === ScrollSync.DIRECTION_X) {\n            nextDelta = scale * diffX;\n            nextVel = scale * velX;\n            this._position += nextDelta;\n        }\n        else if (this.options.direction === ScrollSync.DIRECTION_Y) {\n            nextDelta = scale * diffY;\n            nextVel = scale * velY;\n            this._position += nextDelta;\n        }\n        else {\n            nextDelta = [scale * diffX, scale * diffY];\n            nextVel = [scale * velX, scale * velY];\n            this._position[0] += nextDelta[0];\n            this._position[1] += nextDelta[1];\n        }\n\n        var payload = this._payload;\n        payload.delta    = nextDelta;\n        payload.velocity = nextVel;\n        payload.position = this._position;\n        payload.slip     = true;\n\n        this._eventOutput.emit('update', payload);\n\n        this._prevTime = currTime;\n        this._prevVel = nextVel;\n    }\n\n    /**\n     * Return entire options dictionary, including defaults.\n     *\n     * @method getOptions\n     * @return {Object} configuration options\n     */\n    ScrollSync.prototype.getOptions = function getOptions() {\n        return this.options;\n    };\n\n    /**\n     * Set internal options, overriding any default options\n     *\n     * @method setOptions\n     *\n     * @param {Object} [options] overrides of default options\n     * @param {Number} [options.minimimEndSpeed] If final velocity smaller than this, round down to 0.\n     * @param {Number} [options.stallTime] ms of non-motion before 'end' emitted\n     * @param {Number} [options.rails] whether to constrain to nearest axis.\n     * @param {Number} [options.direction] ScrollSync.DIRECTION_X, DIRECTION_Y -\n     *    pay attention to one specific direction.\n     * @param {Number} [options.scale] constant factor to scale velocity output\n     */\n    ScrollSync.prototype.setOptions = function setOptions(options) {\n        if (options.direction !== undefined) this.options.direction = options.direction;\n        if (options.minimumEndSpeed !== undefined) this.options.minimumEndSpeed = options.minimumEndSpeed;\n        if (options.rails !== undefined) this.options.rails = options.rails;\n        if (options.scale !== undefined) this.options.scale = options.scale;\n        if (options.stallTime !== undefined) this.options.stallTime = options.stallTime;\n    };\n\n    module.exports = ScrollSync;\n});\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n *\n * Owner: mark@famo.us\n * @license MPL 2.0\n * @copyright Famous Industries, Inc. 2014\n */\n\ndefine(function(require, exports, module) {\n    var TouchTracker = require('./TouchTracker');\n    var EventHandler = require('famous/core/EventHandler');\n\n    /**\n     * Handles piped in touch events. Emits 'start', 'update', and 'events'\n     *   events with position, velocity, acceleration, and touch id.\n     *   Useful for dealing with inputs on touch devices.\n     *\n     *\n     * @class TouchSync\n     * @constructor\n     *\n     * @param [options] {Object}             default options overrides\n     * @param [options.direction] {Number}   read from a particular axis\n     * @param [options.rails] {Boolean}      read from axis with greatest differential\n     * @param [options.scale] {Number}       constant factor to scale velocity output\n     */\n    function TouchSync(options) {\n        this.options =  Object.create(TouchSync.DEFAULT_OPTIONS);\n        if (options) this.setOptions(options);\n\n        this._eventOutput = new EventHandler();\n        this._touchTracker = new TouchTracker();\n\n        EventHandler.setOutputHandler(this, this._eventOutput);\n        EventHandler.setInputHandler(this, this._touchTracker);\n\n        this._touchTracker.on('trackstart', _handleStart.bind(this));\n        this._touchTracker.on('trackmove', _handleMove.bind(this));\n        this._touchTracker.on('trackend', _handleEnd.bind(this));\n\n        this._payload = {\n            delta    : null,\n            position : null,\n            velocity : null,\n            clientX  : undefined,\n            clientY  : undefined,\n            count    : 0,\n            touch    : undefined\n        };\n\n        this._position = null; // to be deprecated\n    }\n\n    TouchSync.DEFAULT_OPTIONS = {\n        direction: undefined,\n        rails: false,\n        scale: 1\n    };\n\n    TouchSync.DIRECTION_X = 0;\n    TouchSync.DIRECTION_Y = 1;\n\n    var MINIMUM_TICK_TIME = 8;\n\n    function _clearPayload() {\n        var payload = this._payload;\n        payload.position = null;\n        payload.velocity = null;\n        payload.clientX  = undefined;\n        payload.clientY  = undefined;\n        payload.count    = undefined;\n        payload.touch    = undefined;\n    }\n\n    // handle 'trackstart'\n    function _handleStart(data) {\n        _clearPayload.call(this);\n\n        this._position = (this.options.direction !== undefined) ? 0 : [0, 0];\n\n        var payload = this._payload;\n        payload.count = data.count;\n        payload.touch = data.identifier;\n\n        this._eventOutput.emit('start', payload);\n    }\n\n    // handle 'trackmove'\n    function _handleMove(data) {\n        var history = data.history;\n\n        var currHistory = history[history.length - 1];\n        var prevHistory = history[history.length - 2];\n\n        var prevTime = prevHistory.timestamp;\n        var currTime = currHistory.timestamp;\n\n        var diffX = currHistory.x - prevHistory.x;\n        var diffY = currHistory.y - prevHistory.y;\n\n        if (this.options.rails) {\n            if (Math.abs(diffX) > Math.abs(diffY)) diffY = 0;\n            else diffX = 0;\n        }\n\n        var diffTime = Math.max(currTime - prevTime, MINIMUM_TICK_TIME);\n\n        var velX = diffX / diffTime;\n        var velY = diffY / diffTime;\n\n        var scale = this.options.scale;\n        var nextVel;\n        var nextDelta;\n\n        if (this.options.direction === TouchSync.DIRECTION_X) {\n            nextDelta = scale * diffX;\n            nextVel = scale * velX;\n            this._position += nextDelta;\n        }\n        else if (this.options.direction === TouchSync.DIRECTION_Y) {\n            nextDelta = scale * diffY;\n            nextVel = scale * velY;\n            this._position += nextDelta;\n        }\n        else {\n            nextDelta = [scale * diffX, scale * diffY];\n            nextVel = [scale * velX, scale * velY];\n            this._position[0] += nextDelta[0];\n            this._position[1] += nextDelta[1];\n        }\n\n        var payload = this._payload;\n        payload.delta    = nextDelta;\n        payload.velocity = nextVel;\n        payload.position = this._position;\n        payload.clientX  = data.x;\n        payload.clientY  = data.y;\n        payload.count    = data.count;\n        payload.touch    = data.identifier;\n\n        this._eventOutput.emit('update', payload);\n    }\n\n    // handle 'trackend'\n    function _handleEnd(data) {\n        var nextVel = (this.options.direction !== undefined) ? 0 : [0, 0];\n        var history = data.history;\n        var count = data.count;\n        if (history.length > 1) {\n            var currHistory = history[history.length - 1];\n            var prevHistory = history[history.length - 2];\n\n            var prevTime = prevHistory.timestamp;\n            var currTime = currHistory.timestamp;\n\n            var diffX = currHistory.x - prevHistory.x;\n            var diffY = currHistory.y - prevHistory.y;\n\n            if (this.options.rails) {\n                if (Math.abs(diffX) > Math.abs(diffY)) diffY = 0;\n                else diffX = 0;\n            }\n\n            var diffTime = Math.max(currTime - prevTime, MINIMUM_TICK_TIME);\n            var velX = diffX / diffTime;\n            var velY = diffY / diffTime;\n            var scale = this.options.scale;\n\n            if (this.options.direction === TouchSync.DIRECTION_X) nextVel = scale * velX;\n            else if (this.options.direction === TouchSync.DIRECTION_Y) nextVel = scale * velY;\n            else nextVel = [scale * velX, scale * velY];\n        }\n\n        var payload = this._payload;\n        payload.velocity = nextVel;\n        payload.clientX  = data.x;\n        payload.clientY  = data.y;\n        payload.count    = count;\n        payload.touch    = data.identifier;\n\n        this._eventOutput.emit('end', payload);\n    }\n\n    /**\n     * Set internal options, overriding any default options\n     *\n     * @method setOptions\n     *\n     * @param [options] {Object}             default options overrides\n     * @param [options.direction] {Number}   read from a particular axis\n     * @param [options.rails] {Boolean}      read from axis with greatest differential\n     * @param [options.scale] {Number}       constant factor to scale velocity output\n     */\n    TouchSync.prototype.setOptions = function setOptions(options) {\n        if (options.direction !== undefined) this.options.direction = options.direction;\n        if (options.rails !== undefined) this.options.rails = options.rails;\n        if (options.scale !== undefined) this.options.scale = options.scale;\n    };\n\n    /**\n     * Return entire options dictionary, including defaults.\n     *\n     * @method getOptions\n     * @return {Object} configuration options\n     */\n    TouchSync.prototype.getOptions = function getOptions() {\n        return this.options;\n    };\n\n    module.exports = TouchSync;\n});\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n *\n * Owner: mark@famo.us\n * @license MPL 2.0\n * @copyright Famous Industries, Inc. 2014\n */\n\ndefine(function(require, exports, module) {\n    var EventHandler = require('famous/core/EventHandler');\n\n    var _now = Date.now;\n\n    function _timestampTouch(touch, event, history) {\n        return {\n            x: touch.clientX,\n            y: touch.clientY,\n            identifier : touch.identifier,\n            origin: event.origin,\n            timestamp: _now(),\n            count: event.touches.length,\n            history: history\n        };\n    }\n\n    function _handleStart(event) {\n        for (var i = 0; i < event.changedTouches.length; i++) {\n            var touch = event.changedTouches[i];\n            var data = _timestampTouch(touch, event, null);\n            this.eventOutput.emit('trackstart', data);\n            if (!this.selective && !this.touchHistory[touch.identifier]) this.track(data);\n        }\n    }\n\n    function _handleMove(event) {\n        for (var i = 0; i < event.changedTouches.length; i++) {\n            var touch = event.changedTouches[i];\n            var history = this.touchHistory[touch.identifier];\n            if (history) {\n                var data = _timestampTouch(touch, event, history);\n                this.touchHistory[touch.identifier].push(data);\n                this.eventOutput.emit('trackmove', data);\n            }\n        }\n    }\n\n    function _handleEnd(event) {\n        for (var i = 0; i < event.changedTouches.length; i++) {\n            var touch = event.changedTouches[i];\n            var history = this.touchHistory[touch.identifier];\n            if (history) {\n                var data = _timestampTouch(touch, event, history);\n                this.eventOutput.emit('trackend', data);\n                delete this.touchHistory[touch.identifier];\n            }\n        }\n    }\n\n    function _handleUnpipe() {\n        for (var i in this.touchHistory) {\n            var history = this.touchHistory[i];\n            this.eventOutput.emit('trackend', {\n                touch: history[history.length - 1].touch,\n                timestamp: Date.now(),\n                count: 0,\n                history: history\n            });\n            delete this.touchHistory[i];\n        }\n    }\n\n    /**\n     * Helper to TouchSync – tracks piped in touch events, organizes touch\n     *   events by ID, and emits track events back to TouchSync.\n     *   Emits 'trackstart', 'trackmove', and 'trackend' events upstream.\n     *\n     * @class TouchTracker\n     * @constructor\n     * @param {Boolean} selective if false, save state for each touch.\n     */\n    function TouchTracker(selective) {\n        this.selective = selective;\n        this.touchHistory = {};\n\n        this.eventInput = new EventHandler();\n        this.eventOutput = new EventHandler();\n\n        EventHandler.setInputHandler(this, this.eventInput);\n        EventHandler.setOutputHandler(this, this.eventOutput);\n\n        this.eventInput.on('touchstart', _handleStart.bind(this));\n        this.eventInput.on('touchmove', _handleMove.bind(this));\n        this.eventInput.on('touchend', _handleEnd.bind(this));\n        this.eventInput.on('touchcancel', _handleEnd.bind(this));\n        this.eventInput.on('unpipe', _handleUnpipe.bind(this));\n    }\n\n    /**\n     * Record touch data, if selective is false.\n     * @private\n     * @method track\n     * @param {Object} data touch data\n     */\n    TouchTracker.prototype.track = function track(data) {\n        this.touchHistory[data.identifier] = [data];\n    };\n\n    module.exports = TouchTracker;\n});\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n *\n * Owner: david@famo.us\n * @license MPL 2.0\n * @copyright Famous Industries, Inc. 2014\n */\n\ndefine(function(require, exports, module) {\n    var Force = require('./Force');\n\n    /**\n     * Drag is a force that opposes velocity. Attach it to the physics engine\n     * to slow down a physics body in motion.\n     *\n     * @class Drag\n     * @constructor\n     * @extends Force\n     * @param {Object} options options to set on drag\n     */\n    function Drag(options) {\n        this.options = Object.create(this.constructor.DEFAULT_OPTIONS);\n        if (options) this.setOptions(options);\n\n        Force.call(this);\n    }\n\n    Drag.prototype = Object.create(Force.prototype);\n    Drag.prototype.constructor = Drag;\n\n    /**\n     * @property Drag.FORCE_FUNCTIONS\n     * @type Object\n     * @protected\n     * @static\n     */\n    Drag.FORCE_FUNCTIONS = {\n\n        /**\n         * A drag force proportional to the velocity\n         * @attribute LINEAR\n         * @type Function\n         * @param {Vector} velocity\n         * @return {Vector} drag force\n         */\n        LINEAR : function(velocity) {\n            return velocity;\n        },\n\n        /**\n         * A drag force proportional to the square of the velocity\n         * @attribute QUADRATIC\n         * @type Function\n         * @param {Vector} velocity\n         * @return {Vector} drag force\n         */\n        QUADRATIC : function(velocity) {\n            return velocity.mult(velocity.norm());\n        }\n    };\n\n    /**\n     * @property Drag.DEFAULT_OPTIONS\n     * @type Object\n     * @protected\n     * @static\n     */\n    Drag.DEFAULT_OPTIONS = {\n\n        /**\n         * The strength of the force\n         *    Range : [0, 0.1]\n         * @attribute strength\n         * @type Number\n         * @default 0.01\n         */\n        strength : 0.01,\n\n        /**\n         * The type of opposing force\n         * @attribute forceFunction\n         * @type Function\n         */\n        forceFunction : Drag.FORCE_FUNCTIONS.LINEAR\n    };\n\n    /**\n     * Adds a drag force to a physics body's force accumulator.\n     *\n     * @method applyForce\n     * @param targets {Array.Body} Array of bodies to apply drag force to.\n     */\n    Drag.prototype.applyForce = function applyForce(targets) {\n        var strength        = this.options.strength;\n        var forceFunction   = this.options.forceFunction;\n        var force           = this.force;\n        for (var index = 0; index < targets.length; index++) {\n            var particle = targets[index];\n            forceFunction(particle.velocity).mult(-strength).put(force);\n            particle.applyForce(force);\n        }\n    };\n\n    /**\n     * Basic options setter\n     *\n     * @method setOptions\n     * @param {Objects} options\n     */\n    Drag.prototype.setOptions = function setOptions(options) {\n        for (var key in options) this.options[key] = options[key];\n    };\n\n    module.exports = Drag;\n});\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n *\n * Owner: david@famo.us\n * @license MPL 2.0\n * @copyright Famous Industries, Inc. 2014\n */\n\ndefine(function(require, exports, module) {\n    var OptionsManager = require('famous/core/OptionsManager');\n\n    /**\n     * Ordinary Differential Equation (ODE) Integrator.\n     * Manages updating a physics body's state over time.\n     *\n     *  p = position, v = velocity, m = mass, f = force, dt = change in time\n     *\n     *      v <- v + dt * f / m\n     *      p <- p + dt * v\n     *\n     *  q = orientation, w = angular velocity, L = angular momentum\n     *\n     *      L <- L + dt * t\n     *      q <- q + dt/2 * q * w\n     *\n     * @class SymplecticEuler\n     * @constructor\n     * @param {Object} options Options to set\n     */\n    function SymplecticEuler(options) {\n        this.options = Object.create(SymplecticEuler.DEFAULT_OPTIONS);\n        this._optionsManager = new OptionsManager(this.options);\n\n        if (options) this.setOptions(options);\n    }\n\n    /**\n     * @property SymplecticEuler.DEFAULT_OPTIONS\n     * @type Object\n     * @protected\n     * @static\n     */\n    SymplecticEuler.DEFAULT_OPTIONS = {\n\n        /**\n         * The maximum velocity of a physics body\n         *      Range : [0, Infinity]\n         * @attribute velocityCap\n         * @type Number\n         */\n\n        velocityCap : undefined,\n\n        /**\n         * The maximum angular velocity of a physics body\n         *      Range : [0, Infinity]\n         * @attribute angularVelocityCap\n         * @type Number\n         */\n        angularVelocityCap : undefined\n    };\n\n    /*\n     * Setter for options\n     *\n     * @method setOptions\n     * @param {Object} options\n     */\n    SymplecticEuler.prototype.setOptions = function setOptions(options) {\n        this._optionsManager.patch(options);\n    };\n\n    /*\n     * Getter for options\n     *\n     * @method getOptions\n     * @return {Object} options\n     */\n    SymplecticEuler.prototype.getOptions = function getOptions() {\n        return this._optionsManager.value();\n    };\n\n    /*\n     * Updates the velocity of a physics body from its accumulated force.\n     *      v <- v + dt * f / m\n     *\n     * @method integrateVelocity\n     * @param {Body} physics body\n     * @param {Number} dt delta time\n     */\n    SymplecticEuler.prototype.integrateVelocity = function integrateVelocity(body, dt) {\n        var v = body.velocity;\n        var w = body.inverseMass;\n        var f = body.force;\n\n        if (f.isZero()) return;\n\n        v.add(f.mult(dt * w)).put(v);\n        f.clear();\n    };\n\n    /*\n     * Updates the position of a physics body from its velocity.\n     *      p <- p + dt * v\n     *\n     * @method integratePosition\n     * @param {Body} physics body\n     * @param {Number} dt delta time\n     */\n    SymplecticEuler.prototype.integratePosition = function integratePosition(body, dt) {\n        var p = body.position;\n        var v = body.velocity;\n\n        if (this.options.velocityCap) v.cap(this.options.velocityCap).put(v);\n        p.add(v.mult(dt)).put(p);\n    };\n\n    /*\n     * Updates the angular momentum of a physics body from its accumuled torque.\n     *      L <- L + dt * t\n     *\n     * @method integrateAngularMomentum\n     * @param {Body} physics body (except a particle)\n     * @param {Number} dt delta time\n     */\n    SymplecticEuler.prototype.integrateAngularMomentum = function integrateAngularMomentum(body, dt) {\n        var L = body.angularMomentum;\n        var t = body.torque;\n\n        if (t.isZero()) return;\n\n        if (this.options.angularVelocityCap) t.cap(this.options.angularVelocityCap).put(t);\n        L.add(t.mult(dt)).put(L);\n        t.clear();\n    };\n\n    /*\n     * Updates the orientation of a physics body from its angular velocity.\n     *      q <- q + dt/2 * q * w\n     *\n     * @method integrateOrientation\n     * @param {Body} physics body (except a particle)\n     * @param {Number} dt delta time\n     */\n    SymplecticEuler.prototype.integrateOrientation = function integrateOrientation(body, dt) {\n        var q = body.orientation;\n        var w = body.angularVelocity;\n\n        if (w.isZero()) return;\n        q.add(q.multiply(w).scalarMultiply(0.5 * dt)).put(q);\n//        q.normalize.put(q);\n    };\n\n    module.exports = SymplecticEuler;\n});\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n *\n * Owner: david@famo.us\n * @license MPL 2.0\n * @copyright Famous Industries, Inc. 2014\n */\n\ndefine(function(require, exports, module) {\n    var Utility = require('famous/utilities/Utility');\n\n    /**\n     * Transition meta-method to support transitioning multiple\n     *   values with scalar-only methods.\n     *\n     *\n     * @class MultipleTransition\n     * @constructor\n     *\n     * @param {Object} method Transionable class to multiplex\n     */\n    function MultipleTransition(method) {\n        this.method = method;\n        this._instances = [];\n        this.state = [];\n    }\n\n    MultipleTransition.SUPPORTS_MULTIPLE = true;\n\n    /**\n     * Get the state of each transition.\n     *\n     * @method get\n     *\n     * @return state {Number|Array} state array\n     */\n    MultipleTransition.prototype.get = function get() {\n        for (var i = 0; i < this._instances.length; i++) {\n            this.state[i] = this._instances[i].get();\n        }\n        return this.state;\n    };\n\n    /**\n     * Set the end states with a shared transition, with optional callback.\n     *\n     * @method set\n     *\n     * @param {Number|Array} endState Final State.  Use a multi-element argument for multiple transitions.\n     * @param {Object} transition Transition definition, shared among all instances\n     * @param {Function} callback called when all endStates have been reached.\n     */\n    MultipleTransition.prototype.set = function set(endState, transition, callback) {\n        var _allCallback = Utility.after(endState.length, callback);\n        for (var i = 0; i < endState.length; i++) {\n            if (!this._instances[i]) this._instances[i] = new (this.method)();\n            this._instances[i].set(endState[i], transition, _allCallback);\n        }\n    };\n\n    /**\n     * Reset all transitions to start state.\n     *\n     * @method reset\n     *\n     * @param  {Number|Array} startState Start state\n     */\n    MultipleTransition.prototype.reset = function reset(startState) {\n        for (var i = 0; i < startState.length; i++) {\n            if (!this._instances[i]) this._instances[i] = new (this.method)();\n            this._instances[i].reset(startState[i]);\n        }\n    };\n\n    module.exports = MultipleTransition;\n});\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n *\n * Owner: david@famo.us\n * @license MPL 2.0\n * @copyright Famous Industries, Inc. 2014\n */\n\ndefine(function(require, exports, module) {\n\n    /**\n     *\n     * A state maintainer for a smooth transition between\n     *    numerically-specified states.  Example numeric states include floats or\n     *    Transfornm objects.\n     *\n     *    An initial state is set with the constructor or set(startValue). A\n     *    corresponding end state and transition are set with set(endValue,\n     *    transition). Subsequent calls to set(endValue, transition) begin at\n     *    the last state. Calls to get(timestamp) provide the _interpolated state\n     *    along the way.\n     *\n     *   Note that there is no event loop here - calls to get() are the only way\n     *    to find out state projected to the current (or provided) time and are\n     *    the only way to trigger callbacks. Usually this kind of object would\n     *    be part of the render() path of a visible component.\n     *\n     * @class TweenTransition\n     * @constructor\n     *\n     * @param {Object} options TODO\n     *    beginning state\n     */\n    function TweenTransition(options) {\n        this.options = Object.create(TweenTransition.DEFAULT_OPTIONS);\n        if (options) this.setOptions(options);\n\n        this._startTime = 0;\n        this._startValue = 0;\n        this._updateTime = 0;\n        this._endValue = 0;\n        this._curve = undefined;\n        this._duration = 0;\n        this._active = false;\n        this._callback = undefined;\n        this.state = 0;\n        this.velocity = undefined;\n    }\n\n    /**\n     * Transition curves mapping independent variable t from domain [0,1] to a\n     *    range within [0,1]. Includes functions 'linear', 'easeIn', 'easeOut',\n     *    'easeInOut', 'easeOutBounce', 'spring'.\n     *\n     * @property {object} Curve\n     * @final\n     */\n    TweenTransition.Curves = {\n        linear: function(t) {\n            return t;\n        },\n        easeIn: function(t) {\n            return t*t;\n        },\n        easeOut: function(t) {\n            return t*(2-t);\n        },\n        easeInOut: function(t) {\n            if (t <= 0.5) return 2*t*t;\n            else return -2*t*t + 4*t - 1;\n        },\n        easeOutBounce: function(t) {\n            return t*(3 - 2*t);\n        },\n        spring: function(t) {\n            return (1 - t) * Math.sin(6 * Math.PI * t) + t;\n        }\n    };\n\n    TweenTransition.SUPPORTS_MULTIPLE = true;\n    TweenTransition.DEFAULT_OPTIONS = {\n        curve: TweenTransition.Curves.linear,\n        duration: 500,\n        speed: 0 /* considered only if positive */\n    };\n\n    var registeredCurves = {};\n\n    /**\n     * Add \"unit\" curve to internal dictionary of registered curves.\n     *\n     * @method registerCurve\n     *\n     * @static\n     *\n     * @param {string} curveName dictionary key\n     * @param {unitCurve} curve function of one numeric variable mapping [0,1]\n     *    to range inside [0,1]\n     * @return {boolean} false if key is taken, else true\n     */\n    TweenTransition.registerCurve = function registerCurve(curveName, curve) {\n        if (!registeredCurves[curveName]) {\n            registeredCurves[curveName] = curve;\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n\n    /**\n     * Remove object with key \"curveName\" from internal dictionary of registered\n     *    curves.\n     *\n     * @method unregisterCurve\n     *\n     * @static\n     *\n     * @param {string} curveName dictionary key\n     * @return {boolean} false if key has no dictionary value\n     */\n    TweenTransition.unregisterCurve = function unregisterCurve(curveName) {\n        if (registeredCurves[curveName]) {\n            delete registeredCurves[curveName];\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n\n    /**\n     * Retrieve function with key \"curveName\" from internal dictionary of\n     *    registered curves. Default curves are defined in the\n     *    TweenTransition.Curves array, where the values represent\n     *    unitCurve functions.\n     *\n     * @method getCurve\n     *\n     * @static\n     *\n     * @param {string} curveName dictionary key\n     * @return {unitCurve} curve function of one numeric variable mapping [0,1]\n     *    to range inside [0,1]\n     */\n    TweenTransition.getCurve = function getCurve(curveName) {\n        var curve = registeredCurves[curveName];\n        if (curve !== undefined) return curve;\n        else throw new Error('curve not registered');\n    };\n\n    /**\n     * Retrieve all available curves.\n     *\n     * @method getCurves\n     *\n     * @static\n     *\n     * @return {object} curve functions of one numeric variable mapping [0,1]\n     *    to range inside [0,1]\n     */\n    TweenTransition.getCurves = function getCurves() {\n        return registeredCurves;\n    };\n\n     // Interpolate: If a linear function f(0) = a, f(1) = b, then return f(t)\n    function _interpolate(a, b, t) {\n        return ((1 - t) * a) + (t * b);\n    }\n\n    function _clone(obj) {\n        if (obj instanceof Object) {\n            if (obj instanceof Array) return obj.slice(0);\n            else return Object.create(obj);\n        }\n        else return obj;\n    }\n\n    // Fill in missing properties in \"transition\" with those in defaultTransition, and\n    //   convert internal named curve to function object, returning as new\n    //   object.\n    function _normalize(transition, defaultTransition) {\n        var result = {curve: defaultTransition.curve};\n        if (defaultTransition.duration) result.duration = defaultTransition.duration;\n        if (defaultTransition.speed) result.speed = defaultTransition.speed;\n        if (transition instanceof Object) {\n            if (transition.duration !== undefined) result.duration = transition.duration;\n            if (transition.curve) result.curve = transition.curve;\n            if (transition.speed) result.speed = transition.speed;\n        }\n        if (typeof result.curve === 'string') result.curve = TweenTransition.getCurve(result.curve);\n        return result;\n    }\n\n    /**\n     * Set internal options, overriding any default options.\n     *\n     * @method setOptions\n     *\n     *\n     * @param {Object} options options object\n     * @param {Object} [options.curve] function mapping [0,1] to [0,1] or identifier\n     * @param {Number} [options.duration] duration in ms\n     * @param {Number} [options.speed] speed in pixels per ms\n     */\n    TweenTransition.prototype.setOptions = function setOptions(options) {\n        if (options.curve !== undefined) this.options.curve = options.curve;\n        if (options.duration !== undefined) this.options.duration = options.duration;\n        if (options.speed !== undefined) this.options.speed = options.speed;\n    };\n\n    /**\n     * Add transition to end state to the queue of pending transitions. Special\n     *    Use: calling without a transition resets the object to that state with\n     *    no pending actions\n     *\n     * @method set\n     *\n     *\n     * @param {number|FamousMatrix|Array.Number|Object.<number, number>} endValue\n     *    end state to which we _interpolate\n     * @param {transition=} transition object of type {duration: number, curve:\n     *    f[0,1] -> [0,1] or name}. If transition is omitted, change will be\n     *    instantaneous.\n     * @param {function()=} callback Zero-argument function to call on observed\n     *    completion (t=1)\n     */\n    TweenTransition.prototype.set = function set(endValue, transition, callback) {\n        if (!transition) {\n            this.reset(endValue);\n            if (callback) callback();\n            return;\n        }\n\n        this._startValue = _clone(this.get());\n        transition = _normalize(transition, this.options);\n        if (transition.speed) {\n            var startValue = this._startValue;\n            if (startValue instanceof Object) {\n                var variance = 0;\n                for (var i in startValue) variance += (endValue[i] - startValue[i]) * (endValue[i] - startValue[i]);\n                transition.duration = Math.sqrt(variance) / transition.speed;\n            }\n            else {\n                transition.duration = Math.abs(endValue - startValue) / transition.speed;\n            }\n        }\n\n        this._startTime = Date.now();\n        this._endValue = _clone(endValue);\n        this._startVelocity = _clone(transition.velocity);\n        this._duration = transition.duration;\n        this._curve = transition.curve;\n        this._active = true;\n        this._callback = callback;\n    };\n\n    /**\n     * Cancel all transitions and reset to a stable state\n     *\n     * @method reset\n     *\n     * @param {number|Array.Number|Object.<number, number>} startValue\n     *    starting state\n     * @param {number} startVelocity\n     *    starting velocity\n     */\n    TweenTransition.prototype.reset = function reset(startValue, startVelocity) {\n        if (this._callback) {\n            var callback = this._callback;\n            this._callback = undefined;\n            callback();\n        }\n        this.state = _clone(startValue);\n        this.velocity = _clone(startVelocity);\n        this._startTime = 0;\n        this._duration = 0;\n        this._updateTime = 0;\n        this._startValue = this.state;\n        this._startVelocity = this.velocity;\n        this._endValue = this.state;\n        this._active = false;\n    };\n\n    /**\n     * Get current velocity\n     *\n     * @method getVelocity\n     *\n     * @returns {Number} velocity\n     */\n    TweenTransition.prototype.getVelocity = function getVelocity() {\n        return this.velocity;\n    };\n\n    /**\n     * Get interpolated state of current action at provided time. If the last\n     *    action has completed, invoke its callback.\n     *\n     * @method get\n     *\n     *\n     * @param {number=} timestamp Evaluate the curve at a normalized version of this\n     *    time. If omitted, use current time. (Unix epoch time)\n     * @return {number|Object.<number|string, number>} beginning state\n     *    _interpolated to this point in time.\n     */\n    TweenTransition.prototype.get = function get(timestamp) {\n        this.update(timestamp);\n        return this.state;\n    };\n\n    function _calculateVelocity(current, start, curve, duration, t) {\n        var velocity;\n        var eps = 1e-7;\n        var speed = (curve(t) - curve(t - eps)) / eps;\n        if (current instanceof Array) {\n            velocity = [];\n            for (var i = 0; i < current.length; i++){\n                if (typeof current[i] === 'number')\n                    velocity[i] = speed * (current[i] - start[i]) / duration;\n                else\n                    velocity[i] = 0;\n            }\n\n        }\n        else velocity = speed * (current - start) / duration;\n        return velocity;\n    }\n\n    function _calculateState(start, end, t) {\n        var state;\n        if (start instanceof Array) {\n            state = [];\n            for (var i = 0; i < start.length; i++) {\n                if (typeof start[i] === 'number')\n                    state[i] = _interpolate(start[i], end[i], t);\n                else\n                    state[i] = start[i];\n            }\n        }\n        else state = _interpolate(start, end, t);\n        return state;\n    }\n\n    /**\n     * Update internal state to the provided timestamp. This may invoke the last\n     *    callback and begin a new action.\n     *\n     * @method update\n     *\n     *\n     * @param {number=} timestamp Evaluate the curve at a normalized version of this\n     *    time. If omitted, use current time. (Unix epoch time)\n     */\n    TweenTransition.prototype.update = function update(timestamp) {\n        if (!this._active) {\n            if (this._callback) {\n                var callback = this._callback;\n                this._callback = undefined;\n                callback();\n            }\n            return;\n        }\n\n        if (!timestamp) timestamp = Date.now();\n        if (this._updateTime >= timestamp) return;\n        this._updateTime = timestamp;\n\n        var timeSinceStart = timestamp - this._startTime;\n        if (timeSinceStart >= this._duration) {\n            this.state = this._endValue;\n            this.velocity = _calculateVelocity(this.state, this._startValue, this._curve, this._duration, 1);\n            this._active = false;\n        }\n        else if (timeSinceStart < 0) {\n            this.state = this._startValue;\n            this.velocity = this._startVelocity;\n        }\n        else {\n            var t = timeSinceStart / this._duration;\n            this.state = _calculateState(this._startValue, this._endValue, this._curve(t));\n            this.velocity = _calculateVelocity(this.state, this._startValue, this._curve, this._duration, t);\n        }\n    };\n\n    /**\n     * Is there at least one action pending completion?\n     *\n     * @method isActive\n     *\n     *\n     * @return {boolean}\n     */\n    TweenTransition.prototype.isActive = function isActive() {\n        return this._active;\n    };\n\n    /**\n     * Halt transition at current state and erase all pending actions.\n     *\n     * @method halt\n     *\n     */\n    TweenTransition.prototype.halt = function halt() {\n        this.reset(this.get());\n    };\n\n    // Register all the default curves\n    TweenTransition.registerCurve('linear', TweenTransition.Curves.linear);\n    TweenTransition.registerCurve('easeIn', TweenTransition.Curves.easeIn);\n    TweenTransition.registerCurve('easeOut', TweenTransition.Curves.easeOut);\n    TweenTransition.registerCurve('easeInOut', TweenTransition.Curves.easeInOut);\n    TweenTransition.registerCurve('easeOutBounce', TweenTransition.Curves.easeOutBounce);\n    TweenTransition.registerCurve('spring', TweenTransition.Curves.spring);\n\n    TweenTransition.customCurve = function customCurve(v1, v2) {\n        v1 = v1 || 0; v2 = v2 || 0;\n        return function(t) {\n            return v1*t + (-2*v1 - v2 + 3)*t*t + (v1 + v2 - 2)*t*t*t;\n        };\n    };\n\n    module.exports = TweenTransition;\n});\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n *\n * Owner: felix@famo.us\n * @license MPL 2.0\n * @copyright Famous Industries, Inc. 2014\n */\n\ndefine(function(require, exports, module) {\n    var Entity = require('famous/core/Entity');\n    var RenderNode = require('famous/core/RenderNode');\n    var Transform = require('famous/core/Transform');\n    var OptionsManager = require('famous/core/OptionsManager');\n\n    /**\n     * A layout which will arrange three renderables into a header and footer area of defined size,\n      and a content area of flexible size.\n     * @class HeaderFooterLayout\n     * @constructor\n     * @param {Options} [options] An object of configurable options.\n     * @param {Number} [options.direction=HeaderFooterLayout.DIRECTION_Y] A direction of HeaderFooterLayout.DIRECTION_X\n     * lays your HeaderFooterLayout instance horizontally, and a direction of HeaderFooterLayout.DIRECTION_Y\n     * lays it out vertically.\n     * @param {Number} [options.headerSize=undefined]  The amount of pixels allocated to the header node\n     * in the HeaderFooterLayout instance's direction.\n     * @param {Number} [options.footerSize=undefined] The amount of pixels allocated to the footer node\n     * in the HeaderFooterLayout instance's direction.\n     */\n    function HeaderFooterLayout(options) {\n        this.options = Object.create(HeaderFooterLayout.DEFAULT_OPTIONS);\n        this._optionsManager = new OptionsManager(this.options);\n        if (options) this.setOptions(options);\n\n        this._entityId = Entity.register(this);\n\n        this.header = new RenderNode();\n        this.footer = new RenderNode();\n        this.content = new RenderNode();\n    }\n\n    /**\n     *  When used as a value for your HeaderFooterLayout's direction option, causes it to lay out horizontally.\n     *\n     *  @attribute DIRECTION_X\n     *  @type Number\n     *  @static\n     *  @default 0\n     *  @protected\n     */\n    HeaderFooterLayout.DIRECTION_X = 0;\n\n    /**\n     *  When used as a value for your HeaderFooterLayout's direction option, causes it to lay out vertically.\n     *\n     *  @attribute DIRECTION_Y\n     *  @type Number\n     *  @static\n     *  @default 1\n     *  @protected\n     */\n    HeaderFooterLayout.DIRECTION_Y = 1;\n\n    HeaderFooterLayout.DEFAULT_OPTIONS = {\n        direction: HeaderFooterLayout.DIRECTION_Y,\n        headerSize: undefined,\n        footerSize: undefined,\n        defaultHeaderSize: 0,\n        defaultFooterSize: 0\n    };\n\n    /**\n     * Generate a render spec from the contents of this component.\n     *\n     * @private\n     * @method render\n     * @return {Object} Render spec for this component\n     */\n    HeaderFooterLayout.prototype.render = function render() {\n        return this._entityId;\n    };\n\n    /**\n     * Patches the HeaderFooterLayout instance's options with the passed-in ones.\n     *\n     * @method setOptions\n     * @param {Options} options An object of configurable options for the HeaderFooterLayout instance.\n     */\n    HeaderFooterLayout.prototype.setOptions = function setOptions(options) {\n        return this._optionsManager.setOptions(options);\n    };\n\n    function _resolveNodeSize(node, defaultSize) {\n        var nodeSize = node.getSize();\n        return nodeSize ? nodeSize[this.options.direction] : defaultSize;\n    }\n\n    function _outputTransform(offset) {\n        if (this.options.direction === HeaderFooterLayout.DIRECTION_X) return Transform.translate(offset, 0, 0);\n        else return Transform.translate(0, offset, 0);\n    }\n\n    function _finalSize(directionSize, size) {\n        if (this.options.direction === HeaderFooterLayout.DIRECTION_X) return [directionSize, size[1]];\n        else return [size[0], directionSize];\n    }\n\n    /**\n     * Apply changes from this component to the corresponding document element.\n     * This includes changes to classes, styles, size, content, opacity, origin,\n     * and matrix transforms.\n     *\n     * @private\n     * @method commit\n     * @param {Context} context commit context\n     */\n    HeaderFooterLayout.prototype.commit = function commit(context) {\n        var transform = context.transform;\n        var origin = context.origin;\n        var size = context.size;\n        var opacity = context.opacity;\n\n        var headerSize = (this.options.headerSize !== undefined) ? this.options.headerSize : _resolveNodeSize.call(this, this.header, this.options.defaultHeaderSize);\n        var footerSize = (this.options.footerSize !== undefined) ? this.options.footerSize : _resolveNodeSize.call(this, this.footer, this.options.defaultFooterSize);\n        var contentSize = size[this.options.direction] - headerSize - footerSize;\n\n        if (size) transform = Transform.moveThen([-size[0]*origin[0], -size[1]*origin[1], 0], transform);\n\n        var result = [\n            {\n                size: _finalSize.call(this, headerSize, size),\n                target: this.header.render()\n            },\n            {\n                transform: _outputTransform.call(this, headerSize),\n                size: _finalSize.call(this, contentSize, size),\n                target: this.content.render()\n            },\n            {\n                transform: _outputTransform.call(this, headerSize + contentSize),\n                size: _finalSize.call(this, footerSize, size),\n                target: this.footer.render()\n            }\n        ];\n\n        return {\n            transform: transform,\n            opacity: opacity,\n            size: size,\n            target: result\n        };\n    };\n\n    module.exports = HeaderFooterLayout;\n});\n","define(function(require, exports, module) {\n    var Entity = require('famous/core/Entity');\n    var Group = require('famous/core/Group');\n    var OptionsManager = require('famous/core/OptionsManager');\n    var Transform = require('famous/core/Transform');\n    var Utility = require('famous/utilities/Utility');\n    var ViewSequence = require('famous/core/ViewSequence');\n    var EventHandler = require('famous/core/EventHandler');\n\n    /**\n     * Scroller lays out a collection of renderables, and will browse through them based on\n     * accessed position. Scroller also broadcasts an 'edgeHit' event, with a position property of the location of the edge,\n     * when you've hit the 'edges' of it's renderable collection.\n     * @class Scroller\n     * @constructor\n      * @event error\n     * @param {Options} [options] An object of configurable options.\n     * @param {Number} [options.direction=Utility.Direction.Y] Using the direction helper found in the famous Utility\n     * module, this option will lay out the Scroller instance's renderables either horizontally\n     * (x) or vertically (y). Utility's direction is essentially either zero (X) or one (Y), so feel free\n     * to just use integers as well.\n     * @param {Number} [clipSize=undefined] The size of the area (in pixels) that Scroller will display content in.\n     * @param {Number} [margin=undefined] The size of the area (in pixels) that Scroller will process renderables' associated calculations in.\n     */\n    function Scroller(options) {\n        this.options = Object.create(this.constructor.DEFAULT_OPTIONS);\n        this._optionsManager = new OptionsManager(this.options);\n        if (options) this._optionsManager.setOptions(options);\n\n        this._node = null;\n        this._position = 0;\n\n        // used for shifting nodes\n        this._positionOffset = 0;\n\n        this._positionGetter = null;\n        this._outputFunction = null;\n        this._masterOutputFunction = null;\n        this.outputFrom();\n\n        this._onEdge = 0; // -1 for top, 1 for bottom\n\n        this.group = new Group();\n        this.group.add({render: _innerRender.bind(this)});\n\n        this._entityId = Entity.register(this);\n        this._size = [undefined, undefined];\n        this._contextSize = [undefined, undefined];\n\n        this._eventInput = new EventHandler();\n        this._eventOutput = new EventHandler();\n\n        EventHandler.setInputHandler(this, this._eventInput);\n        EventHandler.setOutputHandler(this, this._eventOutput);\n    }\n\n    Scroller.DEFAULT_OPTIONS = {\n        direction: Utility.Direction.Y,\n        margin: 0,\n        clipSize: undefined,\n        groupScroll: false\n    };\n\n    function _sizeForDir(size) {\n        if (!size) size = this._contextSize;\n        var dimension = (this.options.direction === Utility.Direction.X) ? 0 : 1;\n        return (size[dimension] === undefined) ? this._contextSize[dimension] : size[dimension];\n    }\n\n    function _output(node, offset, target) {\n        var size = node.getSize ? node.getSize() : this._contextSize;\n        var transform = this._outputFunction(offset);\n        target.push({transform: transform, target: node.render()});\n        return _sizeForDir.call(this, size);\n    }\n\n    function _getClipSize() {\n        if (this.options.clipSize) return this.options.clipSize;\n        else return _sizeForDir.call(this, this._contextSize);\n    }\n\n    /**\n     * Patches the Scroller instance's options with the passed-in ones.\n     * @method setOptions\n     * @param {Options} options An object of configurable options for the Scroller instance.\n     */\n    Scroller.prototype.setOptions = function setOptions(options) {\n        this._optionsManager.setOptions(options);\n\n        if (this.options.groupScroll) {\n          this.group.pipe(this._eventOutput);\n        }\n        else {\n          this.group.unpipe(this._eventOutput);\n        }\n    };\n\n    /**\n     * Tells you if the Scroller instance is on an edge.\n     * @method onEdge\n     * @return {Boolean} Whether the Scroller instance is on an edge or not.\n     */\n    Scroller.prototype.onEdge = function onEdge() {\n        return this._onEdge;\n    };\n\n    /**\n     * Allows you to overwrite the way Scroller lays out it's renderables. Scroller will\n     * pass an offset into the function. By default the Scroller instance just translates each node\n     * in it's direction by the passed-in offset.\n     * Scroller will translate each renderable down\n     * @method outputFrom\n     * @param {Function} fn A function that takes an offset and returns a transform.\n     * @param {Function} [masterFn]\n     */\n    Scroller.prototype.outputFrom = function outputFrom(fn, masterFn) {\n        if (!fn) {\n            fn = function(offset) {\n                return (this.options.direction === Utility.Direction.X) ? Transform.translate(offset, 0) : Transform.translate(0, offset);\n            }.bind(this);\n            if (!masterFn) masterFn = fn;\n        }\n        this._outputFunction = fn;\n        this._masterOutputFunction = masterFn ? masterFn : function(offset) {\n            return Transform.inverse(fn(-offset));\n        };\n    };\n\n    /**\n     * The Scroller instance's method for reading from an external position. Scroller uses\n     * the external position to actually scroll through it's renderables.\n     * @method positionFrom\n     * @param {Getter} position Can be either a function that returns a position,\n     * or an object with a get method that returns a position.\n     */\n    Scroller.prototype.positionFrom = function positionFrom(position) {\n        if (position instanceof Function) this._positionGetter = position;\n        else if (position && position.get) this._positionGetter = position.get.bind(position);\n        else {\n            this._positionGetter = null;\n            this._position = position;\n        }\n        if (this._positionGetter) this._position = this._positionGetter.call(this);\n    };\n\n    /**\n     * Sets the collection of renderables under the Scroller instance's control.\n     *\n     * @method sequenceFrom\n     * @param {Array|ViewSequence} items Either an array of renderables or a Famous viewSequence.\n     * @chainable\n     */\n    Scroller.prototype.sequenceFrom = function sequenceFrom(node) {\n        if (node instanceof Array) node = new ViewSequence({array: node});\n        this._node = node;\n        this._positionOffset = 0;\n    };\n\n    /**\n     * Returns the width and the height of the Scroller instance.\n     *\n     * @method getSize\n     * @return {Array} A two value array of the Scroller instance's current width and height (in that order).\n     */\n    Scroller.prototype.getSize = function getSize(actual) {\n        return actual ? this._contextSize : this._size;\n    };\n\n    /**\n     * Generate a render spec from the contents of this component.\n     *\n     * @private\n     * @method render\n     * @return {number} Render spec for this component\n     */\n    Scroller.prototype.render = function render() {\n        if (!this._node) return null;\n        if (this._positionGetter) this._position = this._positionGetter.call(this);\n        return this._entityId;\n    };\n\n    /**\n     * Apply changes from this component to the corresponding document element.\n     * This includes changes to classes, styles, size, content, opacity, origin,\n     * and matrix transforms.\n     *\n     * @private\n     * @method commit\n     * @param {Context} context commit context\n     */\n    Scroller.prototype.commit = function commit(context) {\n        var transform = context.transform;\n        var opacity = context.opacity;\n        var origin = context.origin;\n        var size = context.size;\n\n        // reset edge detection on size change\n        if (!this.options.clipSize && (size[0] !== this._contextSize[0] || size[1] !== this._contextSize[1])) {\n            this._onEdge = 0;\n            this._contextSize[0] = size[0];\n            this._contextSize[1] = size[1];\n\n            if (this.options.direction === Utility.Direction.X) {\n                this._size[0] = _getClipSize.call(this);\n                this._size[1] = undefined;\n            }\n            else {\n                this._size[0] = undefined;\n                this._size[1] = _getClipSize.call(this);\n            }\n        }\n\n        var scrollTransform = this._masterOutputFunction(-this._position);\n\n        return {\n            transform: Transform.multiply(transform, scrollTransform),\n            opacity: opacity,\n            origin: origin,\n            target: this.group.render()\n        };\n    };\n\n    function _normalizeState() {\n        var nodeSize = _sizeForDir.call(this, this._node.getSize());\n        var nextNode = this._node && this._node.getNext ? this._node.getNext() : null;\n        while (nextNode && this._position + this._positionOffset >= nodeSize) {\n            this._positionOffset -= nodeSize;\n            this._node = nextNode;\n            nodeSize = _sizeForDir.call(this, this._node.getSize());\n            nextNode = this._node && this._node.getNext ? this._node.getNext() : null;\n        }\n        var prevNode = this._node && this._node.getPrevious ? this._node.getPrevious() : null;\n        while (prevNode && this._position + this._positionOffset < 0) {\n            var prevNodeSize = _sizeForDir.call(this, prevNode.getSize());\n            this._positionOffset += prevNodeSize;\n            this._node = prevNode;\n            prevNode = this._node && this._node.getPrevious ? this._node.getPrevious() : null;\n        }\n    }\n\n    function _innerRender() {\n        var size = null;\n        var position = this._position;\n        var result = [];\n\n        this._onEdge = 0;\n\n        var offset = -this._positionOffset;\n        var clipSize = _getClipSize.call(this);\n        var currNode = this._node;\n        while (currNode && offset - position < clipSize + this.options.margin) {\n            offset += _output.call(this, currNode, offset, result);\n            currNode = currNode.getNext ? currNode.getNext() : null;\n        }\n\n        var sizeNode = this._node;\n        var nodesSize = _sizeForDir.call(this, sizeNode.getSize());\n        if (offset < clipSize) {\n            while (sizeNode && nodesSize < clipSize) {\n                sizeNode = sizeNode.getPrevious();\n                if (sizeNode) nodesSize += _sizeForDir.call(this, sizeNode.getSize());\n            }\n            sizeNode = this._node;\n            while (sizeNode && nodesSize < clipSize) {\n                sizeNode = sizeNode.getNext();\n                if (sizeNode) nodesSize += _sizeForDir.call(this, sizeNode.getSize());\n            }\n        }\n\n        var edgeSize = (nodesSize !== undefined && nodesSize < clipSize) ? nodesSize : clipSize;\n\n        if (!currNode && offset - position <= edgeSize) {\n            this._onEdge = 1;\n            this._eventOutput.emit('edgeHit', {\n                position: offset - edgeSize\n            });\n        }\n        else if (!this._node.getPrevious() && position <= 0) {\n            this._onEdge = -1;\n            this._eventOutput.emit('edgeHit', {\n                position: 0\n            });\n        }\n\n        // backwards\n        currNode = (this._node && this._node.getPrevious) ? this._node.getPrevious() : null;\n        offset = -this._positionOffset;\n        if (currNode) {\n            size = currNode.getSize ? currNode.getSize() : this._contextSize;\n            offset -= _sizeForDir.call(this, size);\n        }\n\n        while (currNode && ((offset - position) > -(_getClipSize.call(this) + this.options.margin))) {\n            _output.call(this, currNode, offset, result);\n            currNode = currNode.getPrevious ? currNode.getPrevious() : null;\n            if (currNode) {\n                size = currNode.getSize ? currNode.getSize() : this._contextSize;\n                offset -= _sizeForDir.call(this, size);\n            }\n        }\n\n        _normalizeState.call(this);\n        return result;\n    }\n\n    module.exports = Scroller;\n});\n","/**\n * Copyright (c) 2014 Petka Antonov\n * \n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:</p>\n * \n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n * \n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n * \n */\n\"use strict\";\nmodule.exports = function(Promise, Promise$_CreatePromiseArray, PromiseArray) {\n\nvar SomePromiseArray = require(\"./some_promise_array.js\")(PromiseArray);\nfunction Promise$_Any(promises, useBound) {\n    var ret = Promise$_CreatePromiseArray(\n        promises,\n        SomePromiseArray,\n        useBound === true && promises._isBound()\n            ? promises._boundTo\n            : void 0\n   );\n    var promise = ret.promise();\n    if (promise.isRejected()) {\n        return promise;\n    }\n    ret.setHowMany(1);\n    ret.setUnwrap();\n    ret.init();\n    return promise;\n}\n\nPromise.any = function Promise$Any(promises) {\n    return Promise$_Any(promises, false);\n};\n\nPromise.prototype.any = function Promise$any() {\n    return Promise$_Any(this, true);\n};\n\n};\n","/**\n * Copyright (c) 2014 Petka Antonov\n * \n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:</p>\n * \n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n * \n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n * \n */\n\"use strict\";\nvar Promise = require(\"./promise.js\")();\nmodule.exports = Promise;","/**\n * Copyright (c) 2014 Petka Antonov\n * \n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:</p>\n * \n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n * \n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n * \n */\n\"use strict\";\nmodule.exports = function(Promise) {\nPromise.prototype.call = function Promise$call(propertyName) {\n    var $_len = arguments.length;var args = new Array($_len - 1); for(var $_i = 1; $_i < $_len; ++$_i) {args[$_i - 1] = arguments[$_i];}\n\n    return this._then(function(obj) {\n            return obj[propertyName].apply(obj, args);\n        },\n        void 0,\n        void 0,\n        void 0,\n        void 0\n   );\n};\n\nfunction Promise$getter(obj) {\n    var prop = typeof this === \"string\"\n        ? this\n        : (\"\" + this);\n    return obj[prop];\n}\nPromise.prototype.get = function Promise$get(propertyName) {\n    return this._then(\n        Promise$getter,\n        void 0,\n        void 0,\n        propertyName,\n        void 0\n   );\n};\n};\n","/**\n * Copyright (c) 2014 Petka Antonov\n * \n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:</p>\n * \n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n * \n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n * \n */\n\"use strict\";\nmodule.exports = function(Promise, INTERNAL) {\nvar errors = require(\"./errors.js\");\nvar async = require(\"./async.js\");\nvar CancellationError = errors.CancellationError;\n\nPromise.prototype._cancel = function Promise$_cancel() {\n    if (!this.isCancellable()) return this;\n    var parent;\n    var promiseToReject = this;\n    while ((parent = promiseToReject._cancellationParent) !== void 0 &&\n        parent.isCancellable()) {\n        promiseToReject = parent;\n    }\n    var err = new CancellationError();\n    promiseToReject._attachExtraTrace(err);\n    promiseToReject._rejectUnchecked(err);\n};\n\nPromise.prototype.cancel = function Promise$cancel() {\n    if (!this.isCancellable()) return this;\n    async.invokeLater(this._cancel, this, void 0);\n    return this;\n};\n\nPromise.prototype.cancellable = function Promise$cancellable() {\n    if (this._cancellable()) return this;\n    this._setCancellable();\n    this._cancellationParent = void 0;\n    return this;\n};\n\nPromise.prototype.uncancellable = function Promise$uncancellable() {\n    var ret = new Promise(INTERNAL);\n    ret._setTrace(this);\n    ret._follow(this);\n    ret._unsetCancellable();\n    if (this._isBound()) ret._setBoundTo(this._boundTo);\n    return ret;\n};\n\nPromise.prototype.fork =\nfunction Promise$fork(didFulfill, didReject, didProgress) {\n    var ret = this._then(didFulfill, didReject, didProgress,\n                         void 0, void 0);\n\n    ret._setCancellable();\n    ret._cancellationParent = void 0;\n    return ret;\n};\n};\n","/**\n * Copyright (c) 2014 Petka Antonov\n * \n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:</p>\n * \n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n * \n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n * \n */\n\"use strict\";\nmodule.exports = function() {\nvar inherits = require(\"./util.js\").inherits;\nvar defineProperty = require(\"./es5.js\").defineProperty;\n\nvar rignore = new RegExp(\n    \"\\\\b(?:[a-zA-Z0-9.]+\\\\$_\\\\w+|\" +\n    \"tryCatch(?:1|2|Apply)|new \\\\w*PromiseArray|\" +\n    \"\\\\w*PromiseArray\\\\.\\\\w*PromiseArray|\" +\n    \"setTimeout|CatchFilter\\\\$_\\\\w+|makeNodePromisified|processImmediate|\" +\n    \"process._tickCallback|nextTick|Async\\\\$\\\\w+)\\\\b\"\n);\n\nvar rtraceline = null;\nvar formatStack = null;\n\nfunction formatNonError(obj) {\n    var str;\n    if (typeof obj === \"function\") {\n        str = \"[function \" +\n            (obj.name || \"anonymous\") +\n            \"]\";\n    }\n    else {\n        str = obj.toString();\n        var ruselessToString = /\\[object [a-zA-Z0-9$_]+\\]/;\n        if (ruselessToString.test(str)) {\n            try {\n                var newStr = JSON.stringify(obj);\n                str = newStr;\n            }\n            catch(e) {\n\n            }\n        }\n        if (str.length === 0) {\n            str = \"(empty array)\";\n        }\n    }\n    return (\"(<\" + snip(str) + \">, no stack trace)\");\n}\n\nfunction snip(str) {\n    var maxChars = 41;\n    if (str.length < maxChars) {\n        return str;\n    }\n    return str.substr(0, maxChars - 3) + \"...\";\n}\n\nfunction CapturedTrace(ignoreUntil, isTopLevel) {\n    this.captureStackTrace(CapturedTrace, isTopLevel);\n\n}\ninherits(CapturedTrace, Error);\n\nCapturedTrace.prototype.captureStackTrace =\nfunction CapturedTrace$captureStackTrace(ignoreUntil, isTopLevel) {\n    captureStackTrace(this, ignoreUntil, isTopLevel);\n};\n\nCapturedTrace.possiblyUnhandledRejection =\nfunction CapturedTrace$PossiblyUnhandledRejection(reason) {\n    if (typeof console === \"object\") {\n        var message;\n        if (typeof reason === \"object\" || typeof reason === \"function\") {\n            var stack = reason.stack;\n            message = \"Possibly unhandled \" + formatStack(stack, reason);\n        }\n        else {\n            message = \"Possibly unhandled \" + String(reason);\n        }\n        if (typeof console.error === \"function\" ||\n            typeof console.error === \"object\") {\n            console.error(message);\n        }\n        else if (typeof console.log === \"function\" ||\n            typeof console.log === \"object\") {\n            console.log(message);\n        }\n    }\n};\n\nCapturedTrace.combine = function CapturedTrace$Combine(current, prev) {\n    var curLast = current.length - 1;\n    for (var i = prev.length - 1; i >= 0; --i) {\n        var line = prev[i];\n        if (current[curLast] === line) {\n            current.pop();\n            curLast--;\n        }\n        else {\n            break;\n        }\n    }\n\n    current.push(\"From previous event:\");\n    var lines = current.concat(prev);\n\n    var ret = [];\n\n    for (var i = 0, len = lines.length; i < len; ++i) {\n\n        if ((rignore.test(lines[i]) ||\n            (i > 0 && !rtraceline.test(lines[i])) &&\n            lines[i] !== \"From previous event:\")\n       ) {\n            continue;\n        }\n        ret.push(lines[i]);\n    }\n    return ret;\n};\n\nCapturedTrace.isSupported = function CapturedTrace$IsSupported() {\n    return typeof captureStackTrace === \"function\";\n};\n\nvar captureStackTrace = (function stackDetection() {\n    if (typeof Error.stackTraceLimit === \"number\" &&\n        typeof Error.captureStackTrace === \"function\") {\n        rtraceline = /^\\s*at\\s*/;\n        formatStack = function(stack, error) {\n            if (typeof stack === \"string\") return stack;\n\n            if (error.name !== void 0 &&\n                error.message !== void 0) {\n                return error.name + \". \" + error.message;\n            }\n            return formatNonError(error);\n\n\n        };\n        var captureStackTrace = Error.captureStackTrace;\n        return function CapturedTrace$_captureStackTrace(\n            receiver, ignoreUntil) {\n            captureStackTrace(receiver, ignoreUntil);\n        };\n    }\n    var err = new Error();\n\n    if (typeof err.stack === \"string\" &&\n        typeof \"\".startsWith === \"function\" &&\n        (err.stack.startsWith(\"stackDetection@\")) &&\n        stackDetection.name === \"stackDetection\") {\n\n        defineProperty(Error, \"stackTraceLimit\", {\n            writable: true,\n            enumerable: false,\n            configurable: false,\n            value: 25\n        });\n        rtraceline = /@/;\n        var rline = /[@\\n]/;\n\n        formatStack = function(stack, error) {\n            if (typeof stack === \"string\") {\n                return (error.name + \". \" + error.message + \"\\n\" + stack);\n            }\n\n            if (error.name !== void 0 &&\n                error.message !== void 0) {\n                return error.name + \". \" + error.message;\n            }\n            return formatNonError(error);\n        };\n\n        return function captureStackTrace(o) {\n            var stack = new Error().stack;\n            var split = stack.split(rline);\n            var len = split.length;\n            var ret = \"\";\n            for (var i = 0; i < len; i += 2) {\n                ret += split[i];\n                ret += \"@\";\n                ret += split[i + 1];\n                ret += \"\\n\";\n            }\n            o.stack = ret;\n        };\n    }\n    else {\n        formatStack = function(stack, error) {\n            if (typeof stack === \"string\") return stack;\n\n            if ((typeof error === \"object\" ||\n                typeof error === \"function\") &&\n                error.name !== void 0 &&\n                error.message !== void 0) {\n                return error.name + \". \" + error.message;\n            }\n            return formatNonError(error);\n        };\n\n        return null;\n    }\n})();\n\nreturn CapturedTrace;\n};\n","/**\n * Copyright (c) 2014 Petka Antonov\n * \n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:</p>\n * \n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n * \n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n * \n */\n\"use strict\";\nmodule.exports = function(NEXT_FILTER) {\nvar util = require(\"./util.js\");\nvar errors = require(\"./errors.js\");\nvar tryCatch1 = util.tryCatch1;\nvar errorObj = util.errorObj;\nvar keys = require(\"./es5.js\").keys;\nvar TypeError = errors.TypeError;\n\nfunction CatchFilter(instances, callback, promise) {\n    this._instances = instances;\n    this._callback = callback;\n    this._promise = promise;\n}\n\nfunction CatchFilter$_safePredicate(predicate, e) {\n    var safeObject = {};\n    var retfilter = tryCatch1(predicate, safeObject, e);\n\n    if (retfilter === errorObj) return retfilter;\n\n    var safeKeys = keys(safeObject);\n    if (safeKeys.length) {\n        errorObj.e = new TypeError(\n            \"Catch filter must inherit from Error \"\n          + \"or be a simple predicate function\");\n        return errorObj;\n    }\n    return retfilter;\n}\n\nCatchFilter.prototype.doFilter = function CatchFilter$_doFilter(e) {\n    var cb = this._callback;\n    var promise = this._promise;\n    var boundTo = promise._isBound() ? promise._boundTo : void 0;\n    for (var i = 0, len = this._instances.length; i < len; ++i) {\n        var item = this._instances[i];\n        var itemIsErrorType = item === Error ||\n            (item != null && item.prototype instanceof Error);\n\n        if (itemIsErrorType && e instanceof item) {\n            var ret = tryCatch1(cb, boundTo, e);\n            if (ret === errorObj) {\n                NEXT_FILTER.e = ret.e;\n                return NEXT_FILTER;\n            }\n            return ret;\n        } else if (typeof item === \"function\" && !itemIsErrorType) {\n            var shouldHandle = CatchFilter$_safePredicate(item, e);\n            if (shouldHandle === errorObj) {\n                var trace = errors.canAttach(errorObj.e)\n                    ? errorObj.e\n                    : new Error(errorObj.e + \"\");\n                this._promise._attachExtraTrace(trace);\n                e = errorObj.e;\n                break;\n            } else if (shouldHandle) {\n                var ret = tryCatch1(cb, boundTo, e);\n                if (ret === errorObj) {\n                    NEXT_FILTER.e = ret.e;\n                    return NEXT_FILTER;\n                }\n                return ret;\n            }\n        }\n    }\n    NEXT_FILTER.e = e;\n    return NEXT_FILTER;\n};\n\nreturn CatchFilter;\n};\n","/**\n * Copyright (c) 2014 Petka Antonov\n * \n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:</p>\n * \n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n * \n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n * \n */\n\"use strict\";\nvar util = require(\"./util.js\");\nvar isPrimitive = util.isPrimitive;\nvar wrapsPrimitiveReceiver = util.wrapsPrimitiveReceiver;\n\nmodule.exports = function(Promise) {\nvar returner = function Promise$_returner() {\n    return this;\n};\nvar thrower = function Promise$_thrower() {\n    throw this;\n};\n\nvar wrapper = function Promise$_wrapper(value, action) {\n    if (action === 1) {\n        return function Promise$_thrower() {\n            throw value;\n        };\n    }\n    else if (action === 2) {\n        return function Promise$_returner() {\n            return value;\n        };\n    }\n};\n\n\nPromise.prototype[\"return\"] =\nPromise.prototype.thenReturn =\nfunction Promise$thenReturn(value) {\n    if (wrapsPrimitiveReceiver && isPrimitive(value)) {\n        return this._then(\n            wrapper(value, 2),\n            void 0,\n            void 0,\n            void 0,\n            void 0\n       );\n    }\n    return this._then(returner, void 0, void 0, value, void 0);\n};\n\nPromise.prototype[\"throw\"] =\nPromise.prototype.thenThrow =\nfunction Promise$thenThrow(reason) {\n    if (wrapsPrimitiveReceiver && isPrimitive(reason)) {\n        return this._then(\n            wrapper(reason, 1),\n            void 0,\n            void 0,\n            void 0,\n            void 0\n       );\n    }\n    return this._then(thrower, void 0, void 0, reason, void 0);\n};\n};\n","/**\n * Copyright (c) 2014 Petka Antonov\n * \n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:</p>\n * \n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n * \n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n * \n */\n\"use strict\";\nmodule.exports = function(Promise) {\nvar isArray = require(\"./util.js\").isArray;\n\nfunction Promise$_filter(booleans) {\n    var values = this instanceof Promise ? this._settledValue : this;\n    var len = values.length;\n    var ret = new Array(len);\n    var j = 0;\n\n    for (var i = 0; i < len; ++i) {\n        if (booleans[i]) ret[j++] = values[i];\n\n    }\n    ret.length = j;\n    return ret;\n}\n\nvar ref = {ref: null};\nPromise.filter = function Promise$Filter(promises, fn) {\n    return Promise.map(promises, fn, ref)\n                  ._then(Promise$_filter, void 0, void 0, ref.ref, void 0);\n};\n\nPromise.prototype.filter = function Promise$filter(fn) {\n    return this.map(fn, ref)\n               ._then(Promise$_filter, void 0, void 0, ref.ref, void 0);\n};\n};\n","/**\n * Copyright (c) 2014 Petka Antonov\n * \n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:</p>\n * \n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n * \n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n * \n */\n\"use strict\";\nmodule.exports = function(Promise, NEXT_FILTER) {\nvar util = require(\"./util.js\");\nvar wrapsPrimitiveReceiver = util.wrapsPrimitiveReceiver;\nvar isPrimitive = util.isPrimitive;\nvar thrower = util.thrower;\n\n\nfunction returnThis() {\n    return this;\n}\nfunction throwThis() {\n    throw this;\n}\nfunction return$(r) {\n    return function Promise$_returner() {\n        return r;\n    };\n}\nfunction throw$(r) {\n    return function Promise$_thrower() {\n        throw r;\n    };\n}\nfunction promisedFinally(ret, reasonOrValue, isFulfilled) {\n    var then;\n    if (wrapsPrimitiveReceiver && isPrimitive(reasonOrValue)) {\n        then = isFulfilled ? return$(reasonOrValue) : throw$(reasonOrValue);\n    }\n    else {\n        then = isFulfilled ? returnThis : throwThis;\n    }\n    return ret._then(then, thrower, void 0, reasonOrValue, void 0);\n}\n\nfunction finallyHandler(reasonOrValue) {\n    var promise = this.promise;\n    var handler = this.handler;\n\n    var ret = promise._isBound()\n                    ? handler.call(promise._boundTo)\n                    : handler();\n\n    if (ret !== void 0) {\n        var maybePromise = Promise._cast(ret, void 0);\n        if (maybePromise instanceof Promise) {\n            return promisedFinally(maybePromise, reasonOrValue,\n                                    promise.isFulfilled());\n        }\n    }\n\n    if (promise.isRejected()) {\n        NEXT_FILTER.e = reasonOrValue;\n        return NEXT_FILTER;\n    }\n    else {\n        return reasonOrValue;\n    }\n}\n\nfunction tapHandler(value) {\n    var promise = this.promise;\n    var handler = this.handler;\n\n    var ret = promise._isBound()\n                    ? handler.call(promise._boundTo, value)\n                    : handler(value);\n\n    if (ret !== void 0) {\n        var maybePromise = Promise._cast(ret, void 0);\n        if (maybePromise instanceof Promise) {\n            return promisedFinally(maybePromise, value, true);\n        }\n    }\n    return value;\n}\n\nPromise.prototype._passThroughHandler =\nfunction Promise$_passThroughHandler(handler, isFinally) {\n    if (typeof handler !== \"function\") return this.then();\n\n    var promiseAndHandler = {\n        promise: this,\n        handler: handler\n    };\n\n    return this._then(\n            isFinally ? finallyHandler : tapHandler,\n            isFinally ? finallyHandler : void 0, void 0,\n            promiseAndHandler, void 0);\n};\n\nPromise.prototype.lastly =\nPromise.prototype[\"finally\"] = function Promise$finally(handler) {\n    return this._passThroughHandler(handler, true);\n};\n\nPromise.prototype.tap = function Promise$tap(handler) {\n    return this._passThroughHandler(handler, false);\n};\n};\n","/**\n * Copyright (c) 2014 Petka Antonov\n * \n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:</p>\n * \n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n * \n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n * \n */\n\"use strict\";\nmodule.exports = function(Promise, apiRejection, INTERNAL) {\nvar PromiseSpawn = require(\"./promise_spawn.js\")(Promise, INTERNAL);\nvar errors = require(\"./errors.js\");\nvar TypeError = errors.TypeError;\nvar deprecated = require(\"./util.js\").deprecated;\n\nPromise.coroutine = function Promise$Coroutine(generatorFunction) {\n    if (typeof generatorFunction !== \"function\") {\n        throw new TypeError(\"generatorFunction must be a function\");\n    }\n    var PromiseSpawn$ = PromiseSpawn;\n    return function () {\n        var generator = generatorFunction.apply(this, arguments);\n        var spawn = new PromiseSpawn$(void 0, void 0);\n        spawn._generator = generator;\n        spawn._next(void 0);\n        return spawn.promise();\n    };\n};\n\nPromise.coroutine.addYieldHandler = PromiseSpawn.addYieldHandler;\n\nPromise.spawn = function Promise$Spawn(generatorFunction) {\n    deprecated(\"Promise.spawn is deprecated. Use Promise.coroutine instead.\");\n    if (typeof generatorFunction !== \"function\") {\n        return apiRejection(\"generatorFunction must be a function\");\n    }\n    var spawn = new PromiseSpawn(generatorFunction, this);\n    var ret = spawn.promise();\n    spawn._run(Promise.spawn);\n    return ret;\n};\n};\n","/**\n * Copyright (c) 2014 Petka Antonov\n * \n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:</p>\n * \n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n * \n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n * \n */\n\"use strict\";\nmodule.exports = function(Promise, PromiseArray, INTERNAL, apiRejection) {\n\nvar all = Promise.all;\nvar util = require(\"./util.js\");\nvar canAttach = require(\"./errors.js\").canAttach;\nvar isArray = util.isArray;\nvar _cast = Promise._cast;\n\nfunction unpack(values) {\n    return Promise$_Map(values, this[0], this[1], this[2]);\n}\n\nfunction Promise$_Map(promises, fn, useBound, ref) {\n    if (typeof fn !== \"function\") {\n        return apiRejection(\"fn must be a function\");\n    }\n\n    var receiver = void 0;\n    if (useBound === true) {\n        if (promises._isBound()) {\n            receiver = promises._boundTo;\n        }\n    }\n    else if (useBound !== false) {\n        receiver = useBound;\n    }\n\n    var shouldUnwrapItems = ref !== void 0;\n    if (shouldUnwrapItems) ref.ref = promises;\n\n    if (promises instanceof Promise) {\n        var pack = [fn, receiver, ref];\n        return promises._then(unpack, void 0, void 0, pack, void 0);\n    }\n    else if (!isArray(promises)) {\n        return apiRejection(\"expecting an array, a promise or a thenable\");\n    }\n\n    var promise = new Promise(INTERNAL);\n    if (receiver !== void 0) promise._setBoundTo(receiver);\n    promise._setTrace(void 0);\n\n    var mapping = new Mapping(promise,\n                                fn,\n                                promises,\n                                receiver,\n                                shouldUnwrapItems);\n    mapping.init();\n    return promise;\n}\n\nvar pending = {};\nfunction Mapping(promise, callback, items, receiver, shouldUnwrapItems) {\n    this.shouldUnwrapItems = shouldUnwrapItems;\n    this.index = 0;\n    this.items = items;\n    this.callback = callback;\n    this.receiver = receiver;\n    this.promise = promise;\n    this.result = new Array(items.length);\n}\nutil.inherits(Mapping, PromiseArray);\n\nMapping.prototype.init = function Mapping$init() {\n    var items = this.items;\n    var len = items.length;\n    var result = this.result;\n    var isRejected = false;\n    for (var i = 0; i < len; ++i) {\n        var maybePromise = _cast(items[i], void 0);\n        if (maybePromise instanceof Promise) {\n            if (maybePromise.isPending()) {\n                result[i] = pending;\n                maybePromise._proxyPromiseArray(this, i);\n            }\n            else if (maybePromise.isFulfilled()) {\n                result[i] = maybePromise.value();\n            }\n            else {\n                maybePromise._unsetRejectionIsUnhandled();\n                if (!isRejected) {\n                    this.reject(maybePromise.reason());\n                    isRejected = true;\n                }\n            }\n        }\n        else {\n            result[i] = maybePromise;\n        }\n    }\n    if (!isRejected) this.iterate();\n};\n\nMapping.prototype.isResolved = function Mapping$isResolved() {\n    return this.promise === null;\n};\n\nMapping.prototype._promiseProgressed =\nfunction Mapping$_promiseProgressed(value) {\n    if (this.isResolved()) return;\n    this.promise._progress(value);\n};\n\nMapping.prototype._promiseFulfilled =\nfunction Mapping$_promiseFulfilled(value, index) {\n    if (this.isResolved()) return;\n    this.result[index] = value;\n    if (this.shouldUnwrapItems) this.items[index] = value;\n    if (this.index === index) this.iterate();\n};\n\nMapping.prototype._promiseRejected =\nfunction Mapping$_promiseRejected(reason) {\n    this.reject(reason);\n};\n\nMapping.prototype.reject = function Mapping$reject(reason) {\n    if (this.isResolved()) return;\n    var trace = canAttach(reason) ? reason : new Error(reason + \"\");\n    this.promise._attachExtraTrace(trace);\n    this.promise._reject(reason, trace);\n};\n\nMapping.prototype.iterate = function Mapping$iterate() {\n    var i = this.index;\n    var items = this.items;\n    var result = this.result;\n    var len = items.length;\n    var result = this.result;\n    var receiver = this.receiver;\n    var callback = this.callback;\n\n    for (; i < len; ++i) {\n        var value = result[i];\n        if (value === pending) {\n            this.index = i;\n            return;\n        }\n        try { result[i] = callback.call(receiver, value, i, len); }\n        catch (e) { return this.reject(e); }\n    }\n    this.promise._follow(all(result));\n    this.items = this.result = this.callback = this.promise = null;\n};\n\nPromise.prototype.map = function Promise$map(fn, ref) {\n    return Promise$_Map(this, fn, true, ref);\n};\n\nPromise.map = function Promise$Map(promises, fn, ref) {\n    return Promise$_Map(promises, fn, false, ref);\n};\n};\n","/**\n * Copyright (c) 2014 Petka Antonov\n * \n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:</p>\n * \n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n * \n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n * \n */\n\"use strict\";\nmodule.exports = function(Promise) {\nvar util = require(\"./util.js\");\nvar async = require(\"./async.js\");\nvar tryCatch2 = util.tryCatch2;\nvar tryCatch1 = util.tryCatch1;\nvar errorObj = util.errorObj;\n\nfunction thrower(r) {\n    throw r;\n}\n\nfunction Promise$_successAdapter(val, receiver) {\n    var nodeback = this;\n    var ret = val === void 0\n        ? tryCatch1(nodeback, receiver, null)\n        : tryCatch2(nodeback, receiver, null, val);\n    if (ret === errorObj) {\n        async.invokeLater(thrower, void 0, ret.e);\n    }\n}\nfunction Promise$_errorAdapter(reason, receiver) {\n    var nodeback = this;\n    var ret = tryCatch1(nodeback, receiver, reason);\n    if (ret === errorObj) {\n        async.invokeLater(thrower, void 0, ret.e);\n    }\n}\n\nPromise.prototype.nodeify = function Promise$nodeify(nodeback) {\n    if (typeof nodeback == \"function\") {\n        this._then(\n            Promise$_successAdapter,\n            Promise$_errorAdapter,\n            void 0,\n            nodeback,\n            this._isBound() ? this._boundTo : null\n        );\n    }\n    return this;\n};\n};\n","/**\n * Copyright (c) 2014 Petka Antonov\n * \n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:</p>\n * \n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n * \n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n * \n */\n\"use strict\";\nmodule.exports = function(Promise, isPromiseArrayProxy) {\nvar util = require(\"./util.js\");\nvar async = require(\"./async.js\");\nvar errors = require(\"./errors.js\");\nvar tryCatch1 = util.tryCatch1;\nvar errorObj = util.errorObj;\n\nPromise.prototype.progressed = function Promise$progressed(handler) {\n    return this._then(void 0, void 0, handler, void 0, void 0);\n};\n\nPromise.prototype._progress = function Promise$_progress(progressValue) {\n    if (this._isFollowingOrFulfilledOrRejected()) return;\n    this._progressUnchecked(progressValue);\n\n};\n\nPromise.prototype._progressHandlerAt =\nfunction Promise$_progressHandlerAt(index) {\n    if (index === 0) return this._progressHandler0;\n    return this[index + 2 - 5];\n};\n\nPromise.prototype._doProgressWith =\nfunction Promise$_doProgressWith(progression) {\n    var progressValue = progression.value;\n    var handler = progression.handler;\n    var promise = progression.promise;\n    var receiver = progression.receiver;\n\n    this._pushContext();\n    var ret = tryCatch1(handler, receiver, progressValue);\n    this._popContext();\n\n    if (ret === errorObj) {\n        if (ret.e != null &&\n            ret.e.name !== \"StopProgressPropagation\") {\n            var trace = errors.canAttach(ret.e)\n                ? ret.e : new Error(ret.e + \"\");\n            promise._attachExtraTrace(trace);\n            promise._progress(ret.e);\n        }\n    }\n    else if (ret instanceof Promise) {\n        ret._then(promise._progress, null, null, promise, void 0);\n    }\n    else {\n        promise._progress(ret);\n    }\n};\n\n\nPromise.prototype._progressUnchecked =\nfunction Promise$_progressUnchecked(progressValue) {\n    if (!this.isPending()) return;\n    var len = this._length();\n    var progress = this._progress;\n    for (var i = 0; i < len; i += 5) {\n        var handler = this._progressHandlerAt(i);\n        var promise = this._promiseAt(i);\n        if (!(promise instanceof Promise)) {\n            var receiver = this._receiverAt(i);\n            if (typeof handler === \"function\") {\n                handler.call(receiver, progressValue, promise);\n            }\n            else if (receiver instanceof Promise && receiver._isProxied()) {\n                receiver._progressUnchecked(progressValue);\n            }\n            else if (isPromiseArrayProxy(receiver, promise)) {\n                receiver._promiseProgressed(progressValue, promise);\n            }\n            continue;\n        }\n\n        if (typeof handler === \"function\") {\n            async.invoke(this._doProgressWith, this, {\n                handler: handler,\n                promise: promise,\n                receiver: this._receiverAt(i),\n                value: progressValue\n            });\n        }\n        else {\n            async.invoke(progress, promise, progressValue);\n        }\n    }\n};\n};\n","/**\n * Copyright (c) 2014 Petka Antonov\n * \n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:</p>\n * \n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n * \n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n * \n */\n\"use strict\";\nmodule.exports = function() {\nvar global = require(\"./global.js\");\nvar util = require(\"./util.js\");\nvar async = require(\"./async.js\");\nvar errors = require(\"./errors.js\");\n\nvar INTERNAL = function(){};\nvar APPLY = {};\nvar NEXT_FILTER = {e: null};\n\nvar PromiseArray = require(\"./promise_array.js\")(Promise, INTERNAL);\nvar CapturedTrace = require(\"./captured_trace.js\")();\nvar CatchFilter = require(\"./catch_filter.js\")(NEXT_FILTER);\nvar PromiseResolver = require(\"./promise_resolver.js\");\n\nvar isArray = util.isArray;\n\nvar errorObj = util.errorObj;\nvar tryCatch1 = util.tryCatch1;\nvar tryCatch2 = util.tryCatch2;\nvar tryCatchApply = util.tryCatchApply;\nvar RangeError = errors.RangeError;\nvar TypeError = errors.TypeError;\nvar CancellationError = errors.CancellationError;\nvar TimeoutError = errors.TimeoutError;\nvar RejectionError = errors.RejectionError;\nvar originatesFromRejection = errors.originatesFromRejection;\nvar markAsOriginatingFromRejection = errors.markAsOriginatingFromRejection;\nvar canAttach = errors.canAttach;\nvar thrower = util.thrower;\nvar apiRejection = require(\"./errors_api_rejection\")(Promise);\n\n\nvar makeSelfResolutionError = function Promise$_makeSelfResolutionError() {\n    return new TypeError(\"circular promise resolution chain\");\n};\n\nfunction isPromise(obj) {\n    if (obj === void 0) return false;\n    return obj instanceof Promise;\n}\n\nfunction isPromiseArrayProxy(receiver, promiseSlotValue) {\n    if (receiver instanceof PromiseArray) {\n        return promiseSlotValue >= 0;\n    }\n    return false;\n}\n\nfunction Promise(resolver) {\n    if (typeof resolver !== \"function\") {\n        throw new TypeError(\"the promise constructor requires a resolver function\");\n    }\n    if (this.constructor !== Promise) {\n        throw new TypeError(\"the promise constructor cannot be invoked directly\");\n    }\n    this._bitField = 0;\n    this._fulfillmentHandler0 = void 0;\n    this._rejectionHandler0 = void 0;\n    this._promise0 = void 0;\n    this._receiver0 = void 0;\n    this._settledValue = void 0;\n    this._boundTo = void 0;\n    if (resolver !== INTERNAL) this._resolveFromResolver(resolver);\n}\n\nPromise.prototype.bind = function Promise$bind(thisArg) {\n    var ret = new Promise(INTERNAL);\n    ret._setTrace(this);\n    ret._follow(this);\n    ret._setBoundTo(thisArg);\n    if (this._cancellable()) {\n        ret._setCancellable();\n        ret._cancellationParent = this;\n    }\n    return ret;\n};\n\nPromise.prototype.toString = function Promise$toString() {\n    return \"[object Promise]\";\n};\n\nPromise.prototype.caught = Promise.prototype[\"catch\"] =\nfunction Promise$catch(fn) {\n    var len = arguments.length;\n    if (len > 1) {\n        var catchInstances = new Array(len - 1),\n            j = 0, i;\n        for (i = 0; i < len - 1; ++i) {\n            var item = arguments[i];\n            if (typeof item === \"function\") {\n                catchInstances[j++] = item;\n            }\n            else {\n                var catchFilterTypeError =\n                    new TypeError(\n                        \"A catch filter must be an error constructor \"\n                        + \"or a filter function\");\n\n                this._attachExtraTrace(catchFilterTypeError);\n                async.invoke(this._reject, this, catchFilterTypeError);\n                return;\n            }\n        }\n        catchInstances.length = j;\n        fn = arguments[i];\n\n        this._resetTrace();\n        var catchFilter = new CatchFilter(catchInstances, fn, this);\n        return this._then(void 0, catchFilter.doFilter, void 0,\n            catchFilter, void 0);\n    }\n    return this._then(void 0, fn, void 0, void 0, void 0);\n};\n\nPromise.prototype.then =\nfunction Promise$then(didFulfill, didReject, didProgress) {\n    return this._then(didFulfill, didReject, didProgress,\n        void 0, void 0);\n};\n\n\nPromise.prototype.done =\nfunction Promise$done(didFulfill, didReject, didProgress) {\n    var promise = this._then(didFulfill, didReject, didProgress,\n        void 0, void 0);\n    promise._setIsFinal();\n};\n\nPromise.prototype.spread = function Promise$spread(didFulfill, didReject) {\n    return this._then(didFulfill, didReject, void 0,\n        APPLY, void 0);\n};\n\nPromise.prototype.isCancellable = function Promise$isCancellable() {\n    return !this.isResolved() &&\n        this._cancellable();\n};\n\nPromise.prototype.toJSON = function Promise$toJSON() {\n    var ret = {\n        isFulfilled: false,\n        isRejected: false,\n        fulfillmentValue: void 0,\n        rejectionReason: void 0\n    };\n    if (this.isFulfilled()) {\n        ret.fulfillmentValue = this._settledValue;\n        ret.isFulfilled = true;\n    }\n    else if (this.isRejected()) {\n        ret.rejectionReason = this._settledValue;\n        ret.isRejected = true;\n    }\n    return ret;\n};\n\nPromise.prototype.all = function Promise$all() {\n    return Promise$_all(this, true);\n};\n\n\nPromise.is = isPromise;\n\nfunction Promise$_all(promises, useBound) {\n    return Promise$_CreatePromiseArray(\n        promises,\n        PromiseArray,\n        useBound === true && promises._isBound()\n            ? promises._boundTo\n            : void 0\n   ).promise();\n}\nPromise.all = function Promise$All(promises) {\n    return Promise$_all(promises, false);\n};\n\nPromise.join = function Promise$Join() {\n    var $_len = arguments.length;var args = new Array($_len); for(var $_i = 0; $_i < $_len; ++$_i) {args[$_i] = arguments[$_i];}\n    return Promise$_CreatePromiseArray(args, PromiseArray, void 0).promise();\n};\n\nPromise.resolve = Promise.fulfilled =\nfunction Promise$Resolve(value) {\n    var ret = new Promise(INTERNAL);\n    ret._setTrace(void 0);\n    if (ret._tryFollow(value)) {\n        return ret;\n    }\n    ret._cleanValues();\n    ret._setFulfilled();\n    ret._settledValue = value;\n    return ret;\n};\n\nPromise.reject = Promise.rejected = function Promise$Reject(reason) {\n    var ret = new Promise(INTERNAL);\n    ret._setTrace(void 0);\n    markAsOriginatingFromRejection(reason);\n    ret._cleanValues();\n    ret._setRejected();\n    ret._settledValue = reason;\n    if (!canAttach(reason)) {\n        var trace = new Error(reason + \"\");\n        ret._setCarriedStackTrace(trace);\n    }\n    ret._ensurePossibleRejectionHandled();\n    return ret;\n};\n\nPromise.prototype.error = function Promise$_error(fn) {\n    return this.caught(originatesFromRejection, fn);\n};\n\nPromise.prototype._resolveFromSyncValue =\nfunction Promise$_resolveFromSyncValue(value) {\n    if (value === errorObj) {\n        this._cleanValues();\n        this._setRejected();\n        this._settledValue = value.e;\n        this._ensurePossibleRejectionHandled();\n    }\n    else {\n        var maybePromise = Promise._cast(value, void 0);\n        if (maybePromise instanceof Promise) {\n            this._follow(maybePromise);\n        }\n        else {\n            this._cleanValues();\n            this._setFulfilled();\n            this._settledValue = value;\n        }\n    }\n};\n\nPromise.method = function Promise$_Method(fn) {\n    if (typeof fn !== \"function\") {\n        throw new TypeError(\"fn must be a function\");\n    }\n    return function Promise$_method() {\n        var value;\n        switch(arguments.length) {\n        case 0: value = tryCatch1(fn, this, void 0); break;\n        case 1: value = tryCatch1(fn, this, arguments[0]); break;\n        case 2: value = tryCatch2(fn, this, arguments[0], arguments[1]); break;\n        default:\n            var $_len = arguments.length;var args = new Array($_len); for(var $_i = 0; $_i < $_len; ++$_i) {args[$_i] = arguments[$_i];}\n            value = tryCatchApply(fn, args, this); break;\n        }\n        var ret = new Promise(INTERNAL);\n        ret._setTrace(void 0);\n        ret._resolveFromSyncValue(value);\n        return ret;\n    };\n};\n\nPromise.attempt = Promise[\"try\"] = function Promise$_Try(fn, args, ctx) {\n    if (typeof fn !== \"function\") {\n        return apiRejection(\"fn must be a function\");\n    }\n    var value = isArray(args)\n        ? tryCatchApply(fn, args, ctx)\n        : tryCatch1(fn, ctx, args);\n\n    var ret = new Promise(INTERNAL);\n    ret._setTrace(void 0);\n    ret._resolveFromSyncValue(value);\n    return ret;\n};\n\nPromise.defer = Promise.pending = function Promise$Defer() {\n    var promise = new Promise(INTERNAL);\n    promise._setTrace(void 0);\n    return new PromiseResolver(promise);\n};\n\nPromise.bind = function Promise$Bind(thisArg) {\n    var ret = new Promise(INTERNAL);\n    ret._setTrace(void 0);\n    ret._setFulfilled();\n    ret._setBoundTo(thisArg);\n    return ret;\n};\n\nPromise.cast = function Promise$_Cast(obj) {\n    var ret = Promise._cast(obj, void 0);\n    if (!(ret instanceof Promise)) {\n        return Promise.resolve(ret);\n    }\n    return ret;\n};\n\nPromise.onPossiblyUnhandledRejection =\nfunction Promise$OnPossiblyUnhandledRejection(fn) {\n        CapturedTrace.possiblyUnhandledRejection = typeof fn === \"function\"\n                                                    ? fn : void 0;\n};\n\nvar unhandledRejectionHandled;\nPromise.onUnhandledRejectionHandled =\nfunction Promise$onUnhandledRejectionHandled(fn) {\n    unhandledRejectionHandled = typeof fn === \"function\" ? fn : void 0;\n};\n\nvar debugging = false || !!(\n    typeof process !== \"undefined\" &&\n    typeof process.execPath === \"string\" &&\n    typeof process.env === \"object\" &&\n    (process.env[\"BLUEBIRD_DEBUG\"] ||\n        process.env[\"NODE_ENV\"] === \"development\")\n);\n\n\nPromise.longStackTraces = function Promise$LongStackTraces() {\n    if (async.haveItemsQueued() &&\n        debugging === false\n   ) {\n        throw new Error(\"cannot enable long stack traces after promises have been created\");\n    }\n    debugging = CapturedTrace.isSupported();\n};\n\nPromise.hasLongStackTraces = function Promise$HasLongStackTraces() {\n    return debugging && CapturedTrace.isSupported();\n};\n\nPromise.prototype._setProxyHandlers =\nfunction Promise$_setProxyHandlers(receiver, promiseSlotValue) {\n    var index = this._length();\n\n    if (index >= 524287 - 5) {\n        index = 0;\n        this._setLength(0);\n    }\n    if (index === 0) {\n        this._promise0 = promiseSlotValue;\n        this._receiver0 = receiver;\n    }\n    else {\n        var i = index - 5;\n        this[i + 3] = promiseSlotValue;\n        this[i + 4] = receiver;\n        this[i + 0] =\n        this[i + 1] =\n        this[i + 2] = void 0;\n    }\n    this._setLength(index + 5);\n};\n\nPromise.prototype._proxyPromiseArray =\nfunction Promise$_proxyPromiseArray(promiseArray, index) {\n    this._setProxyHandlers(promiseArray, index);\n};\n\nPromise.prototype._proxyPromise = function Promise$_proxyPromise(promise) {\n    promise._setProxied();\n    this._setProxyHandlers(promise, -1);\n};\n\nPromise.prototype._then =\nfunction Promise$_then(\n    didFulfill,\n    didReject,\n    didProgress,\n    receiver,\n    internalData\n) {\n    var haveInternalData = internalData !== void 0;\n    var ret = haveInternalData ? internalData : new Promise(INTERNAL);\n\n    if (debugging && !haveInternalData) {\n        var haveSameContext = this._peekContext() === this._traceParent;\n        ret._traceParent = haveSameContext ? this._traceParent : this;\n        ret._setTrace(this);\n    }\n\n    if (!haveInternalData && this._isBound()) {\n        ret._setBoundTo(this._boundTo);\n    }\n\n    var callbackIndex =\n        this._addCallbacks(didFulfill, didReject, didProgress, ret, receiver);\n\n    if (!haveInternalData && this._cancellable()) {\n        ret._setCancellable();\n        ret._cancellationParent = this;\n    }\n\n    if (this.isResolved()) {\n        async.invoke(this._queueSettleAt, this, callbackIndex);\n    }\n\n    return ret;\n};\n\nPromise.prototype._length = function Promise$_length() {\n    return this._bitField & 524287;\n};\n\nPromise.prototype._isFollowingOrFulfilledOrRejected =\nfunction Promise$_isFollowingOrFulfilledOrRejected() {\n    return (this._bitField & 939524096) > 0;\n};\n\nPromise.prototype._isFollowing = function Promise$_isFollowing() {\n    return (this._bitField & 536870912) === 536870912;\n};\n\nPromise.prototype._setLength = function Promise$_setLength(len) {\n    this._bitField = (this._bitField & -524288) |\n        (len & 524287);\n};\n\nPromise.prototype._setFulfilled = function Promise$_setFulfilled() {\n    this._bitField = this._bitField | 268435456;\n};\n\nPromise.prototype._setRejected = function Promise$_setRejected() {\n    this._bitField = this._bitField | 134217728;\n};\n\nPromise.prototype._setFollowing = function Promise$_setFollowing() {\n    this._bitField = this._bitField | 536870912;\n};\n\nPromise.prototype._setIsFinal = function Promise$_setIsFinal() {\n    this._bitField = this._bitField | 33554432;\n};\n\nPromise.prototype._isFinal = function Promise$_isFinal() {\n    return (this._bitField & 33554432) > 0;\n};\n\nPromise.prototype._cancellable = function Promise$_cancellable() {\n    return (this._bitField & 67108864) > 0;\n};\n\nPromise.prototype._setCancellable = function Promise$_setCancellable() {\n    this._bitField = this._bitField | 67108864;\n};\n\nPromise.prototype._unsetCancellable = function Promise$_unsetCancellable() {\n    this._bitField = this._bitField & (~67108864);\n};\n\nPromise.prototype._setRejectionIsUnhandled =\nfunction Promise$_setRejectionIsUnhandled() {\n    this._bitField = this._bitField | 2097152;\n};\n\nPromise.prototype._unsetRejectionIsUnhandled =\nfunction Promise$_unsetRejectionIsUnhandled() {\n    this._bitField = this._bitField & (~2097152);\n    if (this._isUnhandledRejectionNotified()) {\n        this._unsetUnhandledRejectionIsNotified();\n        this._notifyUnhandledRejectionIsHandled();\n    }\n};\n\nPromise.prototype._isRejectionUnhandled =\nfunction Promise$_isRejectionUnhandled() {\n    return (this._bitField & 2097152) > 0;\n};\n\nPromise.prototype._setUnhandledRejectionIsNotified =\nfunction Promise$_setUnhandledRejectionIsNotified() {\n    this._bitField = this._bitField | 524288;\n};\n\nPromise.prototype._unsetUnhandledRejectionIsNotified =\nfunction Promise$_unsetUnhandledRejectionIsNotified() {\n    this._bitField = this._bitField & (~524288);\n};\n\nPromise.prototype._isUnhandledRejectionNotified =\nfunction Promise$_isUnhandledRejectionNotified() {\n    return (this._bitField & 524288) > 0;\n};\n\nPromise.prototype._setCarriedStackTrace =\nfunction Promise$_setCarriedStackTrace(capturedTrace) {\n    this._bitField = this._bitField | 1048576;\n    this._fulfillmentHandler0 = capturedTrace;\n};\n\nPromise.prototype._unsetCarriedStackTrace =\nfunction Promise$_unsetCarriedStackTrace() {\n    this._bitField = this._bitField & (~1048576);\n    this._fulfillmentHandler0 = void 0;\n};\n\nPromise.prototype._isCarryingStackTrace =\nfunction Promise$_isCarryingStackTrace() {\n    return (this._bitField & 1048576) > 0;\n};\n\nPromise.prototype._getCarriedStackTrace =\nfunction Promise$_getCarriedStackTrace() {\n    return this._isCarryingStackTrace()\n        ? this._fulfillmentHandler0\n        : void 0;\n};\n\nPromise.prototype._receiverAt = function Promise$_receiverAt(index) {\n    var ret;\n    if (index === 0) {\n        ret = this._receiver0;\n    }\n    else {\n        ret = this[index + 4 - 5];\n    }\n    if (this._isBound() && ret === void 0) {\n        return this._boundTo;\n    }\n    return ret;\n};\n\nPromise.prototype._promiseAt = function Promise$_promiseAt(index) {\n    if (index === 0) return this._promise0;\n    return this[index + 3 - 5];\n};\n\nPromise.prototype._fulfillmentHandlerAt =\nfunction Promise$_fulfillmentHandlerAt(index) {\n    if (index === 0) return this._fulfillmentHandler0;\n    return this[index + 0 - 5];\n};\n\nPromise.prototype._rejectionHandlerAt =\nfunction Promise$_rejectionHandlerAt(index) {\n    if (index === 0) return this._rejectionHandler0;\n    return this[index + 1 - 5];\n};\n\nPromise.prototype._unsetAt = function Promise$_unsetAt(index) {\n     if (index === 0) {\n        this._rejectionHandler0 =\n        this._progressHandler0 =\n        this._promise0 =\n        this._receiver0 = void 0;\n        if (!this._isCarryingStackTrace()) {\n            this._fulfillmentHandler0 = void 0;\n        }\n    }\n    else {\n        this[index - 5 + 0] =\n        this[index - 5 + 1] =\n        this[index - 5 + 2] =\n        this[index - 5 + 3] =\n        this[index - 5 + 4] = void 0;\n    }\n};\n\nPromise.prototype._resolveFromResolver =\nfunction Promise$_resolveFromResolver(resolver) {\n    var promise = this;\n    this._setTrace(void 0);\n    this._pushContext();\n\n    function Promise$_resolver(val) {\n        if (promise._tryFollow(val)) {\n            return;\n        }\n        promise._fulfill(val);\n    }\n    function Promise$_rejecter(val) {\n        var trace = canAttach(val) ? val : new Error(val + \"\");\n        promise._attachExtraTrace(trace);\n        markAsOriginatingFromRejection(val);\n        promise._reject(val, trace === val ? void 0 : trace);\n    }\n    var r = tryCatch2(resolver, void 0, Promise$_resolver, Promise$_rejecter);\n    this._popContext();\n\n    if (r !== void 0 && r === errorObj) {\n        var e = r.e;\n        var trace = canAttach(e) ? e : new Error(e + \"\");\n        promise._reject(e, trace);\n    }\n};\n\nPromise.prototype._addCallbacks = function Promise$_addCallbacks(\n    fulfill,\n    reject,\n    progress,\n    promise,\n    receiver\n) {\n    var index = this._length();\n\n    if (index >= 524287 - 5) {\n        index = 0;\n        this._setLength(0);\n    }\n\n    if (index === 0) {\n        this._promise0 = promise;\n        if (receiver !== void 0) this._receiver0 = receiver;\n        if (typeof fulfill === \"function\" && !this._isCarryingStackTrace())\n            this._fulfillmentHandler0 = fulfill;\n        if (typeof reject === \"function\") this._rejectionHandler0 = reject;\n        if (typeof progress === \"function\") this._progressHandler0 = progress;\n    }\n    else {\n        var i = index - 5;\n        this[i + 3] = promise;\n        this[i + 4] = receiver;\n        this[i + 0] = typeof fulfill === \"function\"\n                                            ? fulfill : void 0;\n        this[i + 1] = typeof reject === \"function\"\n                                            ? reject : void 0;\n        this[i + 2] = typeof progress === \"function\"\n                                            ? progress : void 0;\n    }\n    this._setLength(index + 5);\n    return index;\n};\n\n\n\nPromise.prototype._setBoundTo = function Promise$_setBoundTo(obj) {\n    if (obj !== void 0) {\n        this._bitField = this._bitField | 8388608;\n        this._boundTo = obj;\n    }\n    else {\n        this._bitField = this._bitField & (~8388608);\n    }\n};\n\nPromise.prototype._isBound = function Promise$_isBound() {\n    return (this._bitField & 8388608) === 8388608;\n};\n\nPromise.prototype._spreadSlowCase =\nfunction Promise$_spreadSlowCase(targetFn, promise, values, boundTo) {\n    var promiseForAll =\n            Promise$_CreatePromiseArray\n                (values, PromiseArray, boundTo)\n            .promise()\n            ._then(function() {\n                return targetFn.apply(boundTo, arguments);\n            }, void 0, void 0, APPLY, void 0);\n\n    promise._follow(promiseForAll);\n};\n\nPromise.prototype._callSpread =\nfunction Promise$_callSpread(handler, promise, value, localDebugging) {\n    var boundTo = this._isBound() ? this._boundTo : void 0;\n    if (isArray(value)) {\n        for (var i = 0, len = value.length; i < len; ++i) {\n            if (isPromise(Promise._cast(value[i], void 0))) {\n                this._spreadSlowCase(handler, promise, value, boundTo);\n                return;\n            }\n        }\n    }\n    if (localDebugging) promise._pushContext();\n    return tryCatchApply(handler, value, boundTo);\n};\n\nPromise.prototype._callHandler =\nfunction Promise$_callHandler(\n    handler, receiver, promise, value, localDebugging) {\n    var x;\n    if (receiver === APPLY && !this.isRejected()) {\n        x = this._callSpread(handler, promise, value, localDebugging);\n    }\n    else {\n        if (localDebugging) promise._pushContext();\n        x = tryCatch1(handler, receiver, value);\n    }\n    if (localDebugging) promise._popContext();\n    return x;\n};\n\nPromise.prototype._settlePromiseFromHandler =\nfunction Promise$_settlePromiseFromHandler(\n    handler, receiver, value, promise\n) {\n    if (!isPromise(promise)) {\n        handler.call(receiver, value, promise);\n        return;\n    }\n\n    var localDebugging = debugging;\n    var x = this._callHandler(handler, receiver,\n                                promise, value, localDebugging);\n\n    if (promise._isFollowing()) return;\n\n    if (x === errorObj || x === promise || x === NEXT_FILTER) {\n        var err = x === promise\n                    ? makeSelfResolutionError()\n                    : x.e;\n        var trace = canAttach(err) ? err : new Error(err + \"\");\n        if (x !== NEXT_FILTER) promise._attachExtraTrace(trace);\n        promise._rejectUnchecked(err, trace);\n    }\n    else {\n        var castValue = Promise._cast(x, promise);\n        if (isPromise(castValue)) {\n            if (castValue.isRejected() &&\n                !castValue._isCarryingStackTrace() &&\n                !canAttach(castValue._settledValue)) {\n                var trace = new Error(castValue._settledValue + \"\");\n                promise._attachExtraTrace(trace);\n                castValue._setCarriedStackTrace(trace);\n            }\n            promise._follow(castValue);\n            if (castValue._cancellable()) {\n                promise._cancellationParent = castValue;\n                promise._setCancellable();\n            }\n        }\n        else {\n            promise._fulfillUnchecked(x);\n        }\n    }\n};\n\nPromise.prototype._follow =\nfunction Promise$_follow(promise) {\n    this._setFollowing();\n\n    if (promise.isPending()) {\n        if (promise._cancellable() ) {\n            this._cancellationParent = promise;\n            this._setCancellable();\n        }\n        promise._proxyPromise(this);\n    }\n    else if (promise.isFulfilled()) {\n        this._fulfillUnchecked(promise._settledValue);\n    }\n    else {\n        this._rejectUnchecked(promise._settledValue,\n            promise._getCarriedStackTrace());\n    }\n\n    if (promise._isRejectionUnhandled()) promise._unsetRejectionIsUnhandled();\n\n    if (debugging &&\n        promise._traceParent == null) {\n        promise._traceParent = this;\n    }\n};\n\nPromise.prototype._tryFollow =\nfunction Promise$_tryFollow(value) {\n    if (this._isFollowingOrFulfilledOrRejected() ||\n        value === this) {\n        return false;\n    }\n    var maybePromise = Promise._cast(value, void 0);\n    if (!isPromise(maybePromise)) {\n        return false;\n    }\n    this._follow(maybePromise);\n    return true;\n};\n\nPromise.prototype._resetTrace = function Promise$_resetTrace() {\n    if (debugging) {\n        this._trace = new CapturedTrace(this._peekContext() === void 0);\n    }\n};\n\nPromise.prototype._setTrace = function Promise$_setTrace(parent) {\n    if (debugging) {\n        var context = this._peekContext();\n        this._traceParent = context;\n        var isTopLevel = context === void 0;\n        if (parent !== void 0 &&\n            parent._traceParent === context) {\n            this._trace = parent._trace;\n        }\n        else {\n            this._trace = new CapturedTrace(isTopLevel);\n        }\n    }\n    return this;\n};\n\nPromise.prototype._attachExtraTrace =\nfunction Promise$_attachExtraTrace(error) {\n    if (debugging) {\n        var promise = this;\n        var stack = error.stack;\n        stack = typeof stack === \"string\"\n            ? stack.split(\"\\n\") : [];\n        var headerLineCount = 1;\n\n        while(promise != null &&\n            promise._trace != null) {\n            stack = CapturedTrace.combine(\n                stack,\n                promise._trace.stack.split(\"\\n\")\n           );\n            promise = promise._traceParent;\n        }\n\n        var max = Error.stackTraceLimit + headerLineCount;\n        var len = stack.length;\n        if (len  > max) {\n            stack.length = max;\n        }\n        if (stack.length <= headerLineCount) {\n            error.stack = \"(No stack trace)\";\n        }\n        else {\n            error.stack = stack.join(\"\\n\");\n        }\n    }\n};\n\nPromise.prototype._cleanValues = function Promise$_cleanValues() {\n    if (this._cancellable()) {\n        this._cancellationParent = void 0;\n    }\n};\n\nPromise.prototype._fulfill = function Promise$_fulfill(value) {\n    if (this._isFollowingOrFulfilledOrRejected()) return;\n    this._fulfillUnchecked(value);\n};\n\nPromise.prototype._reject =\nfunction Promise$_reject(reason, carriedStackTrace) {\n    if (this._isFollowingOrFulfilledOrRejected()) return;\n    this._rejectUnchecked(reason, carriedStackTrace);\n};\n\nPromise.prototype._settlePromiseAt = function Promise$_settlePromiseAt(index) {\n    var handler = this.isFulfilled()\n        ? this._fulfillmentHandlerAt(index)\n        : this._rejectionHandlerAt(index);\n\n    var value = this._settledValue;\n    var receiver = this._receiverAt(index);\n    var promise = this._promiseAt(index);\n\n    if (typeof handler === \"function\") {\n        this._settlePromiseFromHandler(handler, receiver, value, promise);\n    }\n    else {\n        var done = false;\n        var isFulfilled = this.isFulfilled();\n        if (receiver !== void 0) {\n            if (receiver instanceof Promise &&\n                receiver._isProxied()) {\n                receiver._unsetProxied();\n\n                if (isFulfilled) receiver._fulfillUnchecked(value);\n                else receiver._rejectUnchecked(value,\n                    this._getCarriedStackTrace());\n                done = true;\n            }\n            else if (isPromiseArrayProxy(receiver, promise)) {\n                if (isFulfilled) receiver._promiseFulfilled(value, promise);\n                else receiver._promiseRejected(value, promise);\n                done = true;\n            }\n        }\n\n        if (!done) {\n            if (isFulfilled) promise._fulfill(value);\n            else promise._reject(value, this._getCarriedStackTrace());\n        }\n    }\n\n    if (index >= 256) {\n        this._queueGC();\n    }\n};\n\nPromise.prototype._isProxied = function Promise$_isProxied() {\n    return (this._bitField & 4194304) === 4194304;\n};\n\nPromise.prototype._setProxied = function Promise$_setProxied() {\n    this._bitField = this._bitField | 4194304;\n};\n\nPromise.prototype._unsetProxied = function Promise$_unsetProxied() {\n    this._bitField = this._bitField & (~4194304);\n};\n\nPromise.prototype._isGcQueued = function Promise$_isGcQueued() {\n    return (this._bitField & -1073741824) === -1073741824;\n};\n\nPromise.prototype._setGcQueued = function Promise$_setGcQueued() {\n    this._bitField = this._bitField | -1073741824;\n};\n\nPromise.prototype._unsetGcQueued = function Promise$_unsetGcQueued() {\n    this._bitField = this._bitField & (~-1073741824);\n};\n\nPromise.prototype._queueGC = function Promise$_queueGC() {\n    if (this._isGcQueued()) return;\n    this._setGcQueued();\n    async.invokeLater(this._gc, this, void 0);\n};\n\nPromise.prototype._gc = function Promise$gc() {\n    var len = this._length();\n    this._unsetAt(0);\n    for (var i = 0; i < len; i++) {\n        delete this[i];\n    }\n    this._setLength(0);\n    this._unsetGcQueued();\n};\n\nPromise.prototype._queueSettleAt = function Promise$_queueSettleAt(index) {\n    if (this._isRejectionUnhandled()) this._unsetRejectionIsUnhandled();\n    async.invoke(this._settlePromiseAt, this, index);\n};\n\nPromise.prototype._fulfillUnchecked =\nfunction Promise$_fulfillUnchecked(value) {\n    if (!this.isPending()) return;\n    if (value === this) {\n        var err = makeSelfResolutionError();\n        this._attachExtraTrace(err);\n        return this._rejectUnchecked(err, void 0);\n    }\n    this._cleanValues();\n    this._setFulfilled();\n    this._settledValue = value;\n    var len = this._length();\n\n    if (len > 0) {\n        async.invoke(this._settlePromises, this, len);\n    }\n};\n\nPromise.prototype._rejectUncheckedCheckError =\nfunction Promise$_rejectUncheckedCheckError(reason) {\n    var trace = canAttach(reason) ? reason : new Error(reason + \"\");\n    this._rejectUnchecked(reason, trace === reason ? void 0 : trace);\n};\n\nPromise.prototype._rejectUnchecked =\nfunction Promise$_rejectUnchecked(reason, trace) {\n    if (!this.isPending()) return;\n    if (reason === this) {\n        var err = makeSelfResolutionError();\n        this._attachExtraTrace(err);\n        return this._rejectUnchecked(err);\n    }\n    this._cleanValues();\n    this._setRejected();\n    this._settledValue = reason;\n\n    if (this._isFinal()) {\n        async.invokeLater(thrower, void 0, trace === void 0 ? reason : trace);\n        return;\n    }\n    var len = this._length();\n\n    if (trace !== void 0) this._setCarriedStackTrace(trace);\n\n    if (len > 0) {\n        async.invoke(this._rejectPromises, this, null);\n    }\n    else {\n        this._ensurePossibleRejectionHandled();\n    }\n};\n\nPromise.prototype._rejectPromises = function Promise$_rejectPromises() {\n    this._settlePromises();\n    this._unsetCarriedStackTrace();\n};\n\nPromise.prototype._settlePromises = function Promise$_settlePromises() {\n    var len = this._length();\n    for (var i = 0; i < len; i+= 5) {\n        this._settlePromiseAt(i);\n    }\n};\n\nPromise.prototype._ensurePossibleRejectionHandled =\nfunction Promise$_ensurePossibleRejectionHandled() {\n    this._setRejectionIsUnhandled();\n    if (CapturedTrace.possiblyUnhandledRejection !== void 0) {\n        async.invokeLater(this._notifyUnhandledRejection, this, void 0);\n    }\n};\n\nPromise.prototype._notifyUnhandledRejectionIsHandled =\nfunction Promise$_notifyUnhandledRejectionIsHandled() {\n    if (typeof unhandledRejectionHandled === \"function\") {\n        async.invokeLater(unhandledRejectionHandled, void 0, this);\n    }\n};\n\nPromise.prototype._notifyUnhandledRejection =\nfunction Promise$_notifyUnhandledRejection() {\n    if (this._isRejectionUnhandled()) {\n        var reason = this._settledValue;\n        var trace = this._getCarriedStackTrace();\n\n        this._setUnhandledRejectionIsNotified();\n\n        if (trace !== void 0) {\n            this._unsetCarriedStackTrace();\n            reason = trace;\n        }\n        if (typeof CapturedTrace.possiblyUnhandledRejection === \"function\") {\n            CapturedTrace.possiblyUnhandledRejection(reason, this);\n        }\n    }\n};\n\nvar contextStack = [];\nPromise.prototype._peekContext = function Promise$_peekContext() {\n    var lastIndex = contextStack.length - 1;\n    if (lastIndex >= 0) {\n        return contextStack[lastIndex];\n    }\n    return void 0;\n\n};\n\nPromise.prototype._pushContext = function Promise$_pushContext() {\n    if (!debugging) return;\n    contextStack.push(this);\n};\n\nPromise.prototype._popContext = function Promise$_popContext() {\n    if (!debugging) return;\n    contextStack.pop();\n};\n\nfunction Promise$_CreatePromiseArray(\n    promises, PromiseArrayConstructor, boundTo) {\n\n    var list = null;\n    if (isArray(promises)) {\n        list = promises;\n    }\n    else {\n        list = Promise._cast(promises, void 0);\n        if (list !== promises) {\n            list._setBoundTo(boundTo);\n        }\n        else if (!isPromise(list)) {\n            list = null;\n        }\n    }\n    if (list !== null) {\n        return new PromiseArrayConstructor(list, boundTo);\n    }\n    return {\n        promise: function() {return apiRejection(\"expecting an array, a promise or a thenable\");}\n    };\n}\n\nvar old = global.Promise;\nPromise.noConflict = function() {\n    if (global.Promise === Promise) {\n        global.Promise = old;\n    }\n    return Promise;\n};\n\nif (!CapturedTrace.isSupported()) {\n    Promise.longStackTraces = function(){};\n    debugging = false;\n}\n\nPromise._makeSelfResolutionError = makeSelfResolutionError;\nrequire(\"./finally.js\")(Promise, NEXT_FILTER);\nrequire(\"./direct_resolve.js\")(Promise);\nrequire(\"./thenables.js\")(Promise, INTERNAL);\nrequire(\"./synchronous_inspection.js\")(Promise);\nPromise.RangeError = RangeError;\nPromise.CancellationError = CancellationError;\nPromise.TimeoutError = TimeoutError;\nPromise.TypeError = TypeError;\nPromise.RejectionError = RejectionError;\n\nutil.toFastProperties(Promise);\nutil.toFastProperties(Promise.prototype);\nrequire('./timers.js')(Promise,INTERNAL);\nrequire('./any.js')(Promise,Promise$_CreatePromiseArray,PromiseArray);\nrequire('./race.js')(Promise,INTERNAL);\nrequire('./call_get.js')(Promise);\nrequire('./filter.js')(Promise,Promise$_CreatePromiseArray,PromiseArray,apiRejection);\nrequire('./generators.js')(Promise,apiRejection,INTERNAL);\nrequire('./map.js')(Promise,PromiseArray,INTERNAL,apiRejection);\nrequire('./nodeify.js')(Promise);\nrequire('./promisify.js')(Promise,INTERNAL);\nrequire('./props.js')(Promise,PromiseArray);\nrequire('./reduce.js')(Promise,Promise$_CreatePromiseArray,PromiseArray,apiRejection,INTERNAL);\nrequire('./settle.js')(Promise,Promise$_CreatePromiseArray,PromiseArray);\nrequire('./some.js')(Promise,Promise$_CreatePromiseArray,PromiseArray,apiRejection);\nrequire('./progress.js')(Promise,isPromiseArrayProxy);\nrequire('./cancel.js')(Promise,INTERNAL);\n\nPromise.prototype = Promise.prototype;\nreturn Promise;\n\n};\n","/**\n * Copyright (c) 2014 Petka Antonov\n * \n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:</p>\n * \n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n * \n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n * \n */\n\"use strict\";\nmodule.exports = function(Promise, INTERNAL) {\nvar canAttach = require(\"./errors.js\").canAttach;\nvar util = require(\"./util.js\");\nvar async = require(\"./async.js\");\nvar hasOwn = {}.hasOwnProperty;\nvar isArray = util.isArray;\n\nfunction toResolutionValue(val) {\n    switch(val) {\n    case -1: return void 0;\n    case -2: return [];\n    case -3: return {};\n    }\n}\n\nfunction PromiseArray(values, boundTo) {\n    var promise = this._promise = new Promise(INTERNAL);\n    var parent = void 0;\n    if (values instanceof Promise) {\n        parent = values;\n        if (values._cancellable()) {\n            promise._setCancellable();\n            promise._cancellationParent = values;\n        }\n        if (values._isBound()) {\n            promise._setBoundTo(boundTo);\n        }\n    }\n    promise._setTrace(parent);\n    this._values = values;\n    this._length = 0;\n    this._totalResolved = 0;\n    this._init(void 0, -2);\n}\nPromiseArray.PropertiesPromiseArray = function() {};\n\nPromiseArray.prototype.length = function PromiseArray$length() {\n    return this._length;\n};\n\nPromiseArray.prototype.promise = function PromiseArray$promise() {\n    return this._promise;\n};\n\nPromiseArray.prototype._init =\nfunction PromiseArray$_init(_, resolveValueIfEmpty) {\n    var values = this._values;\n    if (values instanceof Promise) {\n        if (values.isFulfilled()) {\n            values = values._settledValue;\n            if (!isArray(values)) {\n                var err = new Promise.TypeError(\"expecting an array, a promise or a thenable\");\n                this.__hardReject__(err);\n                return;\n            }\n            this._values = values;\n        }\n        else if (values.isPending()) {\n            values._then(\n                this._init,\n                this._reject,\n                void 0,\n                this,\n                resolveValueIfEmpty\n           );\n            return;\n        }\n        else {\n            values._unsetRejectionIsUnhandled();\n            this._reject(values._settledValue);\n            return;\n        }\n    }\n\n    if (values.length === 0) {\n        this._resolve(toResolutionValue(resolveValueIfEmpty));\n        return;\n    }\n    var len = values.length;\n    var newLen = len;\n    var newValues;\n    if (this instanceof PromiseArray.PropertiesPromiseArray) {\n        newValues = this._values;\n    }\n    else {\n        newValues = new Array(len);\n    }\n    var isDirectScanNeeded = false;\n    for (var i = 0; i < len; ++i) {\n        var promise = values[i];\n        if (promise === void 0 && !hasOwn.call(values, i)) {\n            newLen--;\n            continue;\n        }\n        var maybePromise = Promise._cast(promise, void 0);\n        if (maybePromise instanceof Promise) {\n            if (maybePromise.isPending()) {\n                maybePromise._proxyPromiseArray(this, i);\n            }\n            else {\n                maybePromise._unsetRejectionIsUnhandled();\n                isDirectScanNeeded = true;\n            }\n        }\n        else {\n            isDirectScanNeeded = true;\n        }\n        newValues[i] = maybePromise;\n    }\n    if (newLen === 0) {\n        if (resolveValueIfEmpty === -2) {\n            this._resolve(newValues);\n        }\n        else {\n            this._resolve(toResolutionValue(resolveValueIfEmpty));\n        }\n        return;\n    }\n    this._values = newValues;\n    this._length = newLen;\n    if (isDirectScanNeeded) {\n        var scanMethod = newLen === len\n            ? this._scanDirectValues\n            : this._scanDirectValuesHoled;\n        async.invoke(scanMethod, this, len);\n    }\n};\n\nPromiseArray.prototype._settlePromiseAt =\nfunction PromiseArray$_settlePromiseAt(index) {\n    var value = this._values[index];\n    if (!(value instanceof Promise)) {\n        this._promiseFulfilled(value, index);\n    }\n    else if (value.isFulfilled()) {\n        this._promiseFulfilled(value._settledValue, index);\n    }\n    else if (value.isRejected()) {\n        this._promiseRejected(value._settledValue, index);\n    }\n};\n\nPromiseArray.prototype._scanDirectValuesHoled =\nfunction PromiseArray$_scanDirectValuesHoled(len) {\n    for (var i = 0; i < len; ++i) {\n        if (this._isResolved()) {\n            break;\n        }\n        if (hasOwn.call(this._values, i)) {\n            this._settlePromiseAt(i);\n        }\n    }\n};\n\nPromiseArray.prototype._scanDirectValues =\nfunction PromiseArray$_scanDirectValues(len) {\n    for (var i = 0; i < len; ++i) {\n        if (this._isResolved()) {\n            break;\n        }\n        this._settlePromiseAt(i);\n    }\n};\n\nPromiseArray.prototype._isResolved = function PromiseArray$_isResolved() {\n    return this._values === null;\n};\n\nPromiseArray.prototype._resolve = function PromiseArray$_resolve(value) {\n    this._values = null;\n    this._promise._fulfill(value);\n};\n\nPromiseArray.prototype.__hardReject__ =\nPromiseArray.prototype._reject = function PromiseArray$_reject(reason) {\n    this._values = null;\n    var trace = canAttach(reason) ? reason : new Error(reason + \"\");\n    this._promise._attachExtraTrace(trace);\n    this._promise._reject(reason, trace);\n};\n\nPromiseArray.prototype._promiseProgressed =\nfunction PromiseArray$_promiseProgressed(progressValue, index) {\n    if (this._isResolved()) return;\n    this._promise._progress({\n        index: index,\n        value: progressValue\n    });\n};\n\n\nPromiseArray.prototype._promiseFulfilled =\nfunction PromiseArray$_promiseFulfilled(value, index) {\n    if (this._isResolved()) return;\n    this._values[index] = value;\n    var totalResolved = ++this._totalResolved;\n    if (totalResolved >= this._length) {\n        this._resolve(this._values);\n    }\n};\n\nPromiseArray.prototype._promiseRejected =\nfunction PromiseArray$_promiseRejected(reason, index) {\n    if (this._isResolved()) return;\n    this._totalResolved++;\n    this._reject(reason);\n};\n\nreturn PromiseArray;\n};\n","/**\n * Copyright (c) 2014 Petka Antonov\n * \n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:</p>\n * \n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n * \n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n * \n */\n\"use strict\";\nmodule.exports = function(Promise, INTERNAL) {\nvar errors = require(\"./errors.js\");\nvar TypeError = errors.TypeError;\nvar util = require(\"./util.js\");\nvar isArray = util.isArray;\nvar errorObj = util.errorObj;\nvar tryCatch1 = util.tryCatch1;\nvar yieldHandlers = [];\n\nfunction promiseFromYieldHandler(value) {\n    var _yieldHandlers = yieldHandlers;\n    var _errorObj = errorObj;\n    var _Promise = Promise;\n    var len = _yieldHandlers.length;\n    for (var i = 0; i < len; ++i) {\n        var result = tryCatch1(_yieldHandlers[i], void 0, value);\n        if (result === _errorObj) {\n            return _Promise.reject(_errorObj.e);\n        }\n        var maybePromise = _Promise._cast(result,\n            promiseFromYieldHandler, void 0);\n        if (maybePromise instanceof _Promise) return maybePromise;\n    }\n    return null;\n}\n\nfunction PromiseSpawn(generatorFunction, receiver) {\n    var promise = this._promise = new Promise(INTERNAL);\n    promise._setTrace(void 0);\n    this._generatorFunction = generatorFunction;\n    this._receiver = receiver;\n    this._generator = void 0;\n}\n\nPromiseSpawn.prototype.promise = function PromiseSpawn$promise() {\n    return this._promise;\n};\n\nPromiseSpawn.prototype._run = function PromiseSpawn$_run() {\n    this._generator = this._generatorFunction.call(this._receiver);\n    this._receiver =\n        this._generatorFunction = void 0;\n    this._next(void 0);\n};\n\nPromiseSpawn.prototype._continue = function PromiseSpawn$_continue(result) {\n    if (result === errorObj) {\n        this._generator = void 0;\n        var trace = errors.canAttach(result.e)\n            ? result.e : new Error(result.e + \"\");\n        this._promise._attachExtraTrace(trace);\n        this._promise._reject(result.e, trace);\n        return;\n    }\n\n    var value = result.value;\n    if (result.done === true) {\n        this._generator = void 0;\n        if (!this._promise._tryFollow(value)) {\n            this._promise._fulfill(value);\n        }\n    }\n    else {\n        var maybePromise = Promise._cast(value, PromiseSpawn$_continue, void 0);\n        if (!(maybePromise instanceof Promise)) {\n            if (isArray(maybePromise)) {\n                maybePromise = Promise.all(maybePromise);\n            }\n            else {\n                maybePromise = promiseFromYieldHandler(maybePromise);\n            }\n            if (maybePromise === null) {\n                this._throw(new TypeError(\"A value was yielded that could not be treated as a promise\"));\n                return;\n            }\n        }\n        maybePromise._then(\n            this._next,\n            this._throw,\n            void 0,\n            this,\n            null\n       );\n    }\n};\n\nPromiseSpawn.prototype._throw = function PromiseSpawn$_throw(reason) {\n    if (errors.canAttach(reason))\n        this._promise._attachExtraTrace(reason);\n    this._continue(\n        tryCatch1(this._generator[\"throw\"], this._generator, reason)\n   );\n};\n\nPromiseSpawn.prototype._next = function PromiseSpawn$_next(value) {\n    this._continue(\n        tryCatch1(this._generator.next, this._generator, value)\n   );\n};\n\nPromiseSpawn.addYieldHandler = function PromiseSpawn$AddYieldHandler(fn) {\n    if (typeof fn !== \"function\") throw new TypeError(\"fn must be a function\");\n    yieldHandlers.push(fn);\n};\n\nreturn PromiseSpawn;\n};\n","/**\n * Copyright (c) 2014 Petka Antonov\n * \n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:</p>\n * \n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n * \n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n * \n */\n\"use strict\";\nmodule.exports = function(Promise, INTERNAL) {\nvar THIS = {};\nvar util = require(\"./util.js\");\nvar es5 = require(\"./es5.js\");\nvar nodebackForPromise = require(\"./promise_resolver.js\")\n    ._nodebackForPromise;\nvar withAppended = util.withAppended;\nvar maybeWrapAsError = util.maybeWrapAsError;\nvar canEvaluate = util.canEvaluate;\nvar deprecated = util.deprecated;\nvar TypeError = require(\"./errors\").TypeError;\n\n\nvar rasyncSuffix = new RegExp(\"Async\" + \"$\");\nfunction isPromisified(fn) {\n    return fn.__isPromisified__ === true;\n}\nfunction hasPromisified(obj, key) {\n    var containsKey = ((key + \"Async\") in obj);\n    return containsKey ? isPromisified(obj[key + \"Async\"])\n                       : false;\n}\nfunction checkValid(ret) {\n    for (var i = 0; i < ret.length; i += 2) {\n        var key = ret[i];\n        if (rasyncSuffix.test(key)) {\n            var keyWithoutAsyncSuffix = key.replace(rasyncSuffix, \"\");\n            for (var j = 0; j < ret.length; j += 2) {\n                if (ret[j] === keyWithoutAsyncSuffix) {\n                    throw new TypeError(\"Cannot promisify an API \" +\n                        \"that has normal methods with Async-suffix\");\n                }\n            }\n        }\n    }\n}\nvar inheritedMethods = (function() {\n    if (es5.isES5) {\n        var create = Object.create;\n        var getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n        return function(cur) {\n            var ret = [];\n            var visitedKeys = create(null);\n            var original = cur;\n            while (cur !== null) {\n                var keys = es5.keys(cur);\n                for (var i = 0, len = keys.length; i < len; ++i) {\n                    var key = keys[i];\n                    if (visitedKeys[key]) continue;\n                    visitedKeys[key] = true;\n                    var desc = getOwnPropertyDescriptor(cur, key);\n\n                    if (desc != null &&\n                        typeof desc.value === \"function\" &&\n                        !isPromisified(desc.value) &&\n                        !hasPromisified(original, key)) {\n                        ret.push(key, desc.value);\n                    }\n                }\n                cur = es5.getPrototypeOf(cur);\n            }\n            checkValid(ret);\n            return ret;\n        };\n    }\n    else {\n        return function(obj) {\n            var ret = [];\n            /*jshint forin:false */\n            for (var key in obj) {\n                var fn = obj[key];\n                if (typeof fn === \"function\" &&\n                    !isPromisified(fn) &&\n                    !hasPromisified(obj, key)) {\n                    ret.push(key, fn);\n                }\n            }\n            checkValid(ret);\n            return ret;\n        };\n    }\n})();\n\nfunction switchCaseArgumentOrder(likelyArgumentCount) {\n    var ret = [likelyArgumentCount];\n    var min = Math.max(0, likelyArgumentCount - 1 - 5);\n    for(var i = likelyArgumentCount - 1; i >= min; --i) {\n        if (i === likelyArgumentCount) continue;\n        ret.push(i);\n    }\n    for(var i = likelyArgumentCount + 1; i <= 5; ++i) {\n        ret.push(i);\n    }\n    return ret;\n}\n\nfunction parameterDeclaration(parameterCount) {\n    var ret = new Array(parameterCount);\n    for(var i = 0; i < ret.length; ++i) {\n        ret[i] = \"_arg\" + i;\n    }\n    return ret.join(\", \");\n}\n\nfunction parameterCount(fn) {\n    if (typeof fn.length === \"number\") {\n        return Math.max(Math.min(fn.length, 1023 + 1), 0);\n    }\n    return 0;\n}\n\nvar rident = /^[a-z$_][a-z$_0-9]*$/i;\nfunction propertyAccess(id) {\n    if (rident.test(id)) {\n        return \".\" + id;\n    }\n    else return \"['\" + id.replace(/(['\\\\])/g, \"\\\\$1\") + \"']\";\n}\n\nfunction makeNodePromisifiedEval(callback, receiver, originalName, fn) {\n    var newParameterCount = Math.max(0, parameterCount(fn) - 1);\n    var argumentOrder = switchCaseArgumentOrder(newParameterCount);\n\n    var callbackName = (typeof originalName === \"string\" ?\n        originalName + \"Async\" :\n        \"promisified\");\n\n    function generateCallForArgumentCount(count) {\n        var args = new Array(count);\n        for (var i = 0, len = args.length; i < len; ++i) {\n            args[i] = \"arguments[\" + i + \"]\";\n        }\n        var comma = count > 0 ? \",\" : \"\";\n\n        if (typeof callback === \"string\" &&\n            receiver === THIS) {\n            return \"this\" + propertyAccess(callback) + \"(\"+args.join(\",\") +\n                comma +\" fn);\"+\n                \"break;\";\n        }\n        return (receiver === void 0\n            ? \"callback(\"+args.join(\",\")+ comma +\" fn);\"\n            : \"callback.call(\"+(receiver === THIS\n                ? \"this\"\n                : \"receiver\")+\", \"+args.join(\",\") + comma + \" fn);\") +\n        \"break;\";\n    }\n\n    if (!rident.test(callbackName)) {\n        callbackName = \"promisified\";\n    }\n\n    function generateArgumentSwitchCase() {\n        var ret = \"\";\n        for(var i = 0; i < argumentOrder.length; ++i) {\n            ret += \"case \" + argumentOrder[i] +\":\" +\n                generateCallForArgumentCount(argumentOrder[i]);\n        }\n        ret += \"default: var args = new Array(len + 1);\" +\n            \"var i = 0;\" +\n            \"for (var i = 0; i < len; ++i) { \" +\n            \"   args[i] = arguments[i];\" +\n            \"}\" +\n            \"args[i] = fn;\" +\n\n            (typeof callback === \"string\"\n            ? \"this\" + propertyAccess(callback) + \".apply(\"\n            : \"callback.apply(\") +\n\n            (receiver === THIS ? \"this\" : \"receiver\") +\n            \", args); break;\";\n        return ret;\n    }\n\n    return new Function(\"Promise\", \"callback\", \"receiver\",\n            \"withAppended\", \"maybeWrapAsError\", \"nodebackForPromise\",\n            \"INTERNAL\",\n        \"var ret = function \" + callbackName +\n        \"(\" + parameterDeclaration(newParameterCount) + \") {\\\"use strict\\\";\" +\n        \"var len = arguments.length;\" +\n        \"var promise = new Promise(INTERNAL);\"+\n        \"promise._setTrace(void 0);\" +\n        \"var fn = nodebackForPromise(promise);\"+\n        \"try {\" +\n        \"switch(len) {\" +\n        generateArgumentSwitchCase() +\n        \"}\" +\n        \"}\" +\n        \"catch(e){ \" +\n        \"var wrapped = maybeWrapAsError(e);\" +\n        \"promise._attachExtraTrace(wrapped);\" +\n        \"promise._reject(wrapped);\" +\n        \"}\" +\n        \"return promise;\" +\n        \"\" +\n        \"}; ret.__isPromisified__ = true; return ret;\"\n   )(Promise, callback, receiver, withAppended,\n        maybeWrapAsError, nodebackForPromise, INTERNAL);\n}\n\nfunction makeNodePromisifiedClosure(callback, receiver) {\n    function promisified() {\n        var _receiver = receiver;\n        if (receiver === THIS) _receiver = this;\n        if (typeof callback === \"string\") {\n            callback = _receiver[callback];\n        }\n        var promise = new Promise(INTERNAL);\n        promise._setTrace(void 0);\n        var fn = nodebackForPromise(promise);\n        try {\n            callback.apply(_receiver, withAppended(arguments, fn));\n        }\n        catch(e) {\n            var wrapped = maybeWrapAsError(e);\n            promise._attachExtraTrace(wrapped);\n            promise._reject(wrapped);\n        }\n        return promise;\n    }\n    promisified.__isPromisified__ = true;\n    return promisified;\n}\n\nvar makeNodePromisified = canEvaluate\n    ? makeNodePromisifiedEval\n    : makeNodePromisifiedClosure;\n\nfunction _promisify(callback, receiver, isAll) {\n    if (isAll) {\n        var methods = inheritedMethods(callback);\n        for (var i = 0, len = methods.length; i < len; i+= 2) {\n            var key = methods[i];\n            var fn = methods[i+1];\n            var promisifiedKey = key + \"Async\";\n            callback[promisifiedKey] = makeNodePromisified(key, THIS, key, fn);\n        }\n        util.toFastProperties(callback);\n        return callback;\n    }\n    else {\n        return makeNodePromisified(callback, receiver, void 0, callback);\n    }\n}\n\nPromise.promisify = function Promise$Promisify(fn, receiver) {\n    if (typeof fn === \"object\" && fn !== null) {\n        deprecated(\"Promise.promisify for promisifying entire objects is deprecated. Use Promise.promisifyAll instead.\");\n        return _promisify(fn, receiver, true);\n    }\n    if (typeof fn !== \"function\") {\n        throw new TypeError(\"fn must be a function\");\n    }\n    if (isPromisified(fn)) {\n        return fn;\n    }\n    return _promisify(\n        fn,\n        arguments.length < 2 ? THIS : receiver,\n        false);\n};\n\nPromise.promisifyAll = function Promise$PromisifyAll(target) {\n    if (typeof target !== \"function\" && typeof target !== \"object\") {\n        throw new TypeError(\"the target of promisifyAll must be an object or a function\");\n    }\n    return _promisify(target, void 0, true);\n};\n};\n\n","/**\n * Copyright (c) 2014 Petka Antonov\n * \n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:</p>\n * \n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n * \n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n * \n */\n\"use strict\";\nmodule.exports = function(Promise, PromiseArray) {\nvar util = require(\"./util.js\");\nvar inherits = util.inherits;\nvar es5 = require(\"./es5.js\");\n\nfunction PropertiesPromiseArray(obj, boundTo) {\n    var keys = es5.keys(obj);\n    var values = new Array(keys.length);\n    for (var i = 0, len = values.length; i < len; ++i) {\n        values[i] = obj[keys[i]];\n    }\n    this.constructor$(values, boundTo);\n    if (!this._isResolved()) {\n        for (var i = 0, len = keys.length; i < len; ++i) {\n            values.push(keys[i]);\n        }\n    }\n}\ninherits(PropertiesPromiseArray, PromiseArray);\n\nPropertiesPromiseArray.prototype._init =\nfunction PropertiesPromiseArray$_init() {\n    this._init$(void 0, -3) ;\n};\n\nPropertiesPromiseArray.prototype._promiseFulfilled =\nfunction PropertiesPromiseArray$_promiseFulfilled(value, index) {\n    if (this._isResolved()) return;\n    this._values[index] = value;\n    var totalResolved = ++this._totalResolved;\n    if (totalResolved >= this._length) {\n        var val = {};\n        var keyOffset = this.length();\n        for (var i = 0, len = this.length(); i < len; ++i) {\n            val[this._values[i + keyOffset]] = this._values[i];\n        }\n        this._resolve(val);\n    }\n};\n\nPropertiesPromiseArray.prototype._promiseProgressed =\nfunction PropertiesPromiseArray$_promiseProgressed(value, index) {\n    if (this._isResolved()) return;\n\n    this._promise._progress({\n        key: this._values[index + this.length()],\n        value: value\n    });\n};\n\nPromiseArray.PropertiesPromiseArray = PropertiesPromiseArray;\n\nreturn PropertiesPromiseArray;\n};\n","/**\n * Copyright (c) 2014 Petka Antonov\n * \n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:</p>\n * \n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n * \n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n * \n */\n\"use strict\";\nmodule.exports = function(Promise, PromiseArray) {\nvar PropertiesPromiseArray = require(\"./properties_promise_array.js\")(\n    Promise, PromiseArray);\nvar util = require(\"./util.js\");\nvar apiRejection = require(\"./errors_api_rejection\")(Promise);\nvar isObject = util.isObject;\n\nfunction Promise$_Props(promises, useBound) {\n    var ret;\n    var castValue = Promise._cast(promises, void 0);\n\n    if (!isObject(castValue)) {\n        return apiRejection(\"cannot await properties of a non-object\");\n    }\n    else if (castValue instanceof Promise) {\n        ret = castValue._then(Promise.props, void 0, void 0,\n                        void 0, void 0);\n    }\n    else {\n        ret = new PropertiesPromiseArray(\n            castValue,\n            useBound === true && castValue._isBound()\n                        ? castValue._boundTo\n                        : void 0\n       ).promise();\n        useBound = false;\n    }\n    if (useBound === true && castValue._isBound()) {\n        ret._setBoundTo(castValue._boundTo);\n    }\n    return ret;\n}\n\nPromise.prototype.props = function Promise$props() {\n    return Promise$_Props(this, true);\n};\n\nPromise.props = function Promise$Props(promises) {\n    return Promise$_Props(promises, false);\n};\n};\n","/**\n * Copyright (c) 2014 Petka Antonov\n * \n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:</p>\n * \n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n * \n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n * \n */\n\"use strict\";\nfunction arrayCopy(src, srcIndex, dst, dstIndex, len) {\n    for (var j = 0; j < len; ++j) {\n        dst[j + dstIndex] = src[j + srcIndex];\n    }\n}\n\nfunction pow2AtLeast(n) {\n    n = n >>> 0;\n    n = n - 1;\n    n = n | (n >> 1);\n    n = n | (n >> 2);\n    n = n | (n >> 4);\n    n = n | (n >> 8);\n    n = n | (n >> 16);\n    return n + 1;\n}\n\nfunction getCapacity(capacity) {\n    if (typeof capacity !== \"number\") return 16;\n    return pow2AtLeast(\n        Math.min(\n            Math.max(16, capacity), 1073741824)\n   );\n}\n\nfunction Queue(capacity) {\n    this._capacity = getCapacity(capacity);\n    this._length = 0;\n    this._front = 0;\n    this._makeCapacity();\n}\n\nQueue.prototype._willBeOverCapacity =\nfunction Queue$_willBeOverCapacity(size) {\n    return this._capacity < size;\n};\n\nQueue.prototype._pushOne = function Queue$_pushOne(arg) {\n    var length = this.length();\n    this._checkCapacity(length + 1);\n    var i = (this._front + length) & (this._capacity - 1);\n    this[i] = arg;\n    this._length = length + 1;\n};\n\nQueue.prototype.push = function Queue$push(fn, receiver, arg) {\n    var length = this.length() + 3;\n    if (this._willBeOverCapacity(length)) {\n        this._pushOne(fn);\n        this._pushOne(receiver);\n        this._pushOne(arg);\n        return;\n    }\n    var j = this._front + length - 3;\n    this._checkCapacity(length);\n    var wrapMask = this._capacity - 1;\n    this[(j + 0) & wrapMask] = fn;\n    this[(j + 1) & wrapMask] = receiver;\n    this[(j + 2) & wrapMask] = arg;\n    this._length = length;\n};\n\nQueue.prototype.shift = function Queue$shift() {\n    var front = this._front,\n        ret = this[front];\n\n    this[front] = void 0;\n    this._front = (front + 1) & (this._capacity - 1);\n    this._length--;\n    return ret;\n};\n\nQueue.prototype.length = function Queue$length() {\n    return this._length;\n};\n\nQueue.prototype._makeCapacity = function Queue$_makeCapacity() {\n    var len = this._capacity;\n    for (var i = 0; i < len; ++i) {\n        this[i] = void 0;\n    }\n};\n\nQueue.prototype._checkCapacity = function Queue$_checkCapacity(size) {\n    if (this._capacity < size) {\n        this._resizeTo(this._capacity << 3);\n    }\n};\n\nQueue.prototype._resizeTo = function Queue$_resizeTo(capacity) {\n    var oldFront = this._front;\n    var oldCapacity = this._capacity;\n    var oldQueue = new Array(oldCapacity);\n    var length = this.length();\n\n    arrayCopy(this, 0, oldQueue, 0, oldCapacity);\n    this._capacity = capacity;\n    this._makeCapacity();\n    this._front = 0;\n    if (oldFront + length <= oldCapacity) {\n        arrayCopy(oldQueue, oldFront, this, 0, length);\n    }\n    else {        var lengthBeforeWrapping =\n            length - ((oldFront + length) & (oldCapacity - 1));\n\n        arrayCopy(oldQueue, oldFront, this, 0, lengthBeforeWrapping);\n        arrayCopy(oldQueue, 0, this, lengthBeforeWrapping,\n                    length - lengthBeforeWrapping);\n    }\n};\n\nmodule.exports = Queue;\n","/**\n * Copyright (c) 2014 Petka Antonov\n * \n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:</p>\n * \n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n * \n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n * \n */\n\"use strict\";\nmodule.exports = function(Promise, INTERNAL) {\nvar apiRejection = require(\"./errors_api_rejection.js\")(Promise);\nvar isArray = require(\"./util.js\").isArray;\n\nvar raceLater = function Promise$_raceLater(promise) {\n    return promise.then(function(array) {\n        return Promise$_Race(array, promise);\n    });\n};\n\nvar hasOwn = {}.hasOwnProperty;\nfunction Promise$_Race(promises, parent) {\n    var maybePromise = Promise._cast(promises, void 0);\n\n    if (maybePromise instanceof Promise) {\n        return raceLater(maybePromise);\n    }\n    else if (!isArray(promises)) {\n        return apiRejection(\"expecting an array, a promise or a thenable\");\n    }\n\n    var ret = new Promise(INTERNAL);\n    ret._setTrace(parent);\n    if (parent !== void 0) {\n        if (parent._isBound()) {\n            ret._setBoundTo(parent._boundTo);\n        }\n        if (parent._cancellable()) {\n            ret._setCancellable();\n            ret._cancellationParent = parent;\n        }\n    }\n    var fulfill = ret._fulfill;\n    var reject = ret._reject;\n    for (var i = 0, len = promises.length; i < len; ++i) {\n        var val = promises[i];\n\n        if (val === void 0 && !(hasOwn.call(promises, i))) {\n            continue;\n        }\n\n        Promise.cast(val)._then(\n            fulfill,\n            reject,\n            void 0,\n            ret,\n            null\n       );\n    }\n    return ret;\n}\n\nPromise.race = function Promise$Race(promises) {\n    return Promise$_Race(promises, void 0);\n};\n\nPromise.prototype.race = function Promise$race() {\n    return Promise$_Race(this, void 0);\n};\n\n};\n","/**\n * Copyright (c) 2014 Petka Antonov\n * \n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:</p>\n * \n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n * \n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n * \n */\n\"use strict\";\nmodule.exports = function(\n    Promise, Promise$_CreatePromiseArray,\n    PromiseArray, apiRejection, INTERNAL) {\n\nfunction Reduction(callback, index, accum, items, receiver) {\n    this.promise = new Promise(INTERNAL);\n    this.index = index;\n    this.length = items.length;\n    this.items = items;\n    this.callback = callback;\n    this.receiver = receiver;\n    this.accum = accum;\n}\n\nReduction.prototype.reject = function Reduction$reject(e) {\n    this.promise._reject(e);\n};\n\nReduction.prototype.fulfill = function Reduction$fulfill(value, index) {\n    this.accum = value;\n    this.index = index + 1;\n    this.iterate();\n};\n\nReduction.prototype.iterate = function Reduction$iterate() {\n    var i = this.index;\n    var len = this.length;\n    var items = this.items;\n    var result = this.accum;\n    var receiver = this.receiver;\n    var callback = this.callback;\n\n    for (; i < len; ++i) {\n        result = callback.call(receiver, result, items[i], i, len);\n        result = Promise._cast(result, void 0);\n\n        if (result instanceof Promise) {\n            result._then(\n                this.fulfill, this.reject, void 0, this, i);\n            return;\n        }\n    }\n    this.promise._fulfill(result);\n};\n\nfunction Promise$_reducer(fulfilleds, initialValue) {\n    var fn = this;\n    var receiver = void 0;\n    if (typeof fn !== \"function\")  {\n        receiver = fn.receiver;\n        fn = fn.fn;\n    }\n    var len = fulfilleds.length;\n    var accum = void 0;\n    var startIndex = 0;\n\n    if (initialValue !== void 0) {\n        accum = initialValue;\n        startIndex = 0;\n    }\n    else {\n        startIndex = 1;\n        if (len > 0) accum = fulfilleds[0];\n    }\n    var i = startIndex;\n\n    if (i >= len) {\n        return accum;\n    }\n\n    var reduction = new Reduction(fn, i, accum, fulfilleds, receiver);\n    reduction.iterate();\n    return reduction.promise;\n}\n\nfunction Promise$_unpackReducer(fulfilleds) {\n    var fn = this.fn;\n    var initialValue = this.initialValue;\n    return Promise$_reducer.call(fn, fulfilleds, initialValue);\n}\n\nfunction Promise$_slowReduce(\n    promises, fn, initialValue, useBound) {\n    return initialValue._then(function(initialValue) {\n        return Promise$_Reduce(\n            promises, fn, initialValue, useBound);\n    }, void 0, void 0, void 0, void 0);\n}\n\nfunction Promise$_Reduce(promises, fn, initialValue, useBound) {\n    if (typeof fn !== \"function\") {\n        return apiRejection(\"fn must be a function\");\n    }\n\n    if (useBound === true && promises._isBound()) {\n        fn = {\n            fn: fn,\n            receiver: promises._boundTo\n        };\n    }\n\n    if (initialValue !== void 0) {\n        if (initialValue instanceof Promise) {\n            if (initialValue.isFulfilled()) {\n                initialValue = initialValue._settledValue;\n            }\n            else {\n                return Promise$_slowReduce(promises,\n                    fn, initialValue, useBound);\n            }\n        }\n\n        return Promise$_CreatePromiseArray(promises, PromiseArray,\n            useBound === true && promises._isBound()\n                ? promises._boundTo\n                : void 0)\n            .promise()\n            ._then(Promise$_unpackReducer, void 0, void 0, {\n                fn: fn,\n                initialValue: initialValue\n            }, void 0);\n    }\n    return Promise$_CreatePromiseArray(promises, PromiseArray,\n            useBound === true && promises._isBound()\n                ? promises._boundTo\n                : void 0).promise()\n        ._then(Promise$_reducer, void 0, void 0, fn, void 0);\n}\n\n\nPromise.reduce = function Promise$Reduce(promises, fn, initialValue) {\n    return Promise$_Reduce(promises, fn, initialValue, false);\n};\n\nPromise.prototype.reduce = function Promise$reduce(fn, initialValue) {\n    return Promise$_Reduce(this, fn, initialValue, true);\n};\n};\n","/**\n * Copyright (c) 2014 Petka Antonov\n * \n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:</p>\n * \n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n * \n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n * \n */\n\"use strict\";\nvar global = require(\"./global.js\");\nvar schedule;\nif (typeof process !== \"undefined\" && process !== null &&\n    typeof process.cwd === \"function\" &&\n    typeof process.nextTick === \"function\" &&\n    typeof process.version === \"string\") {\n    schedule = function Promise$_Scheduler(fn) {\n        process.nextTick(fn);\n    };\n}\nelse if ((typeof global.MutationObserver === \"function\" ||\n        typeof global.WebkitMutationObserver === \"function\" ||\n        typeof global.WebKitMutationObserver === \"function\") &&\n        typeof document !== \"undefined\" &&\n        typeof document.createElement === \"function\") {\n\n\n    schedule = (function(){\n        var MutationObserver = global.MutationObserver ||\n            global.WebkitMutationObserver ||\n            global.WebKitMutationObserver;\n        var div = document.createElement(\"div\");\n        var queuedFn = void 0;\n        var observer = new MutationObserver(\n            function Promise$_Scheduler() {\n                var fn = queuedFn;\n                queuedFn = void 0;\n                fn();\n            }\n       );\n        observer.observe(div, {\n            attributes: true\n        });\n        return function Promise$_Scheduler(fn) {\n            queuedFn = fn;\n            div.setAttribute(\"class\", \"foo\");\n        };\n\n    })();\n}\nelse if (typeof global.postMessage === \"function\" &&\n    typeof global.importScripts !== \"function\" &&\n    typeof global.addEventListener === \"function\" &&\n    typeof global.removeEventListener === \"function\") {\n\n    var MESSAGE_KEY = \"bluebird_message_key_\" + Math.random();\n    schedule = (function(){\n        var queuedFn = void 0;\n\n        function Promise$_Scheduler(e) {\n            if (e.source === global &&\n                e.data === MESSAGE_KEY) {\n                var fn = queuedFn;\n                queuedFn = void 0;\n                fn();\n            }\n        }\n\n        global.addEventListener(\"message\", Promise$_Scheduler, false);\n\n        return function Promise$_Scheduler(fn) {\n            queuedFn = fn;\n            global.postMessage(\n                MESSAGE_KEY, \"*\"\n           );\n        };\n\n    })();\n}\nelse if (typeof global.MessageChannel === \"function\") {\n    schedule = (function(){\n        var queuedFn = void 0;\n\n        var channel = new global.MessageChannel();\n        channel.port1.onmessage = function Promise$_Scheduler() {\n                var fn = queuedFn;\n                queuedFn = void 0;\n                fn();\n        };\n\n        return function Promise$_Scheduler(fn) {\n            queuedFn = fn;\n            channel.port2.postMessage(null);\n        };\n    })();\n}\nelse if (global.setTimeout) {\n    schedule = function Promise$_Scheduler(fn) {\n        setTimeout(fn, 4);\n    };\n}\nelse {\n    schedule = function Promise$_Scheduler(fn) {\n        fn();\n    };\n}\n\nmodule.exports = schedule;\n","/**\n * Copyright (c) 2014 Petka Antonov\n * \n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:</p>\n * \n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n * \n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n * \n */\n\"use strict\";\nmodule.exports =\n    function(Promise, Promise$_CreatePromiseArray, PromiseArray) {\n\nvar SettledPromiseArray = require(\"./settled_promise_array.js\")(\n    Promise, PromiseArray);\n\nfunction Promise$_Settle(promises, useBound) {\n    return Promise$_CreatePromiseArray(\n        promises,\n        SettledPromiseArray,\n        useBound === true && promises._isBound()\n            ? promises._boundTo\n            : void 0\n   ).promise();\n}\n\nPromise.settle = function Promise$Settle(promises) {\n    return Promise$_Settle(promises, false);\n};\n\nPromise.prototype.settle = function Promise$settle() {\n    return Promise$_Settle(this, true);\n};\n};\n","/**\n * Copyright (c) 2014 Petka Antonov\n * \n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:</p>\n * \n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n * \n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n * \n */\n\"use strict\";\nmodule.exports = function(Promise, PromiseArray) {\nvar PromiseInspection = Promise.PromiseInspection;\nvar util = require(\"./util.js\");\nvar inherits = util.inherits;\nfunction SettledPromiseArray(values, boundTo) {\n    this.constructor$(values, boundTo);\n}\ninherits(SettledPromiseArray, PromiseArray);\n\nSettledPromiseArray.prototype._promiseResolved =\nfunction SettledPromiseArray$_promiseResolved(index, inspection) {\n    this._values[index] = inspection;\n    var totalResolved = ++this._totalResolved;\n    if (totalResolved >= this._length) {\n        this._resolve(this._values);\n    }\n};\n\nSettledPromiseArray.prototype._promiseFulfilled =\nfunction SettledPromiseArray$_promiseFulfilled(value, index) {\n    if (this._isResolved()) return;\n    var ret = new PromiseInspection();\n    ret._bitField = 268435456;\n    ret._settledValue = value;\n    this._promiseResolved(index, ret);\n};\nSettledPromiseArray.prototype._promiseRejected =\nfunction SettledPromiseArray$_promiseRejected(reason, index) {\n    if (this._isResolved()) return;\n    var ret = new PromiseInspection();\n    ret._bitField = 134217728;\n    ret._settledValue = reason;\n    this._promiseResolved(index, ret);\n};\n\nreturn SettledPromiseArray;\n};\n","/**\n * Copyright (c) 2014 Petka Antonov\n * \n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:</p>\n * \n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n * \n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n * \n */\n\"use strict\";\nmodule.exports =\nfunction(Promise, Promise$_CreatePromiseArray, PromiseArray, apiRejection) {\n\nvar SomePromiseArray = require(\"./some_promise_array.js\")(PromiseArray);\nfunction Promise$_Some(promises, howMany, useBound) {\n    if ((howMany | 0) !== howMany || howMany < 0) {\n        return apiRejection(\"expecting a positive integer\");\n    }\n    var ret = Promise$_CreatePromiseArray(\n        promises,\n        SomePromiseArray,\n        useBound === true && promises._isBound()\n            ? promises._boundTo\n            : void 0\n   );\n    var promise = ret.promise();\n    if (promise.isRejected()) {\n        return promise;\n    }\n    ret.setHowMany(howMany);\n    ret.init();\n    return promise;\n}\n\nPromise.some = function Promise$Some(promises, howMany) {\n    return Promise$_Some(promises, howMany, false);\n};\n\nPromise.prototype.some = function Promise$some(count) {\n    return Promise$_Some(this, count, true);\n};\n\n};\n","/**\n * Copyright (c) 2014 Petka Antonov\n * \n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:</p>\n * \n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n * \n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n * \n */\n\"use strict\";\nmodule.exports = function(Promise) {\nfunction PromiseInspection(promise) {\n    if (promise !== void 0) {\n        this._bitField = promise._bitField;\n        this._settledValue = promise.isResolved()\n            ? promise._settledValue\n            : void 0;\n    }\n    else {\n        this._bitField = 0;\n        this._settledValue = void 0;\n    }\n}\n\nPromiseInspection.prototype.isFulfilled =\nPromise.prototype.isFulfilled = function Promise$isFulfilled() {\n    return (this._bitField & 268435456) > 0;\n};\n\nPromiseInspection.prototype.isRejected =\nPromise.prototype.isRejected = function Promise$isRejected() {\n    return (this._bitField & 134217728) > 0;\n};\n\nPromiseInspection.prototype.isPending =\nPromise.prototype.isPending = function Promise$isPending() {\n    return (this._bitField & 402653184) === 0;\n};\n\nPromiseInspection.prototype.value =\nPromise.prototype.value = function Promise$value() {\n    if (!this.isFulfilled()) {\n        throw new TypeError(\"cannot get fulfillment value of a non-fulfilled promise\");\n    }\n    return this._settledValue;\n};\n\nPromiseInspection.prototype.error =\nPromise.prototype.reason = function Promise$reason() {\n    if (!this.isRejected()) {\n        throw new TypeError(\"cannot get rejection reason of a non-rejected promise\");\n    }\n    return this._settledValue;\n};\n\nPromiseInspection.prototype.isResolved =\nPromise.prototype.isResolved = function Promise$isResolved() {\n    return (this._bitField & 402653184) > 0;\n};\n\nPromise.prototype.inspect = function Promise$inspect() {\n    return new PromiseInspection(this);\n};\n\nPromise.PromiseInspection = PromiseInspection;\n};\n","/**\n * Copyright (c) 2014 Petka Antonov\n * \n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:</p>\n * \n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n * \n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n * \n */\n\"use strict\";\nmodule.exports = function(Promise, INTERNAL) {\nvar util = require(\"./util.js\");\nvar canAttach = require(\"./errors.js\").canAttach;\nvar errorObj = util.errorObj;\nvar isObject = util.isObject;\n\nfunction getThen(obj) {\n    try {\n        return obj.then;\n    }\n    catch(e) {\n        errorObj.e = e;\n        return errorObj;\n    }\n}\n\nfunction Promise$_Cast(obj, originalPromise) {\n    if (isObject(obj)) {\n        if (obj instanceof Promise) {\n            return obj;\n        }\n        else if (isAnyBluebirdPromise(obj)) {\n            var ret = new Promise(INTERNAL);\n            ret._setTrace(void 0);\n            obj._then(\n                ret._fulfillUnchecked,\n                ret._rejectUncheckedCheckError,\n                ret._progressUnchecked,\n                ret,\n                null\n            );\n            ret._setFollowing();\n            return ret;\n        }\n        var then = getThen(obj);\n        if (then === errorObj) {\n            if (originalPromise !== void 0 && canAttach(then.e)) {\n                originalPromise._attachExtraTrace(then.e);\n            }\n            return Promise.reject(then.e);\n        }\n        else if (typeof then === \"function\") {\n            return Promise$_doThenable(obj, then, originalPromise);\n        }\n    }\n    return obj;\n}\n\nvar hasProp = {}.hasOwnProperty;\nfunction isAnyBluebirdPromise(obj) {\n    return hasProp.call(obj, \"_promise0\");\n}\n\nfunction Promise$_doThenable(x, then, originalPromise) {\n    var resolver = Promise.defer();\n    var called = false;\n    try {\n        then.call(\n            x,\n            Promise$_resolveFromThenable,\n            Promise$_rejectFromThenable,\n            Promise$_progressFromThenable\n        );\n    }\n    catch(e) {\n        if (!called) {\n            called = true;\n            var trace = canAttach(e) ? e : new Error(e + \"\");\n            if (originalPromise !== void 0) {\n                originalPromise._attachExtraTrace(trace);\n            }\n            resolver.promise._reject(e, trace);\n        }\n    }\n    return resolver.promise;\n\n    function Promise$_resolveFromThenable(y) {\n        if (called) return;\n        called = true;\n\n        if (x === y) {\n            var e = Promise._makeSelfResolutionError();\n            if (originalPromise !== void 0) {\n                originalPromise._attachExtraTrace(e);\n            }\n            resolver.promise._reject(e, void 0);\n            return;\n        }\n        resolver.resolve(y);\n    }\n\n    function Promise$_rejectFromThenable(r) {\n        if (called) return;\n        called = true;\n        var trace = canAttach(r) ? r : new Error(r + \"\");\n        if (originalPromise !== void 0) {\n            originalPromise._attachExtraTrace(trace);\n        }\n        resolver.promise._reject(r, trace);\n    }\n\n    function Promise$_progressFromThenable(v) {\n        if (called) return;\n        var promise = resolver.promise;\n        if (typeof promise._progress === \"function\") {\n            promise._progress(v);\n        }\n    }\n}\n\nPromise._cast = Promise$_Cast;\n};\n","/**\n * Copyright (c) 2014 Petka Antonov\n * \n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:</p>\n * \n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n * \n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n * \n */\n\"use strict\";\nvar global = require(\"./global.js\");\nvar setTimeout = function(fn, ms) {\n    var $_len = arguments.length;var args = new Array($_len - 2); for(var $_i = 2; $_i < $_len; ++$_i) {args[$_i - 2] = arguments[$_i];}\n    global.setTimeout(function(){\n        fn.apply(void 0, args);\n    }, ms);\n};\n\nmodule.exports = function(Promise, INTERNAL) {\nvar util = require(\"./util.js\");\nvar errors = require(\"./errors.js\");\nvar apiRejection = require(\"./errors_api_rejection\")(Promise);\nvar TimeoutError = Promise.TimeoutError;\n\nvar afterTimeout = function Promise$_afterTimeout(promise, message, ms) {\n    if (!promise.isPending()) return;\n    if (typeof message !== \"string\") {\n        message = \"operation timed out after\" + \" \" + ms + \" ms\"\n    }\n    var err = new TimeoutError(message);\n    errors.markAsOriginatingFromRejection(err);\n    promise._attachExtraTrace(err);\n    promise._rejectUnchecked(err);\n};\n\nvar afterDelay = function Promise$_afterDelay(value, promise) {\n    promise._fulfill(value);\n};\n\nvar delay = Promise.delay = function Promise$Delay(value, ms) {\n    if (ms === void 0) {\n        ms = value;\n        value = void 0;\n    }\n    ms = +ms;\n    var maybePromise = Promise._cast(value, void 0);\n    var promise = new Promise(INTERNAL);\n\n    if (maybePromise instanceof Promise) {\n        if (maybePromise._isBound()) {\n            promise._setBoundTo(maybePromise._boundTo);\n        }\n        if (maybePromise._cancellable()) {\n            promise._setCancellable();\n            promise._cancellationParent = maybePromise;\n        }\n        promise._setTrace(maybePromise);\n        promise._follow(maybePromise);\n        return promise.then(function(value) {\n            return Promise.delay(value, ms);\n        });\n    }\n    else {\n        promise._setTrace(void 0);\n        setTimeout(afterDelay, ms, value, promise);\n    }\n    return promise;\n};\n\nPromise.prototype.delay = function Promise$delay(ms) {\n    return delay(this, ms);\n};\n\nPromise.prototype.timeout = function Promise$timeout(ms, message) {\n    ms = +ms;\n\n    var ret = new Promise(INTERNAL);\n    ret._setTrace(this);\n\n    if (this._isBound()) ret._setBoundTo(this._boundTo);\n    if (this._cancellable()) {\n        ret._setCancellable();\n        ret._cancellationParent = this;\n    }\n    ret._follow(this);\n    setTimeout(afterTimeout, ms, ret, message, ms);\n    return ret;\n};\n\n};\n","AppDispatcher = require 'dispatchers/AppDispatcher'\nConstants = require('constants/PeggConstants').actions\n\nPeggBoxActions =\n  load: (page) ->\n    AppDispatcher.handleViewAction\n      actionType: Constants.PEGGBOX_FETCH\n      page: page\n\nmodule.exports = PeggBoxActions\n","module.exports = [\n  {pageID: 'play', title: 'play', iconUrl: 'images/peggboard_medium.png'}\n  {pageID: 'create', title: 'create', iconUrl: 'images/newcard_medium.png'}\n  {pageID: 'decks', title: 'decks', iconUrl: 'images/decks_medium.png'}\n  {pageID: 'activity', title: 'activity', iconUrl: 'images/activity_60px.png'}\n]\n","Promise = require 'bluebird'\n\n# Share callbacks and promises across the app regardless of Dispatcher instance.\n\nclass Dispatcher\n  _callbacks: []\n  _promises: []\n\n  constructor: ->\n    @_callbacks = []\n    @_promises = []\n\n  ###\n  Register a Store's callback so that it may be invoked by an action.\n  @param {function} callback The callback to be registered.\n  @return {number} The index of the callback within the _callbacks array.\n  ###\n  register: (callback) ->\n    @_callbacks.push callback\n    @_callbacks.length - 1\n\n  ###\n  dispatch\n  @param  {object} payload The data from the action.\n  ###\n  dispatch: (payload) ->\n    # First create array of promises for callbacks to reference.\n    resolves = []\n    rejects = []\n    @_promises = @_callbacks.map (_, i) ->\n      new Promise (resolve, reject) ->\n        resolves[i] = resolve\n        rejects[i] = reject\n\n    # Dispatch to callbacks and resolve/reject promises.\n    @_callbacks.forEach (callback, i) ->\n      # Callback can return an obj, to resolve, or a promise, to chain.\n      # See waitFor() for why this might be useful.\n      Promise.resolve(callback payload).then ->\n        resolves[i] payload\n      , ->\n        rejects[i] new Error 'Dispatcher callback unsuccessful'\n\n    @_promises = []\n\n\n  ###\n  Allows a store to wait for the registered callbacks of other stores\n  to get invoked before its own does.\n  This function is not used by this TodoMVC example application, but\n  it is very useful in a larger, more complex application.\n\n  Example usage where StoreB waits for StoreA:\n\n  class StoreA extends EventEmitter\n    dispatchIndex: Dispatcher.register (payload) ->\n      // switch statement with lots of cases\n\n  class StoreB extends EventEmitter\n    dispatchIndex: Dispatcher.register (payload) ->\n      switch payload.action.actionType\n        when MyConstants.FOO_ACTION\n          Dispatcher.waitFor [StoreA.dispatchIndex], ->\n            // Do stuff only after StoreA's callback returns.\n\n  It should be noted that if StoreB waits for StoreA, and StoreA waits for\n  StoreB, a circular dependency will occur, but no error will be thrown.\n  A more robust Dispatcher would issue a warning in this scenario.\n  ###\n  waitFor: (promiseIndexes, callback) ->\n    selectedPromises = promiseIndexes.map (index) =>\n      @_promises[index]\n    Promise.all(selectedPromises).then callback\n\n\nmodule.exports = Dispatcher\n\n","Parse = require 'Parse'\nMenuActions = require 'actions/MenuActions'\n\n#define router class\nAppRouter = Parse.Router.extend(\n  routes:\n    \"login\": \"login\"\n\n  login: ->\n    MenuActions.selectMenuItem \"login\"\n)\n\nappRoutes = new AppRouter()\n\nParse.history.start()\n\n","EventEmitter = require 'famous/core/EventEmitter'\nConstants = require 'constants/PeggConstants'\nAppDispatcher = require 'dispatchers/AppDispatcher'\nParse = require 'Parse'\n\n\nclass PeggBoxStore extends EventEmitter\n  _nextSet: null\n\n  fetchParse: (page) ->\n    # TODO: implement pagination\n    PeggBox = Parse.Object.extend(\"PeggBox\")\n    query = new Parse.Query(PeggBox)\n    query.equalTo \"userId\", 1\n    query.find\n      success: (results) =>\n        @_nextSet = results\n        # TODO: process the results from Parse\n        @emit Constants.stores.CHANGE\n        return\n      error: (error) ->\n        console.log \"Error: \" + error.code + \" \" + error.message\n        return\n\n  getNextSet: ->\n    @_nextSet\n\npeggbox = new PeggBoxStore\n\n\n# Register callback with AppDispatcher to be notified of events\nAppDispatcher.register (payload) ->\n  action = payload.action\n\n  # Pay attention to events relevant to PeggBoxStore\n  switch action.actionType\n    when Constants.actions.PEGGBOX_FETCH\n      peggbox.fetchParse action.page\n\n\nmodule.exports = peggbox\n","# AppView\n#\n# Main entry point of the app. Manages global views and events.\n\n# CSS\nrequire './scss/app.scss'\n\nView = require 'famous/core/View'\nUtility = require 'famous/utilities/Utility'\nHeaderFooterLayout = require 'famous/views/HeaderFooterLayout'\nSurface = require 'famous/core/Surface'\nTransform = require 'famous/core/Transform'\nTransitionable  = require 'famous/transitions/Transitionable'\nModifier = require 'famous/core/Modifier'\nStateModifier = require 'famous/modifiers/StateModifier'\nLightbox = require 'famous/views/Lightbox'\nEasing = require 'famous/transitions/Easing'\nConstants = require 'constants/PeggConstants'\n\n# Stores\nAppStateStore = require 'stores/AppStateStore'\nPeggBoxStore = require 'stores/PeggBoxStore'\nPlayStore = require 'stores/PlayStore'\n\n# Actions\nPeggBoxActions = require 'actions/PeggBoxActions'\nPlayActions = require 'actions/PlayActions'\n\n# Menu\nMenu = require 'constants/menu'\n\n# Views\nHeaderView = require 'views/HeaderView'\nTabMenuView = require 'views/TabMenuView'\nBandMenuView = require 'views/BandMenuView'\nPeggBoxView = require 'views/PeggBoxView'\nPlayView = require 'views/PlayView'\nProfileView = require 'views/ProfileView'\nActivityView = require 'views/ActivityView'\nDecksView = require 'views/ActivityView'\nNewCardView = require 'views/NewCardView'\nStatusView = require 'views/StatusView'\n\n\nclass AppView extends View\n  @DEFAULT_OPTIONS:\n    menu:\n      width: 270\n      transition:\n        duration: 300\n        curve: 'easeOut'\n      model: Menu\n    header:\n      height: 60\n  # Pages correspond to pageID in constants/menu.coffee\n  pages: {}\n  menuOpen: false\n\n\n  constructor: ->\n    super\n    @initData()\n    @initMenu()\n    @initMain()\n    @initPages()\n    @initListeners()\n    @onAppStoreChange()\n\n  initListeners: ->\n    AppStateStore.on Constants.stores.CHANGE, @onAppStoreChange\n    PeggBoxStore.on Constants.stores.CHANGE, @onPeggBoxChange\n    PlayStore.on Constants.stores.CHANGE, @onGameChange\n    PlayStore.on Constants.stores.UNLOCK_ACHIEVED, @onStatusChange\n    PlayStore.on Constants.stores.PLAY_CONTINUED, @onPlayContinued\n    @pages.peggbox.on 'scroll', @onScroll\n\n  initData: ->\n    PeggBoxActions.load 0\n    PlayActions.load 0\n\n  initMenu: ->\n    @menu = new BandMenuView @options.menu\n    #@menu.resetBands()\n    @menu.on 'toggleMenu', @toggleMenu\n    @menuState = new StateModifier\n      origin: [0,0]\n    @add(@menuState).add @menu\n\n  initMain: ->\n    @layout = new HeaderFooterLayout\n      headerSize: @options.header.height\n      footerSize: 20\n    @layout.header.add @initHeader()\n    @layout.footer.add @initFooter()\n    @layout.content.add @initViewManager()\n    @layoutState = new StateModifier\n    @add(@layoutState).add @layout\n\n  initFooter: ->\n    @footer = new TabMenuView @options.menu\n    @footer\n\n  initHeader: ->\n    @header = new HeaderView @options.header\n    @header.on 'toggleMenu', @toggleMenu\n    @header\n\n  initPages: ->\n    # Pages correspond to pageID in constants/menu.coffee\n    @pages.play = new PlayView\n    @pages.create = new NewCardView\n    @pages.decks = new DecksView\n    @pages.activity = new PeggBoxView\n    @pages.profile = new ProfileView\n    @pages.peggbox = new PeggBoxView\n    @pages.status = new StatusView\n\n  initViewManager: ->\n    @lightbox = new Lightbox\n      inOpacity: 1\n      outOpacity: 0\n      inOrigin: [1, 1]\n      outOrigin: [0, 0]\n      showOrigin: [0.5, 0.5]\n      inTransform: Transform.thenMove(Transform.rotateX(1), [0, window.innerHeight, -300])\n      outTransform: Transform.thenMove(Transform.rotateZ(0.7), [0, -window.innerHeight, -1000])\n      inTransition: { duration: 1000, curve: Easing.outExpo }\n      outTransition: { duration: 500, curve: Easing.inCubic }\n\n  showPage: (page) ->\n    @lightbox.show page\n\n  getPage: (pageID) ->\n    @pages[pageID]\n\n  toggleMenu: =>\n    if @menuOpen\n      @closeMenu()\n    else\n      @openMenu()\n\n  onAppStoreChange: =>\n    pageID = AppStateStore.getCurrentPageID()\n    @showPage @getPage pageID\n    @header.change pageID\n    #@footer.bounceTabs()\n    @footer.hideTabs()\n    @closeMenu()\n\n  onPeggBoxChange: =>\n    @pages.activity.load PeggBoxStore.getNextSet()\n\n  onGameChange: =>\n    @pages.play.load PlayStore.getGame()\n\n  onPlayContinued: =>\n    @showPage @getPage \"play\"\n\n  onStatusChange: =>\n    @showPage @getPage \"status\"\n\n  onScroll: =>\n    if @tabsOpen\n      @footer.hideTabs()\n      @tabsOpen = false\n    else\n      @footer.showTabs()\n      @tabsOpen = true\n\n  closeMenu: ->\n    @layoutState.setTransform(\n      Transform.translate 0, 0, 0\n      @options.menu.transition\n      =>\n        @menuOpen = false\n    )\n    @menu.hide()\n\n  openMenu: ->\n    @layoutState.setTransform(\n      Transform.translate @options.menu.width, 0, 0\n      @options.menu.transition\n      =>\n        @menuOpen = true\n    )\n    @menu.show()\n\nmodule.exports = AppView\n","require './scss/bandmenu'\n\nView = require 'famous/core/View'\nSurface = require 'famous/core/Surface'\nStateModifier = require 'famous/modifiers/StateModifier'\nTransform = require 'famous/core/Transform'\nImageSurface = require 'famous/surfaces/ImageSurface'\nMenuActions = require 'actions/MenuActions'\n\n\nclass BandMenuItemView extends View\n  @DEFAULT_OPTIONS:\n    pageID: null\n    width: 270\n    height: window.innerHeight / 4\n    angle: -0.2\n    iconUrl: 'images/mark_tiny.png'\n    title: 'pegg'\n    color: 'white'\n    iconSize: 50\n\n  constructor: ->\n    super\n    @createBackground()\n    @createIcon()\n\n  createBackground: ->\n    @background = new Surface\n      size: [@options.width, @options.height]\n      content: \"<div class='bandmenu__item__title'>#{@options.title}</div>\"\n      classes: ['bandmenu__item', \"bandmenu__item--#{@options.pageID}\"]\n    @add @background\n    @background.on 'click', =>\n      MenuActions.selectMenuItem @getID()\n\n  createIcon: ->\n    @icon = new ImageSurface\n      size: [@options.iconSize, @options.iconSize]\n      content: @options.iconUrl\n      classes: ['bandmenu__item__logo']\n    @iconState = new StateModifier\n        transform: Transform.translate 20, @options.height/2 - @options.iconSize/2, 0\n    @add(@iconState).add @icon\n\n  getID: ->\n    @options.pageID\n\nmodule.exports = BandMenuItemView\n","require './scss/bandmenu.scss'\n\nView = require 'famous/core/View'\nSurface = require 'famous/core/Surface'\nStateModifier = require 'famous/modifiers/StateModifier'\nTransform = require 'famous/core/Transform'\nTimer = require 'famous/utilities/Timer'\nBandMenuItemView = require 'views/BandMenuItemView'\n_ = require('Parse')._\n\n###\n# Events:\n###\nclass BandMenuView extends View\n  @DEFAULT_OPTIONS:\n    angle: -0.2\n    width: null\n    topOffset: 0\n    band:\n      offset: window.innerHeight / 4\n      staggerDelay: 35\n      transition:\n        duration: 400\n        curve: 'easeOut'\n    model: null\n\n  constructor: (options) ->\n    options = _.defaults options, @constructor.DEFAULT_OPTIONS\n    super options\n    @initBackground()\n    @initBands()\n\n  initBackground: ->\n    @background = new Surface\n      size: [@options.width, undefined]\n      classes: [\"bandmenu__background\"]\n    @backgroundState = new StateModifier\n      transform: Transform.translate -@options.width, 0, 0\n    @add(@backgroundState).add @background\n\n  initBands: ->\n    @bandModifiers = []\n    yOffset = @options.topOffset\n    bands = @options.model\n    i = 0\n    while i < bands.length\n      band = new BandMenuItemView bands[i]\n      bandModifier = new StateModifier\n        transform: Transform.translate 0, yOffset, 0\n      @bandModifiers.push bandModifier\n      @add(bandModifier).add band\n      yOffset += @options.band.offset\n      i++\n\n\n  resetBands: ->\n    i = 0\n    while i < @bandModifiers.length\n      initX = -@options.width\n      initY = @options.topOffset + @options.band.offset * i + @options.width * Math.tan(-@options.angle)\n      @bandModifiers[i].setTransform Transform.translate(initX, initY, 0)\n      i++\n\n  show: ->\n    @showBackground()\n    @showBands()\n\n  hide: ->\n    @hideBackground()\n    @hideBands()\n\n  hideBackground: ->\n    @backgroundState.setTransform Transform.translate(-@options.width, 0, 0), @options.band.transition\n\n  showBackground: ->\n    @backgroundState.setTransform Transform.translate(0, 0, 0), @options.band.transition\n\n  showBands: ->\n    @resetBands()\n    transition = @options.band.transition\n    delay = @options.band.staggerDelay\n    bandOffset = @options.band.offset\n    topOffset = @options.topOffset\n    i = 0\n    while i < @bandModifiers.length\n      Timer.setTimeout ((i) ->\n        yOffset = topOffset + bandOffset * i\n        @bandModifiers[i].setTransform Transform.translate(0, yOffset, 0), transition\n        return\n      ).bind(this, i), i * delay\n      i++\n\n\n  hideBands: ->\n    transition = @options.band.transition\n    delay = @options.band.staggerDelay\n    i = 0\n    while i < @bandModifiers.length\n      Timer.setTimeout ((i) ->\n        initX = -@options.width\n        initY = @options.topOffset + @options.band.offset * i + @options.width * Math.tan(-@options.angle)\n        @bandModifiers[i].setTransform Transform.translate(initX, initY, 0), transition\n        return\n      ).bind(this, i), i * delay\n      i++\n\n\n\nmodule.exports = BandMenuView\n","require './scss/card.scss'\n\nView = require 'famous/core/View'\nSurface = require 'famous/core/Surface'\nImageSurface = require 'famous/surfaces/ImageSurface'\nModifier = require 'famous/core/Modifier'\nStateModifier = require 'famous/modifiers/StateModifier'\nTransform = require 'famous/core/Transform'\nUtility = require 'famous/utilities/Utility'\nEasing = require 'famous/transitions/Easing'\nPlayActions = require 'actions/PlayActions'\nTimer = require 'famous/utilities/Timer'\nChoicesView = require 'views/ChoicesView'\n\n_ = require('Parse')._\n\nImageUploadView = require 'views/ImageUploadView'\n\nclass CardView extends View\n  @DEFAULT_OPTIONS:\n    width: window.innerWidth - window.innerWidth * .1\n    height: window.innerHeight - window.innerHeight * .3\n    depth: -5\n    borderRadius: 10\n    duration: 500\n    easing: Easing.outCubic\n\n  constructor: (card, options) ->\n    options = _.defaults options, @constructor.DEFAULT_OPTIONS\n    super options\n    @card = card\n\n    width = @options.width\n    height = @options.height\n    depth = @options.depth\n    @initCard width, height, depth\n    @initQuestion width, height, depth\n    @initChoices width, Math.floor(height/6), depth/2\n    @initAnswer width, height, depth\n\n  initCard: (width, height, depth) ->\n    @state = new StateModifier\n    @mainNode = @add @state\n\n    ## Front Card\n    front = new ImageSurface\n      size: [ width, height ]\n      content: \"images/Card_White.png\"\n    modifier = new Modifier\n      transform: Transform.translate 0, 0, depth/2\n    front.on 'click', @showChoices\n    @mainNode.add(modifier).add front\n\n    ## Back Card\n    back = new ImageSurface\n      size: [ width, height ]\n      content: \"images/Card_Blue.png\"\n    modifier = new Modifier\n      transform: Transform.multiply(\n        Transform.translate(0, 0, -depth/2)\n        Transform.multiply(\n          Transform.rotateZ Math.PI\n          Transform.rotateX Math.PI\n        )\n      )\n    @mainNode.add(modifier).add back\n\n  initQuestion: (width, height, depth) ->\n    @question = new Surface\n      size: [ width, height ]\n      classes: ['card__front__question']\n      content: @card.get \"title\"\n    @qModifier = new StateModifier\n      transform: Transform.translate 0, height/2 + -100, depth/2 + 2\n    @question.on 'click', @showChoices\n    @mainNode.add(@qModifier).add @question\n\n  initChoices: (width, height, depth) ->\n    @choices =[]\n    for i in [1..5]\n      choiceText = @card.get(\"caption#{i}\")\n      if choiceText\n        choice = new Surface\n          size: [ width, height ]\n          classes: ['card__front__option']\n          content: \"\n                <div class='outerContainer' style='width: #{width-40}px; height: #{height}px'>\n                  <div class='innerContainer'>\n                   #{choiceText}\n                  </div>\n                </div>\"\n        choice.on 'click', ((i) ->\n          @pickAnswer i\n        ).bind @, i\n        @choices.push choice\n\n    choices = new ChoicesView\n    choices.load @choices\n    @choicesMod = new StateModifier\n    @mainNode.add(@choicesMod).add choices\n    @choicesMod.setTransform Transform.translate(0,0,-10)\n\n  initAnswer: (width, height, depth) ->\n    @image = new ImageSurface\n      size: [width - 40, null]\n      classes: ['card__back__image']\n      #content: @card.get('image1')\n      properties:\n        borderRadius: \"#{@options.borderRadius}px\"\n        maxHeight: \"#{height - 100}px\"\n    @image.on \"click\", =>\n      #@toggleImage\n      @image.setContent \"\"\n      #@newChoiceModifier.setTransform Transform.translate(0,0,-10)\n      #@newChoiceModifier.setOpacity 0\n      @flip()\n    @imageModifier = new StateModifier\n      transform: Transform.multiply(\n        Transform.translate(0, -100, -depth/2 - 2)\n        Transform.multiply(\n          Transform.rotateZ Math.PI\n          Transform.rotateX Math.PI\n        )\n      )\n    @text = new Surface\n      size: [width - 40, null]\n      classes: ['card__back__text']\n      content: @card.get('caption1')\n    @textModifier = new StateModifier\n      transform: Transform.multiply(\n        Transform.translate(0, -150, -depth/2 - 2)\n        Transform.multiply(\n          Transform.rotateZ Math.PI\n          Transform.rotateX Math.PI\n        )\n      )\n    @mainNode.add(@imageModifier).add @image\n    @mainNode.add(@textModifier).add @text\n\n\n  toggleImage: =>\n    if @big\n      @big = false\n      @image.setSize [@options.width, @options.height]\n    else\n      @big = true\n      @image.setSize [window.innerWidth, window.innerHeight]\n\n  showChoices: =>\n    PlayActions.pick @card.id\n    @question.setClasses(['card__front__question--small'])\n    @qModifier.setTransform(\n      Transform.translate 0, 20, @options.depth/2 + 2\n      duration : @options.duration\n      curve: @options.easing\n    )\n\n    #@newChoiceModifier.setOpacity 1\n\n    @choicesMod.setTransform Transform.translate 0, 50, 0\n\n  hideChoices: =>\n    @qModifier.setTransform(\n      Transform.translate 0, @options.height/2 + -100, @options.depth/2 + 2\n      duration : @options.duration\n      curve: @options.easing\n    )\n    @choicesMod.setOpacity 0\n    @question.on 'click', @showChoices\n\n\n  pickAnswer: (choice) =>\n    PlayActions.answer choice\n    Timer.after ( =>\n      @image.setContent @card.get('image' + choice)\n    ), 20\n\n    @text.setContent @card.get('caption' + choice)\n    #uploadImage = new ImageUploadView\n    #@mainNode.add(imageModifier).add uploadImage\n    @flip()\n\n  flip: (side) =>\n    @state.halt()\n    @currentSide ?= 0\n    if side is 0 or side is 1\n      @currentSide = side\n    else\n      @currentSide = if @currentSide is 1 then 0 else 1\n\n    @state.setTransform(\n      Transform.rotateY Math.PI * @currentSide\n      duration : @options.duration\n      curve: @options.easing\n    )\n\n\nmodule.exports = CardView\n","require './scss/card.scss'\n\nView = require 'famous/core/View'\nContainerSurface = require 'famous/surfaces/ContainerSurface'\nScrollview = require 'famous/views/Scrollview'\nSurface = require 'famous/core/Surface'\nListItemView = require 'views/ListItemView'\n\nclass ChoicesView extends View\n  @DEFAULT_OPTIONS:\n    itemDensity: null\n    width: window.innerHeight/2\n    height: 60\n\n\n  constructor: () ->\n    super\n    @init()\n\n  init: ->\n    @items = []\n\n  load: (data) ->\n    @items = data\n    surfaces = []\n    scrollview = new Scrollview\n    scrollview.sequenceFrom surfaces\n    i = 0\n    while i < @items.length\n      #item = new ListItemView @items[i]\n      @items[i].on 'scroll', =>\n        @_eventOutput.emit 'scroll'\n      @items[i].pipe scrollview\n      surfaces.push @items[i]\n      i++\n    newChoice = new Surface\n      size: [ @options.width - 50, @options.height ]\n      content: \"<input type='text' name='newOption' placeholder='Type your own...'>\"\n      classes: ['card__front__input']\n    surfaces.push newChoice\n\n    container = new ContainerSurface\n      size: [window.innerHeight/2, 260]\n      properties:\n        overflow: \"hidden\"\n\n    container.add scrollview\n    @add container\n\n\n\nmodule.exports = ChoicesView\n","require './scss/fpsmeter.scss'\n\nView = require 'famous/core/View'\nSurface = require 'famous/core/Surface'\nModifier = require 'famous/core/Modifier'\nEngine = require 'famous/core/Engine'\nTimer = require 'famous/utilities/Timer'\nTransform = require 'famous/core/Transform'\n\n\nclass FpsMeter extends View\n  currTime: 0\n  lastTime: 0\n  frameTime: 0\n  state: true\n\n  # How much to normalize frame rate readings\n  # Bigger number means more normalization\n  filterStrength: 10\n\n  # How many milliseconds between updating FPS\n  updateFrequency: 100\n\n  constructor: ->\n    super\n    @initTime()\n\n    @surface = new Surface\n      size: [60, 20]\n      classes: ['fpsmeter']\n      content: ''\n\n    @add new Modifier\n      origin: [1, 1]\n      transform: Transform.inFront\n    .add @surface\n\n    @surface.on 'click', @toggleState\n\n    @start()\n\n  initTime: ->\n    perf = window.performance;\n    if perf and (perf.now or perf.webkitNow)\n      perfNow = if perf.now then 'now' else 'webkitNow'\n      @getTime = perf[perfNow].bind(perf)\n\n    @lastTime = @getTime()\n\n  tick: =>\n    @currTime = @getTime()\n    thisFrameTime = @currTime - @lastTime\n    @frameTime += (thisFrameTime - @frameTime) / @filterStrength\n    @lastTime = @currTime\n\n  toggleState: =>\n    if @state\n      @stop()\n    else\n      @start()\n    @state = not @state\n\n  start: ->\n    Engine.on 'prerender', @tick\n    @interval = Timer.setInterval @update, @updateFrequency\n\n  stop: ->\n    Engine.removeListener 'prerender', @tick\n    Timer.clear @interval\n\n  update: =>\n    @surface.setContent \"#{ (1000 / @frameTime).toFixed 1} fps\"\n\n  getTime: ->\n    +new Date()\n\n\nmodule.exports = FpsMeter\n","# TODO: use NavigationBar widget when it's fixed https://github.com/Famous/widgets/pull/1\n\nrequire './scss/header.scss'\n\nView = require 'famous/core/View'\nUtility = require 'famous/utilities/Utility'\nSurface = require 'famous/core/Surface'\nImageSurface = require 'famous/surfaces/ImageSurface'\nModifier  = require 'famous/core/Modifier'\nTransform = require 'famous/core/Transform'\nUserActions = require 'actions/UserActions'\nUserStore = require 'stores/UserStore'\nMenuActions = require 'actions/MenuActions'\nEasing = require 'famous/transitions/Easing'\nTimer = require 'famous/utilities/Timer'\n\n###\n# Events:\n# toggleMenu\n# logout\n###\nclass HeaderView extends View\n  @DEFAULT_OPTIONS:\n    title: 'play'\n  cssPrefix: 'header'\n  height: null\n\n  constructor: ->\n    super\n    @build(@options.title)\n    @initEvents()\n\n  # Build view\n  build: (page) ->\n    @background = new Surface\n      classes: [\"#{@cssPrefix}__background\", \"#{@cssPrefix}__background--#{page}\"]\n    @logo = new ImageSurface\n      size: [130, 59]\n      classes: [\"#{@cssPrefix}__logo\"]\n      content: 'images/pegg_logo-small.png'\n    #@title = new Surface\n    #  content: page\n    #  classes: [\"#{@cssPrefix}__title\"]\n    pic = new ImageSurface\n      size: [@options.height, @options.height]\n      content: UserStore.getAvatar(\"square\")\n      classes: [\"#{@cssPrefix}__profilePic\"]\n      properties:\n        borderRadius: \"#{@options.height-15}px\"\n        padding: \"10px\"\n    picMod = new Modifier\n      origin: [1, 0]\n      align: [1, 0]\n    pic.on \"click\", ((picMod) =>\n      #picMod.setTransform Transform.scale(1, 0, 0),\n      #  { duration: 800, curve: Easing.inOutBack }\n      #Timer.after (=>\n        MenuActions.selectMenuItem \"profile\"\n      #), 20\n    ).bind null, picMod\n    @add @background\n    @add new Modifier\n      origin: [0, 0]\n    .add @logo\n    #@add new Modifier\n    #  transform: Transform.translate 0, 10\n    #.add @title\n    @add(picMod).add pic\n\n\n  initEvents: ->\n    @logo.on 'click', =>\n      @_eventOutput.emit 'toggleMenu'\n\n  change: (page) ->\n    #@background.setClasses [\"#{@cssPrefix}__background\", \"#{@cssPrefix}__background--#{page}\"]\n    #@title.setContent page\n    #if page isnt \"profile\" then page else \"\"\n\n\nmodule.exports = HeaderView\n","Config = require('Config').public.aviary\nView = require 'famous/core/View'\nSurface = require 'famous/core/Surface'\n\n# todo: add script to dom and init view when loaded\n# <script type=\"text/javascript\" src=\"http://feather.aviary.com/js/feather.js\"></script>\n\nclass ImageEditView extends View\n  src: 'http://images.aviary.com/imagesv5/feather_default.jpg'\n  theme: 'dark' # light\n\n  constructor: (options) ->\n    super options\n    @initEditor()\n    @build()\n\n  # Build view\n  build: ->\n    @surface = new Surface\n      content: \"\n              <div id='injection_site' style='width:400; height: 800'></div>\n              <img id='image1' src='#{@src}'>\n            \"\n      size: [undefined, undefined]\n    @surface.on 'click', =>\n      @launchEditor 'image1', @src\n\n    @add @surface\n\n  launchEditor: (id, src) ->\n    @aviary.launch\n      image: id\n      url: src\n\n  initEditor: ->\n    @aviary = new Aviary.Feather\n      apiKey: Config.apiKey\n      apiVersion: 3\n      theme: 'minimum'\n      tools: 'all'\n      appendTo: ''\n      onSave: @onSave\n      onError: @onError\n\n  onSave: (imageID, newURL) =>\n    debugger\n    img = document.getElementById(imageID)\n    img.src = newURL\n\n  onError: (errorObj) =>\n    debugger\n\nmodule.exports = ImageEditView\n\n","require './scss/login.scss'\n\nView = require 'famous/core/View'\nSurface = require 'famous/core/Surface'\nImageSurface = require 'famous/surfaces/ImageSurface'\nTransform = require 'famous/core/Transform'\nStateModifier = require 'famous/modifiers/StateModifier'\nUserActions = require 'actions/UserActions'\nEasing = require 'famous/transitions/Easing'\nTimer = require 'famous/utilities/Timer'\nTransitionable = require 'famous/transitions/Transitionable'\nSpringTransition = require 'famous/transitions/SpringTransition'\nTransitionable.registerMethod 'spring', SpringTransition\n\n\nclass LoginView extends View\n  @DEFAULT_OPTIONS:\n    logoWidth: 150\n    logoHeight: 110\n    markWidth: 150\n    markHeight: 70\n    transition:\n      duration: 800\n      curve: Easing.inOutBack\n    spring:\n      method: \"spring\"\n      period: 500\n      dampingRatio: 0.3\n\n  constructor: (options) ->\n    super options\n    @initSplash()\n\n  initSplash: ->\n    logo = new ImageSurface\n      size: [@options.logoWidth, @options.logoHeight]\n      classes: ['login__logo']\n      content: \"images/logo_icon-big.png\"\n    logoPosMod = new StateModifier\n      align: [0.5,1]\n      origin: [0.5,0]\n    logoSizeMod = new StateModifier\n    mark = new ImageSurface\n      size: [@options.markWidth, @options.markHeight]\n      classes: ['login__mark']\n      content: \"images/logo_mark-big.png\"\n    markMod = new StateModifier\n      align: [0.5,1]\n      origin: [0.5,0]\n    @add(logoSizeMod).add(logoPosMod).add logo\n    @add(markMod).add mark\n    markMod.setTransform Transform.translate(0, -window.innerHeight/2 - @options.logoHeight/2 + @options.markHeight, 3), @options.transition\n    Timer.after (=>\n      logoPosMod.setTransform Transform.translate(0, -window.innerHeight/2 - @options.logoHeight, 0), @options.spring, =>\n        logoSizeMod.setTransform Transform.translate(0, -300, -2000), @options.transition\n        markMod.setTransform Transform.translate(0, 0, -30000), {duration: 200}, =>\n          @initLogin()\n    ), 20\n\n  initLogin: ->\n    loginText = new Surface\n      size: [68, 60]\n      content: 'Login'\n      classes: ['login__text--header']\n    privacyText = new Surface\n      size: [window.innerWidth, 10]\n      content: 'Psst... Pegg respects people and their data.'\n      classes: ['login__text--message']\n    loginTextMod = new StateModifier\n      align: [0.5,0.5]\n      origin: [0.5,0.5]\n      opacity: 0\n    node = @add loginTextMod\n    node.add loginText\n    node.add privacyText\n    fbButton = new Surface\n      size: [window.innerWidth, window.innerHeight/4]\n      content: 'Login with Facebook'\n      classes: ['login__button--facebook']\n      properties:\n        lineHeight: \"#{window.innerHeight/4}px\"\n    fbButtonMod = new StateModifier\n      align: [1,0.5]\n      origin: [0,0]\n    fbButton.on \"click\", ->\n      UserActions.login()\n    gpButton = new Surface\n      size: [window.innerWidth, window.innerHeight/4]\n      content: 'Login with Google'\n      classes: ['login__button--google']\n      properties:\n        lineHeight: \"#{window.innerHeight/4}px\"\n    gpButtonMod = new StateModifier\n      align: [1,1]\n      origin: [0,1]\n\n    loginTextMod.setOpacity 1, @options.transition\n    loginTextMod.setTransform Transform.translate(0, -105, 0), @options.transition\n    @add(fbButtonMod).add fbButton\n    fbButtonMod.setTransform Transform.translate(-window.innerWidth, 0, 0), @options.transition\n    Timer.after (=>\n      @add(gpButtonMod).add gpButton\n      gpButtonMod.setTransform Transform.translate(-window.innerWidth, 0, 0), @options.transition\n    ), 10\n\n# Causes inexplicable flutter near end of animation:\n#    Transform.multiply(\n#      Transform.scale(.8, .8, 0)\n#      Transform.translate(@options.logoWidth/4, -30, 20)\n#      Transform.identity\n#    ), @options.transition\n\nmodule.exports = LoginView\n","# NewCardView1\n#\n# Enter question and continue\n\nrequire './scss/newcard.scss'\n\nView = require 'famous/core/View'\nSurface = require 'famous/core/Surface'\nImageSurface = require 'famous/surfaces/ImageSurface'\nContainerSurface = require 'famous/surfaces/ContainerSurface'\nModifier = require 'famous/core/Modifier'\nStateModifier = require 'famous/modifiers/StateModifier'\nTransform = require 'famous/core/Transform'\nEasing = require 'famous/transitions/Easing'\nTimer = require 'famous/utilities/Timer'\n\n\nclass NewCardView extends View\n  cssPrefix: 'newcard'\n\n  @DEFAULT_OPTIONS:\n    input:\n      width: window.innerWidth - 50\n      height: 40\n\n  constructor: ->\n    super\n    @init()\n\n  init: ->\n    cardIcon = new ImageSurface\n      size: [83, 58]\n      classes: ['newcard_card_icon']\n      content: \"images/newcard_medium2.png\"\n    cardIconMod = new StateModifier\n      origin: [0.35, 0.5]\n      align: [0.5, 0.15]\n    @add(cardIconMod).add cardIcon\n    @newCardTitle = new Surface\n      size: [@options.input.width, 50]\n      content: 'NEW CARD'\n      classes: ['newcard__header']\n    newCardMod = new StateModifier\n      origin: [0.5, 0.5]\n      align: [0.5, 0.28]\n    @add(newCardMod).add @newCardTitle\n    @step1()\n\n  step1: ->\n    @step1Mods = []\n    @addNum(1)\n    @addSurface(1,\n      size: [@options.input.width, @options.input.height]\n      content: '<input type=\"text\" name=\"question\" placeholder=\"Write a question\" id=\"question\" required/>'\n      classes: [\"#{@cssPrefix}__input\"]\n    )\n    @addButton(1,\n      content: \"Continue\"\n      classes: ['newcard__button']\n    , =>\n      @hideStep(@step1Mods)\n      @step2()\n    )\n    @showStep(190, @step1Mods)\n\n  step2: ->\n    @step2Mods = []\n    @addNum(2)\n    for i in [1..4]\n      @addSurface(2,\n        size: [@options.input.width, @options.input.height]\n        content: \"<input type='text' name='answer' placeholder='Answer option #{i}' id='answer#{i}' tabindex='#{i}'/>\"\n        classes: [\"#{@cssPrefix}__input\"]\n      )\n    @addButton(2,\n      content: \"Continue\"\n      classes: ['newcard__button']\n    , =>\n      @hideStep(@step2Mods)\n      @step3()\n    )\n    Timer.after (=>\n      @showStep(190, @step2Mods)\n    ), 20\n\n  step3: ->\n    @step3Mods = []\n    @addNum(3)\n    @addLinkContainer(3,\n      size: [59, 60]\n      image: 'images/deck_existing.png'\n      text: 'Place card in existing deck(s)'\n      classes: {image: ['newcard__step3__deckIcon'], text: ['newcard__step3__deckText']}\n    , =>\n        alert \"existing deck\"\n    )\n    @addLinkContainer(3,\n      size: [73, 59]\n      image: 'images/deck_new.png'\n      text: 'Create a new deck'\n      classes: {image: ['newcard__step3__deckIcon'], text: ['newcard__step3__deckText']}\n    , =>\n      alert \"new deck\"\n    )\n    @addButton(3,\n      content: \"Finish\"\n      classes: ['newcard__button']\n    , =>\n      @hideStep(@step3Mods)\n      #TODO: CardStore.create\n      @step4()\n    )\n    Timer.after (=>\n      @showStep(190, @step3Mods)\n    ), 20\n\n  step4: ->\n    @step4Mods = []\n    #@newCardTitle.setContent \"CARD CREATED\"\n    @addSurface(4,\n      size: [@options.input.width, 50]\n      content: 'CREATED!'\n      classes: ['newcard__header--big']\n    )\n    @addButton(4,\n      content: \"Play this card\"\n      classes: ['newcard__button', 'newcard__button--blue']\n    , =>\n      @hideStep(@step4Mods)\n      #TODO: play card\n    )\n    @addButton(4,\n      content: \"Create another card\"\n      classes: ['newcard__button--blue', 'newcard__button']\n    , =>\n      @hideStep(@step4Mods)\n      @newCardTitle.setContent \"NEW CARD\"\n      #TODO: reset all fields to empty\n      @step1()\n    )\n    Timer.after (=>\n      @showStep(240, @step4Mods)\n    ), 20\n\n  showStep: (yOffset, steps) ->\n    i = 0\n    j = steps.length\n    while i < steps.length\n      Timer.setTimeout ((i) ->\n        steps[i].setTransform(\n          #Transform.thenMove(Transform.rotateX(1), [0, 100*i, -0])\n          Transform.translate(0, yOffset + 60*i, 0)\n          duration: 600\n          curve: Easing.outCubic\n        )\n      ).bind(@, i), j * 100\n      i++\n      j--\n\n  hideStep: (steps) ->\n    i = 0\n    j = steps.length\n    while i < steps.length\n      Timer.setTimeout ((i) ->\n        steps[i].setTransform(\n          Transform.thenMove(Transform.rotateZ(1), [0, window.innerHeight*2, -300])\n          duration: 600\n          curve: Easing.inCubic\n        )\n      ).bind(@, i), j * 100\n      i++\n      j--\n\n  addSurface: (step, options)->\n    surface = new Surface\n      size: options.size\n      content: options.content\n      classes: options.classes\n    surfaceMod = new StateModifier\n      origin: [0.5, 1]\n      align: [0.5, -0.05]\n    @[\"step#{step}Mods\"].push surfaceMod\n    @add(surfaceMod).add surface\n\n  addNum: (step)->\n    num = new Surface\n      size: [30, 30]\n      content: step\n      classes: ['newcard__number']\n    numMod = new StateModifier\n      origin: [0.5, 0.5]\n      align: [0.5, -0.05]\n    @[\"step#{step}Mods\"].push numMod\n    @add(numMod).add num\n\n  addButton: (step, params, func)->\n    submit = new Surface\n      size: [@options.input.width, @options.input.height]\n      content: params.content\n      classes: params.classes\n      properties:\n        lineHeight: @options.input.height + \"px\"\n    submitMod = new StateModifier\n      origin: [0.5, 0.5]\n      align: [0.5, -0.07]\n    @[\"step#{step}Mods\"].push submitMod\n    @add(submitMod).add submit\n    submit.on 'click', func\n\n  addLinkContainer: (step, options, func) ->\n    image = new ImageSurface\n      size: options.size\n      classes: options.classes.image\n      content: options.image\n    imageMod = new StateModifier\n      origin: [0, 0.5]\n      align: [0, 0.5]\n    text = new Surface\n      size: [@options.input.width - 59, 60]\n      content: options.text\n      classes: options.classes.text\n      properties:\n        lineHeight: \"#{options.size[0]}px\"\n    textMod = new StateModifier\n      origin: [0, 0.5]\n      align: [0.3, 0.5]\n    container = new ContainerSurface\n      size: [@options.input.width, options.size[1]]\n    container.add(imageMod).add image\n    container.add(textMod).add text\n    containerMod = new StateModifier\n      origin: [0.5, 1]\n      align: [0.5, 0]\n    @[\"step#{step}Mods\"].push containerMod\n    @add(containerMod).add container\n    container.on \"click\", func\n\n\nmodule.exports = NewCardView\n","require './scss/peggbox.scss'\n\nView = require 'famous/core/View'\nContainerSurface = require 'famous/surfaces/ContainerSurface'\nScrollview = require 'famous/views/Scrollview'\n\nListItemView = require 'views/ListItemView'\n\nclass PeggBoxView extends View\n  @DEFAULT_OPTIONS:\n    itemDensity: null\n\n  constructor: () ->\n    super\n    @init()\n\n  init: ->\n    @items = []\n\n  load: (data) ->\n    @items = data\n\n    surfaces = []\n    scrollview = new Scrollview\n      size: [window.innerWidth, window.innerHeight]\n    scrollview.sequenceFrom surfaces\n\n    i = 0\n    while i < @items.length\n      item = new ListItemView @items[i]\n      item.on 'scroll', =>\n        @_eventOutput.emit 'scroll'\n      item.pipe scrollview\n      surfaces.push item\n      i++\n\n\n\n    container = new ContainerSurface\n      size: [undefined, undefined]\n      properties:\n        overflow: \"hidden\"\n\n    container.add scrollview\n    @add container\n\n\n\nmodule.exports = PeggBoxView\n","require './scss/play.scss'\n\nView = require 'famous/core/View'\nStateModifier = require 'famous/modifiers/StateModifier'\nTransform = require 'famous/core/Transform'\nContainerSurface = require 'famous/surfaces/ContainerSurface'\nScrollview = require 'famous/views/Scrollview'\nCardView = require 'views/CardView'\nUtility = require 'famous/utilities/Utility'\nSurface = require 'famous/core/Surface'\nPlayStore = require 'stores/PlayStore'\nConstants = require 'constants/PeggConstants'\nRateView = require 'views/RateView'\nProgressBarView = require 'views/ProgressBarView'\nTimer = require 'famous/utilities/Timer'\nEasing = require 'famous/transitions/Easing'\n\nclass PlayView extends View\n\n  constructor: () ->\n    super\n    @initListeners()\n    @initPlay()\n\n  initListeners: ->\n    PlayStore.on Constants.stores.CARD_ANSWERED, @rateCard\n    PlayStore.on Constants.stores.CARD_RATED, @nextCard\n\n  load: (data) ->\n    surfaces = []\n    @cards.sequenceFrom surfaces\n    i = 0\n    while i < data.length\n      card = new CardView(data[i], size: [window.innerWidth, null])\n      card.pipe @cards\n      surfaces.push card\n      i++\n    @initProgress data.length\n\n  initPlay: ->\n    @playMod = new StateModifier\n    @playNode = @add @playMod\n    @cards = new Scrollview\n      direction: Utility.Direction.X\n      paginated: true\n      margin: 1000\n    # TODO: make cards scroll on z axis\n    #@cards.outputFrom (offset) ->\n    #  Transform.multiply(\n    #    Transform.translate offset/100, offset/100, 50\n    #    Transform.rotateY(1)\n    #  )\n    @playNode.add @cards\n    @rate = new RateView()\n    @playNode.add @rate\n\n   initProgress: (size) ->\n    @progress = new ProgressBarView(size)\n    progressMod = new StateModifier\n      size: [window.innerHeight/2-20, 15]\n      align: [0.5, 0.06]\n      origin: [0.5, 0.5]\n    @playNode.add(progressMod).add @progress\n\n  nextCard: =>\n    @progress.increment(1)\n    @cards.goToNextPage()\n\n  rateCard: =>\n    @rate.showStars()\n\n\nmodule.exports = PlayView\n","require './scss/profile.scss'\n\nView = require 'famous/core/View'\nSurface = require 'famous/core/Surface'\nImageSurface = require 'famous/surfaces/ImageSurface'\nStateModifier = require 'famous/modifiers/StateModifier'\nTransform = require 'famous/core/Transform'\nTimer = require 'famous/utilities/Timer'\nEasing = require 'famous/transitions/Easing'\nUserStore = require 'stores/UserStore'\n\nclass ProfileView extends View\n  @DEFAULT_OPTIONS:\n    width: window.innerWidth\n    height: window.innerHeight\n    transition:\n      duration: 500\n      curve: Easing.outExpo\n\n  constructor: (options) ->\n    super options\n    @init()\n\n  init: ->\n    pic = new ImageSurface\n      size: [ @options.width, null]\n      content: UserStore.getAvatar(\"large\")\n      classes: [\"profile__pic\"]\n    picMod = new StateModifier\n      align: [0.5, 1]\n      origin: [0.5, 1]\n      transform: Transform.translate 0, 0, -1\n    pic.on \"click\", ((picMod) =>\n      picMod.setTransform Transform.translate(0, 300, -1),\n        @options.transition\n    ).bind @, picMod\n    name = new Surface\n      size: [220, 35]\n      classes: ['profile__name__box']\n      content: \"#{UserStore.getName(\"first\")}'s <strong>profile</strong>\"\n    nameMod = new StateModifier\n      align: [0.5, 0]\n      origin: [0.5, 1]\n    logout = new Surface\n      size: [ 200 , 50 ]\n      content: \"Logout\"\n      classes: [\"profile__logout__button\"]\n    logoutMod = new StateModifier\n      align: [0.5, 1]\n      origin: [0.5, 1]\n    logout.on \"click\", ->\n      UserStore.logout()\n\n    @add(picMod).add pic\n    @add(nameMod).add name\n    @add(logoutMod).add logout\n    picMod.setAlign [0.5, -0.5], {duration: 300, easing: Easing.linear}\n    logoutMod.setTransform Transform.translate(0, -200, 0), {duration: 800, easing: Easing.outBounce}\n    nameMod.setTransform Transform.translate(0, 160, 0), {duration: 500, easing: Easing.outCubic}\n\n\nmodule.exports = ProfileView\n","\nView = require 'famous/core/View'\nSurface = require 'famous/core/Surface'\nImageSurface = require 'famous/surfaces/ImageSurface'\nStateModifier = require 'famous/modifiers/StateModifier'\nTransform = require 'famous/core/Transform'\nTimer = require 'famous/utilities/Timer'\n\nclass ProgressBarView extends View\n  @DEFAULT_OPTIONS:\n    width: window.innerHeight/2-20\n    height: 15\n    transition:\n      duration: 400\n      curve: 'easeOut'\n\n  constructor: (steps, options) ->\n    super options\n    #debugger\n    @steps = steps\n    @last = 0\n    @init()\n\n  init: ->\n    progressBarMod = new StateModifier\n    @mainNode = @add progressBarMod\n    @activeBar = new ImageSurface\n      content: \"images/progress_active.png\"\n      size: [@last, @options.height]\n      properties:\n        zIndex: 10\n    inactiveBar = new ImageSurface\n      content: \"images/progress_inactive.png\"\n      size: [@options.width, @options.height]\n    @activeBarMod = new StateModifier\n      align: [0, 0]\n      origin: [0, 0]\n    inactiveBarMod = new StateModifier\n    @mainNode.add(inactiveBarMod).add inactiveBar\n    @mainNode.add(@activeBarMod).add @activeBar\n\n  increment: (x) =>\n    step = @options.width / @steps\n    next = @last + step * x\n    @activeBar.setSize [next, @options.height]\n    @last = next\n\nmodule.exports = ProgressBarView\n","\nView = require 'famous/core/View'\nSurface = require 'famous/core/Surface'\nImageSurface = require 'famous/surfaces/ImageSurface'\nStateModifier = require 'famous/modifiers/StateModifier'\nPlayActions = require 'actions/PlayActions'\nTransform = require 'famous/core/Transform'\nTimer = require 'famous/utilities/Timer'\n\nclass RateView extends View\n  @DEFAULT_OPTIONS:\n    width: window.innerWidth\n    height: 50\n    scale: 5\n    staggerDelay: 50\n    transition:\n      duration: 400\n      curve: 'easeOut'\n\n  constructor: (options) ->\n    super options\n    @init()\n\n  init: ->\n    @state = new StateModifier\n    @mainNode = @add @state\n    @starModifiers = []\n    @stars = []\n    i = 1\n    spacing = @options.scale + 2\n    while i <= @options.scale\n      star = new ImageSurface\n        size: [ @options.height, @options.height ]\n        content: \"images/sun__grey_50px.png\"\n      starMod = new StateModifier\n        align: [1/spacing*i,1.5]\n        origin: [0,1]\n      # numStars will equal i thanks to bind\n      star.on 'click', ((numStars) ->\n        @pickStar numStars\n        Timer.setTimeout ((pos) ->\n          PlayActions.rate pos\n          @resetStars()\n        ).bind(@, numStars), numStars * @options.staggerDelay\n      ).bind @, i\n      @starModifiers.push starMod\n      @stars.push star\n      @mainNode.add(starMod).add star\n      i++\n\n  showStars: ->\n    i = 0\n    while i < @starModifiers.length\n      Timer.setTimeout ((i) ->\n        @starModifiers[i].setTransform Transform.translate(0, -window.innerHeight/2+@options.height, 0), @options.transition\n        return\n      ).bind(this, i), i * @options.staggerDelay\n      i++\n\n  resetStars: ->\n    i = 0\n    while i < @starModifiers.length\n      Timer.setTimeout ((i) ->\n        @stars[i].setContent \"images/sun__grey_50px.png\"\n        @starModifiers[i].setTransform Transform.translate(0, 0, 0), @options.transition\n        return\n      ).bind(this, i), i * @options.staggerDelay\n      i++\n\n  pickStar: (pos) =>\n    i = 0\n    while i < pos\n      Timer.setTimeout ((i) ->\n        @stars[i].setContent \"images/sun_50px.png\"\n        return\n      ).bind(@, i), i *  @options.staggerDelay\n      i++\n\n\n\n\nmodule.exports = RateView\n","require './scss/login.scss'\n\nView = require 'famous/core/View'\nSurface = require 'famous/core/Surface'\nImageSurface = require 'famous/surfaces/ImageSurface'\nTransform = require 'famous/core/Transform'\nStateModifier = require 'famous/modifiers/StateModifier'\nUserActions = require 'actions/UserActions'\nEasing = require 'famous/transitions/Easing'\nTimer = require 'famous/utilities/Timer'\nTransitionable = require 'famous/transitions/Transitionable'\nSpringTransition = require 'famous/transitions/SpringTransition'\nTransitionable.registerMethod 'spring', SpringTransition\nUserStore = require 'stores/UserStore'\nConstants = require 'constants/PeggConstants'\n\n\nclass SignupView extends View\n  @DEFAULT_OPTIONS:\n    logoWidth: 165\n    logoHeight: 122\n    markWidth: 150\n    markHeight: 70\n    transition:\n      duration: 500\n      curve: Easing.outBounce\n    spring:\n      method: \"spring\"\n      period: 500\n      dampingRatio: 0.3\n    input:\n      width: 300\n      height: 40\n\n  constructor: (options) ->\n    super options\n    @initListeners()\n    @initSplash()\n\n  initListeners: ->\n    UserStore.on Constants.stores.SUBSCRIBE_PASS, @showMessage\n    UserStore.on Constants.stores.SUBSCRIBE_FAIL, @showMessage\n\n  initSplash: ->\n    logo = new ImageSurface\n      size: [@options.logoWidth, @options.logoHeight]\n      classes: ['login__logo']\n      content: \"images/logo_icon-big.png\"\n    logoPosMod = new StateModifier\n      align: [0.5,1]\n      origin: [0.5,0]\n    logoSizeMod = new StateModifier\n    mark = new ImageSurface\n      size: [@options.markWidth, @options.markHeight]\n      classes: ['login__mark']\n      content: \"images/logo_mark-big.png\"\n    markMod = new StateModifier\n      align: [0.5,1]\n      origin: [0.5,0]\n    markSizeMod = new StateModifier\n    @add(logoSizeMod).add(logoPosMod).add logo\n    @add(markSizeMod).add(markMod).add mark\n    markMod.setTransform Transform.translate(0, -window.innerHeight/2 - @options.logoHeight/2 + @options.markHeight, 3), @options.transition\n    Timer.after (=>\n      logoPosMod.setTransform Transform.translate(0, -window.innerHeight/2 - @options.logoHeight, 0), @options.spring, =>\n        Timer.after (=>\n          markSizeMod.setTransform Transform.translate(0, -200, -1000), {duration: 500, curve: Easing.inOutBack}\n        ), 20\n        logoSizeMod.setTransform Transform.translate(0, -200, -1000), {duration: 500, curve: Easing.inOutBack}, =>\n          @initSignUp()\n    ), 20\n\n  initSignUp: ->\n    signupText = new Surface\n      size: [300, 60]\n      content: 'Coming soon.'\n      classes: ['signup__text--header']\n    signupTextMod = new StateModifier\n      origin: [0.5, 1]\n      align: [0.5, -0.05]\n    signupEmail = new Surface\n      size: [300, 40]\n      content: '<input type=\"text\" name=\"email\" placeholder=\"Enter your email\" id=\"email\" required/>'\n      classes: [\"signup__email__input\"]\n    signupEmailMod = new StateModifier\n      origin: [0.5, 1]\n      align: [0.5, -0.05]\n    signupSubmit = new Surface\n      size: [@options.input.width, @options.input.height]\n      content: 'I\\'m sexy and I know it.'\n      classes: ['signup__submit']\n      properties:\n        lineHeight: @options.input.height + \"px\"\n    signupSubmitMod = new StateModifier\n      origin: [0.5, 0.5]\n      align: [0.5, -0.07]\n    @add(signupEmailMod).add signupEmail\n    @add(signupTextMod).add signupText\n    @add(signupSubmitMod).add signupSubmit\n    signupTextMod.setTransform Transform.translate(0, window.innerHeight/2 + 60, 3), @options.transition, =>\n      signupEmailMod.setTransform Transform.translate(0, window.innerHeight/2 + 120, 3), @options.transition, =>\n        signupSubmitMod.setTransform Transform.translate(0, window.innerHeight/2 + 170, 3), @options.transition, =>\n\n    signupSubmit.on \"click\", =>\n      @onSubmit()\n\n  onSubmit: =>\n    email = document.getElementById('email').value\n    UserActions.subscribe email\n\n  showMessage: =>\n    if UserStore.getSubscriptionStatus()\n      message = 'We agree.<br/>You\\'re on the list.'\n      classes = ['signup__response--success']\n\n    else\n      message = 'Nah, guess not. Fail.'\n      classes = ['signup__response--fail']\n    messageText = new Surface\n      size: [300, 60]\n      content: message\n      classes: classes\n    messageMod = new StateModifier\n      origin: [0.5, 0.5]\n      align: [0.5, -0.07]\n    @add(messageMod).add messageText\n    messageMod.setTransform Transform.translate(0, window.innerHeight/2 + 230, 3), @options.transition, =>\n\n\n\nmodule.exports = SignupView\n","\nView = require 'famous/core/View'\nSurface = require 'famous/core/Surface'\nImageSurface = require 'famous/surfaces/ImageSurface'\nStateModifier = require 'famous/modifiers/StateModifier'\nTransform = require 'famous/core/Transform'\nTimer = require 'famous/utilities/Timer'\nPlayActions = require 'actions/PlayActions'\n\nclass StatusView extends View\n  @DEFAULT_OPTIONS:\n    transition:\n      duration: 400\n      curve: 'easeOut'\n\n  constructor: (steps, options) ->\n    super options\n    @init()\n\n  init: ->\n    statusMod = new StateModifier\n    @mainNode = @add statusMod\n    @unicorn = new ImageSurface\n      content: \"images/Unicorn_Cosmic_win.png\"\n      size: [239, 239]\n    @unicornMod = new StateModifier\n      align: [0.5, 0]\n      origin: [0.5, 0]\n    @mainNode.add(@unicornMod).add @unicorn\n\n    next = new ImageSurface\n      content: \"images/continue_big_text.png\"\n      size: [60, 120]\n    nextMod = new StateModifier\n      align: [0.5, .8]\n      origin: [0.5, 1]\n    @mainNode.add(nextMod).add next\n\n    next.on \"click\", ->\n      PlayActions.continue()\n\n\n\nmodule.exports = StatusView\n","require './scss/tabmenu'\n\nView = require 'famous/core/View'\nSurface = require 'famous/core/Surface'\nStateModifier = require 'famous/modifiers/StateModifier'\nTransform = require 'famous/core/Transform'\nImageSurface = require 'famous/surfaces/ImageSurface'\nMenuActions = require 'actions/MenuActions'\n\nclass TabMenuItemView extends View\n  @DEFAULT_OPTIONS:\n    pageID: null\n    width: null\n    height: null\n    angle: -0.2\n    iconUrl: 'images/mark_tiny.png'\n    title: 'pegg'\n    color: 'white'\n    iconSize: 50\n\n  constructor: ->\n    super\n    @createBackground()\n    #@createIcon()\n    #@createTitle()\n\n  createBackground: ->\n    @background = new Surface\n      size: [@options.width, @options.height]\n      #size: [null, null]\n      classes: ['tabmenu__item', \"tabmenu__item--#{@options.pageID}\"]\n    @add @background\n    @background.on 'click', =>\n      MenuActions.selectMenuItem @getID()\n\n  createIcon: ->\n    @icon = new ImageSurface\n      size: [@options.iconSize, @options.iconSize]\n      content: @options.iconUrl\n    @iconState = new StateModifier\n      #origin: [0.5, 0.5]\n      #align: [0.5, 0.5]\n        #transform: Transform.translate 20, @options.iconSize/2, 0\n    @add(@iconState).add @icon\n\n  createTitle: ->\n    @title = new Surface\n      size: [@options.width, @options.height]\n      content: @options.title\n      classes: ['tabmenu__item__title']\n    @titleState = new StateModifier\n      transform: Transform.translate @options.width/2, @options.height/2, 0\n    @add(@titleState).add @title\n\n  getID: ->\n    @options.pageID\n\nmodule.exports = TabMenuItemView\n","require './scss/tabmenu'\n\nView = require 'famous/core/View'\nSurface = require 'famous/core/Surface'\nStateModifier = require 'famous/modifiers/StateModifier'\nTransform = require 'famous/core/Transform'\nTimer = require 'famous/utilities/Timer'\n_ = require('Parse')._\n\nTabMenuItemView = require 'views/TabMenuItemView'\n\n\n###\n# Events:\n# selectTabMenuItem {{menuID}}\n###\nclass TabMenuView extends View\n  @DEFAULT_OPTIONS:\n    tab:\n      height: 60\n      staggerDelay: 35\n      transition:\n        duration: 400\n        curve: 'easeOut'\n    model: null\n\n\n  constructor: (options) ->\n    options = _.defaults options, @constructor.DEFAULT_OPTIONS\n    super options\n    @init()\n\n  init: ->\n    @tabs = []\n    @tabModifiers = []\n    i = 0\n    xOffset = 0\n    while i < @options.model.length\n      @addTab\n        pageID: @options.model[i].pageID\n        title: @options.model[i].title\n        icon: @options.model[i].iconUrl\n        xOffset: xOffset\n        width: window.innerWidth / @options.model.length\n        height: @options.tab.height\n      i++\n      xOffset += 1/@options.model.length\n\n\n  addTab: (params) ->\n    tab = new TabMenuItemView\n      pageID: params.pageID\n      title: params.title\n      iconUrl: params.icon\n      width: params.width\n      height: params.height\n      xOffset: params.xOffset\n    tabModifier = new StateModifier\n      origin: [0, 0]\n      align: [params.xOffset, 0]\n      transform: Transform.translate 0, params.height, 0\n    @tabModifiers.push tabModifier\n    @tabs.push tab\n    @add(tabModifier).add tab\n\n\n  showTabs: ->\n    transition = @options.tab.transition\n    delay = @options.tab.staggerDelay\n    i = 0\n    while i < @tabModifiers.length\n      Timer.setTimeout ((i) ->\n        @tabModifiers[i].setTransform Transform.translate(0, 0, 0), transition\n        return\n      ).bind(this, i), i * delay\n      i++\n\n  hideTabs: ->\n    transition = @options.tab.transition\n    delay = @options.tab.staggerDelay\n    i = 0\n    while i < @tabModifiers.length\n      Timer.setTimeout ((i) ->\n        @tabModifiers[i].setTransform Transform.translate(0, @options.tab.height, 0), transition\n        return\n      ).bind(this, i), i * delay\n      i++\n\n  bounceTabs: ->\n    transition = @options.tab.transition\n    delay = @options.tab.staggerDelay\n    i = 0\n    tab = 0\n    y = @options.tab.height\n    while i < @tabModifiers.length * 2\n      Timer.setTimeout ((i) ->\n        @tabModifiers[tab].setTransform Transform.translate(0, y, 0), transition\n        tab++\n        if tab == @tabModifiers.length\n          tab = 0\n          y = 0\n        return\n      ).bind(this, i), i * delay\n      i++\n\n\n\nmodule.exports = TabMenuView\n","# Public config vars and tokens.\n# This file is committed to git and available to the client.\n\nmodule.exports =\n  # Parse client credentials\n  parse:\n    appId: '08asqa4QvUyNIDTIl3BS70CLcKJGoh2mI1MXwJEf'\n    jsKey: 'G19GjSAlnMOvTjcDqE6KxxKHsMnygHmbsfDYg8gm'\n\n  facebook:\n    appId: '1410524409215955'\n\n  aviary:\n    apiKey: 'cdef40f2d4f076a2'\n","# <div id=fb-root> must be present on page\n# https://developers.facebook.com/docs/javascript/quickstart\n\nParse = require 'Parse'\nConfig = require('Config').public.facebook\n\nload = (d, s, id) ->\n  fjs = d.getElementsByTagName(s)[0]\n  return if d.getElementById(id)\n  js = d.createElement(s)\n  js.id = id\n  js.src = '//connect.facebook.net/en_US/all.js'\n  fjs.parentNode.insertBefore(js, fjs)\n\nwindow.fbAsyncInit = ->\n  Parse.FacebookUtils.init\n    appId      : Config.appId\n    cookie     : true\n    xfbml      : true\n\nload document, 'script', 'facebook-jssdk'\n","Utils =\n  # Creates enumeration with keys equal to values.\n  keyMirror: (obj) ->\n    ret = {}\n    for key of obj\n      ret[key] = key  if obj.hasOwnProperty key\n    ret\n\nmodule.exports = Utils\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n *\n * Owner: mark@famo.us\n * @license MPL 2.0\n * @copyright Famous Industries, Inc. 2014\n */\n\n\nhtml {\n    width: 100%;\n    height: 100%;\n    margin: 0px;\n    padding: 0px;\n    overflow: hidden;\n    -webkit-transform-style: preserve-3d;\n    transform-style: preserve-3d;\n}\n\nbody {\n    position: absolute;\n    width: 100%;\n    height: 100%;\n    margin: 0px;\n    padding: 0px;\n    -webkit-transform-style: preserve-3d;\n    transform-style: preserve-3d;\n    -webkit-font-smoothing: antialiased;\n    -webkit-tap-highlight-color: transparent;\n    -webkit-perspective: 0;\n    perspective: none;\n    overflow: hidden;\n}\n\n.famous-container, .famous-group {\n    position: absolute;\n    top: 0px;\n    left: 0px;\n    bottom: 0px;\n    right: 0px;\n    overflow: visible;\n    -webkit-transform-style: preserve-3d;\n    transform-style: preserve-3d;\n    -webkit-backface-visibility: visible;\n    backface-visibility: visible;\n    pointer-events: none;\n}\n\n.famous-group {\n    width: 0px;\n    height: 0px;\n    margin: 0px;\n    padding: 0px;\n    -webkit-transform-style: preserve-3d;\n    transform-style: preserve-3d;\n}\n\n.famous-surface {\n    position: absolute;\n    -webkit-transform-origin: center center;\n    transform-origin: center center;\n    -webkit-backface-visibility: hidden;\n    backface-visibility: hidden;\n    -webkit-transform-style: flat;\n    transform-style: preserve-3d; /* performance */\n    -webkit-box-sizing: border-box;\n    -moz-box-sizing: border-box;\n    -webkit-tap-highlight-color: transparent;\n    pointer-events: auto;\n}\n\n.famous-container-group {\n    position: relative;\n    width: 100%;\n    height: 100%;\n}\n","module.exports = \"body {\\n  font-family: \\\"Helvetica Neue\\\", \\\"Helvetica\\\", Helvetica, Arial, sans-serif;\\n  background-color: #0c0d2a; }\\n\\nbutton {\\n  width: 100%;\\n  height: 100%; }\\n\\n.answer {\\n  background-color: #00a5ff;\\n  padding: 10px;\\n  border: 10px solid white;\\n  text-align: center; }\\n\"","module.exports = \".bandmenu__background {\\n  background-color: #0c0d2a;\\n  z-index: 10; }\\n\\n.bandmenu__item {\\n  cursor: pointer;\\n  text-align: left;\\n  z-index: 20; }\\n\\n.bandmenu__item--play {\\n  background-color: #FF694F; }\\n\\n.bandmenu__item--friends {\\n  background-color: #FF694F; }\\n\\n.bandmenu__item--create {\\n  background-color: #FCDA33; }\\n\\n.bandmenu__item--decks {\\n  background-color: #9DEB0F; }\\n\\n.bandmenu__item--activity {\\n  background-color: #48B5FB; }\\n\\n.bandmenu__item__title {\\n  color: #fff;\\n  text-transform: uppercase;\\n  position: relative;\\n  top: 42%;\\n  width: 60%;\\n  float: right;\\n  font-weight: bold;\\n  font-size: 25px; }\\n\\n.bandmenu__item__logo {\\n  z-index: 100; }\\n\"","module.exports = \".backface-visible, .card__shim {\\n  backface-visibility: visible;\\n  -webkit-backface-visibility: visible;\\n  -moz-backface-visibility: visible;\\n  -ms-backface-visibility: visible; }\\n\\n.card__front, .card__back, .card__left, .card__right {\\n  cursor: pointer;\\n  padding: 20px; }\\n\\n\\n.card__front__question {\\n  text-align: center;\\n  padding: 10px;\\n  font-size: 25px;\\n  line-height: 35px; }\\n\\n.card__front__question--small {\\n  text-align: center;\\n  font-size: 18px;\\n  padding: 0px 10px;\\n  line-height: 30px;\\n  z-index: -10;\\n  height: 90px !important;\\n  text-overflow: ellipsis; }\\n\\n.card__front__option {\\n  padding: 0px 20px; }\\n\\n.card__front__option .outerContainer {\\n  display: table;\\n  overflow: hidden; }\\n\\n.card__front__option .outerContainer .innerContainer {\\n  display: table-cell;\\n  vertical-align: middle;\\n  width: 100%;\\n  margin: 0 auto;\\n  text-align: left; }\\n\\n.card__front__input {\\n  margin: 0;\\n  text-align: center; }\\n\\n.card__front__input input {\\n  background: transparent;\\n  border: 1px solid #0c0d2a;\\n  border-radius: 5px;\\n  padding: 10px;\\n  width: 100%;\\n  font-size: 15px;\\n  margin: 14px; }\\n\\n.card__front__option:hover {\\n  background-color: #FF694F;\\n  opacity: 0.5; }\\n\\n\\n.card__front {\\n  background-color: #9fcacf; }\\n\\n.card__backing {\\n  background-color: #fff; }\\n\\n.card__back {\\n  text-align: center;\\n  background-color: #FCDA33; }\\n\\n.card__back__image {\\n  font-size: 23px; }\\n\\n\\n.card__shim {\\n  background-color: #000; }\\n\\n.card__front_newOption {\\n  margin: 0;\\n  width: 80% !important; }\\n\"","module.exports = \".fpsmeter {\\n  color: #fff;\\n  cursor: pointer; }\\n\"","module.exports = \".footer {\\n  background-color: #FF694F;\\n  color: #fff;\\n  line-height: 100px;\\n  text-align: center; }\\n\\n.header__background {\\n  z-index: 10; }\\n\\n.header__background--play {\\n  background-color: #FF694F; }\\n\\n.header__background--profile {\\n  background-color: #FF694F; }\\n\\n.header__background--peggbox {\\n  background-color: #9DEB0F; }\\n\\n.header__background--decks {\\n  background-color: #9DEB0F; }\\n\\n.header__background--create {\\n  background-color: #FCDA33; }\\n\\n.header__background--activity {\\n  background-color: #48B5FB; }\\n\\n.header__title {\\n  font-weight: bold;\\n  font-size: 30px;\\n  text-align: center;\\n  color: #fff; }\\n\\n.header__logout {\\n  font-weight: bold;\\n  font-size: 18px;\\n  color: #fff; }\\n\\n.header__logo {\\n  cursor: pointer;\\n  z-index: 11; }\\n\\n.header__profilePic {\\n  z-index: 11; }\\n\"","module.exports = \".login__background {\\n  background-color: #0c0d2a; }\\n\\n.login__text--header {\\n  text-transform: uppercase;\\n  color: #fff;\\n  font-size: 20px;\\n  font-weight: bold; }\\n\\n.login__text--message {\\n  color: #9fcacf;\\n  font-size: 12px;\\n  text-align: center; }\\n\\n.login__button--facebook {\\n  background-color: #3CA5FA;\\n  text-align: center;\\n  color: white;\\n  font-weight: bold;\\n  cursor: pointer; }\\n\\n.login__button--google {\\n  background-color: #E44E3C;\\n  text-align: center;\\n  color: white;\\n  font-weight: bold;\\n  cursor: pointer; }\\n\\n.login__logo {\\n  z-index: 10; }\\n\\n.login__mark {\\n  z-index: -10; }\\n\\n.signup__text--header {\\n  text-align: center;\\n  text-transform: uppercase;\\n  color: #fff;\\n  font-size: 30px;\\n  font-weight: bold; }\\n\\n.signup__submit {\\n  background-color: #fff;\\n  border-radius: 5px;\\n  text-align: center;\\n  font-size: 15px;\\n  cursor: pointer; }\\n\\n.signup__email__input input {\\n  background: transparent;\\n  border: 1px solid #fff;\\n  border-radius: 5px;\\n  padding: 10px;\\n  width: 92%;\\n  color: #fff;\\n  font-size: 15px; }\\n\\n.signup__response--success {\\n  text-align: center;\\n  color: #9DEB0F;\\n  font-size: 25px;\\n  font-weight: bold; }\\n\\n.signup__response--fail {\\n  text-align: center;\\n  color: #FF694F;\\n  font-size: 25px;\\n  font-weight: bold; }\\n\"","module.exports = \".backface-visible {\\n  backface-visibility: visible;\\n  -webkit-backface-visibility: visible;\\n  -moz-backface-visibility: visible;\\n  -ms-backface-visibility: visible; }\\n\\n.newcard__input input {\\n  background: transparent;\\n  border: 1px solid #fff;\\n  border-radius: 5px;\\n  padding: 10px;\\n  width: 92%;\\n  color: #fff;\\n  font-size: 15px; }\\n\\n.newcard__button--blue {\\n  background-color: #00B5FF !important; }\\n\\n.newcard__button {\\n  background-color: #fff;\\n  border-radius: 5px;\\n  text-align: center;\\n  font-size: 15px; }\\n\\n.newcard__header {\\n  color: #fff;\\n  font-size: 23px;\\n  text-align: center; }\\n\\n.newcard__number {\\n  border-radius: 30px;\\n  background-color: #fff;\\n  text-align: center;\\n  font-weight: bold;\\n  line-height: 30px;\\n  vertical-align: middle; }\\n\\n.newcard__step3__deckText {\\n  color: #fff;\\n  font-size: 15px; }\\n\\n.newcard__header--big {\\n  color: #00B5FF;\\n  font-size: 36px;\\n  text-align: center; }\\n\"","module.exports = \".peggbox__background {\\n  background-color: #0c0d2a; }\\n\\n.peggbox__item {\\n  color: #fff;\\n  border-bottom: 1px solid #d3e9eb;\\n  font-size: 20px;\\n  vertical-align: center;\\n  padding: 20px; }\\n\\n.peggbox__item span {\\n  padding: 0px 10px;\\n  display: inline-block; }\\n\"","module.exports = \".play__background {\\n  background-color: #0c0d2a; }\\n\"","module.exports = \"\\n.profile__name__box {\\n  border-radius: 20px;\\n  background-color: #FF694F;\\n  padding: 5px;\\n  text-align: center;\\n  text-transform: uppercase;\\n  font-size: 19px;\\n  color: #fff; }\\n\\n.profile__logout__button {\\n  text-align: center;\\n  text-transform: uppercase;\\n  font-size: 20px;\\n  color: #fff;\\n  font-weight: bold; }\\n\"","module.exports = \".tabmenu__background {\\n  background-color: #0c0d2a; }\\n\\n.tabmenu__item {\\n  cursor: pointer;\\n  text-align: left; }\\n\\n.tabmenu__item--pegg {\\n  background-color: #FF694F; }\\n\\n.tabmenu__item--friends {\\n  background-color: #FF694F; }\\n\\n.tabmenu__item--decks {\\n  background-color: #FCDA33; }\\n\\n.tabmenu__item--peggbox {\\n  background-color: #9DEB0F; }\\n\\n.tabmenu__item--activity {\\n  background-color: #48B5FB; }\\n\"","/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\nmodule.exports = function(src) {\r\n\tif (window.execScript)\r\n\t\twindow.execScript(src);\r\n\telse\r\n\t\teval.call(null, src);\r\n}","require(\"!/Users/auggernaut/Github/pegg/node_modules/script-loader/addScript.js\")(require(\"!/Users/auggernaut/Github/pegg/node_modules/script-loader/node_modules/raw-loader/index.js!/Users/auggernaut/Github/pegg/src/lib/parse-1.2.18_fixed-parsedate.js\"))","module.exports = \"/*!\\n * Parse JavaScript SDK\\n * Version: 1.2.18\\n * Built: Wed Mar 12 2014 15:36:03\\n * http://parse.com\\n *\\n * Copyright 2014 Parse, Inc.\\n * The Parse JavaScript SDK is freely distributable under the MIT license.\\n *\\n * Includes: Underscore.js\\n * Copyright 2009-2012 Jeremy Ashkenas, DocumentCloud Inc.\\n * Released under the MIT license.\\n */\\n(function(root) {\\n  root.Parse = root.Parse || {};\\n  root.Parse.VERSION = \\\"js1.2.18\\\";\\n}(this));\\n//     Underscore.js 1.4.4\\n//     http://underscorejs.org\\n//     (c) 2009-2013 Jeremy Ashkenas, DocumentCloud Inc.\\n//     Underscore may be freely distributed under the MIT license.\\n\\n(function() {\\n\\n  // Baseline setup\\n  // --------------\\n\\n  // Establish the root object, `window` in the browser, or `global` on the server.\\n  var root = this;\\n\\n  // Save the previous value of the `_` variable.\\n  var previousUnderscore = root._;\\n\\n  // Establish the object that gets returned to break out of a loop iteration.\\n  var breaker = {};\\n\\n  // Save bytes in the minified (but not gzipped) version:\\n  var ArrayProto = Array.prototype, ObjProto = Object.prototype, FuncProto = Function.prototype;\\n\\n  // Create quick reference variables for speed access to core prototypes.\\n  var push             = ArrayProto.push,\\n      slice            = ArrayProto.slice,\\n      concat           = ArrayProto.concat,\\n      toString         = ObjProto.toString,\\n      hasOwnProperty   = ObjProto.hasOwnProperty;\\n\\n  // All **ECMAScript 5** native function implementations that we hope to use\\n  // are declared here.\\n  var\\n    nativeForEach      = ArrayProto.forEach,\\n    nativeMap          = ArrayProto.map,\\n    nativeReduce       = ArrayProto.reduce,\\n    nativeReduceRight  = ArrayProto.reduceRight,\\n    nativeFilter       = ArrayProto.filter,\\n    nativeEvery        = ArrayProto.every,\\n    nativeSome         = ArrayProto.some,\\n    nativeIndexOf      = ArrayProto.indexOf,\\n    nativeLastIndexOf  = ArrayProto.lastIndexOf,\\n    nativeIsArray      = Array.isArray,\\n    nativeKeys         = Object.keys,\\n    nativeBind         = FuncProto.bind;\\n\\n  // Create a safe reference to the Underscore object for use below.\\n  var _ = function(obj) {\\n    if (obj instanceof _) return obj;\\n    if (!(this instanceof _)) return new _(obj);\\n    this._wrapped = obj;\\n  };\\n\\n  // Export the Underscore object for **Node.js**, with\\n  // backwards-compatibility for the old `require()` API. If we're in\\n  // the browser, add `_` as a global object via a string identifier,\\n  // for Closure Compiler \\\"advanced\\\" mode.\\n  if (typeof exports !== 'undefined') {\\n    if (typeof module !== 'undefined' && module.exports) {\\n      exports = module.exports = _;\\n    }\\n    exports._ = _;\\n  } else {\\n    root._ = _;\\n  }\\n\\n  // Current version.\\n  _.VERSION = '1.4.4';\\n\\n  // Collection Functions\\n  // --------------------\\n\\n  // The cornerstone, an `each` implementation, aka `forEach`.\\n  // Handles objects with the built-in `forEach`, arrays, and raw objects.\\n  // Delegates to **ECMAScript 5**'s native `forEach` if available.\\n  var each = _.each = _.forEach = function(obj, iterator, context) {\\n    if (obj == null) return;\\n    if (nativeForEach && obj.forEach === nativeForEach) {\\n      obj.forEach(iterator, context);\\n    } else if (obj.length === +obj.length) {\\n      for (var i = 0, l = obj.length; i < l; i++) {\\n        if (iterator.call(context, obj[i], i, obj) === breaker) return;\\n      }\\n    } else {\\n      for (var key in obj) {\\n        if (_.has(obj, key)) {\\n          if (iterator.call(context, obj[key], key, obj) === breaker) return;\\n        }\\n      }\\n    }\\n  };\\n\\n  // Return the results of applying the iterator to each element.\\n  // Delegates to **ECMAScript 5**'s native `map` if available.\\n  _.map = _.collect = function(obj, iterator, context) {\\n    var results = [];\\n    if (obj == null) return results;\\n    if (nativeMap && obj.map === nativeMap) return obj.map(iterator, context);\\n    each(obj, function(value, index, list) {\\n      results[results.length] = iterator.call(context, value, index, list);\\n    });\\n    return results;\\n  };\\n\\n  var reduceError = 'Reduce of empty array with no initial value';\\n\\n  // **Reduce** builds up a single result from a list of values, aka `inject`,\\n  // or `foldl`. Delegates to **ECMAScript 5**'s native `reduce` if available.\\n  _.reduce = _.foldl = _.inject = function(obj, iterator, memo, context) {\\n    var initial = arguments.length > 2;\\n    if (obj == null) obj = [];\\n    if (nativeReduce && obj.reduce === nativeReduce) {\\n      if (context) iterator = _.bind(iterator, context);\\n      return initial ? obj.reduce(iterator, memo) : obj.reduce(iterator);\\n    }\\n    each(obj, function(value, index, list) {\\n      if (!initial) {\\n        memo = value;\\n        initial = true;\\n      } else {\\n        memo = iterator.call(context, memo, value, index, list);\\n      }\\n    });\\n    if (!initial) throw new TypeError(reduceError);\\n    return memo;\\n  };\\n\\n  // The right-associative version of reduce, also known as `foldr`.\\n  // Delegates to **ECMAScript 5**'s native `reduceRight` if available.\\n  _.reduceRight = _.foldr = function(obj, iterator, memo, context) {\\n    var initial = arguments.length > 2;\\n    if (obj == null) obj = [];\\n    if (nativeReduceRight && obj.reduceRight === nativeReduceRight) {\\n      if (context) iterator = _.bind(iterator, context);\\n      return initial ? obj.reduceRight(iterator, memo) : obj.reduceRight(iterator);\\n    }\\n    var length = obj.length;\\n    if (length !== +length) {\\n      var keys = _.keys(obj);\\n      length = keys.length;\\n    }\\n    each(obj, function(value, index, list) {\\n      index = keys ? keys[--length] : --length;\\n      if (!initial) {\\n        memo = obj[index];\\n        initial = true;\\n      } else {\\n        memo = iterator.call(context, memo, obj[index], index, list);\\n      }\\n    });\\n    if (!initial) throw new TypeError(reduceError);\\n    return memo;\\n  };\\n\\n  // Return the first value which passes a truth test. Aliased as `detect`.\\n  _.find = _.detect = function(obj, iterator, context) {\\n    var result;\\n    any(obj, function(value, index, list) {\\n      if (iterator.call(context, value, index, list)) {\\n        result = value;\\n        return true;\\n      }\\n    });\\n    return result;\\n  };\\n\\n  // Return all the elements that pass a truth test.\\n  // Delegates to **ECMAScript 5**'s native `filter` if available.\\n  // Aliased as `select`.\\n  _.filter = _.select = function(obj, iterator, context) {\\n    var results = [];\\n    if (obj == null) return results;\\n    if (nativeFilter && obj.filter === nativeFilter) return obj.filter(iterator, context);\\n    each(obj, function(value, index, list) {\\n      if (iterator.call(context, value, index, list)) results[results.length] = value;\\n    });\\n    return results;\\n  };\\n\\n  // Return all the elements for which a truth test fails.\\n  _.reject = function(obj, iterator, context) {\\n    return _.filter(obj, function(value, index, list) {\\n      return !iterator.call(context, value, index, list);\\n    }, context);\\n  };\\n\\n  // Determine whether all of the elements match a truth test.\\n  // Delegates to **ECMAScript 5**'s native `every` if available.\\n  // Aliased as `all`.\\n  _.every = _.all = function(obj, iterator, context) {\\n    iterator || (iterator = _.identity);\\n    var result = true;\\n    if (obj == null) return result;\\n    if (nativeEvery && obj.every === nativeEvery) return obj.every(iterator, context);\\n    each(obj, function(value, index, list) {\\n      if (!(result = result && iterator.call(context, value, index, list))) return breaker;\\n    });\\n    return !!result;\\n  };\\n\\n  // Determine if at least one element in the object matches a truth test.\\n  // Delegates to **ECMAScript 5**'s native `some` if available.\\n  // Aliased as `any`.\\n  var any = _.some = _.any = function(obj, iterator, context) {\\n    iterator || (iterator = _.identity);\\n    var result = false;\\n    if (obj == null) return result;\\n    if (nativeSome && obj.some === nativeSome) return obj.some(iterator, context);\\n    each(obj, function(value, index, list) {\\n      if (result || (result = iterator.call(context, value, index, list))) return breaker;\\n    });\\n    return !!result;\\n  };\\n\\n  // Determine if the array or object contains a given value (using `===`).\\n  // Aliased as `include`.\\n  _.contains = _.include = function(obj, target) {\\n    if (obj == null) return false;\\n    if (nativeIndexOf && obj.indexOf === nativeIndexOf) return obj.indexOf(target) != -1;\\n    return any(obj, function(value) {\\n      return value === target;\\n    });\\n  };\\n\\n  // Invoke a method (with arguments) on every item in a collection.\\n  _.invoke = function(obj, method) {\\n    var args = slice.call(arguments, 2);\\n    var isFunc = _.isFunction(method);\\n    return _.map(obj, function(value) {\\n      return (isFunc ? method : value[method]).apply(value, args);\\n    });\\n  };\\n\\n  // Convenience version of a common use case of `map`: fetching a property.\\n  _.pluck = function(obj, key) {\\n    return _.map(obj, function(value){ return value[key]; });\\n  };\\n\\n  // Convenience version of a common use case of `filter`: selecting only objects\\n  // containing specific `key:value` pairs.\\n  _.where = function(obj, attrs, first) {\\n    if (_.isEmpty(attrs)) return first ? null : [];\\n    return _[first ? 'find' : 'filter'](obj, function(value) {\\n      for (var key in attrs) {\\n        if (attrs[key] !== value[key]) return false;\\n      }\\n      return true;\\n    });\\n  };\\n\\n  // Convenience version of a common use case of `find`: getting the first object\\n  // containing specific `key:value` pairs.\\n  _.findWhere = function(obj, attrs) {\\n    return _.where(obj, attrs, true);\\n  };\\n\\n  // Return the maximum element or (element-based computation).\\n  // Can't optimize arrays of integers longer than 65,535 elements.\\n  // See: https://bugs.webkit.org/show_bug.cgi?id=80797\\n  _.max = function(obj, iterator, context) {\\n    if (!iterator && _.isArray(obj) && obj[0] === +obj[0] && obj.length < 65535) {\\n      return Math.max.apply(Math, obj);\\n    }\\n    if (!iterator && _.isEmpty(obj)) return -Infinity;\\n    var result = {computed : -Infinity, value: -Infinity};\\n    each(obj, function(value, index, list) {\\n      var computed = iterator ? iterator.call(context, value, index, list) : value;\\n      computed >= result.computed && (result = {value : value, computed : computed});\\n    });\\n    return result.value;\\n  };\\n\\n  // Return the minimum element (or element-based computation).\\n  _.min = function(obj, iterator, context) {\\n    if (!iterator && _.isArray(obj) && obj[0] === +obj[0] && obj.length < 65535) {\\n      return Math.min.apply(Math, obj);\\n    }\\n    if (!iterator && _.isEmpty(obj)) return Infinity;\\n    var result = {computed : Infinity, value: Infinity};\\n    each(obj, function(value, index, list) {\\n      var computed = iterator ? iterator.call(context, value, index, list) : value;\\n      computed < result.computed && (result = {value : value, computed : computed});\\n    });\\n    return result.value;\\n  };\\n\\n  // Shuffle an array.\\n  _.shuffle = function(obj) {\\n    var rand;\\n    var index = 0;\\n    var shuffled = [];\\n    each(obj, function(value) {\\n      rand = _.random(index++);\\n      shuffled[index - 1] = shuffled[rand];\\n      shuffled[rand] = value;\\n    });\\n    return shuffled;\\n  };\\n\\n  // An internal function to generate lookup iterators.\\n  var lookupIterator = function(value) {\\n    return _.isFunction(value) ? value : function(obj){ return obj[value]; };\\n  };\\n\\n  // Sort the object's values by a criterion produced by an iterator.\\n  _.sortBy = function(obj, value, context) {\\n    var iterator = lookupIterator(value);\\n    return _.pluck(_.map(obj, function(value, index, list) {\\n      return {\\n        value : value,\\n        index : index,\\n        criteria : iterator.call(context, value, index, list)\\n      };\\n    }).sort(function(left, right) {\\n      var a = left.criteria;\\n      var b = right.criteria;\\n      if (a !== b) {\\n        if (a > b || a === void 0) return 1;\\n        if (a < b || b === void 0) return -1;\\n      }\\n      return left.index < right.index ? -1 : 1;\\n    }), 'value');\\n  };\\n\\n  // An internal function used for aggregate \\\"group by\\\" operations.\\n  var group = function(obj, value, context, behavior) {\\n    var result = {};\\n    var iterator = lookupIterator(value || _.identity);\\n    each(obj, function(value, index) {\\n      var key = iterator.call(context, value, index, obj);\\n      behavior(result, key, value);\\n    });\\n    return result;\\n  };\\n\\n  // Groups the object's values by a criterion. Pass either a string attribute\\n  // to group by, or a function that returns the criterion.\\n  _.groupBy = function(obj, value, context) {\\n    return group(obj, value, context, function(result, key, value) {\\n      (_.has(result, key) ? result[key] : (result[key] = [])).push(value);\\n    });\\n  };\\n\\n  // Counts instances of an object that group by a certain criterion. Pass\\n  // either a string attribute to count by, or a function that returns the\\n  // criterion.\\n  _.countBy = function(obj, value, context) {\\n    return group(obj, value, context, function(result, key) {\\n      if (!_.has(result, key)) result[key] = 0;\\n      result[key]++;\\n    });\\n  };\\n\\n  // Use a comparator function to figure out the smallest index at which\\n  // an object should be inserted so as to maintain order. Uses binary search.\\n  _.sortedIndex = function(array, obj, iterator, context) {\\n    iterator = iterator == null ? _.identity : lookupIterator(iterator);\\n    var value = iterator.call(context, obj);\\n    var low = 0, high = array.length;\\n    while (low < high) {\\n      var mid = (low + high) >>> 1;\\n      iterator.call(context, array[mid]) < value ? low = mid + 1 : high = mid;\\n    }\\n    return low;\\n  };\\n\\n  // Safely convert anything iterable into a real, live array.\\n  _.toArray = function(obj) {\\n    if (!obj) return [];\\n    if (_.isArray(obj)) return slice.call(obj);\\n    if (obj.length === +obj.length) return _.map(obj, _.identity);\\n    return _.values(obj);\\n  };\\n\\n  // Return the number of elements in an object.\\n  _.size = function(obj) {\\n    if (obj == null) return 0;\\n    return (obj.length === +obj.length) ? obj.length : _.keys(obj).length;\\n  };\\n\\n  // Array Functions\\n  // ---------------\\n\\n  // Get the first element of an array. Passing **n** will return the first N\\n  // values in the array. Aliased as `head` and `take`. The **guard** check\\n  // allows it to work with `_.map`.\\n  _.first = _.head = _.take = function(array, n, guard) {\\n    if (array == null) return void 0;\\n    return (n != null) && !guard ? slice.call(array, 0, n) : array[0];\\n  };\\n\\n  // Returns everything but the last entry of the array. Especially useful on\\n  // the arguments object. Passing **n** will return all the values in\\n  // the array, excluding the last N. The **guard** check allows it to work with\\n  // `_.map`.\\n  _.initial = function(array, n, guard) {\\n    return slice.call(array, 0, array.length - ((n == null) || guard ? 1 : n));\\n  };\\n\\n  // Get the last element of an array. Passing **n** will return the last N\\n  // values in the array. The **guard** check allows it to work with `_.map`.\\n  _.last = function(array, n, guard) {\\n    if (array == null) return void 0;\\n    if ((n != null) && !guard) {\\n      return slice.call(array, Math.max(array.length - n, 0));\\n    } else {\\n      return array[array.length - 1];\\n    }\\n  };\\n\\n  // Returns everything but the first entry of the array. Aliased as `tail` and `drop`.\\n  // Especially useful on the arguments object. Passing an **n** will return\\n  // the rest N values in the array. The **guard**\\n  // check allows it to work with `_.map`.\\n  _.rest = _.tail = _.drop = function(array, n, guard) {\\n    return slice.call(array, (n == null) || guard ? 1 : n);\\n  };\\n\\n  // Trim out all falsy values from an array.\\n  _.compact = function(array) {\\n    return _.filter(array, _.identity);\\n  };\\n\\n  // Internal implementation of a recursive `flatten` function.\\n  var flatten = function(input, shallow, output) {\\n    each(input, function(value) {\\n      if (_.isArray(value)) {\\n        shallow ? push.apply(output, value) : flatten(value, shallow, output);\\n      } else {\\n        output.push(value);\\n      }\\n    });\\n    return output;\\n  };\\n\\n  // Return a completely flattened version of an array.\\n  _.flatten = function(array, shallow) {\\n    return flatten(array, shallow, []);\\n  };\\n\\n  // Return a version of the array that does not contain the specified value(s).\\n  _.without = function(array) {\\n    return _.difference(array, slice.call(arguments, 1));\\n  };\\n\\n  // Produce a duplicate-free version of the array. If the array has already\\n  // been sorted, you have the option of using a faster algorithm.\\n  // Aliased as `unique`.\\n  _.uniq = _.unique = function(array, isSorted, iterator, context) {\\n    if (_.isFunction(isSorted)) {\\n      context = iterator;\\n      iterator = isSorted;\\n      isSorted = false;\\n    }\\n    var initial = iterator ? _.map(array, iterator, context) : array;\\n    var results = [];\\n    var seen = [];\\n    each(initial, function(value, index) {\\n      if (isSorted ? (!index || seen[seen.length - 1] !== value) : !_.contains(seen, value)) {\\n        seen.push(value);\\n        results.push(array[index]);\\n      }\\n    });\\n    return results;\\n  };\\n\\n  // Produce an array that contains the union: each distinct element from all of\\n  // the passed-in arrays.\\n  _.union = function() {\\n    return _.uniq(concat.apply(ArrayProto, arguments));\\n  };\\n\\n  // Produce an array that contains every item shared between all the\\n  // passed-in arrays.\\n  _.intersection = function(array) {\\n    var rest = slice.call(arguments, 1);\\n    return _.filter(_.uniq(array), function(item) {\\n      return _.every(rest, function(other) {\\n        return _.indexOf(other, item) >= 0;\\n      });\\n    });\\n  };\\n\\n  // Take the difference between one array and a number of other arrays.\\n  // Only the elements present in just the first array will remain.\\n  _.difference = function(array) {\\n    var rest = concat.apply(ArrayProto, slice.call(arguments, 1));\\n    return _.filter(array, function(value){ return !_.contains(rest, value); });\\n  };\\n\\n  // Zip together multiple lists into a single array -- elements that share\\n  // an index go together.\\n  _.zip = function() {\\n    var args = slice.call(arguments);\\n    var length = _.max(_.pluck(args, 'length'));\\n    var results = new Array(length);\\n    for (var i = 0; i < length; i++) {\\n      results[i] = _.pluck(args, \\\"\\\" + i);\\n    }\\n    return results;\\n  };\\n\\n  // Converts lists into objects. Pass either a single array of `[key, value]`\\n  // pairs, or two parallel arrays of the same length -- one of keys, and one of\\n  // the corresponding values.\\n  _.object = function(list, values) {\\n    if (list == null) return {};\\n    var result = {};\\n    for (var i = 0, l = list.length; i < l; i++) {\\n      if (values) {\\n        result[list[i]] = values[i];\\n      } else {\\n        result[list[i][0]] = list[i][1];\\n      }\\n    }\\n    return result;\\n  };\\n\\n  // If the browser doesn't supply us with indexOf (I'm looking at you, **MSIE**),\\n  // we need this function. Return the position of the first occurrence of an\\n  // item in an array, or -1 if the item is not included in the array.\\n  // Delegates to **ECMAScript 5**'s native `indexOf` if available.\\n  // If the array is large and already in sort order, pass `true`\\n  // for **isSorted** to use binary search.\\n  _.indexOf = function(array, item, isSorted) {\\n    if (array == null) return -1;\\n    var i = 0, l = array.length;\\n    if (isSorted) {\\n      if (typeof isSorted == 'number') {\\n        i = (isSorted < 0 ? Math.max(0, l + isSorted) : isSorted);\\n      } else {\\n        i = _.sortedIndex(array, item);\\n        return array[i] === item ? i : -1;\\n      }\\n    }\\n    if (nativeIndexOf && array.indexOf === nativeIndexOf) return array.indexOf(item, isSorted);\\n    for (; i < l; i++) if (array[i] === item) return i;\\n    return -1;\\n  };\\n\\n  // Delegates to **ECMAScript 5**'s native `lastIndexOf` if available.\\n  _.lastIndexOf = function(array, item, from) {\\n    if (array == null) return -1;\\n    var hasIndex = from != null;\\n    if (nativeLastIndexOf && array.lastIndexOf === nativeLastIndexOf) {\\n      return hasIndex ? array.lastIndexOf(item, from) : array.lastIndexOf(item);\\n    }\\n    var i = (hasIndex ? from : array.length);\\n    while (i--) if (array[i] === item) return i;\\n    return -1;\\n  };\\n\\n  // Generate an integer Array containing an arithmetic progression. A port of\\n  // the native Python `range()` function. See\\n  // [the Python documentation](http://docs.python.org/library/functions.html#range).\\n  _.range = function(start, stop, step) {\\n    if (arguments.length <= 1) {\\n      stop = start || 0;\\n      start = 0;\\n    }\\n    step = arguments[2] || 1;\\n\\n    var len = Math.max(Math.ceil((stop - start) / step), 0);\\n    var idx = 0;\\n    var range = new Array(len);\\n\\n    while(idx < len) {\\n      range[idx++] = start;\\n      start += step;\\n    }\\n\\n    return range;\\n  };\\n\\n  // Function (ahem) Functions\\n  // ------------------\\n\\n  // Create a function bound to a given object (assigning `this`, and arguments,\\n  // optionally). Delegates to **ECMAScript 5**'s native `Function.bind` if\\n  // available.\\n  _.bind = function(func, context) {\\n    if (func.bind === nativeBind && nativeBind) return nativeBind.apply(func, slice.call(arguments, 1));\\n    var args = slice.call(arguments, 2);\\n    return function() {\\n      return func.apply(context, args.concat(slice.call(arguments)));\\n    };\\n  };\\n\\n  // Partially apply a function by creating a version that has had some of its\\n  // arguments pre-filled, without changing its dynamic `this` context.\\n  _.partial = function(func) {\\n    var args = slice.call(arguments, 1);\\n    return function() {\\n      return func.apply(this, args.concat(slice.call(arguments)));\\n    };\\n  };\\n\\n  // Bind all of an object's methods to that object. Useful for ensuring that\\n  // all callbacks defined on an object belong to it.\\n  _.bindAll = function(obj) {\\n    var funcs = slice.call(arguments, 1);\\n    if (funcs.length === 0) funcs = _.functions(obj);\\n    each(funcs, function(f) { obj[f] = _.bind(obj[f], obj); });\\n    return obj;\\n  };\\n\\n  // Memoize an expensive function by storing its results.\\n  _.memoize = function(func, hasher) {\\n    var memo = {};\\n    hasher || (hasher = _.identity);\\n    return function() {\\n      var key = hasher.apply(this, arguments);\\n      return _.has(memo, key) ? memo[key] : (memo[key] = func.apply(this, arguments));\\n    };\\n  };\\n\\n  // Delays a function for the given number of milliseconds, and then calls\\n  // it with the arguments supplied.\\n  _.delay = function(func, wait) {\\n    var args = slice.call(arguments, 2);\\n    return setTimeout(function(){ return func.apply(null, args); }, wait);\\n  };\\n\\n  // Defers a function, scheduling it to run after the current call stack has\\n  // cleared.\\n  _.defer = function(func) {\\n    return _.delay.apply(_, [func, 1].concat(slice.call(arguments, 1)));\\n  };\\n\\n  // Returns a function, that, when invoked, will only be triggered at most once\\n  // during a given window of time.\\n  _.throttle = function(func, wait) {\\n    var context, args, timeout, result;\\n    var previous = 0;\\n    var later = function() {\\n      previous = new Date;\\n      timeout = null;\\n      result = func.apply(context, args);\\n    };\\n    return function() {\\n      var now = new Date;\\n      var remaining = wait - (now - previous);\\n      context = this;\\n      args = arguments;\\n      if (remaining <= 0) {\\n        clearTimeout(timeout);\\n        timeout = null;\\n        previous = now;\\n        result = func.apply(context, args);\\n      } else if (!timeout) {\\n        timeout = setTimeout(later, remaining);\\n      }\\n      return result;\\n    };\\n  };\\n\\n  // Returns a function, that, as long as it continues to be invoked, will not\\n  // be triggered. The function will be called after it stops being called for\\n  // N milliseconds. If `immediate` is passed, trigger the function on the\\n  // leading edge, instead of the trailing.\\n  _.debounce = function(func, wait, immediate) {\\n    var timeout, result;\\n    return function() {\\n      var context = this, args = arguments;\\n      var later = function() {\\n        timeout = null;\\n        if (!immediate) result = func.apply(context, args);\\n      };\\n      var callNow = immediate && !timeout;\\n      clearTimeout(timeout);\\n      timeout = setTimeout(later, wait);\\n      if (callNow) result = func.apply(context, args);\\n      return result;\\n    };\\n  };\\n\\n  // Returns a function that will be executed at most one time, no matter how\\n  // often you call it. Useful for lazy initialization.\\n  _.once = function(func) {\\n    var ran = false, memo;\\n    return function() {\\n      if (ran) return memo;\\n      ran = true;\\n      memo = func.apply(this, arguments);\\n      func = null;\\n      return memo;\\n    };\\n  };\\n\\n  // Returns the first function passed as an argument to the second,\\n  // allowing you to adjust arguments, run code before and after, and\\n  // conditionally execute the original function.\\n  _.wrap = function(func, wrapper) {\\n    return function() {\\n      var args = [func];\\n      push.apply(args, arguments);\\n      return wrapper.apply(this, args);\\n    };\\n  };\\n\\n  // Returns a function that is the composition of a list of functions, each\\n  // consuming the return value of the function that follows.\\n  _.compose = function() {\\n    var funcs = arguments;\\n    return function() {\\n      var args = arguments;\\n      for (var i = funcs.length - 1; i >= 0; i--) {\\n        args = [funcs[i].apply(this, args)];\\n      }\\n      return args[0];\\n    };\\n  };\\n\\n  // Returns a function that will only be executed after being called N times.\\n  _.after = function(times, func) {\\n    if (times <= 0) return func();\\n    return function() {\\n      if (--times < 1) {\\n        return func.apply(this, arguments);\\n      }\\n    };\\n  };\\n\\n  // Object Functions\\n  // ----------------\\n\\n  // Retrieve the names of an object's properties.\\n  // Delegates to **ECMAScript 5**'s native `Object.keys`\\n  _.keys = nativeKeys || function(obj) {\\n    if (obj !== Object(obj)) throw new TypeError('Invalid object');\\n    var keys = [];\\n    for (var key in obj) if (_.has(obj, key)) keys[keys.length] = key;\\n    return keys;\\n  };\\n\\n  // Retrieve the values of an object's properties.\\n  _.values = function(obj) {\\n    var values = [];\\n    for (var key in obj) if (_.has(obj, key)) values.push(obj[key]);\\n    return values;\\n  };\\n\\n  // Convert an object into a list of `[key, value]` pairs.\\n  _.pairs = function(obj) {\\n    var pairs = [];\\n    for (var key in obj) if (_.has(obj, key)) pairs.push([key, obj[key]]);\\n    return pairs;\\n  };\\n\\n  // Invert the keys and values of an object. The values must be serializable.\\n  _.invert = function(obj) {\\n    var result = {};\\n    for (var key in obj) if (_.has(obj, key)) result[obj[key]] = key;\\n    return result;\\n  };\\n\\n  // Return a sorted list of the function names available on the object.\\n  // Aliased as `methods`\\n  _.functions = _.methods = function(obj) {\\n    var names = [];\\n    for (var key in obj) {\\n      if (_.isFunction(obj[key])) names.push(key);\\n    }\\n    return names.sort();\\n  };\\n\\n  // Extend a given object with all the properties in passed-in object(s).\\n  _.extend = function(obj) {\\n    each(slice.call(arguments, 1), function(source) {\\n      if (source) {\\n        for (var prop in source) {\\n          obj[prop] = source[prop];\\n        }\\n      }\\n    });\\n    return obj;\\n  };\\n\\n  // Return a copy of the object only containing the whitelisted properties.\\n  _.pick = function(obj) {\\n    var copy = {};\\n    var keys = concat.apply(ArrayProto, slice.call(arguments, 1));\\n    each(keys, function(key) {\\n      if (key in obj) copy[key] = obj[key];\\n    });\\n    return copy;\\n  };\\n\\n   // Return a copy of the object without the blacklisted properties.\\n  _.omit = function(obj) {\\n    var copy = {};\\n    var keys = concat.apply(ArrayProto, slice.call(arguments, 1));\\n    for (var key in obj) {\\n      if (!_.contains(keys, key)) copy[key] = obj[key];\\n    }\\n    return copy;\\n  };\\n\\n  // Fill in a given object with default properties.\\n  _.defaults = function(obj) {\\n    each(slice.call(arguments, 1), function(source) {\\n      if (source) {\\n        for (var prop in source) {\\n          if (obj[prop] == null) obj[prop] = source[prop];\\n        }\\n      }\\n    });\\n    return obj;\\n  };\\n\\n  // Create a (shallow-cloned) duplicate of an object.\\n  _.clone = function(obj) {\\n    if (!_.isObject(obj)) return obj;\\n    return _.isArray(obj) ? obj.slice() : _.extend({}, obj);\\n  };\\n\\n  // Invokes interceptor with the obj, and then returns obj.\\n  // The primary purpose of this method is to \\\"tap into\\\" a method chain, in\\n  // order to perform operations on intermediate results within the chain.\\n  _.tap = function(obj, interceptor) {\\n    interceptor(obj);\\n    return obj;\\n  };\\n\\n  // Internal recursive comparison function for `isEqual`.\\n  var eq = function(a, b, aStack, bStack) {\\n    // Identical objects are equal. `0 === -0`, but they aren't identical.\\n    // See the Harmony `egal` proposal: http://wiki.ecmascript.org/doku.php?id=harmony:egal.\\n    if (a === b) return a !== 0 || 1 / a == 1 / b;\\n    // A strict comparison is necessary because `null == undefined`.\\n    if (a == null || b == null) return a === b;\\n    // Unwrap any wrapped objects.\\n    if (a instanceof _) a = a._wrapped;\\n    if (b instanceof _) b = b._wrapped;\\n    // Compare `[[Class]]` names.\\n    var className = toString.call(a);\\n    if (className != toString.call(b)) return false;\\n    switch (className) {\\n      // Strings, numbers, dates, and booleans are compared by value.\\n      case '[object String]':\\n        // Primitives and their corresponding object wrappers are equivalent; thus, `\\\"5\\\"` is\\n        // equivalent to `new String(\\\"5\\\")`.\\n        return a == String(b);\\n      case '[object Number]':\\n        // `NaN`s are equivalent, but non-reflexive. An `egal` comparison is performed for\\n        // other numeric values.\\n        return a != +a ? b != +b : (a == 0 ? 1 / a == 1 / b : a == +b);\\n      case '[object Date]':\\n      case '[object Boolean]':\\n        // Coerce dates and booleans to numeric primitive values. Dates are compared by their\\n        // millisecond representations. Note that invalid dates with millisecond representations\\n        // of `NaN` are not equivalent.\\n        return +a == +b;\\n      // RegExps are compared by their source patterns and flags.\\n      case '[object RegExp]':\\n        return a.source == b.source &&\\n               a.global == b.global &&\\n               a.multiline == b.multiline &&\\n               a.ignoreCase == b.ignoreCase;\\n    }\\n    if (typeof a != 'object' || typeof b != 'object') return false;\\n    // Assume equality for cyclic structures. The algorithm for detecting cyclic\\n    // structures is adapted from ES 5.1 section 15.12.3, abstract operation `JO`.\\n    var length = aStack.length;\\n    while (length--) {\\n      // Linear search. Performance is inversely proportional to the number of\\n      // unique nested structures.\\n      if (aStack[length] == a) return bStack[length] == b;\\n    }\\n    // Add the first object to the stack of traversed objects.\\n    aStack.push(a);\\n    bStack.push(b);\\n    var size = 0, result = true;\\n    // Recursively compare objects and arrays.\\n    if (className == '[object Array]') {\\n      // Compare array lengths to determine if a deep comparison is necessary.\\n      size = a.length;\\n      result = size == b.length;\\n      if (result) {\\n        // Deep compare the contents, ignoring non-numeric properties.\\n        while (size--) {\\n          if (!(result = eq(a[size], b[size], aStack, bStack))) break;\\n        }\\n      }\\n    } else {\\n      // Objects with different constructors are not equivalent, but `Object`s\\n      // from different frames are.\\n      var aCtor = a.constructor, bCtor = b.constructor;\\n      if (aCtor !== bCtor && !(_.isFunction(aCtor) && (aCtor instanceof aCtor) &&\\n                               _.isFunction(bCtor) && (bCtor instanceof bCtor))) {\\n        return false;\\n      }\\n      // Deep compare objects.\\n      for (var key in a) {\\n        if (_.has(a, key)) {\\n          // Count the expected number of properties.\\n          size++;\\n          // Deep compare each member.\\n          if (!(result = _.has(b, key) && eq(a[key], b[key], aStack, bStack))) break;\\n        }\\n      }\\n      // Ensure that both objects contain the same number of properties.\\n      if (result) {\\n        for (key in b) {\\n          if (_.has(b, key) && !(size--)) break;\\n        }\\n        result = !size;\\n      }\\n    }\\n    // Remove the first object from the stack of traversed objects.\\n    aStack.pop();\\n    bStack.pop();\\n    return result;\\n  };\\n\\n  // Perform a deep comparison to check if two objects are equal.\\n  _.isEqual = function(a, b) {\\n    return eq(a, b, [], []);\\n  };\\n\\n  // Is a given array, string, or object empty?\\n  // An \\\"empty\\\" object has no enumerable own-properties.\\n  _.isEmpty = function(obj) {\\n    if (obj == null) return true;\\n    if (_.isArray(obj) || _.isString(obj)) return obj.length === 0;\\n    for (var key in obj) if (_.has(obj, key)) return false;\\n    return true;\\n  };\\n\\n  // Is a given value a DOM element?\\n  _.isElement = function(obj) {\\n    return !!(obj && obj.nodeType === 1);\\n  };\\n\\n  // Is a given value an array?\\n  // Delegates to ECMA5's native Array.isArray\\n  _.isArray = nativeIsArray || function(obj) {\\n    return toString.call(obj) == '[object Array]';\\n  };\\n\\n  // Is a given variable an object?\\n  _.isObject = function(obj) {\\n    return obj === Object(obj);\\n  };\\n\\n  // Add some isType methods: isArguments, isFunction, isString, isNumber, isDate, isRegExp.\\n  each(['Arguments', 'Function', 'String', 'Number', 'Date', 'RegExp'], function(name) {\\n    _['is' + name] = function(obj) {\\n      return toString.call(obj) == '[object ' + name + ']';\\n    };\\n  });\\n\\n  // Define a fallback version of the method in browsers (ahem, IE), where\\n  // there isn't any inspectable \\\"Arguments\\\" type.\\n  if (!_.isArguments(arguments)) {\\n    _.isArguments = function(obj) {\\n      return !!(obj && _.has(obj, 'callee'));\\n    };\\n  }\\n\\n  // Optimize `isFunction` if appropriate.\\n  if (typeof (/./) !== 'function') {\\n    _.isFunction = function(obj) {\\n      return typeof obj === 'function';\\n    };\\n  }\\n\\n  // Is a given object a finite number?\\n  _.isFinite = function(obj) {\\n    return isFinite(obj) && !isNaN(parseFloat(obj));\\n  };\\n\\n  // Is the given value `NaN`? (NaN is the only number which does not equal itself).\\n  _.isNaN = function(obj) {\\n    return _.isNumber(obj) && obj != +obj;\\n  };\\n\\n  // Is a given value a boolean?\\n  _.isBoolean = function(obj) {\\n    return obj === true || obj === false || toString.call(obj) == '[object Boolean]';\\n  };\\n\\n  // Is a given value equal to null?\\n  _.isNull = function(obj) {\\n    return obj === null;\\n  };\\n\\n  // Is a given variable undefined?\\n  _.isUndefined = function(obj) {\\n    return obj === void 0;\\n  };\\n\\n  // Shortcut function for checking if an object has a given property directly\\n  // on itself (in other words, not on a prototype).\\n  _.has = function(obj, key) {\\n    return hasOwnProperty.call(obj, key);\\n  };\\n\\n  // Utility Functions\\n  // -----------------\\n\\n  // Run Underscore.js in *noConflict* mode, returning the `_` variable to its\\n  // previous owner. Returns a reference to the Underscore object.\\n  _.noConflict = function() {\\n    root._ = previousUnderscore;\\n    return this;\\n  };\\n\\n  // Keep the identity function around for default iterators.\\n  _.identity = function(value) {\\n    return value;\\n  };\\n\\n  // Run a function **n** times.\\n  _.times = function(n, iterator, context) {\\n    var accum = Array(n);\\n    for (var i = 0; i < n; i++) accum[i] = iterator.call(context, i);\\n    return accum;\\n  };\\n\\n  // Return a random integer between min and max (inclusive).\\n  _.random = function(min, max) {\\n    if (max == null) {\\n      max = min;\\n      min = 0;\\n    }\\n    return min + Math.floor(Math.random() * (max - min + 1));\\n  };\\n\\n  // List of HTML entities for escaping.\\n  var entityMap = {\\n    escape: {\\n      '&': '&amp;',\\n      '<': '&lt;',\\n      '>': '&gt;',\\n      '\\\"': '&quot;',\\n      \\\"'\\\": '&#x27;',\\n      '/': '&#x2F;'\\n    }\\n  };\\n  entityMap.unescape = _.invert(entityMap.escape);\\n\\n  // Regexes containing the keys and values listed immediately above.\\n  var entityRegexes = {\\n    escape:   new RegExp('[' + _.keys(entityMap.escape).join('') + ']', 'g'),\\n    unescape: new RegExp('(' + _.keys(entityMap.unescape).join('|') + ')', 'g')\\n  };\\n\\n  // Functions for escaping and unescaping strings to/from HTML interpolation.\\n  _.each(['escape', 'unescape'], function(method) {\\n    _[method] = function(string) {\\n      if (string == null) return '';\\n      return ('' + string).replace(entityRegexes[method], function(match) {\\n        return entityMap[method][match];\\n      });\\n    };\\n  });\\n\\n  // If the value of the named property is a function then invoke it;\\n  // otherwise, return it.\\n  _.result = function(object, property) {\\n    if (object == null) return null;\\n    var value = object[property];\\n    return _.isFunction(value) ? value.call(object) : value;\\n  };\\n\\n  // Add your own custom functions to the Underscore object.\\n  _.mixin = function(obj) {\\n    each(_.functions(obj), function(name){\\n      var func = _[name] = obj[name];\\n      _.prototype[name] = function() {\\n        var args = [this._wrapped];\\n        push.apply(args, arguments);\\n        return result.call(this, func.apply(_, args));\\n      };\\n    });\\n  };\\n\\n  // Generate a unique integer id (unique within the entire client session).\\n  // Useful for temporary DOM ids.\\n  var idCounter = 0;\\n  _.uniqueId = function(prefix) {\\n    var id = ++idCounter + '';\\n    return prefix ? prefix + id : id;\\n  };\\n\\n  // By default, Underscore uses ERB-style template delimiters, change the\\n  // following template settings to use alternative delimiters.\\n  _.templateSettings = {\\n    evaluate    : /<%([\\\\s\\\\S]+?)%>/g,\\n    interpolate : /<%=([\\\\s\\\\S]+?)%>/g,\\n    escape      : /<%-([\\\\s\\\\S]+?)%>/g\\n  };\\n\\n  // When customizing `templateSettings`, if you don't want to define an\\n  // interpolation, evaluation or escaping regex, we need one that is\\n  // guaranteed not to match.\\n  var noMatch = /(.)^/;\\n\\n  // Certain characters need to be escaped so that they can be put into a\\n  // string literal.\\n  var escapes = {\\n    \\\"'\\\":      \\\"'\\\",\\n    '\\\\\\\\':     '\\\\\\\\',\\n    '\\\\r':     'r',\\n    '\\\\n':     'n',\\n    '\\\\t':     't',\\n    '\\\\u2028': 'u2028',\\n    '\\\\u2029': 'u2029'\\n  };\\n\\n  var escaper = /\\\\\\\\|'|\\\\r|\\\\n|\\\\t|\\\\u2028|\\\\u2029/g;\\n\\n  // JavaScript micro-templating, similar to John Resig's implementation.\\n  // Underscore templating handles arbitrary delimiters, preserves whitespace,\\n  // and correctly escapes quotes within interpolated code.\\n  _.template = function(text, data, settings) {\\n    var render;\\n    settings = _.defaults({}, settings, _.templateSettings);\\n\\n    // Combine delimiters into one regular expression via alternation.\\n    var matcher = new RegExp([\\n      (settings.escape || noMatch).source,\\n      (settings.interpolate || noMatch).source,\\n      (settings.evaluate || noMatch).source\\n    ].join('|') + '|$', 'g');\\n\\n    // Compile the template source, escaping string literals appropriately.\\n    var index = 0;\\n    var source = \\\"__p+='\\\";\\n    text.replace(matcher, function(match, escape, interpolate, evaluate, offset) {\\n      source += text.slice(index, offset)\\n        .replace(escaper, function(match) { return '\\\\\\\\' + escapes[match]; });\\n\\n      if (escape) {\\n        source += \\\"'+\\\\n((__t=(\\\" + escape + \\\"))==null?'':_.escape(__t))+\\\\n'\\\";\\n      }\\n      if (interpolate) {\\n        source += \\\"'+\\\\n((__t=(\\\" + interpolate + \\\"))==null?'':__t)+\\\\n'\\\";\\n      }\\n      if (evaluate) {\\n        source += \\\"';\\\\n\\\" + evaluate + \\\"\\\\n__p+='\\\";\\n      }\\n      index = offset + match.length;\\n      return match;\\n    });\\n    source += \\\"';\\\\n\\\";\\n\\n    // If a variable is not specified, place data values in local scope.\\n    if (!settings.variable) source = 'with(obj||{}){\\\\n' + source + '}\\\\n';\\n\\n    source = \\\"var __t,__p='',__j=Array.prototype.join,\\\" +\\n      \\\"print=function(){__p+=__j.call(arguments,'');};\\\\n\\\" +\\n      source + \\\"return __p;\\\\n\\\";\\n\\n    try {\\n      render = new Function(settings.variable || 'obj', '_', source);\\n    } catch (e) {\\n      e.source = source;\\n      throw e;\\n    }\\n\\n    if (data) return render(data, _);\\n    var template = function(data) {\\n      return render.call(this, data, _);\\n    };\\n\\n    // Provide the compiled function source as a convenience for precompilation.\\n    template.source = 'function(' + (settings.variable || 'obj') + '){\\\\n' + source + '}';\\n\\n    return template;\\n  };\\n\\n  // Add a \\\"chain\\\" function, which will delegate to the wrapper.\\n  _.chain = function(obj) {\\n    return _(obj).chain();\\n  };\\n\\n  // OOP\\n  // ---------------\\n  // If Underscore is called as a function, it returns a wrapped object that\\n  // can be used OO-style. This wrapper holds altered versions of all the\\n  // underscore functions. Wrapped objects may be chained.\\n\\n  // Helper function to continue chaining intermediate results.\\n  var result = function(obj) {\\n    return this._chain ? _(obj).chain() : obj;\\n  };\\n\\n  // Add all of the Underscore functions to the wrapper object.\\n  _.mixin(_);\\n\\n  // Add all mutator Array functions to the wrapper.\\n  each(['pop', 'push', 'reverse', 'shift', 'sort', 'splice', 'unshift'], function(name) {\\n    var method = ArrayProto[name];\\n    _.prototype[name] = function() {\\n      var obj = this._wrapped;\\n      method.apply(obj, arguments);\\n      if ((name == 'shift' || name == 'splice') && obj.length === 0) delete obj[0];\\n      return result.call(this, obj);\\n    };\\n  });\\n\\n  // Add all accessor Array functions to the wrapper.\\n  each(['concat', 'join', 'slice'], function(name) {\\n    var method = ArrayProto[name];\\n    _.prototype[name] = function() {\\n      return result.call(this, method.apply(this._wrapped, arguments));\\n    };\\n  });\\n\\n  _.extend(_.prototype, {\\n\\n    // Start chaining a wrapped Underscore object.\\n    chain: function() {\\n      this._chain = true;\\n      return this;\\n    },\\n\\n    // Extracts the result from a wrapped and chained object.\\n    value: function() {\\n      return this._wrapped;\\n    }\\n\\n  });\\n\\n}).call(this);\\n\\n/*global _: false, $: false, localStorage: false, process: true,\\n  XMLHttpRequest: false, XDomainRequest: false, exports: false,\\n  require: false */\\n(function(root) {\\n  root.Parse = root.Parse || {};\\n  /**\\n   * Contains all Parse API classes and functions.\\n   * @name Parse\\n   * @namespace\\n   *\\n   * Contains all Parse API classes and functions.\\n   */\\n  var Parse = root.Parse;\\n\\n  // Import Parse's local copy of underscore.\\n  if (typeof(exports) !== \\\"undefined\\\" && exports._) {\\n    // We're running in Node.js.  Pull in the dependencies.\\n    Parse._ = exports._.noConflict();\\n    Parse.localStorage = require('localStorage');\\n    Parse.XMLHttpRequest = require('xmlhttprequest').XMLHttpRequest;\\n    exports.Parse = Parse;\\n  } else {\\n    Parse._ = _.noConflict();\\n    if (typeof(localStorage) !== \\\"undefined\\\") {\\n      Parse.localStorage = localStorage;\\n    }\\n    if (typeof(XMLHttpRequest) !== \\\"undefined\\\") {\\n      Parse.XMLHttpRequest = XMLHttpRequest;\\n    }\\n  }\\n\\n  // If jQuery or Zepto has been included, grab a reference to it.\\n  if (typeof($) !== \\\"undefined\\\") {\\n    Parse.$ = $;\\n  }\\n\\n  // Helpers\\n  // -------\\n\\n  // Shared empty constructor function to aid in prototype-chain creation.\\n  var EmptyConstructor = function() {};\\n\\n\\n  // Helper function to correctly set up the prototype chain, for subclasses.\\n  // Similar to `goog.inherits`, but uses a hash of prototype properties and\\n  // class properties to be extended.\\n  var inherits = function(parent, protoProps, staticProps) {\\n    var child;\\n\\n    // The constructor function for the new subclass is either defined by you\\n    // (the \\\"constructor\\\" property in your `extend` definition), or defaulted\\n    // by us to simply call the parent's constructor.\\n    if (protoProps && protoProps.hasOwnProperty('constructor')) {\\n      child = protoProps.constructor;\\n    } else {\\n      /** @ignore */\\n      child = function(){ parent.apply(this, arguments); };\\n    }\\n\\n    // Inherit class (static) properties from parent.\\n    Parse._.extend(child, parent);\\n\\n    // Set the prototype chain to inherit from `parent`, without calling\\n    // `parent`'s constructor function.\\n    EmptyConstructor.prototype = parent.prototype;\\n    child.prototype = new EmptyConstructor();\\n\\n    // Add prototype properties (instance properties) to the subclass,\\n    // if supplied.\\n    if (protoProps) {\\n      Parse._.extend(child.prototype, protoProps);\\n    }\\n\\n    // Add static properties to the constructor function, if supplied.\\n    if (staticProps) {\\n      Parse._.extend(child, staticProps);\\n    }\\n\\n    // Correctly set child's `prototype.constructor`.\\n    child.prototype.constructor = child;\\n\\n    // Set a convenience property in case the parent's prototype is\\n    // needed later.\\n    child.__super__ = parent.prototype;\\n\\n    return child;\\n  };\\n\\n  // Set the server for Parse to talk to.\\n  Parse.serverURL = \\\"https://api.parse.com\\\";\\n\\n  // Check whether we are running in Node.js.\\n  if (typeof(process) !== \\\"undefined\\\" &&\\n      process.versions &&\\n      process.versions.node) {\\n    Parse._isNode = true;\\n  }\\n\\n  /**\\n   * Call this method first to set up your authentication tokens for Parse.\\n   * You can get your keys from the Data Browser on parse.com.\\n   * @param {String} applicationId Your Parse Application ID.\\n   * @param {String} javaScriptKey Your Parse JavaScript Key.\\n   * @param {String} masterKey (optional) Your Parse Master Key. (Node.js only!)\\n   */\\n  Parse.initialize = function(applicationId, javaScriptKey, masterKey) {\\n    if (masterKey) {\\n      throw \\\"Parse.initialize() was passed a Master Key, which is only \\\" +\\n        \\\"allowed from within Node.js.\\\";\\n    }\\n    Parse._initialize(applicationId, javaScriptKey);\\n  };\\n\\n  /**\\n   * Call this method first to set up master authentication tokens for Parse.\\n   * This method is for Parse's own private use.\\n   * @param {String} applicationId Your Parse Application ID.\\n   * @param {String} javaScriptKey Your Parse JavaScript Key.\\n   * @param {String} masterKey Your Parse Master Key.\\n   */\\n  Parse._initialize = function(applicationId, javaScriptKey, masterKey) {\\n    Parse.applicationId = applicationId;\\n    Parse.javaScriptKey = javaScriptKey;\\n    Parse.masterKey = masterKey;\\n    Parse._useMasterKey = false;\\n  };\\n\\n  // If we're running in node.js, allow using the master key.\\n  if (Parse._isNode) {\\n    Parse.initialize = Parse._initialize;\\n\\n    Parse.Cloud = Parse.Cloud || {};\\n    /**\\n     * Switches the Parse SDK to using the Master key.  The Master key grants\\n     * priveleged access to the data in Parse and can be used to bypass ACLs and\\n     * other restrictions that are applied to the client SDKs.\\n     * <p><strong><em>Available in Cloud Code and Node.js only.</em></strong>\\n     * </p>\\n     */\\n    Parse.Cloud.useMasterKey = function() {\\n      Parse._useMasterKey = true;\\n    };\\n  }\\n\\n  /**\\n   * Returns prefix for localStorage keys used by this instance of Parse.\\n   * @param {String} path The relative suffix to append to it.\\n   *     null or undefined is treated as the empty string.\\n   * @return {String} The full key name.\\n   */\\n  Parse._getParsePath = function(path) {\\n    if (!Parse.applicationId) {\\n      throw \\\"You need to call Parse.initialize before using Parse.\\\";\\n    }\\n    if (!path) {\\n      path = \\\"\\\";\\n    }\\n    if (!Parse._.isString(path)) {\\n      throw \\\"Tried to get a localStorage path that wasn't a String.\\\";\\n    }\\n    if (path[0] === \\\"/\\\") {\\n      path = path.substring(1);\\n    }\\n    return \\\"Parse/\\\" + Parse.applicationId + \\\"/\\\" + path;\\n  };\\n\\n  /**\\n   * Returns the unique string for this app on this machine.\\n   * Gets reset when localStorage is cleared.\\n   */\\n  Parse._installationId = null;\\n  Parse._getInstallationId = function() {\\n    // See if it's cached in RAM.\\n    if (Parse._installationId) {\\n      return Parse._installationId;\\n    }\\n\\n    // Try to get it from localStorage.\\n    var path = Parse._getParsePath(\\\"installationId\\\");\\n    Parse._installationId = Parse.localStorage.getItem(path);\\n\\n    if (!Parse._installationId || Parse._installationId === \\\"\\\") {\\n      // It wasn't in localStorage, so create a new one.\\n      var hexOctet = function() {\\n        return Math.floor((1+Math.random())*0x10000).toString(16).substring(1);\\n      };\\n      Parse._installationId = (\\n        hexOctet() + hexOctet() + \\\"-\\\" +\\n        hexOctet() + \\\"-\\\" +\\n        hexOctet() + \\\"-\\\" +\\n        hexOctet() + \\\"-\\\" +\\n        hexOctet() + hexOctet() + hexOctet());\\n      Parse.localStorage.setItem(path, Parse._installationId);\\n    }\\n\\n    return Parse._installationId;\\n  };\\n\\n  Parse._parseDate = function(iso8601) {\\n    var regexp = new RegExp(\\n      \\\"^([0-9]{1,4})-([0-9]{1,2})-([0-9]{1,2})\\\" + \\\"T\\\" +\\n      \\\"([0-9]{1,2}):([0-9]{1,2}):([0-9]{1,2})\\\" +\\n      \\\"(.([0-9]+))?\\\" + \\\"Z$\\\");\\n    var match = regexp.exec(iso8601);\\n    if (!match) {\\n      var date = new Date(iso8601);\\n      return date.getTime() === NaN ? null : date;\\n    }\\n\\n    var year = match[1] || 0;\\n    var month = (match[2] || 1) - 1;\\n    var day = match[3] || 0;\\n    var hour = match[4] || 0;\\n    var minute = match[5] || 0;\\n    var second = match[6] || 0;\\n    var milli = match[8] || 0;\\n\\n    return new Date(Date.UTC(year, month, day, hour, minute, second, milli));\\n  };\\n\\n  Parse._ajaxIE8 = function(method, url, data) {\\n    var promise = new Parse.Promise();\\n    var xdr = new XDomainRequest();\\n    xdr.onload = function() {\\n      var response;\\n      try {\\n        response = JSON.parse(xdr.responseText);\\n      } catch (e) {\\n        promise.reject(e);\\n      }\\n      if (response) {\\n        promise.resolve(response);\\n      }\\n    };\\n    xdr.onerror = xdr.ontimeout = function() {\\n      // Let's fake a real error message.\\n      var fakeResponse = {\\n        responseText: JSON.stringify({\\n          code: Parse.Error.X_DOMAIN_REQUEST,\\n          error: \\\"IE's XDomainRequest does not supply error info.\\\"\\n        })\\n      };\\n      promise.reject(fakeResponse);\\n    };\\n    xdr.onprogress = function() {};\\n    xdr.open(method, url);\\n    xdr.send(data);\\n    return promise;\\n  };\\n\\n  Parse._useXDomainRequest = function() {\\n    if (typeof(XDomainRequest) !== \\\"undefined\\\") {\\n      // We're in IE 8+.\\n      if ('withCredentials' in new XMLHttpRequest()) {\\n        // We're in IE 10+.\\n        return false;\\n      }\\n      return true;\\n    }\\n    return false;\\n  };\\n\\n\\n  Parse._ajax = function(method, url, data, success, error) {\\n    var options = {\\n      success: success,\\n      error: error\\n    };\\n\\n    if (Parse._useXDomainRequest()) {\\n      return Parse._ajaxIE8(method, url, data)._thenRunCallbacks(options);\\n    }\\n\\n    var promise = new Parse.Promise();\\n    var handled = false;\\n\\n    var xhr = new Parse.XMLHttpRequest();\\n    xhr.onreadystatechange = function() {\\n      if (xhr.readyState === 4) {\\n        if (handled) {\\n          return;\\n        }\\n        handled = true;\\n\\n        if (xhr.status >= 200 && xhr.status < 300) {\\n          var response;\\n          try {\\n            response = JSON.parse(xhr.responseText);\\n          } catch (e) {\\n            promise.reject(e);\\n          }\\n          if (response) {\\n            promise.resolve(response, xhr.status, xhr);\\n          }\\n        } else {\\n          promise.reject(xhr);\\n        }\\n      }\\n    };\\n    xhr.open(method, url, true);\\n    xhr.setRequestHeader(\\\"Content-Type\\\", \\\"text/plain\\\");  // avoid pre-flight.\\n    if (Parse._isNode) {\\n      // Add a special user agent just for request from node.js.\\n      xhr.setRequestHeader(\\\"User-Agent\\\",\\n                           \\\"Parse/\\\" + Parse.VERSION +\\n                           \\\" (NodeJS \\\" + process.versions.node + \\\")\\\");\\n    }\\n    xhr.send(data);\\n    return promise._thenRunCallbacks(options);\\n  };\\n\\n  // A self-propagating extend function.\\n  Parse._extend = function(protoProps, classProps) {\\n    var child = inherits(this, protoProps, classProps);\\n    child.extend = this.extend;\\n    return child;\\n  };\\n\\n  /**\\n   * Options:\\n   *   route: is classes, users, login, etc.\\n   *   objectId: null if there is no associated objectId.\\n   *   method: the http method for the REST API.\\n   *   dataObject: the payload as an object, or null if there is none.\\n   *   useMasterKey: overrides whether to use the master key if set.\\n   * @ignore\\n   */\\n  Parse._request = function(options) {\\n    var route = options.route;\\n    var className = options.className;\\n    var objectId = options.objectId;\\n    var method = options.method;\\n    var useMasterKey = options.useMasterKey;\\n    var sessionToken = options.sessionToken;\\n    var dataObject = options.data;\\n\\n    if (!Parse.applicationId) {\\n      throw \\\"You must specify your applicationId using Parse.initialize.\\\";\\n    }\\n\\n    if (!Parse.javaScriptKey && !Parse.masterKey) {\\n      throw \\\"You must specify a key using Parse.initialize.\\\";\\n    }\\n\\n\\n    if (!sessionToken) {\\n      // Use the current user session token if none was provided.\\n      var currentUser = Parse.User.current();\\n      if (currentUser && currentUser._sessionToken) {\\n        sessionToken = currentUser._sessionToken;\\n      }\\n    }\\n\\n\\n    if (route !== \\\"batch\\\" &&\\n        route !== \\\"classes\\\" &&\\n        route !== \\\"events\\\" &&\\n        route !== \\\"files\\\" &&\\n        route !== \\\"functions\\\" &&\\n        route !== \\\"login\\\" &&\\n        route !== \\\"push\\\" &&\\n        route !== \\\"requestPasswordReset\\\" &&\\n        route !== \\\"rest_verify_analytics\\\" &&\\n        route !== \\\"users\\\" &&\\n        route !== \\\"jobs\\\") {\\n      throw \\\"Bad route: '\\\" + route + \\\"'.\\\";\\n    }\\n\\n    var url = Parse.serverURL;\\n    if (url.charAt(url.length - 1) !== \\\"/\\\") {\\n      url += \\\"/\\\";\\n    }\\n    url += \\\"1/\\\" + route;\\n    if (className) {\\n      url += \\\"/\\\" + className;\\n    }\\n    if (objectId) {\\n      url += \\\"/\\\" + objectId;\\n    }\\n\\n    dataObject = Parse._.clone(dataObject || {});\\n    if (method !== \\\"POST\\\") {\\n      dataObject._method = method;\\n      method = \\\"POST\\\";\\n    }\\n\\n    if (Parse._.isUndefined(useMasterKey)) {\\n      useMasterKey = Parse._useMasterKey;\\n    }\\n\\n    dataObject._ApplicationId = Parse.applicationId;\\n    if (!useMasterKey) {\\n      dataObject._JavaScriptKey = Parse.javaScriptKey;\\n    } else {\\n      dataObject._MasterKey = Parse.masterKey;\\n    }\\n\\n    dataObject._ClientVersion = Parse.VERSION;\\n    dataObject._InstallationId = Parse._getInstallationId();\\n    if (sessionToken) {\\n      dataObject._SessionToken = sessionToken;\\n    }\\n    var data = JSON.stringify(dataObject);\\n\\n    return Parse._ajax(method, url, data).then(null, function(response) {\\n      // Transform the error into an instance of Parse.Error by trying to parse\\n      // the error string as JSON.\\n      var error;\\n      if (response && response.responseText) {\\n        try {\\n          var errorJSON = JSON.parse(response.responseText);\\n          error = new Parse.Error(errorJSON.code, errorJSON.error);\\n        } catch (e) {\\n          // If we fail to parse the error text, that's okay.\\n          error = new Parse.Error(\\n              Parse.Error.INVALID_JSON,\\n              \\\"Received an error with invalid JSON from Parse: \\\" +\\n                  response.responseText);\\n        }\\n      } else {\\n        error = new Parse.Error(\\n            Parse.Error.CONNECTION_FAILED,\\n            \\\"XMLHttpRequest failed: \\\" + JSON.stringify(response));\\n      }\\n      // By explicitly returning a rejected Promise, this will work with\\n      // either jQuery or Promises/A semantics.\\n      return Parse.Promise.error(error);\\n    });\\n  };\\n\\n  // Helper function to get a value from a Backbone object as a property\\n  // or as a function.\\n  Parse._getValue = function(object, prop) {\\n    if (!(object && object[prop])) {\\n      return null;\\n    }\\n    return Parse._.isFunction(object[prop]) ? object[prop]() : object[prop];\\n  };\\n\\n  /**\\n   * Converts a value in a Parse Object into the appropriate representation.\\n   * This is the JS equivalent of Java's Parse.maybeReferenceAndEncode(Object)\\n   * if seenObjects is falsey. Otherwise any Parse.Objects not in\\n   * seenObjects will be fully embedded rather than encoded\\n   * as a pointer.  This array will be used to prevent going into an infinite\\n   * loop because we have circular references.  If seenObjects\\n   * is set, then none of the Parse Objects that are serialized can be dirty.\\n   */\\n  Parse._encode = function(value, seenObjects, disallowObjects) {\\n    var _ = Parse._;\\n    if (value instanceof Parse.Object) {\\n      if (disallowObjects) {\\n        throw \\\"Parse.Objects not allowed here\\\";\\n      }\\n      if (!seenObjects || _.include(seenObjects, value) || !value._hasData) {\\n        return value._toPointer();\\n      }\\n      if (!value.dirty()) {\\n        seenObjects = seenObjects.concat(value);\\n        return Parse._encode(value._toFullJSON(seenObjects),\\n                             seenObjects,\\n                             disallowObjects);\\n      }\\n      throw \\\"Tried to save an object with a pointer to a new, unsaved object.\\\";\\n    }\\n    if (value instanceof Parse.ACL) {\\n      return value.toJSON();\\n    }\\n    if (_.isDate(value)) {\\n      return { \\\"__type\\\": \\\"Date\\\", \\\"iso\\\": value.toJSON() };\\n    }\\n    if (value instanceof Parse.GeoPoint) {\\n      return value.toJSON();\\n    }\\n    if (_.isArray(value)) {\\n      return _.map(value, function(x) {\\n        return Parse._encode(x, seenObjects, disallowObjects);\\n      });\\n    }\\n    if (_.isRegExp(value)) {\\n      return value.source;\\n    }\\n    if (value instanceof Parse.Relation) {\\n      return value.toJSON();\\n    }\\n    if (value instanceof Parse.Op) {\\n      return value.toJSON();\\n    }\\n    if (value instanceof Parse.File) {\\n      if (!value.url()) {\\n        throw \\\"Tried to save an object containing an unsaved file.\\\";\\n      }\\n      return {\\n        __type: \\\"File\\\",\\n        name: value.name(),\\n        url: value.url()\\n      };\\n    }\\n    if (_.isObject(value)) {\\n      var output = {};\\n      Parse._objectEach(value, function(v, k) {\\n        output[k] = Parse._encode(v, seenObjects, disallowObjects);\\n      });\\n      return output;\\n    }\\n    return value;\\n  };\\n\\n  /**\\n   * The inverse function of Parse._encode.\\n   * TODO: make decode not mutate value.\\n   */\\n  Parse._decode = function(key, value) {\\n    var _ = Parse._;\\n    if (!_.isObject(value)) {\\n      return value;\\n    }\\n    if (_.isArray(value)) {\\n      Parse._arrayEach(value, function(v, k) {\\n        value[k] = Parse._decode(k, v);\\n      });\\n      return value;\\n    }\\n    if (value instanceof Parse.Object) {\\n      return value;\\n    }\\n    if (value instanceof Parse.File) {\\n      return value;\\n    }\\n    if (value instanceof Parse.Op) {\\n      return value;\\n    }\\n    if (value.__op) {\\n      return Parse.Op._decode(value);\\n    }\\n    if (value.__type === \\\"Pointer\\\") {\\n      var pointer = Parse.Object._create(value.className);\\n      pointer._finishFetch({ objectId: value.objectId }, false);\\n      return pointer;\\n    }\\n    if (value.__type === \\\"Object\\\") {\\n      // It's an Object included in a query result.\\n      var className = value.className;\\n      delete value.__type;\\n      delete value.className;\\n      var object = Parse.Object._create(className);\\n      object._finishFetch(value, true);\\n      return object;\\n    }\\n    if (value.__type === \\\"Date\\\") {\\n      return Parse._parseDate(value.iso);\\n    }\\n    if (value.__type === \\\"GeoPoint\\\") {\\n      return new Parse.GeoPoint({\\n        latitude: value.latitude,\\n        longitude: value.longitude\\n      });\\n    }\\n    if (key === \\\"ACL\\\") {\\n      if (value instanceof Parse.ACL) {\\n        return value;\\n      }\\n      return new Parse.ACL(value);\\n    }\\n    if (value.__type === \\\"Relation\\\") {\\n      var relation = new Parse.Relation(null, key);\\n      relation.targetClassName = value.className;\\n      return relation;\\n    }\\n    if (value.__type === \\\"File\\\") {\\n      var file = new Parse.File(value.name);\\n      file._url = value.url;\\n      return file;\\n    }\\n    Parse._objectEach(value, function(v, k) {\\n      value[k] = Parse._decode(k, v);\\n    });\\n    return value;\\n  };\\n\\n  Parse._arrayEach = Parse._.each;\\n\\n  /**\\n   * Does a deep traversal of every item in object, calling func on every one.\\n   * @param {Object} object The object or array to traverse deeply.\\n   * @param {Function} func The function to call for every item. It will\\n   *     be passed the item as an argument. If it returns a truthy value, that\\n   *     value will replace the item in its parent container.\\n   * @returns {} the result of calling func on the top-level object itself.\\n   */\\n  Parse._traverse = function(object, func, seen) {\\n    if (object instanceof Parse.Object) {\\n      seen = seen || [];\\n      if (Parse._.indexOf(seen, object) >= 0) {\\n        // We've already visited this object in this call.\\n        return;\\n      }\\n      seen.push(object);\\n      Parse._traverse(object.attributes, func, seen);\\n      return func(object);\\n    }\\n    if (object instanceof Parse.Relation || object instanceof Parse.File) {\\n      // Nothing needs to be done, but we don't want to recurse into the\\n      // object's parent infinitely, so we catch this case.\\n      return func(object);\\n    }\\n    if (Parse._.isArray(object)) {\\n      Parse._.each(object, function(child, index) {\\n        var newChild = Parse._traverse(child, func, seen);\\n        if (newChild) {\\n          object[index] = newChild;\\n        }\\n      });\\n      return func(object);\\n    }\\n    if (Parse._.isObject(object)) {\\n      Parse._each(object, function(child, key) {\\n        var newChild = Parse._traverse(child, func, seen);\\n        if (newChild) {\\n          object[key] = newChild;\\n        }\\n      });\\n      return func(object);\\n    }\\n    return func(object);\\n  };\\n\\n  /**\\n   * This is like _.each, except:\\n   * * it doesn't work for so-called array-like objects,\\n   * * it does work for dictionaries with a \\\"length\\\" attribute.\\n   */\\n  Parse._objectEach = Parse._each = function(obj, callback) {\\n    var _ = Parse._;\\n    if (_.isObject(obj)) {\\n      _.each(_.keys(obj), function(key) {\\n        callback(obj[key], key);\\n      });\\n    } else {\\n      _.each(obj, callback);\\n    }\\n  };\\n\\n  // Helper function to check null or undefined.\\n  Parse._isNullOrUndefined = function(x) {\\n    return Parse._.isNull(x) || Parse._.isUndefined(x);\\n  };\\n}(this));\\n\\n(function(root) {\\n  root.Parse = root.Parse || {};\\n  var Parse = root.Parse;\\n  var _ = Parse._;\\n\\n  /**\\n   * @namespace Provides an interface to Parse's logging and analytics backend.\\n   */\\n  Parse.Analytics = Parse.Analytics || {};\\n\\n  _.extend(Parse.Analytics, /** @lends Parse.Analytics */ {\\n    /**\\n     * Tracks the occurrence of a custom event with additional dimensions.\\n     * Parse will store a data point at the time of invocation with the given\\n     * event name.\\n     *\\n     * Dimensions will allow segmentation of the occurrences of this custom\\n     * event. Keys and values should be {@code String}s, and will throw\\n     * otherwise.\\n     *\\n     * To track a user signup along with additional metadata, consider the\\n     * following:\\n     * <pre>\\n     * var dimensions = {\\n     *  gender: 'm',\\n     *  source: 'web',\\n     *  dayType: 'weekend'\\n     * };\\n     * Parse.Analytics.track('signup', dimensions);\\n     * </pre>\\n     *\\n     * There is a default limit of 4 dimensions per event tracked.\\n     *\\n     * @param {String} name The name of the custom event to report to Parse as\\n     * having happened.\\n     * @param {Object} dimensions The dictionary of information by which to\\n     * segment this event.\\n     * @return {Parse.Promise} A promise that is resolved when the round-trip\\n     * to the server completes.\\n     */\\n    track: function(name, dimensions) {\\n      name = name || '';\\n      name = name.replace(/^\\\\s*/, '');\\n      name = name.replace(/\\\\s*$/, '');\\n      if (name.length === 0) {\\n        throw 'A name for the custom event must be provided';\\n      }\\n\\n      _.each(dimensions, function(val, key) {\\n        if (!_.isString(key) || !_.isString(val)) {\\n          throw 'track() dimensions expects keys and values of type \\\"string\\\".';\\n        }\\n      });\\n\\n      return Parse._request({\\n        route: 'events',\\n        className: name,\\n        method: 'POST',\\n        data: { dimensions: dimensions }\\n      });\\n    }\\n  });\\n}(this));\\n\\n(function(root) {\\n  root.Parse = root.Parse || {};\\n  var Parse = root.Parse;\\n  var _ = Parse._;\\n\\n  /**\\n   * Constructs a new Parse.Error object with the given code and message.\\n   * @param {Number} code An error code constant from <code>Parse.Error</code>.\\n   * @param {String} message A detailed description of the error.\\n   * @class\\n   *\\n   * <p>Class used for all objects passed to error callbacks.</p>\\n   */\\n  Parse.Error = function(code, message) {\\n    this.code = code;\\n    this.message = message;\\n  };\\n\\n  _.extend(Parse.Error, /** @lends Parse.Error */ {\\n    /**\\n     * Error code indicating some error other than those enumerated here.\\n     * @constant\\n     */\\n    OTHER_CAUSE: -1,\\n\\n    /**\\n     * Error code indicating that something has gone wrong with the server.\\n     * If you get this error code, it is Parse's fault. Contact us at\\n     * https://parse.com/help\\n     * @constant\\n     */\\n    INTERNAL_SERVER_ERROR: 1,\\n\\n    /**\\n     * Error code indicating the connection to the Parse servers failed.\\n     * @constant\\n     */\\n    CONNECTION_FAILED: 100,\\n\\n    /**\\n     * Error code indicating the specified object doesn't exist.\\n     * @constant\\n     */\\n    OBJECT_NOT_FOUND: 101,\\n\\n    /**\\n     * Error code indicating you tried to query with a datatype that doesn't\\n     * support it, like exact matching an array or object.\\n     * @constant\\n     */\\n    INVALID_QUERY: 102,\\n\\n    /**\\n     * Error code indicating a missing or invalid classname. Classnames are\\n     * case-sensitive. They must start with a letter, and a-zA-Z0-9_ are the\\n     * only valid characters.\\n     * @constant\\n     */\\n    INVALID_CLASS_NAME: 103,\\n\\n    /**\\n     * Error code indicating an unspecified object id.\\n     * @constant\\n     */\\n    MISSING_OBJECT_ID: 104,\\n\\n    /**\\n     * Error code indicating an invalid key name. Keys are case-sensitive. They\\n     * must start with a letter, and a-zA-Z0-9_ are the only valid characters.\\n     * @constant\\n     */\\n    INVALID_KEY_NAME: 105,\\n\\n    /**\\n     * Error code indicating a malformed pointer. You should not see this unless\\n     * you have been mucking about changing internal Parse code.\\n     * @constant\\n     */\\n    INVALID_POINTER: 106,\\n\\n    /**\\n     * Error code indicating that badly formed JSON was received upstream. This\\n     * either indicates you have done something unusual with modifying how\\n     * things encode to JSON, or the network is failing badly.\\n     * @constant\\n     */\\n    INVALID_JSON: 107,\\n\\n    /**\\n     * Error code indicating that the feature you tried to access is only\\n     * available internally for testing purposes.\\n     * @constant\\n     */\\n    COMMAND_UNAVAILABLE: 108,\\n\\n    /**\\n     * You must call Parse.initialize before using the Parse library.\\n     * @constant\\n     */\\n    NOT_INITIALIZED: 109,\\n\\n    /**\\n     * Error code indicating that a field was set to an inconsistent type.\\n     * @constant\\n     */\\n    INCORRECT_TYPE: 111,\\n\\n    /**\\n     * Error code indicating an invalid channel name. A channel name is either\\n     * an empty string (the broadcast channel) or contains only a-zA-Z0-9_\\n     * characters and starts with a letter.\\n     * @constant\\n     */\\n    INVALID_CHANNEL_NAME: 112,\\n\\n    /**\\n     * Error code indicating that push is misconfigured.\\n     * @constant\\n     */\\n    PUSH_MISCONFIGURED: 115,\\n\\n    /**\\n     * Error code indicating that the object is too large.\\n     * @constant\\n     */\\n    OBJECT_TOO_LARGE: 116,\\n\\n    /**\\n     * Error code indicating that the operation isn't allowed for clients.\\n     * @constant\\n     */\\n    OPERATION_FORBIDDEN: 119,\\n\\n    /**\\n     * Error code indicating the result was not found in the cache.\\n     * @constant\\n     */\\n    CACHE_MISS: 120,\\n\\n    /**\\n     * Error code indicating that an invalid key was used in a nested\\n     * JSONObject.\\n     * @constant\\n     */\\n    INVALID_NESTED_KEY: 121,\\n\\n    /**\\n     * Error code indicating that an invalid filename was used for ParseFile.\\n     * A valid file name contains only a-zA-Z0-9_. characters and is between 1\\n     * and 128 characters.\\n     * @constant\\n     */\\n    INVALID_FILE_NAME: 122,\\n\\n    /**\\n     * Error code indicating an invalid ACL was provided.\\n     * @constant\\n     */\\n    INVALID_ACL: 123,\\n\\n    /**\\n     * Error code indicating that the request timed out on the server. Typically\\n     * this indicates that the request is too expensive to run.\\n     * @constant\\n     */\\n    TIMEOUT: 124,\\n\\n    /**\\n     * Error code indicating that the email address was invalid.\\n     * @constant\\n     */\\n    INVALID_EMAIL_ADDRESS: 125,\\n\\n    /**\\n     * Error code indicating a missing content type.\\n     * @constant\\n     */\\n    MISSING_CONTENT_TYPE: 126,\\n\\n    /**\\n     * Error code indicating a missing content length.\\n     * @constant\\n     */\\n    MISSING_CONTENT_LENGTH: 127,\\n\\n    /**\\n     * Error code indicating an invalid content length.\\n     * @constant\\n     */\\n    INVALID_CONTENT_LENGTH: 128,\\n\\n    /**\\n     * Error code indicating a file that was too large.\\n     * @constant\\n     */\\n    FILE_TOO_LARGE: 129,\\n\\n    /**\\n     * Error code indicating an error saving a file.\\n     * @constant\\n     */\\n    FILE_SAVE_ERROR: 130,\\n\\n    /**\\n     * Error code indicating an error deleting a file.\\n     * @constant\\n     */\\n    FILE_DELETE_ERROR: 153,\\n\\n    /**\\n     * Error code indicating that a unique field was given a value that is\\n     * already taken.\\n     * @constant\\n     */\\n    DUPLICATE_VALUE: 137,\\n\\n    /**\\n     * Error code indicating that a role's name is invalid.\\n     * @constant\\n     */\\n    INVALID_ROLE_NAME: 139,\\n\\n    /**\\n     * Error code indicating that an application quota was exceeded.  Upgrade to\\n     * resolve.\\n     * @constant\\n     */\\n    EXCEEDED_QUOTA: 140,\\n\\n    /**\\n     * Error code indicating that a Cloud Code script failed.\\n     * @constant\\n     */\\n    SCRIPT_FAILED: 141,\\n\\n    /**\\n     * Error code indicating that a Cloud Code validation failed.\\n     * @constant\\n     */\\n    VALIDATION_ERROR: 142,\\n\\n    /**\\n     * Error code indicating that invalid image data was provided.\\n     * @constant\\n     */\\n    INVALID_IMAGE_DATA: 150,\\n\\n    /**\\n     * Error code indicating an unsaved file.\\n     * @constant\\n     */\\n    UNSAVED_FILE_ERROR: 151,\\n\\n    /**\\n     * Error code indicating an invalid push time.\\n     */\\n    INVALID_PUSH_TIME_ERROR: 152,\\n\\n    /**\\n     * Error code indicating that the username is missing or empty.\\n     * @constant\\n     */\\n    USERNAME_MISSING: 200,\\n\\n    /**\\n     * Error code indicating that the password is missing or empty.\\n     * @constant\\n     */\\n    PASSWORD_MISSING: 201,\\n\\n    /**\\n     * Error code indicating that the username has already been taken.\\n     * @constant\\n     */\\n    USERNAME_TAKEN: 202,\\n\\n    /**\\n     * Error code indicating that the email has already been taken.\\n     * @constant\\n     */\\n    EMAIL_TAKEN: 203,\\n\\n    /**\\n     * Error code indicating that the email is missing, but must be specified.\\n     * @constant\\n     */\\n    EMAIL_MISSING: 204,\\n\\n    /**\\n     * Error code indicating that a user with the specified email was not found.\\n     * @constant\\n     */\\n    EMAIL_NOT_FOUND: 205,\\n\\n    /**\\n     * Error code indicating that a user object without a valid session could\\n     * not be altered.\\n     * @constant\\n     */\\n    SESSION_MISSING: 206,\\n\\n    /**\\n     * Error code indicating that a user can only be created through signup.\\n     * @constant\\n     */\\n    MUST_CREATE_USER_THROUGH_SIGNUP: 207,\\n\\n    /**\\n     * Error code indicating that an an account being linked is already linked\\n     * to another user.\\n     * @constant\\n     */\\n    ACCOUNT_ALREADY_LINKED: 208,\\n\\n    /**\\n     * Error code indicating that a user cannot be linked to an account because\\n     * that account's id could not be found.\\n     * @constant\\n     */\\n    LINKED_ID_MISSING: 250,\\n\\n    /**\\n     * Error code indicating that a user with a linked (e.g. Facebook) account\\n     * has an invalid session.\\n     * @constant\\n     */\\n    INVALID_LINKED_SESSION: 251,\\n\\n    /**\\n     * Error code indicating that a service being linked (e.g. Facebook or\\n     * Twitter) is unsupported.\\n     * @constant\\n     */\\n    UNSUPPORTED_SERVICE: 252,\\n\\n    /**\\n     * Error code indicating that there were multiple errors. Aggregate errors\\n     * have an \\\"errors\\\" property, which is an array of error objects with more\\n     * detail about each error that occurred.\\n     * @constant\\n     */\\n    AGGREGATE_ERROR: 600,\\n\\n    /**\\n     * Error code indicating the client was unable to read an input file.\\n     * @constant\\n     */\\n    FILE_READ_ERROR: 601,\\n\\n    /**\\n     * Error code indicating a real error code is unavailable because\\n     * we had to use an XDomainRequest object to allow CORS requests in\\n     * Internet Explorer, which strips the body from HTTP responses that have\\n     * a non-2XX status code.\\n     * @constant\\n     */\\n    X_DOMAIN_REQUEST: 602\\n  });\\n\\n}(this));\\n\\n/*global _: false */\\n(function() {\\n  var root = this;\\n  var Parse = (root.Parse || (root.Parse = {}));\\n  var eventSplitter = /\\\\s+/;\\n  var slice = Array.prototype.slice;\\n\\n  /**\\n   * @class\\n   *\\n   * <p>Parse.Events is a fork of Backbone's Events module, provided for your\\n   * convenience.</p>\\n   *\\n   * <p>A module that can be mixed in to any object in order to provide\\n   * it with custom events. You may bind callback functions to an event\\n   * with `on`, or remove these functions with `off`.\\n   * Triggering an event fires all callbacks in the order that `on` was\\n   * called.\\n   *\\n   * <pre>\\n   *     var object = {};\\n   *     _.extend(object, Parse.Events);\\n   *     object.on('expand', function(){ alert('expanded'); });\\n   *     object.trigger('expand');</pre></p>\\n   *\\n   * <p>For more information, see the\\n   * <a href=\\\"http://documentcloud.github.com/backbone/#Events\\\">Backbone\\n   * documentation</a>.</p>\\n   */\\n  Parse.Events = {\\n    /**\\n     * Bind one or more space separated events, `events`, to a `callback`\\n     * function. Passing `\\\"all\\\"` will bind the callback to all events fired.\\n     */\\n    on: function(events, callback, context) {\\n\\n      var calls, event, node, tail, list;\\n      if (!callback) {\\n        return this;\\n      }\\n      events = events.split(eventSplitter);\\n      calls = this._callbacks || (this._callbacks = {});\\n\\n      // Create an immutable callback list, allowing traversal during\\n      // modification.  The tail is an empty object that will always be used\\n      // as the next node.\\n      event = events.shift();\\n      while (event) {\\n        list = calls[event];\\n        node = list ? list.tail : {};\\n        node.next = tail = {};\\n        node.context = context;\\n        node.callback = callback;\\n        calls[event] = {tail: tail, next: list ? list.next : node};\\n        event = events.shift();\\n      }\\n\\n      return this;\\n    },\\n\\n    /**\\n     * Remove one or many callbacks. If `context` is null, removes all callbacks\\n     * with that function. If `callback` is null, removes all callbacks for the\\n     * event. If `events` is null, removes all bound callbacks for all events.\\n     */\\n    off: function(events, callback, context) {\\n      var event, calls, node, tail, cb, ctx;\\n\\n      // No events, or removing *all* events.\\n      if (!(calls = this._callbacks)) {\\n        return;\\n      }\\n      if (!(events || callback || context)) {\\n        delete this._callbacks;\\n        return this;\\n      }\\n\\n      // Loop through the listed events and contexts, splicing them out of the\\n      // linked list of callbacks if appropriate.\\n      events = events ? events.split(eventSplitter) : _.keys(calls);\\n      event = events.shift();\\n      while (event) {\\n        node = calls[event];\\n        delete calls[event];\\n        if (!node || !(callback || context)) {\\n          continue;\\n        }\\n        // Create a new list, omitting the indicated callbacks.\\n        tail = node.tail;\\n        node = node.next;\\n        while (node !== tail) {\\n          cb = node.callback;\\n          ctx = node.context;\\n          if ((callback && cb !== callback) || (context && ctx !== context)) {\\n            this.on(event, cb, ctx);\\n          }\\n          node = node.next;\\n        }\\n        event = events.shift();\\n      }\\n\\n      return this;\\n    },\\n\\n    /**\\n     * Trigger one or many events, firing all bound callbacks. Callbacks are\\n     * passed the same arguments as `trigger` is, apart from the event name\\n     * (unless you're listening on `\\\"all\\\"`, which will cause your callback to\\n     * receive the true name of the event as the first argument).\\n     */\\n    trigger: function(events) {\\n      var event, node, calls, tail, args, all, rest;\\n      if (!(calls = this._callbacks)) {\\n        return this;\\n      }\\n      all = calls.all;\\n      events = events.split(eventSplitter);\\n      rest = slice.call(arguments, 1);\\n\\n      // For each event, walk through the linked list of callbacks twice,\\n      // first to trigger the event, then to trigger any `\\\"all\\\"` callbacks.\\n      event = events.shift();\\n      while (event) {\\n        node = calls[event];\\n        if (node) {\\n          tail = node.tail;\\n          while ((node = node.next) !== tail) {\\n            node.callback.apply(node.context || this, rest);\\n          }\\n        }\\n        node = all;\\n        if (node) {\\n          tail = node.tail;\\n          args = [event].concat(rest);\\n          while ((node = node.next) !== tail) {\\n            node.callback.apply(node.context || this, args);\\n          }\\n        }\\n        event = events.shift();\\n      }\\n\\n      return this;\\n    }\\n  };\\n\\n  /**\\n   * @function\\n   */\\n  Parse.Events.bind = Parse.Events.on;\\n\\n  /**\\n   * @function\\n   */\\n  Parse.Events.unbind = Parse.Events.off;\\n}.call(this));\\n\\n\\n/*global navigator: false */\\n(function(root) {\\n  root.Parse = root.Parse || {};\\n  var Parse = root.Parse;\\n  var _ = Parse._;\\n\\n  /**\\n   * Creates a new GeoPoint with any of the following forms:<br>\\n   *   <pre>\\n   *   new GeoPoint(otherGeoPoint)\\n   *   new GeoPoint(30, 30)\\n   *   new GeoPoint([30, 30])\\n   *   new GeoPoint({latitude: 30, longitude: 30})\\n   *   new GeoPoint()  // defaults to (0, 0)\\n   *   </pre>\\n   * @class\\n   *\\n   * <p>Represents a latitude / longitude point that may be associated\\n   * with a key in a ParseObject or used as a reference point for geo queries.\\n   * This allows proximity-based queries on the key.</p>\\n   *\\n   * <p>Only one key in a class may contain a GeoPoint.</p>\\n   *\\n   * <p>Example:<pre>\\n   *   var point = new Parse.GeoPoint(30.0, -20.0);\\n   *   var object = new Parse.Object(\\\"PlaceObject\\\");\\n   *   object.set(\\\"location\\\", point);\\n   *   object.save();</pre></p>\\n   */\\n  Parse.GeoPoint = function(arg1, arg2) {\\n    if (_.isArray(arg1)) {\\n      Parse.GeoPoint._validate(arg1[0], arg1[1]);\\n      this.latitude = arg1[0];\\n      this.longitude = arg1[1];\\n    } else if (_.isObject(arg1)) {\\n      Parse.GeoPoint._validate(arg1.latitude, arg1.longitude);\\n      this.latitude = arg1.latitude;\\n      this.longitude = arg1.longitude;\\n    } else if (_.isNumber(arg1) && _.isNumber(arg2)) {\\n      Parse.GeoPoint._validate(arg1, arg2);\\n      this.latitude = arg1;\\n      this.longitude = arg2;\\n    } else {\\n      this.latitude = 0;\\n      this.longitude = 0;\\n    }\\n\\n    // Add properties so that anyone using Webkit or Mozilla will get an error\\n    // if they try to set values that are out of bounds.\\n    var self = this;\\n    if (this.__defineGetter__ && this.__defineSetter__) {\\n      // Use _latitude and _longitude to actually store the values, and add\\n      // getters and setters for latitude and longitude.\\n      this._latitude = this.latitude;\\n      this._longitude = this.longitude;\\n      this.__defineGetter__(\\\"latitude\\\", function() {\\n        return self._latitude;\\n      });\\n      this.__defineGetter__(\\\"longitude\\\", function() {\\n        return self._longitude;\\n      });\\n      this.__defineSetter__(\\\"latitude\\\", function(val) {\\n        Parse.GeoPoint._validate(val, self.longitude);\\n        self._latitude = val;\\n      });\\n      this.__defineSetter__(\\\"longitude\\\", function(val) {\\n        Parse.GeoPoint._validate(self.latitude, val);\\n        self._longitude = val;\\n      });\\n    }\\n  };\\n\\n  /**\\n   * @lends Parse.GeoPoint.prototype\\n   * @property {float} latitude North-south portion of the coordinate, in range\\n   *   [-90, 90].  Throws an exception if set out of range in a modern browser.\\n   * @property {float} longitude East-west portion of the coordinate, in range\\n   *   [-180, 180].  Throws if set out of range in a modern browser.\\n   */\\n\\n  /**\\n   * Throws an exception if the given lat-long is out of bounds.\\n   */\\n  Parse.GeoPoint._validate = function(latitude, longitude) {\\n    if (latitude < -90.0) {\\n      throw \\\"Parse.GeoPoint latitude \\\" + latitude + \\\" < -90.0.\\\";\\n    }\\n    if (latitude > 90.0) {\\n      throw \\\"Parse.GeoPoint latitude \\\" + latitude + \\\" > 90.0.\\\";\\n    }\\n    if (longitude < -180.0) {\\n      throw \\\"Parse.GeoPoint longitude \\\" + longitude + \\\" < -180.0.\\\";\\n    }\\n    if (longitude > 180.0) {\\n      throw \\\"Parse.GeoPoint longitude \\\" + longitude + \\\" > 180.0.\\\";\\n    }\\n  };\\n\\n  /**\\n   * Creates a GeoPoint with the user's current location, if available.\\n   * Calls options.success with a new GeoPoint instance or calls options.error.\\n   * @param {Object} options An object with success and error callbacks.\\n   */\\n  Parse.GeoPoint.current = function(options) {\\n    var promise = new Parse.Promise();\\n    navigator.geolocation.getCurrentPosition(function(location) {\\n      promise.resolve(new Parse.GeoPoint({\\n        latitude: location.coords.latitude,\\n        longitude: location.coords.longitude\\n      }));\\n\\n    }, function(error) {\\n      promise.reject(error);\\n    });\\n\\n    return promise._thenRunCallbacks(options);\\n  };\\n\\n  Parse.GeoPoint.prototype = {\\n    /**\\n     * Returns a JSON representation of the GeoPoint, suitable for Parse.\\n     * @return {Object}\\n     */\\n    toJSON: function() {\\n      Parse.GeoPoint._validate(this.latitude, this.longitude);\\n      return {\\n        \\\"__type\\\": \\\"GeoPoint\\\",\\n        latitude: this.latitude,\\n        longitude: this.longitude\\n      };\\n    },\\n\\n    /**\\n     * Returns the distance from this GeoPoint to another in radians.\\n     * @param {Parse.GeoPoint} point the other Parse.GeoPoint.\\n     * @return {Number}\\n     */\\n    radiansTo: function(point) {\\n      var d2r = Math.PI / 180.0;\\n      var lat1rad = this.latitude * d2r;\\n      var long1rad = this.longitude * d2r;\\n      var lat2rad = point.latitude * d2r;\\n      var long2rad = point.longitude * d2r;\\n      var deltaLat = lat1rad - lat2rad;\\n      var deltaLong = long1rad - long2rad;\\n      var sinDeltaLatDiv2 = Math.sin(deltaLat / 2);\\n      var sinDeltaLongDiv2 = Math.sin(deltaLong / 2);\\n      // Square of half the straight line chord distance between both points.\\n      var a = ((sinDeltaLatDiv2 * sinDeltaLatDiv2) +\\n               (Math.cos(lat1rad) * Math.cos(lat2rad) *\\n                sinDeltaLongDiv2 * sinDeltaLongDiv2));\\n      a = Math.min(1.0, a);\\n      return 2 * Math.asin(Math.sqrt(a));\\n    },\\n\\n    /**\\n     * Returns the distance from this GeoPoint to another in kilometers.\\n     * @param {Parse.GeoPoint} point the other Parse.GeoPoint.\\n     * @return {Number}\\n     */\\n    kilometersTo: function(point) {\\n      return this.radiansTo(point) * 6371.0;\\n    },\\n\\n    /**\\n     * Returns the distance from this GeoPoint to another in miles.\\n     * @param {Parse.GeoPoint} point the other Parse.GeoPoint.\\n     * @return {Number}\\n     */\\n    milesTo: function(point) {\\n      return this.radiansTo(point) * 3958.8;\\n    }\\n  };\\n}(this));\\n\\n/*global navigator: false */\\n(function(root) {\\n  root.Parse = root.Parse || {};\\n  var Parse = root.Parse;\\n  var _ = Parse._;\\n\\n  var PUBLIC_KEY = \\\"*\\\";\\n\\n  /**\\n   * Creates a new ACL.\\n   * If no argument is given, the ACL has no permissions for anyone.\\n   * If the argument is a Parse.User, the ACL will have read and write\\n   *   permission for only that user.\\n   * If the argument is any other JSON object, that object will be interpretted\\n   *   as a serialized ACL created with toJSON().\\n   * @see Parse.Object#setACL\\n   * @class\\n   *\\n   * <p>An ACL, or Access Control List can be added to any\\n   * <code>Parse.Object</code> to restrict access to only a subset of users\\n   * of your application.</p>\\n   */\\n  Parse.ACL = function(arg1) {\\n    var self = this;\\n    self.permissionsById = {};\\n    if (_.isObject(arg1)) {\\n      if (arg1 instanceof Parse.User) {\\n        self.setReadAccess(arg1, true);\\n        self.setWriteAccess(arg1, true);\\n      } else {\\n        if (_.isFunction(arg1)) {\\n          throw \\\"Parse.ACL() called with a function.  Did you forget ()?\\\";\\n        }\\n        Parse._objectEach(arg1, function(accessList, userId) {\\n          if (!_.isString(userId)) {\\n            throw \\\"Tried to create an ACL with an invalid userId.\\\";\\n          }\\n          self.permissionsById[userId] = {};\\n          Parse._objectEach(accessList, function(allowed, permission) {\\n            if (permission !== \\\"read\\\" && permission !== \\\"write\\\") {\\n              throw \\\"Tried to create an ACL with an invalid permission type.\\\";\\n            }\\n            if (!_.isBoolean(allowed)) {\\n              throw \\\"Tried to create an ACL with an invalid permission value.\\\";\\n            }\\n            self.permissionsById[userId][permission] = allowed;\\n          });\\n        });\\n      }\\n    }\\n  };\\n\\n  /**\\n   * Returns a JSON-encoded version of the ACL.\\n   * @return {Object}\\n   */\\n  Parse.ACL.prototype.toJSON = function() {\\n    return _.clone(this.permissionsById);\\n  };\\n\\n  Parse.ACL.prototype._setAccess = function(accessType, userId, allowed) {\\n    if (userId instanceof Parse.User) {\\n      userId = userId.id;\\n    } else if (userId instanceof Parse.Role) {\\n      userId = \\\"role:\\\" + userId.getName();\\n    }\\n    if (!_.isString(userId)) {\\n      throw \\\"userId must be a string.\\\";\\n    }\\n    if (!_.isBoolean(allowed)) {\\n      throw \\\"allowed must be either true or false.\\\";\\n    }\\n    var permissions = this.permissionsById[userId];\\n    if (!permissions) {\\n      if (!allowed) {\\n        // The user already doesn't have this permission, so no action needed.\\n        return;\\n      } else {\\n        permissions = {};\\n        this.permissionsById[userId] = permissions;\\n      }\\n    }\\n\\n    if (allowed) {\\n      this.permissionsById[userId][accessType] = true;\\n    } else {\\n      delete permissions[accessType];\\n      if (_.isEmpty(permissions)) {\\n        delete permissions[userId];\\n      }\\n    }\\n  };\\n\\n  Parse.ACL.prototype._getAccess = function(accessType, userId) {\\n    if (userId instanceof Parse.User) {\\n      userId = userId.id;\\n    } else if (userId instanceof Parse.Role) {\\n      userId = \\\"role:\\\" + userId.getName();\\n    }\\n    var permissions = this.permissionsById[userId];\\n    if (!permissions) {\\n      return false;\\n    }\\n    return permissions[accessType] ? true : false;\\n  };\\n\\n  /**\\n   * Set whether the given user is allowed to read this object.\\n   * @param userId An instance of Parse.User or its objectId.\\n   * @param {Boolean} allowed Whether that user should have read access.\\n   */\\n  Parse.ACL.prototype.setReadAccess = function(userId, allowed) {\\n    this._setAccess(\\\"read\\\", userId, allowed);\\n  };\\n\\n  /**\\n   * Get whether the given user id is *explicitly* allowed to read this object.\\n   * Even if this returns false, the user may still be able to access it if\\n   * getPublicReadAccess returns true or a role that the user belongs to has\\n   * write access.\\n   * @param userId An instance of Parse.User or its objectId, or a Parse.Role.\\n   * @return {Boolean}\\n   */\\n  Parse.ACL.prototype.getReadAccess = function(userId) {\\n    return this._getAccess(\\\"read\\\", userId);\\n  };\\n\\n  /**\\n   * Set whether the given user id is allowed to write this object.\\n   * @param userId An instance of Parse.User or its objectId, or a Parse.Role..\\n   * @param {Boolean} allowed Whether that user should have write access.\\n   */\\n  Parse.ACL.prototype.setWriteAccess = function(userId, allowed) {\\n    this._setAccess(\\\"write\\\", userId, allowed);\\n  };\\n\\n  /**\\n   * Get whether the given user id is *explicitly* allowed to write this object.\\n   * Even if this returns false, the user may still be able to write it if\\n   * getPublicWriteAccess returns true or a role that the user belongs to has\\n   * write access.\\n   * @param userId An instance of Parse.User or its objectId, or a Parse.Role.\\n   * @return {Boolean}\\n   */\\n  Parse.ACL.prototype.getWriteAccess = function(userId) {\\n    return this._getAccess(\\\"write\\\", userId);\\n  };\\n\\n  /**\\n   * Set whether the public is allowed to read this object.\\n   * @param {Boolean} allowed\\n   */\\n  Parse.ACL.prototype.setPublicReadAccess = function(allowed) {\\n    this.setReadAccess(PUBLIC_KEY, allowed);\\n  };\\n\\n  /**\\n   * Get whether the public is allowed to read this object.\\n   * @return {Boolean}\\n   */\\n  Parse.ACL.prototype.getPublicReadAccess = function() {\\n    return this.getReadAccess(PUBLIC_KEY);\\n  };\\n\\n  /**\\n   * Set whether the public is allowed to write this object.\\n   * @param {Boolean} allowed\\n   */\\n  Parse.ACL.prototype.setPublicWriteAccess = function(allowed) {\\n    this.setWriteAccess(PUBLIC_KEY, allowed);\\n  };\\n\\n  /**\\n   * Get whether the public is allowed to write this object.\\n   * @return {Boolean}\\n   */\\n  Parse.ACL.prototype.getPublicWriteAccess = function() {\\n    return this.getWriteAccess(PUBLIC_KEY);\\n  };\\n\\n  /**\\n   * Get whether users belonging to the given role are allowed\\n   * to read this object. Even if this returns false, the role may\\n   * still be able to write it if a parent role has read access.\\n   *\\n   * @param role The name of the role, or a Parse.Role object.\\n   * @return {Boolean} true if the role has read access. false otherwise.\\n   * @throws {String} If role is neither a Parse.Role nor a String.\\n   */\\n  Parse.ACL.prototype.getRoleReadAccess = function(role) {\\n    if (role instanceof Parse.Role) {\\n      // Normalize to the String name\\n      role = role.getName();\\n    }\\n    if (_.isString(role)) {\\n      return this.getReadAccess(\\\"role:\\\" + role);\\n    }\\n    throw \\\"role must be a Parse.Role or a String\\\";\\n  };\\n\\n  /**\\n   * Get whether users belonging to the given role are allowed\\n   * to write this object. Even if this returns false, the role may\\n   * still be able to write it if a parent role has write access.\\n   *\\n   * @param role The name of the role, or a Parse.Role object.\\n   * @return {Boolean} true if the role has write access. false otherwise.\\n   * @throws {String} If role is neither a Parse.Role nor a String.\\n   */\\n  Parse.ACL.prototype.getRoleWriteAccess = function(role) {\\n    if (role instanceof Parse.Role) {\\n      // Normalize to the String name\\n      role = role.getName();\\n    }\\n    if (_.isString(role)) {\\n      return this.getWriteAccess(\\\"role:\\\" + role);\\n    }\\n    throw \\\"role must be a Parse.Role or a String\\\";\\n  };\\n\\n  /**\\n   * Set whether users belonging to the given role are allowed\\n   * to read this object.\\n   *\\n   * @param role The name of the role, or a Parse.Role object.\\n   * @param {Boolean} allowed Whether the given role can read this object.\\n   * @throws {String} If role is neither a Parse.Role nor a String.\\n   */\\n  Parse.ACL.prototype.setRoleReadAccess = function(role, allowed) {\\n    if (role instanceof Parse.Role) {\\n      // Normalize to the String name\\n      role = role.getName();\\n    }\\n    if (_.isString(role)) {\\n      this.setReadAccess(\\\"role:\\\" + role, allowed);\\n      return;\\n    }\\n    throw \\\"role must be a Parse.Role or a String\\\";\\n  };\\n\\n  /**\\n   * Set whether users belonging to the given role are allowed\\n   * to write this object.\\n   *\\n   * @param role The name of the role, or a Parse.Role object.\\n   * @param {Boolean} allowed Whether the given role can write this object.\\n   * @throws {String} If role is neither a Parse.Role nor a String.\\n   */\\n  Parse.ACL.prototype.setRoleWriteAccess = function(role, allowed) {\\n    if (role instanceof Parse.Role) {\\n      // Normalize to the String name\\n      role = role.getName();\\n    }\\n    if (_.isString(role)) {\\n      this.setWriteAccess(\\\"role:\\\" + role, allowed);\\n      return;\\n    }\\n    throw \\\"role must be a Parse.Role or a String\\\";\\n  };\\n\\n}(this));\\n\\n(function(root) {\\n  root.Parse = root.Parse || {};\\n  var Parse = root.Parse;\\n  var _ = Parse._;\\n\\n  /**\\n   * @class\\n   * A Parse.Op is an atomic operation that can be applied to a field in a\\n   * Parse.Object. For example, calling <code>object.set(\\\"foo\\\", \\\"bar\\\")</code>\\n   * is an example of a Parse.Op.Set. Calling <code>object.unset(\\\"foo\\\")</code>\\n   * is a Parse.Op.Unset. These operations are stored in a Parse.Object and\\n   * sent to the server as part of <code>object.save()</code> operations.\\n   * Instances of Parse.Op should be immutable.\\n   *\\n   * You should not create subclasses of Parse.Op or instantiate Parse.Op\\n   * directly.\\n   */\\n  Parse.Op = function() {\\n    this._initialize.apply(this, arguments);\\n  };\\n\\n  Parse.Op.prototype = {\\n    _initialize: function() {}\\n  };\\n\\n  _.extend(Parse.Op, {\\n    /**\\n     * To create a new Op, call Parse.Op._extend();\\n     */\\n    _extend: Parse._extend,\\n\\n    // A map of __op string to decoder function.\\n    _opDecoderMap: {},\\n\\n    /**\\n     * Registers a function to convert a json object with an __op field into an\\n     * instance of a subclass of Parse.Op.\\n     */\\n    _registerDecoder: function(opName, decoder) {\\n      Parse.Op._opDecoderMap[opName] = decoder;\\n    },\\n\\n    /**\\n     * Converts a json object into an instance of a subclass of Parse.Op.\\n     */\\n    _decode: function(json) {\\n      var decoder = Parse.Op._opDecoderMap[json.__op];\\n      if (decoder) {\\n        return decoder(json);\\n      } else {\\n        return undefined;\\n      }\\n    }\\n  });\\n\\n  /*\\n   * Add a handler for Batch ops.\\n   */\\n  Parse.Op._registerDecoder(\\\"Batch\\\", function(json) {\\n    var op = null;\\n    Parse._arrayEach(json.ops, function(nextOp) {\\n      nextOp = Parse.Op._decode(nextOp);\\n      op = nextOp._mergeWithPrevious(op);\\n    });\\n    return op;\\n  });\\n\\n  /**\\n   * @class\\n   * A Set operation indicates that either the field was changed using\\n   * Parse.Object.set, or it is a mutable container that was detected as being\\n   * changed.\\n   */\\n  Parse.Op.Set = Parse.Op._extend(/** @lends Parse.Op.Set.prototype */ {\\n    _initialize: function(value) {\\n      this._value = value;\\n    },\\n\\n    /**\\n     * Returns the new value of this field after the set.\\n     */\\n    value: function() {\\n      return this._value;\\n    },\\n\\n    /**\\n     * Returns a JSON version of the operation suitable for sending to Parse.\\n     * @return {Object}\\n     */\\n    toJSON: function() {\\n      return Parse._encode(this.value());\\n    },\\n\\n    _mergeWithPrevious: function(previous) {\\n      return this;\\n    },\\n\\n    _estimate: function(oldValue) {\\n      return this.value();\\n    }\\n  });\\n\\n  /**\\n   * A sentinel value that is returned by Parse.Op.Unset._estimate to\\n   * indicate the field should be deleted. Basically, if you find _UNSET as a\\n   * value in your object, you should remove that key.\\n   */\\n  Parse.Op._UNSET = {};\\n\\n  /**\\n   * @class\\n   * An Unset operation indicates that this field has been deleted from the\\n   * object.\\n   */\\n  Parse.Op.Unset = Parse.Op._extend(/** @lends Parse.Op.Unset.prototype */ {\\n    /**\\n     * Returns a JSON version of the operation suitable for sending to Parse.\\n     * @return {Object}\\n     */\\n    toJSON: function() {\\n      return { __op: \\\"Delete\\\" };\\n    },\\n\\n    _mergeWithPrevious: function(previous) {\\n      return this;\\n    },\\n\\n    _estimate: function(oldValue) {\\n      return Parse.Op._UNSET;\\n    }\\n  });\\n\\n  Parse.Op._registerDecoder(\\\"Delete\\\", function(json) {\\n    return new Parse.Op.Unset();\\n  });\\n\\n  /**\\n   * @class\\n   * An Increment is an atomic operation where the numeric value for the field\\n   * will be increased by a given amount.\\n   */\\n  Parse.Op.Increment = Parse.Op._extend(\\n      /** @lends Parse.Op.Increment.prototype */ {\\n\\n    _initialize: function(amount) {\\n      this._amount = amount;\\n    },\\n\\n    /**\\n     * Returns the amount to increment by.\\n     * @return {Number} the amount to increment by.\\n     */\\n    amount: function() {\\n      return this._amount;\\n    },\\n\\n    /**\\n     * Returns a JSON version of the operation suitable for sending to Parse.\\n     * @return {Object}\\n     */\\n    toJSON: function() {\\n      return { __op: \\\"Increment\\\", amount: this._amount };\\n    },\\n\\n    _mergeWithPrevious: function(previous) {\\n      if (!previous) {\\n        return this;\\n      } else if (previous instanceof Parse.Op.Unset) {\\n        return new Parse.Op.Set(this.amount());\\n      } else if (previous instanceof Parse.Op.Set) {\\n        return new Parse.Op.Set(previous.value() + this.amount());\\n      } else if (previous instanceof Parse.Op.Increment) {\\n        return new Parse.Op.Increment(this.amount() + previous.amount());\\n      } else {\\n        throw \\\"Op is invalid after previous op.\\\";\\n      }\\n    },\\n\\n    _estimate: function(oldValue) {\\n      if (!oldValue) {\\n        return this.amount();\\n      }\\n      return oldValue + this.amount();\\n    }\\n  });\\n\\n  Parse.Op._registerDecoder(\\\"Increment\\\", function(json) {\\n    return new Parse.Op.Increment(json.amount);\\n  });\\n\\n  /**\\n   * @class\\n   * Add is an atomic operation where the given objects will be appended to the\\n   * array that is stored in this field.\\n   */\\n  Parse.Op.Add = Parse.Op._extend(/** @lends Parse.Op.Add.prototype */ {\\n    _initialize: function(objects) {\\n      this._objects = objects;\\n    },\\n\\n    /**\\n     * Returns the objects to be added to the array.\\n     * @return {Array} The objects to be added to the array.\\n     */\\n    objects: function() {\\n      return this._objects;\\n    },\\n\\n    /**\\n     * Returns a JSON version of the operation suitable for sending to Parse.\\n     * @return {Object}\\n     */\\n    toJSON: function() {\\n      return { __op: \\\"Add\\\", objects: Parse._encode(this.objects()) };\\n    },\\n\\n    _mergeWithPrevious: function(previous) {\\n      if (!previous) {\\n        return this;\\n      } else if (previous instanceof Parse.Op.Unset) {\\n        return new Parse.Op.Set(this.objects());\\n      } else if (previous instanceof Parse.Op.Set) {\\n        return new Parse.Op.Set(this._estimate(previous.value()));\\n      } else if (previous instanceof Parse.Op.Add) {\\n        return new Parse.Op.Add(previous.objects().concat(this.objects()));\\n      } else {\\n        throw \\\"Op is invalid after previous op.\\\";\\n      }\\n    },\\n\\n    _estimate: function(oldValue) {\\n      if (!oldValue) {\\n        return _.clone(this.objects());\\n      } else {\\n        return oldValue.concat(this.objects());\\n      }\\n    }\\n  });\\n\\n  Parse.Op._registerDecoder(\\\"Add\\\", function(json) {\\n    return new Parse.Op.Add(Parse._decode(undefined, json.objects));\\n  });\\n\\n  /**\\n   * @class\\n   * AddUnique is an atomic operation where the given items will be appended to\\n   * the array that is stored in this field only if they were not already\\n   * present in the array.\\n   */\\n  Parse.Op.AddUnique = Parse.Op._extend(\\n      /** @lends Parse.Op.AddUnique.prototype */ {\\n\\n    _initialize: function(objects) {\\n      this._objects = _.uniq(objects);\\n    },\\n\\n    /**\\n     * Returns the objects to be added to the array.\\n     * @return {Array} The objects to be added to the array.\\n     */\\n    objects: function() {\\n      return this._objects;\\n    },\\n\\n    /**\\n     * Returns a JSON version of the operation suitable for sending to Parse.\\n     * @return {Object}\\n     */\\n    toJSON: function() {\\n      return { __op: \\\"AddUnique\\\", objects: Parse._encode(this.objects()) };\\n    },\\n\\n    _mergeWithPrevious: function(previous) {\\n      if (!previous) {\\n        return this;\\n      } else if (previous instanceof Parse.Op.Unset) {\\n        return new Parse.Op.Set(this.objects());\\n      } else if (previous instanceof Parse.Op.Set) {\\n        return new Parse.Op.Set(this._estimate(previous.value()));\\n      } else if (previous instanceof Parse.Op.AddUnique) {\\n        return new Parse.Op.AddUnique(this._estimate(previous.objects()));\\n      } else {\\n        throw \\\"Op is invalid after previous op.\\\";\\n      }\\n    },\\n\\n    _estimate: function(oldValue) {\\n      if (!oldValue) {\\n        return _.clone(this.objects());\\n      } else {\\n        // We can't just take the _.uniq(_.union(...)) of oldValue and\\n        // this.objects, because the uniqueness may not apply to oldValue\\n        // (especially if the oldValue was set via .set())\\n        var newValue = _.clone(oldValue);\\n        Parse._arrayEach(this.objects(), function(obj) {\\n          if (obj instanceof Parse.Object && obj.id) {\\n            var matchingObj = _.find(newValue, function(anObj) {\\n              return (anObj instanceof Parse.Object) && (anObj.id === obj.id);\\n            });\\n            if (!matchingObj) {\\n              newValue.push(obj);\\n            } else {\\n              var index = _.indexOf(newValue, matchingObj);\\n              newValue[index] = obj;\\n            }\\n          } else if (!_.contains(newValue, obj)) {\\n            newValue.push(obj);\\n          }\\n        });\\n        return newValue;\\n      }\\n    }\\n  });\\n\\n  Parse.Op._registerDecoder(\\\"AddUnique\\\", function(json) {\\n    return new Parse.Op.AddUnique(Parse._decode(undefined, json.objects));\\n  });\\n\\n  /**\\n   * @class\\n   * Remove is an atomic operation where the given objects will be removed from\\n   * the array that is stored in this field.\\n   */\\n  Parse.Op.Remove = Parse.Op._extend(/** @lends Parse.Op.Remove.prototype */ {\\n    _initialize: function(objects) {\\n      this._objects = _.uniq(objects);\\n    },\\n\\n    /**\\n     * Returns the objects to be removed from the array.\\n     * @return {Array} The objects to be removed from the array.\\n     */\\n    objects: function() {\\n      return this._objects;\\n    },\\n\\n    /**\\n     * Returns a JSON version of the operation suitable for sending to Parse.\\n     * @return {Object}\\n     */\\n    toJSON: function() {\\n      return { __op: \\\"Remove\\\", objects: Parse._encode(this.objects()) };\\n    },\\n\\n    _mergeWithPrevious: function(previous) {\\n      if (!previous) {\\n        return this;\\n      } else if (previous instanceof Parse.Op.Unset) {\\n        return previous;\\n      } else if (previous instanceof Parse.Op.Set) {\\n        return new Parse.Op.Set(this._estimate(previous.value()));\\n      } else if (previous instanceof Parse.Op.Remove) {\\n        return new Parse.Op.Remove(_.union(previous.objects(), this.objects()));\\n      } else {\\n        throw \\\"Op is invalid after previous op.\\\";\\n      }\\n    },\\n\\n    _estimate: function(oldValue) {\\n      if (!oldValue) {\\n        return [];\\n      } else {\\n        var newValue = _.difference(oldValue, this.objects());\\n        // If there are saved Parse Objects being removed, also remove them.\\n        Parse._arrayEach(this.objects(), function(obj) {\\n          if (obj instanceof Parse.Object && obj.id) {\\n            newValue = _.reject(newValue, function(other) {\\n              return (other instanceof Parse.Object) && (other.id === obj.id);\\n            });\\n          }\\n        });\\n        return newValue;\\n      }\\n    }\\n  });\\n\\n  Parse.Op._registerDecoder(\\\"Remove\\\", function(json) {\\n    return new Parse.Op.Remove(Parse._decode(undefined, json.objects));\\n  });\\n\\n  /**\\n   * @class\\n   * A Relation operation indicates that the field is an instance of\\n   * Parse.Relation, and objects are being added to, or removed from, that\\n   * relation.\\n   */\\n  Parse.Op.Relation = Parse.Op._extend(\\n      /** @lends Parse.Op.Relation.prototype */ {\\n\\n    _initialize: function(adds, removes) {\\n      this._targetClassName = null;\\n\\n      var self = this;\\n\\n      var pointerToId = function(object) {\\n        if (object instanceof Parse.Object) {\\n          if (!object.id) {\\n            throw \\\"You can't add an unsaved Parse.Object to a relation.\\\";\\n          }\\n          if (!self._targetClassName) {\\n            self._targetClassName = object.className;\\n          }\\n          if (self._targetClassName !== object.className) {\\n            throw \\\"Tried to create a Parse.Relation with 2 different types: \\\" +\\n                  self._targetClassName + \\\" and \\\" + object.className + \\\".\\\";\\n          }\\n          return object.id;\\n        }\\n        return object;\\n      };\\n\\n      this.relationsToAdd = _.uniq(_.map(adds, pointerToId));\\n      this.relationsToRemove = _.uniq(_.map(removes, pointerToId));\\n    },\\n\\n    /**\\n     * Returns an array of unfetched Parse.Object that are being added to the\\n     * relation.\\n     * @return {Array}\\n     */\\n    added: function() {\\n      var self = this;\\n      return _.map(this.relationsToAdd, function(objectId) {\\n        var object = Parse.Object._create(self._targetClassName);\\n        object.id = objectId;\\n        return object;\\n      });\\n    },\\n\\n    /**\\n     * Returns an array of unfetched Parse.Object that are being removed from\\n     * the relation.\\n     * @return {Array}\\n     */\\n    removed: function() {\\n      var self = this;\\n      return _.map(this.relationsToRemove, function(objectId) {\\n        var object = Parse.Object._create(self._targetClassName);\\n        object.id = objectId;\\n        return object;\\n      });\\n    },\\n\\n    /**\\n     * Returns a JSON version of the operation suitable for sending to Parse.\\n     * @return {Object}\\n     */\\n    toJSON: function() {\\n      var adds = null;\\n      var removes = null;\\n      var self = this;\\n      var idToPointer = function(id) {\\n        return { __type: 'Pointer',\\n                 className: self._targetClassName,\\n                 objectId: id };\\n      };\\n      var pointers = null;\\n      if (this.relationsToAdd.length > 0) {\\n        pointers = _.map(this.relationsToAdd, idToPointer);\\n        adds = { \\\"__op\\\": \\\"AddRelation\\\", \\\"objects\\\": pointers };\\n      }\\n\\n      if (this.relationsToRemove.length > 0) {\\n        pointers = _.map(this.relationsToRemove, idToPointer);\\n        removes = { \\\"__op\\\": \\\"RemoveRelation\\\", \\\"objects\\\": pointers };\\n      }\\n\\n      if (adds && removes) {\\n        return { \\\"__op\\\": \\\"Batch\\\", \\\"ops\\\": [adds, removes]};\\n      }\\n\\n      return adds || removes || {};\\n    },\\n\\n    _mergeWithPrevious: function(previous) {\\n      if (!previous) {\\n        return this;\\n      } else if (previous instanceof Parse.Op.Unset) {\\n        throw \\\"You can't modify a relation after deleting it.\\\";\\n      } else if (previous instanceof Parse.Op.Relation) {\\n        if (previous._targetClassName &&\\n            previous._targetClassName !== this._targetClassName) {\\n          throw \\\"Related object must be of class \\\" + previous._targetClassName +\\n              \\\", but \\\" + this._targetClassName + \\\" was passed in.\\\";\\n        }\\n        var newAdd = _.union(_.difference(previous.relationsToAdd,\\n                                          this.relationsToRemove),\\n                             this.relationsToAdd);\\n        var newRemove = _.union(_.difference(previous.relationsToRemove,\\n                                             this.relationsToAdd),\\n                                this.relationsToRemove);\\n\\n        var newRelation = new Parse.Op.Relation(newAdd, newRemove);\\n        newRelation._targetClassName = this._targetClassName;\\n        return newRelation;\\n      } else {\\n        throw \\\"Op is invalid after previous op.\\\";\\n      }\\n    },\\n\\n    _estimate: function(oldValue, object, key) {\\n      if (!oldValue) {\\n        var relation = new Parse.Relation(object, key);\\n        relation.targetClassName = this._targetClassName;\\n      } else if (oldValue instanceof Parse.Relation) {\\n        if (this._targetClassName) {\\n          if (oldValue.targetClassName) {\\n            if (oldValue.targetClassName !== this._targetClassName) {\\n              throw \\\"Related object must be a \\\" + oldValue.targetClassName +\\n                  \\\", but a \\\" + this._targetClassName + \\\" was passed in.\\\";\\n            }\\n          } else {\\n            oldValue.targetClassName = this._targetClassName;\\n          }\\n        }\\n        return oldValue;\\n      } else {\\n        throw \\\"Op is invalid after previous op.\\\";\\n      }\\n    }\\n  });\\n\\n  Parse.Op._registerDecoder(\\\"AddRelation\\\", function(json) {\\n    return new Parse.Op.Relation(Parse._decode(undefined, json.objects), []);\\n  });\\n  Parse.Op._registerDecoder(\\\"RemoveRelation\\\", function(json) {\\n    return new Parse.Op.Relation([], Parse._decode(undefined, json.objects));\\n  });\\n\\n}(this));\\n\\n(function(root) {\\n  root.Parse = root.Parse || {};\\n  var Parse = root.Parse;\\n  var _ = Parse._;\\n\\n  /**\\n   * Creates a new Relation for the given parent object and key. This\\n   * constructor should rarely be used directly, but rather created by\\n   * Parse.Object.relation.\\n   * @param {Parse.Object} parent The parent of this relation.\\n   * @param {String} key The key for this relation on the parent.\\n   * @see Parse.Object#relation\\n   * @class\\n   *\\n   * <p>\\n   * A class that is used to access all of the children of a many-to-many\\n   * relationship.  Each instance of Parse.Relation is associated with a\\n   * particular parent object and key.\\n   * </p>\\n   */\\n  Parse.Relation = function(parent, key) {\\n    this.parent = parent;\\n    this.key = key;\\n    this.targetClassName = null;\\n  };\\n\\n  Parse.Relation.prototype = {\\n    /**\\n     * Makes sure that this relation has the right parent and key.\\n     */\\n    _ensureParentAndKey: function(parent, key) {\\n      this.parent = this.parent || parent;\\n      this.key = this.key || key;\\n      if (this.parent !== parent) {\\n        throw \\\"Internal Error. Relation retrieved from two different Objects.\\\";\\n      }\\n      if (this.key !== key) {\\n        throw \\\"Internal Error. Relation retrieved from two different keys.\\\";\\n      }\\n    },\\n\\n    /**\\n     * Adds a Parse.Object or an array of Parse.Objects to the relation.\\n     * @param {} objects The item or items to add.\\n     */\\n    add: function(objects) {\\n      if (!_.isArray(objects)) {\\n        objects = [objects];\\n      }\\n\\n      var change = new Parse.Op.Relation(objects, []);\\n      this.parent.set(this.key, change);\\n      this.targetClassName = change._targetClassName;\\n    },\\n\\n    /**\\n     * Removes a Parse.Object or an array of Parse.Objects from this relation.\\n     * @param {} objects The item or items to remove.\\n     */\\n    remove: function(objects) {\\n      if (!_.isArray(objects)) {\\n        objects = [objects];\\n      }\\n\\n      var change = new Parse.Op.Relation([], objects);\\n      this.parent.set(this.key, change);\\n      this.targetClassName = change._targetClassName;\\n    },\\n\\n    /**\\n     * Returns a JSON version of the object suitable for saving to disk.\\n     * @return {Object}\\n     */\\n    toJSON: function() {\\n      return { \\\"__type\\\": \\\"Relation\\\", \\\"className\\\": this.targetClassName };\\n    },\\n\\n    /**\\n     * Returns a Parse.Query that is limited to objects in this\\n     * relation.\\n     * @return {Parse.Query}\\n     */\\n    query: function() {\\n      var targetClass;\\n      var query;\\n      if (!this.targetClassName) {\\n        targetClass = Parse.Object._getSubclass(this.parent.className);\\n        query = new Parse.Query(targetClass);\\n        query._extraOptions.redirectClassNameForKey = this.key;\\n      } else {\\n        targetClass = Parse.Object._getSubclass(this.targetClassName);\\n        query = new Parse.Query(targetClass);\\n      }\\n      query._addCondition(\\\"$relatedTo\\\", \\\"object\\\", this.parent._toPointer());\\n      query._addCondition(\\\"$relatedTo\\\", \\\"key\\\", this.key);\\n\\n      return query;\\n    }\\n  };\\n}(this));\\n\\n(function(root) {\\n  root.Parse = root.Parse || {};\\n  var Parse = root.Parse;\\n  var _ = Parse._;\\n\\n  /**\\n   * A Promise is returned by async methods as a hook to provide callbacks to be\\n   * called when the async task is fulfilled.\\n   *\\n   * <p>Typical usage would be like:<pre>\\n   *    query.find().then(function(results) {\\n   *      results[0].set(\\\"foo\\\", \\\"bar\\\");\\n   *      return results[0].saveAsync();\\n   *    }).then(function(result) {\\n   *      console.log(\\\"Updated \\\" + result.id);\\n   *    });\\n   * </pre></p>\\n   *\\n   * @see Parse.Promise.prototype.then\\n   * @class\\n   */\\n  Parse.Promise = function() {\\n    this._resolved = false;\\n    this._rejected = false;\\n    this._resolvedCallbacks = [];\\n    this._rejectedCallbacks = [];\\n  };\\n\\n  _.extend(Parse.Promise, /** @lends Parse.Promise */ {\\n\\n    /**\\n     * Returns true iff the given object fulfils the Promise interface.\\n     * @return {Boolean}\\n     */\\n    is: function(promise) {\\n      return promise && promise.then && _.isFunction(promise.then);\\n    },\\n\\n    /**\\n     * Returns a new promise that is resolved with a given value.\\n     * @return {Parse.Promise} the new promise.\\n     */\\n    as: function() {\\n      var promise = new Parse.Promise();\\n      promise.resolve.apply(promise, arguments);\\n      return promise;\\n    },\\n\\n    /**\\n     * Returns a new promise that is rejected with a given error.\\n     * @return {Parse.Promise} the new promise.\\n     */\\n    error: function() {\\n      var promise = new Parse.Promise();\\n      promise.reject.apply(promise, arguments);\\n      return promise;\\n    },\\n\\n    /**\\n     * Returns a new promise that is fulfilled when all of the input promises\\n     * are resolved. If any promise in the list fails, then the returned promise\\n     * will fail with the last error. If they all succeed, then the returned\\n     * promise will succeed, with the results being the results of all the input\\n     * promises. For example: <pre>\\n     *   var p1 = Parse.Promise.as(1);\\n     *   var p2 = Parse.Promise.as(2);\\n     *   var p3 = Parse.Promise.as(3);\\n     *\\n     *   Parse.Promise.when(p1, p2, p3).then(function(r1, r2, r3) {\\n     *     console.log(r1);  // prints 1\\n     *     console.log(r2);  // prints 2\\n     *     console.log(r3);  // prints 3\\n     *   });</pre>\\n     *\\n     * The input promises can also be specified as an array: <pre>\\n     *   var promises = [p1, p2, p3];\\n     *   Parse.Promise.when(promises).then(function(r1, r2, r3) {\\n     *     console.log(r1);  // prints 1\\n     *     console.log(r2);  // prints 2\\n     *     console.log(r3);  // prints 3\\n     *   });\\n     * </pre>\\n     * @param {Array} promises a list of promises to wait for.\\n     * @return {Parse.Promise} the new promise.\\n     */\\n    when: function(promises) {\\n      // Allow passing in Promises as separate arguments instead of an Array.\\n      var objects;\\n      if (promises && Parse._isNullOrUndefined(promises.length)) {\\n        objects = arguments;\\n      } else {\\n        objects = promises;\\n      }\\n\\n      var total = objects.length;\\n      var hadError = false;\\n      var results = [];\\n      var errors = [];\\n      results.length = objects.length;\\n      errors.length = objects.length;\\n\\n      if (total === 0) {\\n        return Parse.Promise.as.apply(this, results);\\n      }\\n\\n      var promise = new Parse.Promise();\\n\\n      var resolveOne = function() {\\n        total = total - 1;\\n        if (total === 0) {\\n          if (hadError) {\\n            promise.reject(errors);\\n          } else {\\n            promise.resolve.apply(promise, results);\\n          }\\n        }\\n      };\\n\\n      Parse._arrayEach(objects, function(object, i) {\\n        if (Parse.Promise.is(object)) {\\n          object.then(function(result) {\\n            results[i] = result;\\n            resolveOne();\\n          }, function(error) {\\n            errors[i] = error;\\n            hadError = true;\\n            resolveOne();\\n          });\\n        } else {\\n          results[i] = object;\\n          resolveOne();\\n        }\\n      });\\n\\n      return promise;\\n    },\\n\\n    /**\\n     * Runs the given asyncFunction repeatedly, as long as the predicate\\n     * function returns a truthy value. Stops repeating if asyncFunction returns\\n     * a rejected promise.\\n     * @param {Function} predicate should return false when ready to stop.\\n     * @param {Function} asyncFunction should return a Promise.\\n     */\\n    _continueWhile: function(predicate, asyncFunction) {\\n      if (predicate()) {\\n        return asyncFunction().then(function() {\\n          return Parse.Promise._continueWhile(predicate, asyncFunction);\\n        });\\n      }\\n      return Parse.Promise.as();\\n    }\\n  });\\n\\n  _.extend(Parse.Promise.prototype, /** @lends Parse.Promise.prototype */ {\\n\\n    /**\\n     * Marks this promise as fulfilled, firing any callbacks waiting on it.\\n     * @param {Object} result the result to pass to the callbacks.\\n     */\\n    resolve: function(result) {\\n      if (this._resolved || this._rejected) {\\n        throw \\\"A promise was resolved even though it had already been \\\" +\\n          (this._resolved ? \\\"resolved\\\" : \\\"rejected\\\") + \\\".\\\";\\n      }\\n      this._resolved = true;\\n      this._result = arguments;\\n      var results = arguments;\\n      Parse._arrayEach(this._resolvedCallbacks, function(resolvedCallback) {\\n        resolvedCallback.apply(this, results);\\n      });\\n      this._resolvedCallbacks = [];\\n      this._rejectedCallbacks = [];\\n    },\\n\\n    /**\\n     * Marks this promise as fulfilled, firing any callbacks waiting on it.\\n     * @param {Object} error the error to pass to the callbacks.\\n     */\\n    reject: function(error) {\\n      if (this._resolved || this._rejected) {\\n        throw \\\"A promise was rejected even though it had already been \\\" +\\n          (this._resolved ? \\\"resolved\\\" : \\\"rejected\\\") + \\\".\\\";\\n      }\\n      this._rejected = true;\\n      this._error = error;\\n      Parse._arrayEach(this._rejectedCallbacks, function(rejectedCallback) {\\n        rejectedCallback(error);\\n      });\\n      this._resolvedCallbacks = [];\\n      this._rejectedCallbacks = [];\\n    },\\n\\n    /**\\n     * Adds callbacks to be called when this promise is fulfilled. Returns a new\\n     * Promise that will be fulfilled when the callback is complete. It allows\\n     * chaining. If the callback itself returns a Promise, then the one returned\\n     * by \\\"then\\\" will not be fulfilled until that one returned by the callback\\n     * is fulfilled.\\n     * @param {Function} resolvedCallback Function that is called when this\\n     * Promise is resolved. Once the callback is complete, then the Promise\\n     * returned by \\\"then\\\" will also be fulfilled.\\n     * @param {Function} rejectedCallback Function that is called when this\\n     * Promise is rejected with an error. Once the callback is complete, then\\n     * the promise returned by \\\"then\\\" with be resolved successfully. If\\n     * rejectedCallback is null, or it returns a rejected Promise, then the\\n     * Promise returned by \\\"then\\\" will be rejected with that error.\\n     * @return {Parse.Promise} A new Promise that will be fulfilled after this\\n     * Promise is fulfilled and either callback has completed. If the callback\\n     * returned a Promise, then this Promise will not be fulfilled until that\\n     * one is.\\n     */\\n    then: function(resolvedCallback, rejectedCallback) {\\n      var promise = new Parse.Promise();\\n\\n      var wrappedResolvedCallback = function() {\\n        var result = arguments;\\n        if (resolvedCallback) {\\n          result = [resolvedCallback.apply(this, result)];\\n        }\\n        if (result.length === 1 && Parse.Promise.is(result[0])) {\\n          result[0].then(function() {\\n            promise.resolve.apply(promise, arguments);\\n          }, function(error) {\\n            promise.reject(error);\\n          });\\n        } else {\\n          promise.resolve.apply(promise, result);\\n        }\\n      };\\n\\n      var wrappedRejectedCallback = function(error) {\\n        var result = [];\\n        if (rejectedCallback) {\\n          result = [rejectedCallback(error)];\\n          if (result.length === 1 && Parse.Promise.is(result[0])) {\\n            result[0].then(function() {\\n              promise.resolve.apply(promise, arguments);\\n            }, function(error) {\\n              promise.reject(error);\\n            });\\n          } else {\\n            // A Promises/A+ compliant implementation would call:\\n            // promise.resolve.apply(promise, result);\\n            promise.reject(result[0]);\\n          }\\n        } else {\\n          promise.reject(error);\\n        }\\n      };\\n\\n      if (this._resolved) {\\n        wrappedResolvedCallback.apply(this, this._result);\\n      } else if (this._rejected) {\\n        wrappedRejectedCallback(this._error);\\n      } else {\\n        this._resolvedCallbacks.push(wrappedResolvedCallback);\\n        this._rejectedCallbacks.push(wrappedRejectedCallback);\\n      }\\n\\n      return promise;\\n    },\\n\\n    /**\\n     * Add handlers to be called when the promise\\n     * is either resolved or rejected\\n     */\\n    always: function(callback) {\\n      return this.then(callback, callback);\\n    },\\n\\n    /**\\n     * Add handlers to be called when the Promise object is resolved\\n     */\\n    done: function(callback) {\\n      return this.then(callback);\\n    },\\n\\n    /**\\n     * Add handlers to be called when the Promise object is rejected\\n     */\\n    fail: function(callback) {\\n      return this.then(null, callback);\\n    },\\n\\n    /**\\n     * Run the given callbacks after this promise is fulfilled.\\n     * @param optionsOrCallback {} A Backbone-style options callback, or a\\n     * callback function. If this is an options object and contains a \\\"model\\\"\\n     * attributes, that will be passed to error callbacks as the first argument.\\n     * @param model {} If truthy, this will be passed as the first result of\\n     * error callbacks. This is for Backbone-compatability.\\n     * @return {Parse.Promise} A promise that will be resolved after the\\n     * callbacks are run, with the same result as this.\\n     */\\n    _thenRunCallbacks: function(optionsOrCallback, model) {\\n      var options;\\n      if (_.isFunction(optionsOrCallback)) {\\n        var callback = optionsOrCallback;\\n        options = {\\n          success: function(result) {\\n            callback(result, null);\\n          },\\n          error: function(error) {\\n            callback(null, error);\\n          }\\n        };\\n      } else {\\n        options = _.clone(optionsOrCallback);\\n      }\\n      options = options || {};\\n\\n      return this.then(function(result) {\\n        if (options.success) {\\n          options.success.apply(this, arguments);\\n        } else if (model) {\\n          // When there's no callback, a sync event should be triggered.\\n          model.trigger('sync', model, result, options);\\n        }\\n        return Parse.Promise.as.apply(Parse.Promise, arguments);\\n      }, function(error) {\\n        if (options.error) {\\n          if (!_.isUndefined(model)) {\\n            options.error(model, error);\\n          } else {\\n            options.error(error);\\n          }\\n        } else if (model) {\\n          // When there's no error callback, an error event should be triggered.\\n          model.trigger('error', model, error, options);\\n        }\\n        // By explicitly returning a rejected Promise, this will work with\\n        // either jQuery or Promises/A semantics.\\n        return Parse.Promise.error(error);\\n      });\\n    },\\n\\n    /**\\n     * Adds a callback function that should be called regardless of whether\\n     * this promise failed or succeeded. The callback will be given either the\\n     * array of results for its first argument, or the error as its second,\\n     * depending on whether this Promise was rejected or resolved. Returns a\\n     * new Promise, like \\\"then\\\" would.\\n     * @param {Function} continuation the callback.\\n     */\\n    _continueWith: function(continuation) {\\n      return this.then(function() {\\n        return continuation(arguments, null);\\n      }, function(error) {\\n        return continuation(null, error);\\n      });\\n    }\\n\\n  });\\n\\n}(this));\\n\\n/*jshint bitwise:false *//*global FileReader: true, File: true */\\n(function(root) {\\n  root.Parse = root.Parse || {};\\n  var Parse = root.Parse;\\n  var _ = Parse._;\\n\\n  var b64Digit = function(number) {\\n    if (number < 26) {\\n      return String.fromCharCode(65 + number);\\n    }\\n    if (number < 52) {\\n      return String.fromCharCode(97 + (number - 26));\\n    }\\n    if (number < 62) {\\n      return String.fromCharCode(48 + (number - 52));\\n    }\\n    if (number === 62) {\\n      return \\\"+\\\";\\n    }\\n    if (number === 63) {\\n      return \\\"/\\\";\\n    }\\n    throw \\\"Tried to encode large digit \\\" + number + \\\" in base64.\\\";\\n  };\\n\\n  var encodeBase64 = function(array) {\\n    var chunks = [];\\n    chunks.length = Math.ceil(array.length / 3);\\n    _.times(chunks.length, function(i) {\\n      var b1 = array[i * 3];\\n      var b2 = array[i * 3 + 1] || 0;\\n      var b3 = array[i * 3 + 2] || 0;\\n\\n      var has2 = (i * 3 + 1) < array.length;\\n      var has3 = (i * 3 + 2) < array.length;\\n\\n      chunks[i] = [\\n        b64Digit((b1 >> 2) & 0x3F),\\n        b64Digit(((b1 << 4) & 0x30) | ((b2 >> 4) & 0x0F)),\\n        has2 ? b64Digit(((b2 << 2) & 0x3C) | ((b3 >> 6) & 0x03)) : \\\"=\\\",\\n        has3 ? b64Digit(b3 & 0x3F) : \\\"=\\\"\\n      ].join(\\\"\\\");\\n    });\\n    return chunks.join(\\\"\\\");\\n  };\\n\\n\\n  // A list of file extensions to mime types as found here:\\n  // http://stackoverflow.com/questions/58510/using-net-how-can-you-find-the-\\n  //     mime-type-of-a-file-based-on-the-file-signature\\n  var mimeTypes = {\\n    ai: \\\"application/postscript\\\",\\n    aif: \\\"audio/x-aiff\\\",\\n    aifc: \\\"audio/x-aiff\\\",\\n    aiff: \\\"audio/x-aiff\\\",\\n    asc: \\\"text/plain\\\",\\n    atom: \\\"application/atom+xml\\\",\\n    au: \\\"audio/basic\\\",\\n    avi: \\\"video/x-msvideo\\\",\\n    bcpio: \\\"application/x-bcpio\\\",\\n    bin: \\\"application/octet-stream\\\",\\n    bmp: \\\"image/bmp\\\",\\n    cdf: \\\"application/x-netcdf\\\",\\n    cgm: \\\"image/cgm\\\",\\n    \\\"class\\\": \\\"application/octet-stream\\\",\\n    cpio: \\\"application/x-cpio\\\",\\n    cpt: \\\"application/mac-compactpro\\\",\\n    csh: \\\"application/x-csh\\\",\\n    css: \\\"text/css\\\",\\n    dcr: \\\"application/x-director\\\",\\n    dif: \\\"video/x-dv\\\",\\n    dir: \\\"application/x-director\\\",\\n    djv: \\\"image/vnd.djvu\\\",\\n    djvu: \\\"image/vnd.djvu\\\",\\n    dll: \\\"application/octet-stream\\\",\\n    dmg: \\\"application/octet-stream\\\",\\n    dms: \\\"application/octet-stream\\\",\\n    doc: \\\"application/msword\\\",\\n    docx: \\\"application/vnd.openxmlformats-officedocument.wordprocessingml.\\\" +\\n          \\\"document\\\",\\n    dotx: \\\"application/vnd.openxmlformats-officedocument.wordprocessingml.\\\" +\\n          \\\"template\\\",\\n    docm: \\\"application/vnd.ms-word.document.macroEnabled.12\\\",\\n    dotm: \\\"application/vnd.ms-word.template.macroEnabled.12\\\",\\n    dtd: \\\"application/xml-dtd\\\",\\n    dv: \\\"video/x-dv\\\",\\n    dvi: \\\"application/x-dvi\\\",\\n    dxr: \\\"application/x-director\\\",\\n    eps: \\\"application/postscript\\\",\\n    etx: \\\"text/x-setext\\\",\\n    exe: \\\"application/octet-stream\\\",\\n    ez: \\\"application/andrew-inset\\\",\\n    gif: \\\"image/gif\\\",\\n    gram: \\\"application/srgs\\\",\\n    grxml: \\\"application/srgs+xml\\\",\\n    gtar: \\\"application/x-gtar\\\",\\n    hdf: \\\"application/x-hdf\\\",\\n    hqx: \\\"application/mac-binhex40\\\",\\n    htm: \\\"text/html\\\",\\n    html: \\\"text/html\\\",\\n    ice: \\\"x-conference/x-cooltalk\\\",\\n    ico: \\\"image/x-icon\\\",\\n    ics: \\\"text/calendar\\\",\\n    ief: \\\"image/ief\\\",\\n    ifb: \\\"text/calendar\\\",\\n    iges: \\\"model/iges\\\",\\n    igs: \\\"model/iges\\\",\\n    jnlp: \\\"application/x-java-jnlp-file\\\",\\n    jp2: \\\"image/jp2\\\",\\n    jpe: \\\"image/jpeg\\\",\\n    jpeg: \\\"image/jpeg\\\",\\n    jpg: \\\"image/jpeg\\\",\\n    js: \\\"application/x-javascript\\\",\\n    kar: \\\"audio/midi\\\",\\n    latex: \\\"application/x-latex\\\",\\n    lha: \\\"application/octet-stream\\\",\\n    lzh: \\\"application/octet-stream\\\",\\n    m3u: \\\"audio/x-mpegurl\\\",\\n    m4a: \\\"audio/mp4a-latm\\\",\\n    m4b: \\\"audio/mp4a-latm\\\",\\n    m4p: \\\"audio/mp4a-latm\\\",\\n    m4u: \\\"video/vnd.mpegurl\\\",\\n    m4v: \\\"video/x-m4v\\\",\\n    mac: \\\"image/x-macpaint\\\",\\n    man: \\\"application/x-troff-man\\\",\\n    mathml: \\\"application/mathml+xml\\\",\\n    me: \\\"application/x-troff-me\\\",\\n    mesh: \\\"model/mesh\\\",\\n    mid: \\\"audio/midi\\\",\\n    midi: \\\"audio/midi\\\",\\n    mif: \\\"application/vnd.mif\\\",\\n    mov: \\\"video/quicktime\\\",\\n    movie: \\\"video/x-sgi-movie\\\",\\n    mp2: \\\"audio/mpeg\\\",\\n    mp3: \\\"audio/mpeg\\\",\\n    mp4: \\\"video/mp4\\\",\\n    mpe: \\\"video/mpeg\\\",\\n    mpeg: \\\"video/mpeg\\\",\\n    mpg: \\\"video/mpeg\\\",\\n    mpga: \\\"audio/mpeg\\\",\\n    ms: \\\"application/x-troff-ms\\\",\\n    msh: \\\"model/mesh\\\",\\n    mxu: \\\"video/vnd.mpegurl\\\",\\n    nc: \\\"application/x-netcdf\\\",\\n    oda: \\\"application/oda\\\",\\n    ogg: \\\"application/ogg\\\",\\n    pbm: \\\"image/x-portable-bitmap\\\",\\n    pct: \\\"image/pict\\\",\\n    pdb: \\\"chemical/x-pdb\\\",\\n    pdf: \\\"application/pdf\\\",\\n    pgm: \\\"image/x-portable-graymap\\\",\\n    pgn: \\\"application/x-chess-pgn\\\",\\n    pic: \\\"image/pict\\\",\\n    pict: \\\"image/pict\\\",\\n    png: \\\"image/png\\\",\\n    pnm: \\\"image/x-portable-anymap\\\",\\n    pnt: \\\"image/x-macpaint\\\",\\n    pntg: \\\"image/x-macpaint\\\",\\n    ppm: \\\"image/x-portable-pixmap\\\",\\n    ppt: \\\"application/vnd.ms-powerpoint\\\",\\n    pptx: \\\"application/vnd.openxmlformats-officedocument.presentationml.\\\" +\\n          \\\"presentation\\\",\\n    potx: \\\"application/vnd.openxmlformats-officedocument.presentationml.\\\" +\\n          \\\"template\\\",\\n    ppsx: \\\"application/vnd.openxmlformats-officedocument.presentationml.\\\" +\\n          \\\"slideshow\\\",\\n    ppam: \\\"application/vnd.ms-powerpoint.addin.macroEnabled.12\\\",\\n    pptm: \\\"application/vnd.ms-powerpoint.presentation.macroEnabled.12\\\",\\n    potm: \\\"application/vnd.ms-powerpoint.template.macroEnabled.12\\\",\\n    ppsm: \\\"application/vnd.ms-powerpoint.slideshow.macroEnabled.12\\\",\\n    ps: \\\"application/postscript\\\",\\n    qt: \\\"video/quicktime\\\",\\n    qti: \\\"image/x-quicktime\\\",\\n    qtif: \\\"image/x-quicktime\\\",\\n    ra: \\\"audio/x-pn-realaudio\\\",\\n    ram: \\\"audio/x-pn-realaudio\\\",\\n    ras: \\\"image/x-cmu-raster\\\",\\n    rdf: \\\"application/rdf+xml\\\",\\n    rgb: \\\"image/x-rgb\\\",\\n    rm: \\\"application/vnd.rn-realmedia\\\",\\n    roff: \\\"application/x-troff\\\",\\n    rtf: \\\"text/rtf\\\",\\n    rtx: \\\"text/richtext\\\",\\n    sgm: \\\"text/sgml\\\",\\n    sgml: \\\"text/sgml\\\",\\n    sh: \\\"application/x-sh\\\",\\n    shar: \\\"application/x-shar\\\",\\n    silo: \\\"model/mesh\\\",\\n    sit: \\\"application/x-stuffit\\\",\\n    skd: \\\"application/x-koan\\\",\\n    skm: \\\"application/x-koan\\\",\\n    skp: \\\"application/x-koan\\\",\\n    skt: \\\"application/x-koan\\\",\\n    smi: \\\"application/smil\\\",\\n    smil: \\\"application/smil\\\",\\n    snd: \\\"audio/basic\\\",\\n    so: \\\"application/octet-stream\\\",\\n    spl: \\\"application/x-futuresplash\\\",\\n    src: \\\"application/x-wais-source\\\",\\n    sv4cpio: \\\"application/x-sv4cpio\\\",\\n    sv4crc: \\\"application/x-sv4crc\\\",\\n    svg: \\\"image/svg+xml\\\",\\n    swf: \\\"application/x-shockwave-flash\\\",\\n    t: \\\"application/x-troff\\\",\\n    tar: \\\"application/x-tar\\\",\\n    tcl: \\\"application/x-tcl\\\",\\n    tex: \\\"application/x-tex\\\",\\n    texi: \\\"application/x-texinfo\\\",\\n    texinfo: \\\"application/x-texinfo\\\",\\n    tif: \\\"image/tiff\\\",\\n    tiff: \\\"image/tiff\\\",\\n    tr: \\\"application/x-troff\\\",\\n    tsv: \\\"text/tab-separated-values\\\",\\n    txt: \\\"text/plain\\\",\\n    ustar: \\\"application/x-ustar\\\",\\n    vcd: \\\"application/x-cdlink\\\",\\n    vrml: \\\"model/vrml\\\",\\n    vxml: \\\"application/voicexml+xml\\\",\\n    wav: \\\"audio/x-wav\\\",\\n    wbmp: \\\"image/vnd.wap.wbmp\\\",\\n    wbmxl: \\\"application/vnd.wap.wbxml\\\",\\n    wml: \\\"text/vnd.wap.wml\\\",\\n    wmlc: \\\"application/vnd.wap.wmlc\\\",\\n    wmls: \\\"text/vnd.wap.wmlscript\\\",\\n    wmlsc: \\\"application/vnd.wap.wmlscriptc\\\",\\n    wrl: \\\"model/vrml\\\",\\n    xbm: \\\"image/x-xbitmap\\\",\\n    xht: \\\"application/xhtml+xml\\\",\\n    xhtml: \\\"application/xhtml+xml\\\",\\n    xls: \\\"application/vnd.ms-excel\\\",\\n    xml: \\\"application/xml\\\",\\n    xpm: \\\"image/x-xpixmap\\\",\\n    xsl: \\\"application/xml\\\",\\n    xlsx: \\\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\\\",\\n    xltx: \\\"application/vnd.openxmlformats-officedocument.spreadsheetml.\\\" +\\n          \\\"template\\\",\\n    xlsm: \\\"application/vnd.ms-excel.sheet.macroEnabled.12\\\",\\n    xltm: \\\"application/vnd.ms-excel.template.macroEnabled.12\\\",\\n    xlam: \\\"application/vnd.ms-excel.addin.macroEnabled.12\\\",\\n    xlsb: \\\"application/vnd.ms-excel.sheet.binary.macroEnabled.12\\\",\\n    xslt: \\\"application/xslt+xml\\\",\\n    xul: \\\"application/vnd.mozilla.xul+xml\\\",\\n    xwd: \\\"image/x-xwindowdump\\\",\\n    xyz: \\\"chemical/x-xyz\\\",\\n    zip: \\\"application/zip\\\"\\n  };\\n\\n  /**\\n   * Reads a File using a FileReader.\\n   * @param file {File} the File to read.\\n   * @param type {String} (optional) the mimetype to override with.\\n   * @return {Parse.Promise} A Promise that will be fulfilled with a\\n   *     base64-encoded string of the data and its mime type.\\n   */\\n  var readAsync = function(file, type) {\\n    var promise = new Parse.Promise();\\n\\n    if (typeof(FileReader) === \\\"undefined\\\") {\\n      return Parse.Promise.error(new Parse.Error(\\n          Parse.Error.FILE_READ_ERROR,\\n          \\\"Attempted to use a FileReader on an unsupported browser.\\\"));\\n    }\\n\\n    var reader = new FileReader();\\n    reader.onloadend = function() {\\n      if (reader.readyState !== 2) {\\n        promise.reject(new Parse.Error(\\n            Parse.Error.FILE_READ_ERROR,\\n            \\\"Error reading file.\\\"));\\n        return;\\n      }\\n\\n      var dataURL = reader.result;\\n      var matches = /^data:([^;]*);base64,(.*)$/.exec(dataURL);\\n      if (!matches) {\\n        promise.reject(new Parse.Error(\\n            Parse.ERROR.FILE_READ_ERROR,\\n            \\\"Unable to interpret data URL: \\\" + dataURL));\\n        return;\\n      }\\n\\n      promise.resolve(matches[2], type || matches[1]);\\n    };\\n    reader.readAsDataURL(file);\\n    return promise;\\n  };\\n\\n  /**\\n   * A Parse.File is a local representation of a file that is saved to the Parse\\n   * cloud.\\n   * @class\\n   * @param name {String} The file's name. This will be prefixed by a unique\\n   *     value once the file has finished saving. The file name must begin with\\n   *     an alphanumeric character, and consist of alphanumeric characters,\\n   *     periods, spaces, underscores, or dashes.\\n   * @param data {Array} The data for the file, as either:\\n   *     1. an Array of byte value Numbers, or\\n   *     2. an Object like { base64: \\\"...\\\" } with a base64-encoded String.\\n   *     3. a File object selected with a file upload control. (3) only works\\n   *        in Firefox 3.6+, Safari 6.0.2+, Chrome 7+, and IE 10+.\\n   *        For example:<pre>\\n   * var fileUploadControl = $(\\\"#profilePhotoFileUpload\\\")[0];\\n   * if (fileUploadControl.files.length > 0) {\\n   *   var file = fileUploadControl.files[0];\\n   *   var name = \\\"photo.jpg\\\";\\n   *   var parseFile = new Parse.File(name, file);\\n   *   parseFile.save().then(function() {\\n   *     // The file has been saved to Parse.\\n   *   }, function(error) {\\n   *     // The file either could not be read, or could not be saved to Parse.\\n   *   });\\n   * }</pre>\\n   * @param type {String} Optional Content-Type header to use for the file. If\\n   *     this is omitted, the content type will be inferred from the name's\\n   *     extension.\\n   */\\n  Parse.File = function(name, data, type) {\\n    this._name = name;\\n\\n    // Guess the content type from the extension if we need to.\\n    var extension = /\\\\.([^.]*)$/.exec(name);\\n    if (extension) {\\n      extension = extension[1].toLowerCase();\\n    }\\n    var guessedType = type || mimeTypes[extension] || \\\"text/plain\\\";\\n\\n    if (_.isArray(data)) {\\n      this._source = Parse.Promise.as(encodeBase64(data), guessedType);\\n    } else if (data && data.base64) {\\n      // if it contains data uri, extract based64 and the type out of it.\\n      /*jslint maxlen: 1000*/\\n      var dataUriRegexp = /^data:([a-zA-Z]*\\\\/[a-zA-Z+.-]*);(charset=[a-zA-Z0-9\\\\-\\\\/\\\\s]*,)?base64,(\\\\S+)/;\\n      /*jslint maxlen: 80*/\\n\\n      var matches = dataUriRegexp.exec(data.base64);\\n      if (matches && matches.length > 0) {\\n        // if data URI with charset, there will have 4 matches.\\n        this._source = Parse.Promise.as(\\n          (matches.length === 4 ? matches[3] : matches[2]), matches[1]\\n        );\\n      } else {\\n        this._source = Parse.Promise.as(data.base64, guessedType);\\n      }\\n    } else if (typeof(File) !== \\\"undefined\\\" && data instanceof File) {\\n      this._source = readAsync(data, type);\\n    } else if (_.isString(data)) {\\n      throw \\\"Creating a Parse.File from a String is not yet supported.\\\";\\n    }\\n  };\\n\\n  Parse.File.prototype = {\\n\\n    /**\\n     * Gets the name of the file. Before save is called, this is the filename\\n     * given by the user. After save is called, that name gets prefixed with a\\n     * unique identifier.\\n     */\\n    name: function() {\\n      return this._name;\\n    },\\n\\n    /**\\n     * Gets the url of the file. It is only available after you save the file or\\n     * after you get the file from a Parse.Object.\\n     * @return {String}\\n     */\\n    url: function() {\\n      return this._url;\\n    },\\n\\n    /**\\n     * Saves the file to the Parse cloud.\\n     * @param {Object} options A Backbone-style options object.\\n     * @return {Parse.Promise} Promise that is resolved when the save finishes.\\n     */\\n    save: function(options) {\\n      options= options || {};\\n\\n      var self = this;\\n      if (!self._previousSave) {\\n        self._previousSave = self._source.then(function(base64, type) {\\n          var data = {\\n            base64: base64,\\n            _ContentType: type\\n          };\\n          return Parse._request({\\n            route: \\\"files\\\",\\n            className: self._name,\\n            method: 'POST',\\n            data: data,\\n            useMasterKey: options.useMasterKey\\n          });\\n\\n        }).then(function(response) {\\n          self._name = response.name;\\n          self._url = response.url;\\n          return self;\\n        });\\n      }\\n      return self._previousSave._thenRunCallbacks(options);\\n    }\\n  };\\n\\n}(this));\\n\\n// Parse.Object is analogous to the Java ParseObject.\\n// It also implements the same interface as a Backbone model.\\n\\n(function(root) {\\n  root.Parse = root.Parse || {};\\n  var Parse = root.Parse;\\n  var _ = Parse._;\\n\\n  /**\\n   * Creates a new model with defined attributes. A client id (cid) is\\n   * automatically generated and assigned for you.\\n   *\\n   * <p>You won't normally call this method directly.  It is recommended that\\n   * you use a subclass of <code>Parse.Object</code> instead, created by calling\\n   * <code>extend</code>.</p>\\n   *\\n   * <p>However, if you don't want to use a subclass, or aren't sure which\\n   * subclass is appropriate, you can use this form:<pre>\\n   *     var object = new Parse.Object(\\\"ClassName\\\");\\n   * </pre>\\n   * That is basically equivalent to:<pre>\\n   *     var MyClass = Parse.Object.extend(\\\"ClassName\\\");\\n   *     var object = new MyClass();\\n   * </pre></p>\\n   *\\n   * @param {Object} attributes The initial set of data to store in the object.\\n   * @param {Object} options A set of Backbone-like options for creating the\\n   *     object.  The only option currently supported is \\\"collection\\\".\\n   * @see Parse.Object.extend\\n   *\\n   * @class\\n   *\\n   * <p>The fundamental unit of Parse data, which implements the Backbone Model\\n   * interface.</p>\\n   */\\n  Parse.Object = function(attributes, options) {\\n    // Allow new Parse.Object(\\\"ClassName\\\") as a shortcut to _create.\\n    if (_.isString(attributes)) {\\n      return Parse.Object._create.apply(this, arguments);\\n    }\\n\\n    attributes = attributes || {};\\n    if (options && options.parse) {\\n      attributes = this.parse(attributes);\\n    }\\n    var defaults = Parse._getValue(this, 'defaults');\\n    if (defaults) {\\n      attributes = _.extend({}, defaults, attributes);\\n    }\\n    if (options && options.collection) {\\n      this.collection = options.collection;\\n    }\\n\\n    this._serverData = {};  // The last known data for this object from cloud.\\n    this._opSetQueue = [{}];  // List of sets of changes to the data.\\n    this.attributes = {};  // The best estimate of this's current data.\\n\\n    this._hashedJSON = {};  // Hash of values of containers at last save.\\n    this._escapedAttributes = {};\\n    this.cid = _.uniqueId('c');\\n    this.changed = {};\\n    this._silent = {};\\n    this._pending = {};\\n    if (!this.set(attributes, {silent: true})) {\\n      throw new Error(\\\"Can't create an invalid Parse.Object\\\");\\n    }\\n    this.changed = {};\\n    this._silent = {};\\n    this._pending = {};\\n    this._hasData = true;\\n    this._previousAttributes = _.clone(this.attributes);\\n    this.initialize.apply(this, arguments);\\n  };\\n\\n  /**\\n   * @lends Parse.Object.prototype\\n   * @property {String} id The objectId of the Parse Object.\\n   */\\n\\n  /**\\n   * Saves the given list of Parse.Object.\\n   * If any error is encountered, stops and calls the error handler.\\n   *\\n   * <pre>\\n   *   Parse.Object.saveAll([object1, object2, ...], {\\n   *     success: function(list) {\\n   *       // All the objects were saved.\\n   *     },\\n   *     error: function(error) {\\n   *       // An error occurred while saving one of the objects.\\n   *     },\\n   *   });\\n   * </pre>\\n   *\\n   * @param {Array} list A list of <code>Parse.Object</code>.\\n   * @param {Object} options A Backbone-style callback object.\\n   * Valid options are:<ul>\\n   *   <li>useMasterKey: In Cloud Code and Node only, causes the Master Key to\\n   *     be used for this request.\\n   * </ul>\\n   */\\n  Parse.Object.saveAll = function(list, options) {\\n    options = options || {};\\n    return Parse.Object._deepSaveAsync(list, {\\n      useMasterKey: options.useMasterKey\\n    })._thenRunCallbacks(options);\\n  };\\n\\n  /**\\n   * Destroy the given list of models on the server if it was already persisted.\\n   * Optimistically removes each model from its collection, if it has one.\\n   * If `wait: true` is passed, waits for the server to respond before removal.\\n   *\\n   * <p>Unlike saveAll, if an error occurs while deleting an individual model,\\n   * this method will continue trying to delete the rest of the models if\\n   * possible, except in the case of a fatal error like a connection error.\\n   *\\n   * <p>In particular, the Parse.Error object returned in the case of error may\\n   * be one of two types:\\n   *\\n   * <ul>\\n   *   <li>A Parse.Error.AGGREGATE_ERROR. This object's \\\"errors\\\" property is an\\n   *       array of other Parse.Error objects. Each error object in this array\\n   *       has an \\\"object\\\" property that references the object that could not be\\n   *       deleted (for instance, because that object could not be found).</li>\\n   *   <li>A non-aggregate Parse.Error. This indicates a serious error that\\n   *       caused the delete operation to be aborted partway through (for\\n   *       instance, a connection failure in the middle of the delete).</li>\\n   * </ul>\\n   *\\n   * <pre>\\n   *   Parse.Object.destroyAll([object1, object2, ...], {\\n   *     success: function() {\\n   *       // All the objects were deleted.\\n   *     },\\n   *     error: function(error) {\\n   *       // An error occurred while deleting one or more of the objects.\\n   *       // If this is an aggregate error, then we can inspect each error\\n   *       // object individually to determine the reason why a particular\\n   *       // object was not deleted.\\n   *       if (error.code == Parse.Error.AGGREGATE_ERROR) {\\n   *         for (var i = 0; i < error.errors.length; i++) {\\n   *           console.log(\\\"Couldn't delete \\\" + error.errors[i].object.id +\\n   *             \\\"due to \\\" + error.errors[i].message);\\n   *         }\\n   *       } else {\\n   *         console.log(\\\"Delete aborted because of \\\" + error.message);\\n   *       }\\n   *     },\\n   *   });\\n   * </pre>\\n   *\\n   * @param {Array} list A list of <code>Parse.Object</code>.\\n   * @param {Object} options A Backbone-style callback object.\\n   * Valid options are:<ul>\\n   *   <li>useMasterKey: In Cloud Code and Node only, causes the Master Key to\\n   *     be used for this request.\\n   * </ul>\\n   */\\n  Parse.Object.destroyAll = function(list, options) {\\n    options = options || {};\\n\\n    var triggerDestroy = function(object) {\\n      object.trigger('destroy', object, object.collection, options);\\n    };\\n\\n    var errors = [];\\n    var destroyBatch = function(batch) {\\n      var promise = Parse.Promise.as();\\n\\n      if (batch.length > 0) {\\n        promise = promise.then(function() {\\n          return Parse._request({\\n            route: \\\"batch\\\",\\n            method: \\\"POST\\\",\\n            useMasterKey: options.useMasterKey,\\n            data: {\\n              requests: _.map(batch, function(object) {\\n                return {\\n                  method: \\\"DELETE\\\",\\n                  path: \\\"/1/classes/\\\" + object.className + \\\"/\\\" + object.id\\n                };\\n              })\\n            }\\n          });\\n        }).then(function(responses, status, xhr) {\\n          Parse._arrayEach(batch, function(object, i) {\\n            if (responses[i].success && options.wait) {\\n              triggerDestroy(object);\\n            } else if (responses[i].error) {\\n              var error = new Parse.Error(responses[i].error.code,\\n                                          responses[i].error.error);\\n              error.object = object;\\n\\n              errors.push(error);\\n            }\\n          });\\n        });\\n      }\\n\\n      return promise;\\n    };\\n\\n    var promise = Parse.Promise.as();\\n    var batch = [];\\n    Parse._arrayEach(list, function(object, i) {\\n      if (!object.id || !options.wait) {\\n        triggerDestroy(object);\\n      }\\n\\n      if (object.id) {\\n        batch.push(object);\\n      }\\n\\n      if (batch.length === 20 || i+1 === list.length) {\\n        var thisBatch = batch;\\n        batch = [];\\n\\n        promise = promise.then(function() {\\n          return destroyBatch(thisBatch);\\n        });\\n      }\\n    });\\n\\n    return promise.then(function() {\\n      if (errors.length === 0) {\\n        return true;\\n      } else {\\n        var error = new Parse.Error(Parse.Error.AGGREGATE_ERROR,\\n                                    \\\"Error deleting an object in destroyAll\\\");\\n        error.errors = errors;\\n\\n        return Parse.Promise.error(error);\\n      }\\n    })._thenRunCallbacks(options);\\n  };\\n\\n  /**\\n   * Fetches the given list of Parse.Object.\\n   * If any error is encountered, stops and calls the error handler.\\n   *\\n   * <pre>\\n   *   Parse.Object.fetchAll([object1, object2, ...], {\\n   *     success: function(list) {\\n   *       // All the objects were fetched.\\n   *     },\\n   *     error: function(error) {\\n   *       // An error occurred while fetching one of the objects.\\n   *     },\\n   *   });\\n   * </pre>\\n   *\\n   * @param {Array} list A list of <code>Parse.Object</code>.\\n   * @param {Object} options A Backbone-style callback object.\\n   * Valid options are:<ul>\\n   *   <li>success: A Backbone-style success callback.\\n   *   <li>error: An Backbone-style error callback.\\n   * </ul>\\n   */\\n  Parse.Object.fetchAll = function(list, options) {\\n    return Parse.Object._fetchAll(\\n      list,\\n      true\\n    )._thenRunCallbacks(options);\\n  };\\n\\n  /**\\n   * Fetches the given list of Parse.Object if needed.\\n   * If any error is encountered, stops and calls the error handler.\\n   *\\n   * <pre>\\n   *   Parse.Object.fetchAllIfNeeded([object1, ...], {\\n   *     success: function(list) {\\n   *       // Objects were fetched and updated.\\n   *     },\\n   *     error: function(error) {\\n   *       // An error occurred while fetching one of the objects.\\n   *     },\\n   *   });\\n   * </pre>\\n   *\\n   * @param {Array} list A list of <code>Parse.Object</code>.\\n   * @param {Object} options A Backbone-style callback object.\\n   * Valid options are:<ul>\\n   *   <li>success: A Backbone-style success callback.\\n   *   <li>error: An Backbone-style error callback.\\n   * </ul>\\n   */\\n  Parse.Object.fetchAllIfNeeded = function(list, options) {\\n    return Parse.Object._fetchAll(\\n      list,\\n      false\\n    )._thenRunCallbacks(options);\\n  };\\n\\n  // Attach all inheritable methods to the Parse.Object prototype.\\n  _.extend(Parse.Object.prototype, Parse.Events,\\n           /** @lends Parse.Object.prototype */ {\\n    _existed: false,\\n\\n    /**\\n     * Initialize is an empty function by default. Override it with your own\\n     * initialization logic.\\n     */\\n    initialize: function(){},\\n\\n    /**\\n     * Returns a JSON version of the object suitable for saving to Parse.\\n     * @return {Object}\\n     */\\n    toJSON: function() {\\n      var json = this._toFullJSON();\\n      Parse._arrayEach([\\\"__type\\\", \\\"className\\\"],\\n                       function(key) { delete json[key]; });\\n      return json;\\n    },\\n\\n    _toFullJSON: function(seenObjects) {\\n      var json = _.clone(this.attributes);\\n      Parse._objectEach(json, function(val, key) {\\n        json[key] = Parse._encode(val, seenObjects);\\n      });\\n      Parse._objectEach(this._operations, function(val, key) {\\n        json[key] = val;\\n      });\\n\\n      if (_.has(this, \\\"id\\\")) {\\n        json.objectId = this.id;\\n      }\\n      if (_.has(this, \\\"createdAt\\\")) {\\n        if (_.isDate(this.createdAt)) {\\n          json.createdAt = this.createdAt.toJSON();\\n        } else {\\n          json.createdAt = this.createdAt;\\n        }\\n      }\\n\\n      if (_.has(this, \\\"updatedAt\\\")) {\\n        if (_.isDate(this.updatedAt)) {\\n          json.updatedAt = this.updatedAt.toJSON();\\n        } else {\\n          json.updatedAt = this.updatedAt;\\n        }\\n      }\\n      json.__type = \\\"Object\\\";\\n      json.className = this.className;\\n      return json;\\n    },\\n\\n    /**\\n     * Updates _hashedJSON to reflect the current state of this object.\\n     * Adds any changed hash values to the set of pending changes.\\n     */\\n    _refreshCache: function() {\\n      var self = this;\\n      if (self._refreshingCache) {\\n        return;\\n      }\\n      self._refreshingCache = true;\\n      Parse._objectEach(this.attributes, function(value, key) {\\n        if (value instanceof Parse.Object) {\\n          value._refreshCache();\\n        } else if (_.isObject(value)) {\\n          if (self._resetCacheForKey(key)) {\\n            self.set(key, new Parse.Op.Set(value), { silent: true });\\n          }\\n        }\\n      });\\n      delete self._refreshingCache;\\n    },\\n\\n    /**\\n     * Returns true if this object has been modified since its last\\n     * save/refresh.  If an attribute is specified, it returns true only if that\\n     * particular attribute has been modified since the last save/refresh.\\n     * @param {String} attr An attribute name (optional).\\n     * @return {Boolean}\\n     */\\n    dirty: function(attr) {\\n      this._refreshCache();\\n\\n      var currentChanges = _.last(this._opSetQueue);\\n\\n      if (attr) {\\n        return (currentChanges[attr] ? true : false);\\n      }\\n      if (!this.id) {\\n        return true;\\n      }\\n      if (_.keys(currentChanges).length > 0) {\\n        return true;\\n      }\\n      return false;\\n    },\\n\\n    /**\\n     * Returns an array of keys that have been modified since last save/refresh\\n     * @return {Array of string}\\n     */\\n    dirtyKeys: function() {\\n      return _.keys(_.last(this._opSetQueue));\\n    },\\n\\n    /**\\n     * Gets a Pointer referencing this Object.\\n     */\\n    _toPointer: function() {\\n      if (!this.id) {\\n        throw new Error(\\\"Can't serialize an unsaved Parse.Object\\\");\\n      }\\n      return { __type: \\\"Pointer\\\",\\n               className: this.className,\\n               objectId: this.id };\\n    },\\n\\n    /**\\n     * Gets the value of an attribute.\\n     * @param {String} attr The string name of an attribute.\\n     */\\n    get: function(attr) {\\n      return this.attributes[attr];\\n    },\\n\\n    /**\\n     * Gets a relation on the given class for the attribute.\\n     * @param String attr The attribute to get the relation for.\\n     */\\n    relation: function(attr) {\\n      var value = this.get(attr);\\n      if (value) {\\n        if (!(value instanceof Parse.Relation)) {\\n          throw \\\"Called relation() on non-relation field \\\" + attr;\\n        }\\n        value._ensureParentAndKey(this, attr);\\n        return value;\\n      } else {\\n        return new Parse.Relation(this, attr);\\n      }\\n    },\\n\\n    /**\\n     * Gets the HTML-escaped value of an attribute.\\n     */\\n    escape: function(attr) {\\n      var html = this._escapedAttributes[attr];\\n      if (html) {\\n        return html;\\n      }\\n      var val = this.attributes[attr];\\n      var escaped;\\n      if (Parse._isNullOrUndefined(val)) {\\n        escaped = '';\\n      } else {\\n        escaped = _.escape(val.toString());\\n      }\\n      this._escapedAttributes[attr] = escaped;\\n      return escaped;\\n    },\\n\\n    /**\\n     * Returns <code>true</code> if the attribute contains a value that is not\\n     * null or undefined.\\n     * @param {String} attr The string name of the attribute.\\n     * @return {Boolean}\\n     */\\n    has: function(attr) {\\n      return !Parse._isNullOrUndefined(this.attributes[attr]);\\n    },\\n\\n    /**\\n     * Pulls \\\"special\\\" fields like objectId, createdAt, etc. out of attrs\\n     * and puts them on \\\"this\\\" directly.  Removes them from attrs.\\n     * @param attrs - A dictionary with the data for this Parse.Object.\\n     */\\n    _mergeMagicFields: function(attrs) {\\n      // Check for changes of magic fields.\\n      var model = this;\\n      var specialFields = [\\\"id\\\", \\\"objectId\\\", \\\"createdAt\\\", \\\"updatedAt\\\"];\\n      Parse._arrayEach(specialFields, function(attr) {\\n        if (attrs[attr]) {\\n          if (attr === \\\"objectId\\\") {\\n            model.id = attrs[attr];\\n          } else if ((attr === \\\"createdAt\\\" || attr === \\\"updatedAt\\\") &&\\n                     !_.isDate(attrs[attr])) {\\n            model[attr] = Parse._parseDate(attrs[attr]);\\n          } else {\\n            model[attr] = attrs[attr];\\n          }\\n          delete attrs[attr];\\n        }\\n      });\\n    },\\n\\n    /**\\n     * Copies the given serverData to \\\"this\\\", refreshes attributes, and\\n     * clears pending changes;\\n     */\\n    _copyServerData: function(serverData) {\\n      // Copy server data\\n      var tempServerData = {};\\n      Parse._objectEach(serverData, function(value, key) {\\n        tempServerData[key] = Parse._decode(key, value);\\n      });\\n      this._serverData = tempServerData;\\n\\n      // Refresh the attributes.\\n      this._rebuildAllEstimatedData();\\n\\n\\n      // Clear out any changes the user might have made previously.\\n      this._refreshCache();\\n      this._opSetQueue = [{}];\\n\\n      // Refresh the attributes again.\\n      this._rebuildAllEstimatedData();\\n    },\\n\\n    /**\\n     * Merges another object's attributes into this object.\\n     */\\n    _mergeFromObject: function(other) {\\n      if (!other) {\\n        return;\\n      }\\n\\n      // This does the inverse of _mergeMagicFields.\\n      this.id = other.id;\\n      this.createdAt = other.createdAt;\\n      this.updatedAt = other.updatedAt;\\n\\n      this._copyServerData(other._serverData);\\n\\n      this._hasData = true;\\n    },\\n\\n    /**\\n     * Returns the json to be sent to the server.\\n     */\\n    _startSave: function() {\\n      this._opSetQueue.push({});\\n    },\\n\\n    /**\\n     * Called when a save fails because of an error. Any changes that were part\\n     * of the save need to be merged with changes made after the save. This\\n     * might throw an exception is you do conflicting operations. For example,\\n     * if you do:\\n     *   object.set(\\\"foo\\\", \\\"bar\\\");\\n     *   object.set(\\\"invalid field name\\\", \\\"baz\\\");\\n     *   object.save();\\n     *   object.increment(\\\"foo\\\");\\n     * then this will throw when the save fails and the client tries to merge\\n     * \\\"bar\\\" with the +1.\\n     */\\n    _cancelSave: function() {\\n      var self = this;\\n      var failedChanges = _.first(this._opSetQueue);\\n      this._opSetQueue = _.rest(this._opSetQueue);\\n      var nextChanges = _.first(this._opSetQueue);\\n      Parse._objectEach(failedChanges, function(op, key) {\\n        var op1 = failedChanges[key];\\n        var op2 = nextChanges[key];\\n        if (op1 && op2) {\\n          nextChanges[key] = op2._mergeWithPrevious(op1);\\n        } else if (op1) {\\n          nextChanges[key] = op1;\\n        }\\n      });\\n      this._saving = this._saving - 1;\\n    },\\n\\n    /**\\n     * Called when a save completes successfully. This merges the changes that\\n     * were saved into the known server data, and overrides it with any data\\n     * sent directly from the server.\\n     */\\n    _finishSave: function(serverData) {\\n      // Grab a copy of any object referenced by this object. These instances\\n      // may have already been fetched, and we don't want to lose their data.\\n      // Note that doing it like this means we will unify separate copies of the\\n      // same object, but that's a risk we have to take.\\n      var fetchedObjects = {};\\n      Parse._traverse(this.attributes, function(object) {\\n        if (object instanceof Parse.Object && object.id && object._hasData) {\\n          fetchedObjects[object.id] = object;\\n        }\\n      });\\n\\n      var savedChanges = _.first(this._opSetQueue);\\n      this._opSetQueue = _.rest(this._opSetQueue);\\n      this._applyOpSet(savedChanges, this._serverData);\\n      this._mergeMagicFields(serverData);\\n      var self = this;\\n      Parse._objectEach(serverData, function(value, key) {\\n        self._serverData[key] = Parse._decode(key, value);\\n\\n        // Look for any objects that might have become unfetched and fix them\\n        // by replacing their values with the previously observed values.\\n        var fetched = Parse._traverse(self._serverData[key], function(object) {\\n          if (object instanceof Parse.Object && fetchedObjects[object.id]) {\\n            return fetchedObjects[object.id];\\n          }\\n        });\\n        if (fetched) {\\n          self._serverData[key] = fetched;\\n        }\\n      });\\n      this._rebuildAllEstimatedData();\\n      this._saving = this._saving - 1;\\n    },\\n\\n    /**\\n     * Called when a fetch or login is complete to set the known server data to\\n     * the given object.\\n     */\\n    _finishFetch: function(serverData, hasData) {\\n\\n      this._opSetQueue = [{}];\\n\\n      // Bring in all the new server data.\\n      this._mergeMagicFields(serverData);\\n      this._copyServerData(serverData);\\n\\n      this._hasData = hasData;\\n    },\\n\\n    /**\\n     * Applies the set of Parse.Op in opSet to the object target.\\n     */\\n    _applyOpSet: function(opSet, target) {\\n      var self = this;\\n      Parse._objectEach(opSet, function(change, key) {\\n        target[key] = change._estimate(target[key], self, key);\\n        if (target[key] === Parse.Op._UNSET) {\\n          delete target[key];\\n        }\\n      });\\n    },\\n\\n    /**\\n     * Replaces the cached value for key with the current value.\\n     * Returns true if the new value is different than the old value.\\n     */\\n    _resetCacheForKey: function(key) {\\n      var value = this.attributes[key];\\n      if (_.isObject(value) &&\\n          !(value instanceof Parse.Object) &&\\n          !(value instanceof Parse.File)) {\\n        value = value.toJSON ? value.toJSON() : value;\\n        var json = JSON.stringify(value);\\n        if (this._hashedJSON[key] !== json) {\\n          this._hashedJSON[key] = json;\\n          return true;\\n        }\\n      }\\n      return false;\\n    },\\n\\n    /**\\n     * Populates attributes[key] by starting with the last known data from the\\n     * server, and applying all of the local changes that have been made to that\\n     * key since then.\\n     */\\n    _rebuildEstimatedDataForKey: function(key) {\\n      var self = this;\\n      delete this.attributes[key];\\n      if (this._serverData[key]) {\\n        this.attributes[key] = this._serverData[key];\\n      }\\n      Parse._arrayEach(this._opSetQueue, function(opSet) {\\n        var op = opSet[key];\\n        if (op) {\\n          self.attributes[key] = op._estimate(self.attributes[key], self, key);\\n          if (self.attributes[key] === Parse.Op._UNSET) {\\n            delete self.attributes[key];\\n          } else {\\n            self._resetCacheForKey(key);\\n          }\\n        }\\n      });\\n    },\\n\\n    /**\\n     * Populates attributes by starting with the last known data from the\\n     * server, and applying all of the local changes that have been made since\\n     * then.\\n     */\\n    _rebuildAllEstimatedData: function() {\\n      var self = this;\\n\\n      var previousAttributes = _.clone(this.attributes);\\n\\n      this.attributes = _.clone(this._serverData);\\n      Parse._arrayEach(this._opSetQueue, function(opSet) {\\n        self._applyOpSet(opSet, self.attributes);\\n        Parse._objectEach(opSet, function(op, key) {\\n          self._resetCacheForKey(key);\\n        });\\n      });\\n\\n      // Trigger change events for anything that changed because of the fetch.\\n      Parse._objectEach(previousAttributes, function(oldValue, key) {\\n        if (self.attributes[key] !== oldValue) {\\n          self.trigger('change:' + key, self, self.attributes[key], {});\\n        }\\n      });\\n      Parse._objectEach(this.attributes, function(newValue, key) {\\n        if (!_.has(previousAttributes, key)) {\\n          self.trigger('change:' + key, self, newValue, {});\\n        }\\n      });\\n    },\\n\\n    /**\\n     * Sets a hash of model attributes on the object, firing\\n     * <code>\\\"change\\\"</code> unless you choose to silence it.\\n     *\\n     * <p>You can call it with an object containing keys and values, or with one\\n     * key and value.  For example:<pre>\\n     *   gameTurn.set({\\n     *     player: player1,\\n     *     diceRoll: 2\\n     *   }, {\\n     *     error: function(gameTurnAgain, error) {\\n     *       // The set failed validation.\\n     *     }\\n     *   });\\n     *\\n     *   game.set(\\\"currentPlayer\\\", player2, {\\n     *     error: function(gameTurnAgain, error) {\\n     *       // The set failed validation.\\n     *     }\\n     *   });\\n     *\\n     *   game.set(\\\"finished\\\", true);</pre></p>\\n     *\\n     * @param {String} key The key to set.\\n     * @param {} value The value to give it.\\n     * @param {Object} options A set of Backbone-like options for the set.\\n     *     The only supported options are <code>silent</code>,\\n     *     <code>error</code>, and <code>promise</code>.\\n     * @return {Boolean} true if the set succeeded.\\n     * @see Parse.Object#validate\\n     * @see Parse.Error\\n     */\\n    set: function(key, value, options) {\\n      var attrs, attr;\\n      if (_.isObject(key) || Parse._isNullOrUndefined(key)) {\\n        attrs = key;\\n        Parse._objectEach(attrs, function(v, k) {\\n          attrs[k] = Parse._decode(k, v);\\n        });\\n        options = value;\\n      } else {\\n        attrs = {};\\n        attrs[key] = Parse._decode(key, value);\\n      }\\n\\n      // Extract attributes and options.\\n      options = options || {};\\n      if (!attrs) {\\n        return this;\\n      }\\n      if (attrs instanceof Parse.Object) {\\n        attrs = attrs.attributes;\\n      }\\n\\n      // If the unset option is used, every attribute should be a Unset.\\n      if (options.unset) {\\n        Parse._objectEach(attrs, function(unused_value, key) {\\n          attrs[key] = new Parse.Op.Unset();\\n        });\\n      }\\n\\n      // Apply all the attributes to get the estimated values.\\n      var dataToValidate = _.clone(attrs);\\n      var self = this;\\n      Parse._objectEach(dataToValidate, function(value, key) {\\n        if (value instanceof Parse.Op) {\\n          dataToValidate[key] = value._estimate(self.attributes[key],\\n                                                self, key);\\n          if (dataToValidate[key] === Parse.Op._UNSET) {\\n            delete dataToValidate[key];\\n          }\\n        }\\n      });\\n\\n      // Run validation.\\n      if (!this._validate(attrs, options)) {\\n        return false;\\n      }\\n\\n      this._mergeMagicFields(attrs);\\n\\n      options.changes = {};\\n      var escaped = this._escapedAttributes;\\n      var prev = this._previousAttributes || {};\\n\\n      // Update attributes.\\n      Parse._arrayEach(_.keys(attrs), function(attr) {\\n        var val = attrs[attr];\\n\\n        // If this is a relation object we need to set the parent correctly,\\n        // since the location where it was parsed does not have access to\\n        // this object.\\n        if (val instanceof Parse.Relation) {\\n          val.parent = self;\\n        }\\n\\n        if (!(val instanceof Parse.Op)) {\\n          val = new Parse.Op.Set(val);\\n        }\\n\\n        // See if this change will actually have any effect.\\n        var isRealChange = true;\\n        if (val instanceof Parse.Op.Set &&\\n            _.isEqual(self.attributes[attr], val.value)) {\\n          isRealChange = false;\\n        }\\n\\n        if (isRealChange) {\\n          delete escaped[attr];\\n          if (options.silent) {\\n            self._silent[attr] = true;\\n          } else {\\n            options.changes[attr] = true;\\n          }\\n        }\\n\\n        var currentChanges = _.last(self._opSetQueue);\\n        currentChanges[attr] = val._mergeWithPrevious(currentChanges[attr]);\\n        self._rebuildEstimatedDataForKey(attr);\\n\\n        if (isRealChange) {\\n          self.changed[attr] = self.attributes[attr];\\n          if (!options.silent) {\\n            self._pending[attr] = true;\\n          }\\n        } else {\\n          delete self.changed[attr];\\n          delete self._pending[attr];\\n        }\\n      });\\n\\n      if (!options.silent) {\\n        this.change(options);\\n      }\\n      return this;\\n    },\\n\\n    /**\\n     * Remove an attribute from the model, firing <code>\\\"change\\\"</code> unless\\n     * you choose to silence it. This is a noop if the attribute doesn't\\n     * exist.\\n     */\\n    unset: function(attr, options) {\\n      options = options || {};\\n      options.unset = true;\\n      return this.set(attr, null, options);\\n    },\\n\\n    /**\\n     * Atomically increments the value of the given attribute the next time the\\n     * object is saved. If no amount is specified, 1 is used by default.\\n     *\\n     * @param attr {String} The key.\\n     * @param amount {Number} The amount to increment by.\\n     */\\n    increment: function(attr, amount) {\\n      if (_.isUndefined(amount) || _.isNull(amount)) {\\n        amount = 1;\\n      }\\n      return this.set(attr, new Parse.Op.Increment(amount));\\n    },\\n\\n    /**\\n     * Atomically add an object to the end of the array associated with a given\\n     * key.\\n     * @param attr {String} The key.\\n     * @param item {} The item to add.\\n     */\\n    add: function(attr, item) {\\n      return this.set(attr, new Parse.Op.Add([item]));\\n    },\\n\\n    /**\\n     * Atomically add an object to the array associated with a given key, only\\n     * if it is not already present in the array. The position of the insert is\\n     * not guaranteed.\\n     *\\n     * @param attr {String} The key.\\n     * @param item {} The object to add.\\n     */\\n    addUnique: function(attr, item) {\\n      return this.set(attr, new Parse.Op.AddUnique([item]));\\n    },\\n\\n    /**\\n     * Atomically remove all instances of an object from the array associated\\n     * with a given key.\\n     *\\n     * @param attr {String} The key.\\n     * @param item {} The object to remove.\\n     */\\n    remove: function(attr, item) {\\n      return this.set(attr, new Parse.Op.Remove([item]));\\n    },\\n\\n    /**\\n     * Returns an instance of a subclass of Parse.Op describing what kind of\\n     * modification has been performed on this field since the last time it was\\n     * saved. For example, after calling object.increment(\\\"x\\\"), calling\\n     * object.op(\\\"x\\\") would return an instance of Parse.Op.Increment.\\n     *\\n     * @param attr {String} The key.\\n     * @returns {Parse.Op} The operation, or undefined if none.\\n     */\\n    op: function(attr) {\\n      return _.last(this._opSetQueue)[attr];\\n    },\\n\\n    /**\\n     * Clear all attributes on the model, firing <code>\\\"change\\\"</code> unless\\n     * you choose to silence it.\\n     */\\n    clear: function(options) {\\n      options = options || {};\\n      options.unset = true;\\n      var keysToClear = _.extend(this.attributes, this._operations);\\n      return this.set(keysToClear, options);\\n    },\\n\\n    /**\\n     * Returns a JSON-encoded set of operations to be sent with the next save\\n     * request.\\n     */\\n    _getSaveJSON: function() {\\n      var json = _.clone(_.first(this._opSetQueue));\\n      Parse._objectEach(json, function(op, key) {\\n        json[key] = op.toJSON();\\n      });\\n      return json;\\n    },\\n\\n    /**\\n     * Returns true if this object can be serialized for saving.\\n     */\\n    _canBeSerialized: function() {\\n      return Parse.Object._canBeSerializedAsValue(this.attributes);\\n    },\\n\\n    /**\\n     * Fetch the model from the server. If the server's representation of the\\n     * model differs from its current attributes, they will be overriden,\\n     * triggering a <code>\\\"change\\\"</code> event.\\n     *\\n     * @param {Object} options A Backbone-style callback object.\\n     * Valid options are:<ul>\\n     *   <li>success: A Backbone-style success callback.\\n     *   <li>error: An Backbone-style error callback.\\n     *   <li>useMasterKey: In Cloud Code and Node only, causes the Master Key to\\n     *     be used for this request.\\n     * </ul>\\n     * @return {Parse.Promise} A promise that is fulfilled when the fetch\\n     *     completes.\\n     */\\n    fetch: function(options) {\\n      var self = this;\\n      options = options || {};\\n      var request = Parse._request({\\n        method: 'GET',\\n        route: \\\"classes\\\",\\n        className: this.className,\\n        objectId: this.id,\\n        useMasterKey: options.useMasterKey\\n      });\\n      return request.then(function(response, status, xhr) {\\n        self._finishFetch(self.parse(response, status, xhr), true);\\n        return self;\\n      })._thenRunCallbacks(options, this);\\n    },\\n\\n    /**\\n     * Set a hash of model attributes, and save the model to the server.\\n     * updatedAt will be updated when the request returns.\\n     * You can either call it as:<pre>\\n     *   object.save();</pre>\\n     * or<pre>\\n     *   object.save(null, options);</pre>\\n     * or<pre>\\n     *   object.save(attrs, options);</pre>\\n     * or<pre>\\n     *   object.save(key, value, options);</pre>\\n     *\\n     * For example, <pre>\\n     *   gameTurn.save({\\n     *     player: \\\"Jake Cutter\\\",\\n     *     diceRoll: 2\\n     *   }, {\\n     *     success: function(gameTurnAgain) {\\n     *       // The save was successful.\\n     *     },\\n     *     error: function(gameTurnAgain, error) {\\n     *       // The save failed.  Error is an instance of Parse.Error.\\n     *     }\\n     *   });</pre>\\n     * or with promises:<pre>\\n     *   gameTurn.save({\\n     *     player: \\\"Jake Cutter\\\",\\n     *     diceRoll: 2\\n     *   }).then(function(gameTurnAgain) {\\n     *     // The save was successful.\\n     *   }, function(error) {\\n     *     // The save failed.  Error is an instance of Parse.Error.\\n     *   });</pre>\\n     *\\n     * @param {Object} options A Backbone-style callback object.\\n     * Valid options are:<ul>\\n     *   <li>wait: Set to true to wait for the server to confirm a successful\\n     *   save before modifying the attributes on the object.\\n     *   <li>silent: Set to true to avoid firing the `set` event.\\n     *   <li>success: A Backbone-style success callback.\\n     *   <li>error: An Backbone-style error callback.\\n     *   <li>useMasterKey: In Cloud Code and Node only, causes the Master Key to\\n     *     be used for this request.\\n     * </ul>\\n     * @return {Parse.Promise} A promise that is fulfilled when the save\\n     *     completes.\\n     * @see Parse.Error\\n     */\\n    save: function(arg1, arg2, arg3) {\\n      var i, attrs, current, options, saved;\\n      if (_.isObject(arg1) || Parse._isNullOrUndefined(arg1)) {\\n        attrs = arg1;\\n        options = arg2;\\n      } else {\\n        attrs = {};\\n        attrs[arg1] = arg2;\\n        options = arg3;\\n      }\\n\\n      // Make save({ success: function() {} }) work.\\n      if (!options && attrs) {\\n        var extra_keys = _.reject(attrs, function(value, key) {\\n          return _.include([\\\"success\\\", \\\"error\\\", \\\"wait\\\"], key);\\n        });\\n        if (extra_keys.length === 0) {\\n          var all_functions = true;\\n          if (_.has(attrs, \\\"success\\\") && !_.isFunction(attrs.success)) {\\n            all_functions = false;\\n          }\\n          if (_.has(attrs, \\\"error\\\") && !_.isFunction(attrs.error)) {\\n            all_functions = false;\\n          }\\n          if (all_functions) {\\n            // This attrs object looks like it's really an options object,\\n            // and there's no other options object, so let's just use it.\\n            return this.save(null, attrs);\\n          }\\n        }\\n      }\\n\\n      options = _.clone(options) || {};\\n      if (options.wait) {\\n        current = _.clone(this.attributes);\\n      }\\n\\n      var setOptions = _.clone(options) || {};\\n      if (setOptions.wait) {\\n        setOptions.silent = true;\\n      }\\n      var setError;\\n      setOptions.error = function(model, error) {\\n        setError = error;\\n      };\\n      if (attrs && !this.set(attrs, setOptions)) {\\n        return Parse.Promise.error(setError)._thenRunCallbacks(options, this);\\n      }\\n\\n      var model = this;\\n\\n      // If there is any unsaved child, save it first.\\n      model._refreshCache();\\n\\n\\n\\n      var unsavedChildren = [];\\n      var unsavedFiles = [];\\n      Parse.Object._findUnsavedChildren(model.attributes,\\n                                        unsavedChildren,\\n                                        unsavedFiles);\\n      if (unsavedChildren.length + unsavedFiles.length > 0) {\\n        return Parse.Object._deepSaveAsync(this.attributes, {\\n          useMasterKey: options.useMasterKey\\n        }).then(function() {\\n          return model.save(null, options);\\n        }, function(error) {\\n          return Parse.Promise.error(error)._thenRunCallbacks(options, model);\\n        });\\n      }\\n\\n      this._startSave();\\n      this._saving = (this._saving || 0) + 1;\\n\\n      this._allPreviousSaves = this._allPreviousSaves || Parse.Promise.as();\\n      this._allPreviousSaves = this._allPreviousSaves._continueWith(function() {\\n        var method = model.id ? 'PUT' : 'POST';\\n\\n        var json = model._getSaveJSON();\\n\\n        var route = \\\"classes\\\";\\n        var className = model.className;\\n        if (model.className === \\\"_User\\\" && !model.id) {\\n          // Special-case user sign-up.\\n          route = \\\"users\\\";\\n          className = null;\\n        }\\n        var request = Parse._request({\\n          route: route,\\n          className: className,\\n          objectId: model.id,\\n          method: method,\\n          useMasterKey: options.useMasterKey,\\n          data: json\\n        });\\n\\n        request = request.then(function(resp, status, xhr) {\\n          var serverAttrs = model.parse(resp, status, xhr);\\n          if (options.wait) {\\n            serverAttrs = _.extend(attrs || {}, serverAttrs);\\n          }\\n          model._finishSave(serverAttrs);\\n          if (options.wait) {\\n            model.set(current, setOptions);\\n          }\\n          return model;\\n\\n        }, function(error) {\\n          model._cancelSave();\\n          return Parse.Promise.error(error);\\n\\n        })._thenRunCallbacks(options, model);\\n\\n        return request;\\n      });\\n      return this._allPreviousSaves;\\n    },\\n\\n    /**\\n     * Destroy this model on the server if it was already persisted.\\n     * Optimistically removes the model from its collection, if it has one.\\n     * If `wait: true` is passed, waits for the server to respond\\n     * before removal.\\n     *\\n     * @param {Object} options A Backbone-style callback object.\\n     * Valid options are:<ul>\\n     *   <li>wait: Set to true to wait for the server to confirm successful\\n     *   deletion of the object before triggering the `destroy` event.\\n     *   <li>success: A Backbone-style success callback\\n     *   <li>error: An Backbone-style error callback.\\n     *   <li>useMasterKey: In Cloud Code and Node only, causes the Master Key to\\n     *     be used for this request.\\n     * </ul>\\n     * @return {Parse.Promise} A promise that is fulfilled when the destroy\\n     *     completes.\\n     */\\n    destroy: function(options) {\\n      options = options || {};\\n      var model = this;\\n\\n      var triggerDestroy = function() {\\n        model.trigger('destroy', model, model.collection, options);\\n      };\\n\\n      if (!this.id) {\\n        return triggerDestroy();\\n      }\\n\\n      if (!options.wait) {\\n        triggerDestroy();\\n      }\\n\\n      var request = Parse._request({\\n        route: \\\"classes\\\",\\n        className: this.className,\\n        objectId: this.id,\\n        method: 'DELETE',\\n        useMasterKey: options.useMasterKey\\n      });\\n      return request.then(function() {\\n        if (options.wait) {\\n          triggerDestroy();\\n        }\\n        return model;\\n      })._thenRunCallbacks(options, this);\\n    },\\n\\n    /**\\n     * Converts a response into the hash of attributes to be set on the model.\\n     * @ignore\\n     */\\n    parse: function(resp, status, xhr) {\\n      var output = _.clone(resp);\\n      _([\\\"createdAt\\\", \\\"updatedAt\\\"]).each(function(key) {\\n        if (output[key]) {\\n          output[key] = Parse._parseDate(output[key]);\\n        }\\n      });\\n      if (!output.updatedAt) {\\n        output.updatedAt = output.createdAt;\\n      }\\n      if (status) {\\n        this._existed = (status !== 201);\\n      }\\n      return output;\\n    },\\n\\n    /**\\n     * Creates a new model with identical attributes to this one.\\n     * @return {Parse.Object}\\n     */\\n    clone: function() {\\n      return new this.constructor(this.attributes);\\n    },\\n\\n    /**\\n     * Returns true if this object has never been saved to Parse.\\n     * @return {Boolean}\\n     */\\n    isNew: function() {\\n      return !this.id;\\n    },\\n\\n    /**\\n     * Call this method to manually fire a `\\\"change\\\"` event for this model and\\n     * a `\\\"change:attribute\\\"` event for each changed attribute.\\n     * Calling this will cause all objects observing the model to update.\\n     */\\n    change: function(options) {\\n      options = options || {};\\n      var changing = this._changing;\\n      this._changing = true;\\n\\n      // Silent changes become pending changes.\\n      var self = this;\\n      Parse._objectEach(this._silent, function(attr) {\\n        self._pending[attr] = true;\\n      });\\n\\n      // Silent changes are triggered.\\n      var changes = _.extend({}, options.changes, this._silent);\\n      this._silent = {};\\n      Parse._objectEach(changes, function(unused_value, attr) {\\n        self.trigger('change:' + attr, self, self.get(attr), options);\\n      });\\n      if (changing) {\\n        return this;\\n      }\\n\\n      // This is to get around lint not letting us make a function in a loop.\\n      var deleteChanged = function(value, attr) {\\n        if (!self._pending[attr] && !self._silent[attr]) {\\n          delete self.changed[attr];\\n        }\\n      };\\n\\n      // Continue firing `\\\"change\\\"` events while there are pending changes.\\n      while (!_.isEmpty(this._pending)) {\\n        this._pending = {};\\n        this.trigger('change', this, options);\\n        // Pending and silent changes still remain.\\n        Parse._objectEach(this.changed, deleteChanged);\\n        self._previousAttributes = _.clone(this.attributes);\\n      }\\n\\n      this._changing = false;\\n      return this;\\n    },\\n\\n    /**\\n     * Returns true if this object was created by the Parse server when the\\n     * object might have already been there (e.g. in the case of a Facebook\\n     * login)\\n     */\\n    existed: function() {\\n      return this._existed;\\n    },\\n\\n    /**\\n     * Determine if the model has changed since the last <code>\\\"change\\\"</code>\\n     * event.  If you specify an attribute name, determine if that attribute\\n     * has changed.\\n     * @param {String} attr Optional attribute name\\n     * @return {Boolean}\\n     */\\n    hasChanged: function(attr) {\\n      if (!arguments.length) {\\n        return !_.isEmpty(this.changed);\\n      }\\n      return this.changed && _.has(this.changed, attr);\\n    },\\n\\n    /**\\n     * Returns an object containing all the attributes that have changed, or\\n     * false if there are no changed attributes. Useful for determining what\\n     * parts of a view need to be updated and/or what attributes need to be\\n     * persisted to the server. Unset attributes will be set to undefined.\\n     * You can also pass an attributes object to diff against the model,\\n     * determining if there *would be* a change.\\n     */\\n    changedAttributes: function(diff) {\\n      if (!diff) {\\n        return this.hasChanged() ? _.clone(this.changed) : false;\\n      }\\n      var changed = {};\\n      var old = this._previousAttributes;\\n      Parse._objectEach(diff, function(diffVal, attr) {\\n        if (!_.isEqual(old[attr], diffVal)) {\\n          changed[attr] = diffVal;\\n        }\\n      });\\n      return changed;\\n    },\\n\\n    /**\\n     * Gets the previous value of an attribute, recorded at the time the last\\n     * <code>\\\"change\\\"</code> event was fired.\\n     * @param {String} attr Name of the attribute to get.\\n     */\\n    previous: function(attr) {\\n      if (!arguments.length || !this._previousAttributes) {\\n        return null;\\n      }\\n      return this._previousAttributes[attr];\\n    },\\n\\n    /**\\n     * Gets all of the attributes of the model at the time of the previous\\n     * <code>\\\"change\\\"</code> event.\\n     * @return {Object}\\n     */\\n    previousAttributes: function() {\\n      return _.clone(this._previousAttributes);\\n    },\\n\\n    /**\\n     * Checks if the model is currently in a valid state. It's only possible to\\n     * get into an *invalid* state if you're using silent changes.\\n     * @return {Boolean}\\n     */\\n    isValid: function() {\\n      return !this.validate(this.attributes);\\n    },\\n\\n    /**\\n     * You should not call this function directly unless you subclass\\n     * <code>Parse.Object</code>, in which case you can override this method\\n     * to provide additional validation on <code>set</code> and\\n     * <code>save</code>.  Your implementation should return\\n     *\\n     * @param {Object} attrs The current data to validate.\\n     * @param {Object} options A Backbone-like options object.\\n     * @return {} False if the data is valid.  An error object otherwise.\\n     * @see Parse.Object#set\\n     */\\n    validate: function(attrs, options) {\\n      if (_.has(attrs, \\\"ACL\\\") && !(attrs.ACL instanceof Parse.ACL)) {\\n        return new Parse.Error(Parse.Error.OTHER_CAUSE,\\n                               \\\"ACL must be a Parse.ACL.\\\");\\n      }\\n      var correct = true;\\n      Parse._objectEach(attrs, function(unused_value, key) {\\n        if (!(/^[A-Za-z][0-9A-Za-z_]*$/).test(key)) {\\n          correct = false;\\n        }\\n      });\\n      if (!correct) {\\n        return new Parse.Error(Parse.Error.INVALID_KEY_NAME);\\n      }\\n      return false;\\n    },\\n\\n    /**\\n     * Run validation against a set of incoming attributes, returning `true`\\n     * if all is well. If a specific `error` callback has been passed,\\n     * call that instead of firing the general `\\\"error\\\"` event.\\n     */\\n    _validate: function(attrs, options) {\\n      if (options.silent || !this.validate) {\\n        return true;\\n      }\\n      attrs = _.extend({}, this.attributes, attrs);\\n      var error = this.validate(attrs, options);\\n      if (!error) {\\n        return true;\\n      }\\n      if (options && options.error) {\\n        options.error(this, error, options);\\n      } else {\\n        this.trigger('error', this, error, options);\\n      }\\n      return false;\\n    },\\n\\n    /**\\n     * Returns the ACL for this object.\\n     * @returns {Parse.ACL} An instance of Parse.ACL.\\n     * @see Parse.Object#get\\n     */\\n    getACL: function() {\\n      return this.get(\\\"ACL\\\");\\n    },\\n\\n    /**\\n     * Sets the ACL to be used for this object.\\n     * @param {Parse.ACL} acl An instance of Parse.ACL.\\n     * @param {Object} options Optional Backbone-like options object to be\\n     *     passed in to set.\\n     * @return {Boolean} Whether the set passed validation.\\n     * @see Parse.Object#set\\n     */\\n    setACL: function(acl, options) {\\n      return this.set(\\\"ACL\\\", acl, options);\\n    }\\n\\n  });\\n\\n  /**\\n   * Returns the appropriate subclass for making new instances of the given\\n   * className string.\\n   */\\n  Parse.Object._getSubclass = function(className) {\\n    if (!_.isString(className)) {\\n      throw \\\"Parse.Object._getSubclass requires a string argument.\\\";\\n    }\\n    var ObjectClass = Parse.Object._classMap[className];\\n    if (!ObjectClass) {\\n      ObjectClass = Parse.Object.extend(className);\\n      Parse.Object._classMap[className] = ObjectClass;\\n    }\\n    return ObjectClass;\\n  };\\n\\n  /**\\n   * Creates an instance of a subclass of Parse.Object for the given classname.\\n   */\\n  Parse.Object._create = function(className, attributes, options) {\\n    var ObjectClass = Parse.Object._getSubclass(className);\\n    return new ObjectClass(attributes, options);\\n  };\\n\\n  /**\\n   * Returns a list of object ids given a list of objects.\\n   */\\n  Parse.Object._toObjectIdArray = function(list, omitObjectsWithData) {\\n    if (list.length === 0) {\\n      return Parse.Promise.as(list);\\n    }\\n\\n    var error;\\n    var className = list[0].className;\\n    var objectIds = [];\\n    for (var i = 0; i < list.length; i++) {\\n      var object = list[i];\\n      if (className !== object.className) {\\n        error = new Parse.Error(Parse.Error.INVALID_CLASS_NAME,\\n                                \\\"All objects should be of the same class\\\");\\n        return Parse.Promise.error(error);\\n      } else if (!object.id) {\\n        error = new Parse.Error(Parse.Error.MISSING_OBJECT_ID,\\n                                \\\"All objects must have an ID\\\");\\n        return Parse.Promise.error(error);\\n      } else if (omitObjectsWithData && object._hasData) {\\n        continue;\\n      }\\n      objectIds.push(object.id);\\n    }\\n\\n    return Parse.Promise.as(objectIds);\\n  };\\n\\n  /**\\n   * Updates a list of objects with fetched results.\\n   */\\n  Parse.Object._updateWithFetchedResults = function(list, fetched, forceFetch) {\\n    var fetchedObjectsById = {};\\n    Parse._arrayEach(fetched, function(object, i) {\\n      fetchedObjectsById[object.id] = object;\\n    });\\n\\n    for (var i = 0; i < list.length; i++) {\\n      var object = list[i];\\n      var fetchedObject = fetchedObjectsById[object.id];\\n      if (!fetchedObject && forceFetch) {\\n        var error = new Parse.Error(Parse.Error.OBJECT_NOT_FOUND,\\n                                \\\"All objects must exist on the server\\\");\\n        return Parse.Promise.error(error);\\n      }\\n\\n      object._mergeFromObject(fetchedObject);\\n    }\\n\\n    return Parse.Promise.as(list);\\n  };\\n\\n  /**\\n   * Fetches the objects given in list.  The forceFetch option will fetch all\\n   * objects if true and ignore objects with data if false.\\n   */\\n  Parse.Object._fetchAll = function(list, forceFetch) {\\n    if (list.length === 0) {\\n      return Parse.Promise.as(list);\\n    }\\n\\n    var omitObjectsWithData = !forceFetch;\\n    return Parse.Object._toObjectIdArray(\\n      list,\\n      omitObjectsWithData\\n    ).then(function(objectIds) {\\n      var className = list[0].className;\\n      var query = new Parse.Query(className);\\n      query.containedIn(\\\"objectId\\\", objectIds);\\n      query.limit = objectIds.length;\\n      return query.find();\\n    }).then(function(results) {\\n      return Parse.Object._updateWithFetchedResults(\\n        list,\\n        results,\\n        forceFetch\\n      );\\n    });\\n  };\\n\\n  // Set up a map of className to class so that we can create new instances of\\n  // Parse Objects from JSON automatically.\\n  Parse.Object._classMap = {};\\n\\n  Parse.Object._extend = Parse._extend;\\n\\n  /**\\n   * Creates a new subclass of Parse.Object for the given Parse class name.\\n   *\\n   * <p>Every extension of a Parse class will inherit from the most recent\\n   * previous extension of that class. When a Parse.Object is automatically\\n   * created by parsing JSON, it will use the most recent extension of that\\n   * class.</p>\\n   *\\n   * <p>You should call either:<pre>\\n   *     var MyClass = Parse.Object.extend(\\\"MyClass\\\", {\\n   *         <i>Instance methods</i>,\\n   *         initialize: function(attrs, options) {\\n   *             this.someInstanceProperty = [],\\n   *             <i>Other instance properties</i>\\n   *         }\\n   *     }, {\\n   *         <i>Class properties</i>\\n   *     });</pre>\\n   * or, for Backbone compatibility:<pre>\\n   *     var MyClass = Parse.Object.extend({\\n   *         className: \\\"MyClass\\\",\\n   *         <i>Instance methods</i>,\\n   *         initialize: function(attrs, options) {\\n   *             this.someInstanceProperty = [],\\n   *             <i>Other instance properties</i>\\n   *         }\\n   *     }, {\\n   *         <i>Class properties</i>\\n   *     });</pre></p>\\n   *\\n   * @param {String} className The name of the Parse class backing this model.\\n   * @param {Object} protoProps Instance properties to add to instances of the\\n   *     class returned from this method.\\n   * @param {Object} classProps Class properties to add the class returned from\\n   *     this method.\\n   * @return {Class} A new subclass of Parse.Object.\\n   */\\n  Parse.Object.extend = function(className, protoProps, classProps) {\\n    // Handle the case with only two args.\\n    if (!_.isString(className)) {\\n      if (className && _.has(className, \\\"className\\\")) {\\n        return Parse.Object.extend(className.className, className, protoProps);\\n      } else {\\n        throw new Error(\\n            \\\"Parse.Object.extend's first argument should be the className.\\\");\\n      }\\n    }\\n\\n    // If someone tries to subclass \\\"User\\\", coerce it to the right type.\\n    if (className === \\\"User\\\" && Parse.User._performUserRewrite) {\\n      className = \\\"_User\\\";\\n    }\\n    protoProps = protoProps || {};\\n    protoProps.className = className;\\n\\n    var NewClassObject = null;\\n    if (_.has(Parse.Object._classMap, className)) {\\n      var OldClassObject = Parse.Object._classMap[className];\\n      // This new subclass has been told to extend both from \\\"this\\\" and from\\n      // OldClassObject. This is multiple inheritance, which isn't supported.\\n      // For now, let's just pick one.\\n      NewClassObject = OldClassObject._extend(protoProps, classProps);\\n    } else {\\n      NewClassObject = this._extend(protoProps, classProps);\\n    }\\n    // Extending a subclass should reuse the classname automatically.\\n    NewClassObject.extend = function(arg0) {\\n      if (_.isString(arg0) || (arg0 && _.has(arg0, \\\"className\\\"))) {\\n        return Parse.Object.extend.apply(NewClassObject, arguments);\\n      }\\n      var newArguments = [className].concat(Parse._.toArray(arguments));\\n      return Parse.Object.extend.apply(NewClassObject, newArguments);\\n    };\\n    Parse.Object._classMap[className] = NewClassObject;\\n    return NewClassObject;\\n  };\\n\\n  Parse.Object._findUnsavedChildren = function(object, children, files) {\\n    Parse._traverse(object, function(object) {\\n      if (object instanceof Parse.Object) {\\n        object._refreshCache();\\n        if (object.dirty()) {\\n          children.push(object);\\n        }\\n        return;\\n      }\\n\\n      if (object instanceof Parse.File) {\\n        if (!object.url()) {\\n          files.push(object);\\n        }\\n        return;\\n      }\\n    });\\n  };\\n\\n  Parse.Object._canBeSerializedAsValue = function(object) {\\n\\n    if (object instanceof Parse.Object) {\\n      return !!object.id;\\n    }\\n    if (object instanceof Parse.File) {\\n      // Don't recurse indefinitely into files.\\n      return true;\\n    }\\n\\n    var canBeSerializedAsValue = true;\\n\\n    if (_.isArray(object)) {\\n      Parse._arrayEach(object, function(child) {\\n        if (!Parse.Object._canBeSerializedAsValue(child)) {\\n          canBeSerializedAsValue = false;\\n        }\\n      });\\n    } else if (_.isObject(object)) {\\n      Parse._objectEach(object, function(child) {\\n        if (!Parse.Object._canBeSerializedAsValue(child)) {\\n          canBeSerializedAsValue = false;\\n        }\\n      });\\n    }\\n    return canBeSerializedAsValue;\\n  };\\n\\n  /**\\n   * @param {Object} object The root object.\\n   * @param {Object} options: The only valid option is useMasterKey.\\n   */\\n  Parse.Object._deepSaveAsync = function(object, options) {\\n    var unsavedChildren = [];\\n    var unsavedFiles = [];\\n    Parse.Object._findUnsavedChildren(object, unsavedChildren, unsavedFiles);\\n\\n    var promise = Parse.Promise.as();\\n    _.each(unsavedFiles, function(file) {\\n      promise = promise.then(function() {\\n        return file.save(options);\\n      });\\n    });\\n\\n    var objects = _.uniq(unsavedChildren);\\n    var remaining = _.uniq(objects);\\n\\n    return promise.then(function() {\\n      return Parse.Promise._continueWhile(function() {\\n        return remaining.length > 0;\\n      }, function() {\\n\\n        // Gather up all the objects that can be saved in this batch.\\n        var batch = [];\\n        var newRemaining = [];\\n        Parse._arrayEach(remaining, function(object) {\\n          // Limit batches to 20 objects.\\n          if (batch.length > 20) {\\n            newRemaining.push(object);\\n            return;\\n          }\\n\\n          if (object._canBeSerialized()) {\\n            batch.push(object);\\n          } else {\\n            newRemaining.push(object);\\n          }\\n        });\\n        remaining = newRemaining;\\n\\n        // If we can't save any objects, there must be a circular reference.\\n        if (batch.length === 0) {\\n          return Parse.Promise.error(\\n            new Parse.Error(Parse.Error.OTHER_CAUSE,\\n                            \\\"Tried to save a batch with a cycle.\\\"));\\n        }\\n\\n        // Reserve a spot in every object's save queue.\\n        var readyToStart = Parse.Promise.when(_.map(batch, function(object) {\\n          return object._allPreviousSaves || Parse.Promise.as();\\n        }));\\n        var batchFinished = new Parse.Promise();\\n        Parse._arrayEach(batch, function(object) {\\n          object._allPreviousSaves = batchFinished;\\n        });\\n\\n        // Save a single batch, whether previous saves succeeded or failed.\\n        return readyToStart._continueWith(function() {\\n          return Parse._request({\\n            route: \\\"batch\\\",\\n            method: \\\"POST\\\",\\n            useMasterKey: options.useMasterKey,\\n            data: {\\n              requests: _.map(batch, function(object) {\\n                var json = object._getSaveJSON();\\n                var method = \\\"POST\\\";\\n\\n                var path = \\\"/1/classes/\\\" + object.className;\\n                if (object.id) {\\n                  path = path + \\\"/\\\" + object.id;\\n                  method = \\\"PUT\\\";\\n                }\\n\\n                object._startSave();\\n\\n                return {\\n                  method: method,\\n                  path: path,\\n                  body: json\\n                };\\n              })\\n            }\\n          }).then(function(response, status, xhr) {\\n            var error;\\n            Parse._arrayEach(batch, function(object, i) {\\n              if (response[i].success) {\\n                object._finishSave(\\n                  object.parse(response[i].success, status, xhr));\\n              } else {\\n                error = error || response[i].error;\\n                object._cancelSave();\\n              }\\n            });\\n            if (error) {\\n              return Parse.Promise.error(\\n                new Parse.Error(error.code, error.error));\\n            }\\n\\n          }).then(function(results) {\\n            batchFinished.resolve(results);\\n            return results;\\n          }, function(error) {\\n            batchFinished.reject(error);\\n            return Parse.Promise.error(error);\\n          });\\n        });\\n      });\\n    }).then(function() {\\n      return object;\\n    });\\n  };\\n\\n}(this));\\n\\n(function(root) {\\n  root.Parse = root.Parse || {};\\n  var Parse = root.Parse;\\n  var _ = Parse._;\\n\\n  /**\\n   * Represents a Role on the Parse server. Roles represent groupings of\\n   * Users for the purposes of granting permissions (e.g. specifying an ACL\\n   * for an Object). Roles are specified by their sets of child users and\\n   * child roles, all of which are granted any permissions that the parent\\n   * role has.\\n   *\\n   * <p>Roles must have a name (which cannot be changed after creation of the\\n   * role), and must specify an ACL.</p>\\n   * @class\\n   * A Parse.Role is a local representation of a role persisted to the Parse\\n   * cloud.\\n   */\\n  Parse.Role = Parse.Object.extend(\\\"_Role\\\", /** @lends Parse.Role.prototype */ {\\n    // Instance Methods\\n\\n    /**\\n     * Constructs a new ParseRole with the given name and ACL.\\n     *\\n     * @param {String} name The name of the Role to create.\\n     * @param {Parse.ACL} acl The ACL for this role. Roles must have an ACL.\\n     */\\n    constructor: function(name, acl) {\\n      if (_.isString(name) && (acl instanceof Parse.ACL)) {\\n        Parse.Object.prototype.constructor.call(this, null, null);\\n        this.setName(name);\\n        this.setACL(acl);\\n      } else {\\n        Parse.Object.prototype.constructor.call(this, name, acl);\\n      }\\n    },\\n\\n    /**\\n     * Gets the name of the role.  You can alternatively call role.get(\\\"name\\\")\\n     *\\n     * @return {String} the name of the role.\\n     */\\n    getName: function() {\\n      return this.get(\\\"name\\\");\\n    },\\n\\n    /**\\n     * Sets the name for a role. This value must be set before the role has\\n     * been saved to the server, and cannot be set once the role has been\\n     * saved.\\n     *\\n     * <p>\\n     *   A role's name can only contain alphanumeric characters, _, -, and\\n     *   spaces.\\n     * </p>\\n     *\\n     * <p>This is equivalent to calling role.set(\\\"name\\\", name)</p>\\n     *\\n     * @param {String} name The name of the role.\\n     * @param {Object} options Standard options object with success and error\\n     *     callbacks.\\n     */\\n    setName: function(name, options) {\\n      return this.set(\\\"name\\\", name, options);\\n    },\\n\\n    /**\\n     * Gets the Parse.Relation for the Parse.Users that are direct\\n     * children of this role. These users are granted any privileges that this\\n     * role has been granted (e.g. read or write access through ACLs). You can\\n     * add or remove users from the role through this relation.\\n     *\\n     * <p>This is equivalent to calling role.relation(\\\"users\\\")</p>\\n     *\\n     * @return {Parse.Relation} the relation for the users belonging to this\\n     *     role.\\n     */\\n    getUsers: function() {\\n      return this.relation(\\\"users\\\");\\n    },\\n\\n    /**\\n     * Gets the Parse.Relation for the Parse.Roles that are direct\\n     * children of this role. These roles' users are granted any privileges that\\n     * this role has been granted (e.g. read or write access through ACLs). You\\n     * can add or remove child roles from this role through this relation.\\n     *\\n     * <p>This is equivalent to calling role.relation(\\\"roles\\\")</p>\\n     *\\n     * @return {Parse.Relation} the relation for the roles belonging to this\\n     *     role.\\n     */\\n    getRoles: function() {\\n      return this.relation(\\\"roles\\\");\\n    },\\n\\n    /**\\n     * @ignore\\n     */\\n    validate: function(attrs, options) {\\n      if (\\\"name\\\" in attrs && attrs.name !== this.getName()) {\\n        var newName = attrs.name;\\n        if (this.id && this.id !== attrs.objectId) {\\n          // Check to see if the objectId being set matches this.id.\\n          // This happens during a fetch -- the id is set before calling fetch.\\n          // Let the name be set in this case.\\n          return new Parse.Error(Parse.Error.OTHER_CAUSE,\\n              \\\"A role's name can only be set before it has been saved.\\\");\\n        }\\n        if (!_.isString(newName)) {\\n          return new Parse.Error(Parse.Error.OTHER_CAUSE,\\n              \\\"A role's name must be a String.\\\");\\n        }\\n        if (!(/^[0-9a-zA-Z\\\\-_ ]+$/).test(newName)) {\\n          return new Parse.Error(Parse.Error.OTHER_CAUSE,\\n              \\\"A role's name can only contain alphanumeric characters, _,\\\" +\\n              \\\" -, and spaces.\\\");\\n        }\\n      }\\n      if (Parse.Object.prototype.validate) {\\n        return Parse.Object.prototype.validate.call(this, attrs, options);\\n      }\\n      return false;\\n    }\\n  });\\n}(this));\\n\\n\\n/*global _: false */\\n(function(root) {\\n  root.Parse = root.Parse || {};\\n  var Parse = root.Parse;\\n  var _ = Parse._;\\n\\n  /**\\n   * Creates a new instance with the given models and options.  Typically, you\\n   * will not call this method directly, but will instead make a subclass using\\n   * <code>Parse.Collection.extend</code>.\\n   *\\n   * @param {Array} models An array of instances of <code>Parse.Object</code>.\\n   *\\n   * @param {Object} options An optional object with Backbone-style options.\\n   * Valid options are:<ul>\\n   *   <li>model: The Parse.Object subclass that this collection contains.\\n   *   <li>query: An instance of Parse.Query to use when fetching items.\\n   *   <li>comparator: A string property name or function to sort by.\\n   * </ul>\\n   *\\n   * @see Parse.Collection.extend\\n   *\\n   * @class\\n   *\\n   * <p>Provides a standard collection class for our sets of models, ordered\\n   * or unordered.  For more information, see the\\n   * <a href=\\\"http://documentcloud.github.com/backbone/#Collection\\\">Backbone\\n   * documentation</a>.</p>\\n   */\\n  Parse.Collection = function(models, options) {\\n    options = options || {};\\n    if (options.comparator) {\\n      this.comparator = options.comparator;\\n    }\\n    if (options.model) {\\n      this.model = options.model;\\n    }\\n    if (options.query) {\\n      this.query = options.query;\\n    }\\n    this._reset();\\n    this.initialize.apply(this, arguments);\\n    if (models) {\\n      this.reset(models, {silent: true, parse: options.parse});\\n    }\\n  };\\n\\n  // Define the Collection's inheritable methods.\\n  _.extend(Parse.Collection.prototype, Parse.Events,\\n      /** @lends Parse.Collection.prototype */ {\\n\\n    // The default model for a collection is just a Parse.Object.\\n    // This should be overridden in most cases.\\n\\n    model: Parse.Object,\\n\\n    /**\\n     * Initialize is an empty function by default. Override it with your own\\n     * initialization logic.\\n     */\\n    initialize: function(){},\\n\\n    /**\\n     * The JSON representation of a Collection is an array of the\\n     * models' attributes.\\n     */\\n    toJSON: function() {\\n      return this.map(function(model){ return model.toJSON(); });\\n    },\\n\\n    /**\\n     * Add a model, or list of models to the set. Pass **silent** to avoid\\n     * firing the `add` event for every new model.\\n     *\\n     * @param {Array} models An array of instances of <code>Parse.Object</code>.\\n     *\\n     * @param {Object} options An optional object with Backbone-style options.\\n     * Valid options are:<ul>\\n     *   <li>at: The index at which to add the models.\\n     *   <li>silent: Set to true to avoid firing the `add` event for every new\\n     *   model.\\n     * </ul>\\n     */\\n    add: function(models, options) {\\n      var i, index, length, model, cid, id, cids = {}, ids = {};\\n      options = options || {};\\n      models = _.isArray(models) ? models.slice() : [models];\\n\\n      // Begin by turning bare objects into model references, and preventing\\n      // invalid models or duplicate models from being added.\\n      for (i = 0, length = models.length; i < length; i++) {\\n        models[i] = this._prepareModel(models[i], options);\\n        model = models[i];\\n        if (!model) {\\n          throw new Error(\\\"Can't add an invalid model to a collection\\\");\\n        }\\n        cid = model.cid;\\n        if (cids[cid] || this._byCid[cid]) {\\n          throw new Error(\\\"Duplicate cid: can't add the same model \\\" +\\n                          \\\"to a collection twice\\\");\\n        }\\n        id = model.id;\\n        if (!Parse._isNullOrUndefined(id) && (ids[id] || this._byId[id])) {\\n          throw new Error(\\\"Duplicate id: can't add the same model \\\" +\\n                          \\\"to a collection twice\\\");\\n        }\\n        ids[id] = model;\\n        cids[cid] = model;\\n      }\\n\\n      // Listen to added models' events, and index models for lookup by\\n      // `id` and by `cid`.\\n      for (i = 0; i < length; i++) {\\n        (model = models[i]).on('all', this._onModelEvent, this);\\n        this._byCid[model.cid] = model;\\n        if (model.id) {\\n          this._byId[model.id] = model;\\n        }\\n      }\\n\\n      // Insert models into the collection, re-sorting if needed, and triggering\\n      // `add` events unless silenced.\\n      this.length += length;\\n      index = Parse._isNullOrUndefined(options.at) ?\\n          this.models.length : options.at;\\n      this.models.splice.apply(this.models, [index, 0].concat(models));\\n      if (this.comparator) {\\n        this.sort({silent: true});\\n      }\\n      if (options.silent) {\\n        return this;\\n      }\\n      for (i = 0, length = this.models.length; i < length; i++) {\\n        model = this.models[i];\\n        if (cids[model.cid]) {\\n          options.index = i;\\n          model.trigger('add', model, this, options);\\n        }\\n      }\\n      return this;\\n    },\\n\\n    /**\\n     * Remove a model, or a list of models from the set. Pass silent to avoid\\n     * firing the <code>remove</code> event for every model removed.\\n     *\\n     * @param {Array} models The model or list of models to remove from the\\n     *   collection.\\n     * @param {Object} options An optional object with Backbone-style options.\\n     * Valid options are: <ul>\\n     *   <li>silent: Set to true to avoid firing the `remove` event.\\n     * </ul>\\n     */\\n    remove: function(models, options) {\\n      var i, l, index, model;\\n      options = options || {};\\n      models = _.isArray(models) ? models.slice() : [models];\\n      for (i = 0, l = models.length; i < l; i++) {\\n        model = this.getByCid(models[i]) || this.get(models[i]);\\n        if (!model) {\\n          continue;\\n        }\\n        delete this._byId[model.id];\\n        delete this._byCid[model.cid];\\n        index = this.indexOf(model);\\n        this.models.splice(index, 1);\\n        this.length--;\\n        if (!options.silent) {\\n          options.index = index;\\n          model.trigger('remove', model, this, options);\\n        }\\n        this._removeReference(model);\\n      }\\n      return this;\\n    },\\n\\n    /**\\n     * Gets a model from the set by id.\\n     * @param {String} id The Parse objectId identifying the Parse.Object to\\n     * fetch from this collection.\\n     */\\n    get: function(id) {\\n      return id && this._byId[id.id || id];\\n    },\\n\\n    /**\\n     * Gets a model from the set by client id.\\n     * @param {} cid The Backbone collection id identifying the Parse.Object to\\n     * fetch from this collection.\\n     */\\n    getByCid: function(cid) {\\n      return cid && this._byCid[cid.cid || cid];\\n    },\\n\\n    /**\\n     * Gets the model at the given index.\\n     *\\n     * @param {Number} index The index of the model to return.\\n     */\\n    at: function(index) {\\n      return this.models[index];\\n    },\\n\\n    /**\\n     * Forces the collection to re-sort itself. You don't need to call this\\n     * under normal circumstances, as the set will maintain sort order as each\\n     * item is added.\\n     * @param {Object} options An optional object with Backbone-style options.\\n     * Valid options are: <ul>\\n     *   <li>silent: Set to true to avoid firing the `reset` event.\\n     * </ul>\\n     */\\n    sort: function(options) {\\n      options = options || {};\\n      if (!this.comparator) {\\n        throw new Error('Cannot sort a set without a comparator');\\n      }\\n      var boundComparator = _.bind(this.comparator, this);\\n      if (this.comparator.length === 1) {\\n        this.models = this.sortBy(boundComparator);\\n      } else {\\n        this.models.sort(boundComparator);\\n      }\\n      if (!options.silent) {\\n        this.trigger('reset', this, options);\\n      }\\n      return this;\\n    },\\n\\n    /**\\n     * Plucks an attribute from each model in the collection.\\n     * @param {String} attr The attribute to return from each model in the\\n     * collection.\\n     */\\n    pluck: function(attr) {\\n      return _.map(this.models, function(model){ return model.get(attr); });\\n    },\\n\\n    /**\\n     * When you have more items than you want to add or remove individually,\\n     * you can reset the entire set with a new list of models, without firing\\n     * any `add` or `remove` events. Fires `reset` when finished.\\n     *\\n     * @param {Array} models The model or list of models to remove from the\\n     *   collection.\\n     * @param {Object} options An optional object with Backbone-style options.\\n     * Valid options are: <ul>\\n     *   <li>silent: Set to true to avoid firing the `reset` event.\\n     * </ul>\\n     */\\n    reset: function(models, options) {\\n      var self = this;\\n      models = models || [];\\n      options = options || {};\\n      Parse._arrayEach(this.models, function(model) {\\n        self._removeReference(model);\\n      });\\n      this._reset();\\n      this.add(models, {silent: true, parse: options.parse});\\n      if (!options.silent) {\\n        this.trigger('reset', this, options);\\n      }\\n      return this;\\n    },\\n\\n    /**\\n     * Fetches the default set of models for this collection, resetting the\\n     * collection when they arrive. If `add: true` is passed, appends the\\n     * models to the collection instead of resetting.\\n     *\\n     * @param {Object} options An optional object with Backbone-style options.\\n     * Valid options are:<ul>\\n     *   <li>silent: Set to true to avoid firing `add` or `reset` events for\\n     *   models fetched by this fetch.\\n     *   <li>success: A Backbone-style success callback.\\n     *   <li>error: An Backbone-style error callback.\\n     *   <li>useMasterKey: In Cloud Code and Node only, uses the Master Key for\\n     *       this request.\\n     * </ul>\\n     */\\n    fetch: function(options) {\\n      options = _.clone(options) || {};\\n      if (options.parse === undefined) {\\n        options.parse = true;\\n      }\\n      var collection = this;\\n      var query = this.query || new Parse.Query(this.model);\\n      return query.find({\\n        useMasterKey: options.useMasterKey\\n      }).then(function(results) {\\n        if (options.add) {\\n          collection.add(results, options);\\n        } else {\\n          collection.reset(results, options);\\n        }\\n        return collection;\\n      })._thenRunCallbacks(options, this);\\n    },\\n\\n    /**\\n     * Creates a new instance of a model in this collection. Add the model to\\n     * the collection immediately, unless `wait: true` is passed, in which case\\n     * we wait for the server to agree.\\n     *\\n     * @param {Parse.Object} model The new model to create and add to the\\n     *   collection.\\n     * @param {Object} options An optional object with Backbone-style options.\\n     * Valid options are:<ul>\\n     *   <li>wait: Set to true to wait for the server to confirm creation of the\\n     *       model before adding it to the collection.\\n     *   <li>silent: Set to true to avoid firing an `add` event.\\n     *   <li>success: A Backbone-style success callback.\\n     *   <li>error: An Backbone-style error callback.\\n     *   <li>useMasterKey: In Cloud Code and Node only, uses the Master Key for\\n     *       this request.\\n     * </ul>\\n     */\\n    create: function(model, options) {\\n      var coll = this;\\n      options = options ? _.clone(options) : {};\\n      model = this._prepareModel(model, options);\\n      if (!model) {\\n        return false;\\n      }\\n      if (!options.wait) {\\n        coll.add(model, options);\\n      }\\n      var success = options.success;\\n      options.success = function(nextModel, resp, xhr) {\\n        if (options.wait) {\\n          coll.add(nextModel, options);\\n        }\\n        if (success) {\\n          success(nextModel, resp);\\n        } else {\\n          nextModel.trigger('sync', model, resp, options);\\n        }\\n      };\\n      model.save(null, options);\\n      return model;\\n    },\\n\\n    /**\\n     * Converts a response into a list of models to be added to the collection.\\n     * The default implementation is just to pass it through.\\n     * @ignore\\n     */\\n    parse: function(resp, xhr) {\\n      return resp;\\n    },\\n\\n    /**\\n     * Proxy to _'s chain. Can't be proxied the same way the rest of the\\n     * underscore methods are proxied because it relies on the underscore\\n     * constructor.\\n     */\\n    chain: function() {\\n      return _(this.models).chain();\\n    },\\n\\n    /**\\n     * Reset all internal state. Called when the collection is reset.\\n     */\\n    _reset: function(options) {\\n      this.length = 0;\\n      this.models = [];\\n      this._byId  = {};\\n      this._byCid = {};\\n    },\\n\\n    /**\\n     * Prepare a model or hash of attributes to be added to this collection.\\n     */\\n    _prepareModel: function(model, options) {\\n      if (!(model instanceof Parse.Object)) {\\n        var attrs = model;\\n        options.collection = this;\\n        model = new this.model(attrs, options);\\n        if (!model._validate(model.attributes, options)) {\\n          model = false;\\n        }\\n      } else if (!model.collection) {\\n        model.collection = this;\\n      }\\n      return model;\\n    },\\n\\n    /**\\n     * Internal method to remove a model's ties to a collection.\\n     */\\n    _removeReference: function(model) {\\n      if (this === model.collection) {\\n        delete model.collection;\\n      }\\n      model.off('all', this._onModelEvent, this);\\n    },\\n\\n    /**\\n     * Internal method called every time a model in the set fires an event.\\n     * Sets need to update their indexes when models change ids. All other\\n     * events simply proxy through. \\\"add\\\" and \\\"remove\\\" events that originate\\n     * in other collections are ignored.\\n     */\\n    _onModelEvent: function(ev, model, collection, options) {\\n      if ((ev === 'add' || ev === 'remove') && collection !== this) {\\n        return;\\n      }\\n      if (ev === 'destroy') {\\n        this.remove(model, options);\\n      }\\n      if (model && ev === 'change:objectId') {\\n        delete this._byId[model.previous(\\\"objectId\\\")];\\n        this._byId[model.id] = model;\\n      }\\n      this.trigger.apply(this, arguments);\\n    }\\n\\n  });\\n\\n  // Underscore methods that we want to implement on the Collection.\\n  var methods = ['forEach', 'each', 'map', 'reduce', 'reduceRight', 'find',\\n    'detect', 'filter', 'select', 'reject', 'every', 'all', 'some', 'any',\\n    'include', 'contains', 'invoke', 'max', 'min', 'sortBy', 'sortedIndex',\\n    'toArray', 'size', 'first', 'initial', 'rest', 'last', 'without', 'indexOf',\\n    'shuffle', 'lastIndexOf', 'isEmpty', 'groupBy'];\\n\\n  // Mix in each Underscore method as a proxy to `Collection#models`.\\n  Parse._arrayEach(methods, function(method) {\\n    Parse.Collection.prototype[method] = function() {\\n      return _[method].apply(_, [this.models].concat(_.toArray(arguments)));\\n    };\\n  });\\n\\n  /**\\n   * Creates a new subclass of <code>Parse.Collection</code>.  For example,<pre>\\n   *   var MyCollection = Parse.Collection.extend({\\n   *     // Instance properties\\n   *\\n   *     model: MyClass,\\n   *     query: MyQuery,\\n   *\\n   *     getFirst: function() {\\n   *       return this.at(0);\\n   *     }\\n   *   }, {\\n   *     // Class properties\\n   *\\n   *     makeOne: function() {\\n   *       return new MyCollection();\\n   *     }\\n   *   });\\n   *\\n   *   var collection = new MyCollection();\\n   * </pre>\\n   *\\n   * @function\\n   * @param {Object} instanceProps Instance properties for the collection.\\n   * @param {Object} classProps Class properies for the collection.\\n   * @return {Class} A new subclass of <code>Parse.Collection</code>.\\n   */\\n  Parse.Collection.extend = Parse._extend;\\n\\n}(this));\\n\\n/*global _: false, document: false */\\n(function(root) {\\n  root.Parse = root.Parse || {};\\n  var Parse = root.Parse;\\n  var _ = Parse._;\\n\\n  /**\\n   * Creating a Parse.View creates its initial element outside of the DOM,\\n   * if an existing element is not provided...\\n   * @class\\n   *\\n   * <p>A fork of Backbone.View, provided for your convenience.  If you use this\\n   * class, you must also include jQuery, or another library that provides a\\n   * jQuery-compatible $ function.  For more information, see the\\n   * <a href=\\\"http://documentcloud.github.com/backbone/#View\\\">Backbone\\n   * documentation</a>.</p>\\n   * <p><strong><em>Available in the client SDK only.</em></strong></p>\\n   */\\n  Parse.View = function(options) {\\n    this.cid = _.uniqueId('view');\\n    this._configure(options || {});\\n    this._ensureElement();\\n    this.initialize.apply(this, arguments);\\n    this.delegateEvents();\\n  };\\n\\n  // Cached regex to split keys for `delegate`.\\n  var eventSplitter = /^(\\\\S+)\\\\s*(.*)$/;\\n\\n  // List of view options to be merged as properties.\\n\\n  var viewOptions = ['model', 'collection', 'el', 'id', 'attributes',\\n                     'className', 'tagName'];\\n\\n  // Set up all inheritable **Parse.View** properties and methods.\\n  _.extend(Parse.View.prototype, Parse.Events,\\n           /** @lends Parse.View.prototype */ {\\n\\n    // The default `tagName` of a View's element is `\\\"div\\\"`.\\n    tagName: 'div',\\n\\n    /**\\n     * jQuery delegate for element lookup, scoped to DOM elements within the\\n     * current view. This should be prefered to global lookups where possible.\\n     */\\n    $: function(selector) {\\n      return this.$el.find(selector);\\n    },\\n\\n    /**\\n     * Initialize is an empty function by default. Override it with your own\\n     * initialization logic.\\n     */\\n    initialize: function(){},\\n\\n    /**\\n     * The core function that your view should override, in order\\n     * to populate its element (`this.el`), with the appropriate HTML. The\\n     * convention is for **render** to always return `this`.\\n     */\\n    render: function() {\\n      return this;\\n    },\\n\\n    /**\\n     * Remove this view from the DOM. Note that the view isn't present in the\\n     * DOM by default, so calling this method may be a no-op.\\n     */\\n    remove: function() {\\n      this.$el.remove();\\n      return this;\\n    },\\n\\n    /**\\n     * For small amounts of DOM Elements, where a full-blown template isn't\\n     * needed, use **make** to manufacture elements, one at a time.\\n     * <pre>\\n     *     var el = this.make('li', {'class': 'row'},\\n     *                        this.model.escape('title'));</pre>\\n     */\\n    make: function(tagName, attributes, content) {\\n      var el = document.createElement(tagName);\\n      if (attributes) {\\n        Parse.$(el).attr(attributes);\\n      }\\n      if (content) {\\n        Parse.$(el).html(content);\\n      }\\n      return el;\\n    },\\n\\n    /**\\n     * Changes the view's element (`this.el` property), including event\\n     * re-delegation.\\n     */\\n    setElement: function(element, delegate) {\\n      this.$el = Parse.$(element);\\n      this.el = this.$el[0];\\n      if (delegate !== false) {\\n        this.delegateEvents();\\n      }\\n      return this;\\n    },\\n\\n    /**\\n     * Set callbacks.  <code>this.events</code> is a hash of\\n     * <pre>\\n     * *{\\\"event selector\\\": \\\"callback\\\"}*\\n     *\\n     *     {\\n     *       'mousedown .title':  'edit',\\n     *       'click .button':     'save'\\n     *       'click .open':       function(e) { ... }\\n     *     }\\n     * </pre>\\n     * pairs. Callbacks will be bound to the view, with `this` set properly.\\n     * Uses event delegation for efficiency.\\n     * Omitting the selector binds the event to `this.el`.\\n     * This only works for delegate-able events: not `focus`, `blur`, and\\n     * not `change`, `submit`, and `reset` in Internet Explorer.\\n     */\\n    delegateEvents: function(events) {\\n      events = events || Parse._getValue(this, 'events');\\n      if (!events) {\\n        return;\\n      }\\n      this.undelegateEvents();\\n      var self = this;\\n      Parse._objectEach(events, function(method, key) {\\n        if (!_.isFunction(method)) {\\n          method = self[events[key]];\\n        }\\n        if (!method) {\\n          throw new Error('Event \\\"' + events[key] + '\\\" does not exist');\\n        }\\n        var match = key.match(eventSplitter);\\n        var eventName = match[1], selector = match[2];\\n        method = _.bind(method, self);\\n        eventName += '.delegateEvents' + self.cid;\\n        if (selector === '') {\\n          self.$el.bind(eventName, method);\\n        } else {\\n          self.$el.delegate(selector, eventName, method);\\n        }\\n      });\\n    },\\n\\n    /**\\n     * Clears all callbacks previously bound to the view with `delegateEvents`.\\n     * You usually don't need to use this, but may wish to if you have multiple\\n     * Backbone views attached to the same DOM element.\\n     */\\n    undelegateEvents: function() {\\n      this.$el.unbind('.delegateEvents' + this.cid);\\n    },\\n\\n    /**\\n     * Performs the initial configuration of a View with a set of options.\\n     * Keys with special meaning *(model, collection, id, className)*, are\\n     * attached directly to the view.\\n     */\\n    _configure: function(options) {\\n      if (this.options) {\\n        options = _.extend({}, this.options, options);\\n      }\\n      var self = this;\\n      _.each(viewOptions, function(attr) {\\n        if (options[attr]) {\\n          self[attr] = options[attr];\\n        }\\n      });\\n      this.options = options;\\n    },\\n\\n    /**\\n     * Ensure that the View has a DOM element to render into.\\n     * If `this.el` is a string, pass it through `$()`, take the first\\n     * matching element, and re-assign it to `el`. Otherwise, create\\n     * an element from the `id`, `className` and `tagName` properties.\\n     */\\n    _ensureElement: function() {\\n      if (!this.el) {\\n        var attrs = Parse._getValue(this, 'attributes') || {};\\n        if (this.id) {\\n          attrs.id = this.id;\\n        }\\n        if (this.className) {\\n          attrs['class'] = this.className;\\n        }\\n        this.setElement(this.make(this.tagName, attrs), false);\\n      } else {\\n        this.setElement(this.el, false);\\n      }\\n    }\\n\\n  });\\n\\n  /**\\n   * @function\\n   * @param {Object} instanceProps Instance properties for the view.\\n   * @param {Object} classProps Class properies for the view.\\n   * @return {Class} A new subclass of <code>Parse.View</code>.\\n   */\\n  Parse.View.extend = Parse._extend;\\n\\n}(this));\\n\\n(function(root) {\\n  root.Parse = root.Parse || {};\\n  var Parse = root.Parse;\\n  var _ = Parse._;\\n\\n  /**\\n   * @class\\n   *\\n   * <p>A Parse.User object is a local representation of a user persisted to the\\n   * Parse cloud. This class is a subclass of a Parse.Object, and retains the\\n   * same functionality of a Parse.Object, but also extends it with various\\n   * user specific methods, like authentication, signing up, and validation of\\n   * uniqueness.</p>\\n   */\\n  Parse.User = Parse.Object.extend(\\\"_User\\\", /** @lends Parse.User.prototype */ {\\n    // Instance Variables\\n    _isCurrentUser: false,\\n\\n\\n    // Instance Methods\\n\\n    /**\\n     * Merges another object's attributes into this object.\\n     */\\n    _mergeFromObject: function(other) {\\n      if (other.getSessionToken()) {\\n        this._sessionToken = other.getSessionToken();\\n      }\\n      Parse.User.__super__._mergeFromObject.call(this, other);\\n    },\\n\\n    /**\\n     * Internal method to handle special fields in a _User response.\\n     */\\n    _mergeMagicFields: function(attrs) {\\n      if (attrs.sessionToken) {\\n        this._sessionToken = attrs.sessionToken;\\n        delete attrs.sessionToken;\\n      }\\n      Parse.User.__super__._mergeMagicFields.call(this, attrs);\\n    },\\n\\n    /**\\n     * Removes null values from authData (which exist temporarily for\\n     * unlinking)\\n     */\\n    _cleanupAuthData: function() {\\n      if (!this.isCurrent()) {\\n        return;\\n      }\\n      var authData = this.get('authData');\\n      if (!authData) {\\n        return;\\n      }\\n      Parse._objectEach(this.get('authData'), function(value, key) {\\n        if (!authData[key]) {\\n          delete authData[key];\\n        }\\n      });\\n    },\\n\\n    /**\\n     * Synchronizes authData for all providers.\\n     */\\n    _synchronizeAllAuthData: function() {\\n      var authData = this.get('authData');\\n      if (!authData) {\\n        return;\\n      }\\n\\n      var self = this;\\n      Parse._objectEach(this.get('authData'), function(value, key) {\\n        self._synchronizeAuthData(key);\\n      });\\n    },\\n\\n    /**\\n     * Synchronizes auth data for a provider (e.g. puts the access token in the\\n     * right place to be used by the Facebook SDK).\\n     */\\n    _synchronizeAuthData: function(provider) {\\n      if (!this.isCurrent()) {\\n        return;\\n      }\\n      var authType;\\n      if (_.isString(provider)) {\\n        authType = provider;\\n        provider = Parse.User._authProviders[authType];\\n      } else {\\n        authType = provider.getAuthType();\\n      }\\n      var authData = this.get('authData');\\n      if (!authData || !provider) {\\n        return;\\n      }\\n      var success = provider.restoreAuthentication(authData[authType]);\\n      if (!success) {\\n        this._unlinkFrom(provider);\\n      }\\n    },\\n\\n    _handleSaveResult: function(makeCurrent) {\\n      // Clean up and synchronize the authData object, removing any unset values\\n      if (makeCurrent) {\\n        this._isCurrentUser = true;\\n      }\\n      this._cleanupAuthData();\\n      this._synchronizeAllAuthData();\\n      // Don't keep the password around.\\n      delete this._serverData.password;\\n      this._rebuildEstimatedDataForKey(\\\"password\\\");\\n      this._refreshCache();\\n      if (makeCurrent || this.isCurrent()) {\\n        Parse.User._saveCurrentUser(this);\\n      }\\n    },\\n\\n    /**\\n     * Unlike in the Android/iOS SDKs, logInWith is unnecessary, since you can\\n     * call linkWith on the user (even if it doesn't exist yet on the server).\\n     */\\n    _linkWith: function(provider, options) {\\n      var authType;\\n      if (_.isString(provider)) {\\n        authType = provider;\\n        provider = Parse.User._authProviders[provider];\\n      } else {\\n        authType = provider.getAuthType();\\n      }\\n      if (_.has(options, 'authData')) {\\n        var authData = this.get('authData') || {};\\n        authData[authType] = options.authData;\\n        this.set('authData', authData);\\n\\n        // Overridden so that the user can be made the current user.\\n        var newOptions = _.clone(options) || {};\\n        newOptions.success = function(model) {\\n          model._handleSaveResult(true);\\n          if (options.success) {\\n            options.success.apply(this, arguments);\\n          }\\n        };\\n        return this.save({'authData': authData}, newOptions);\\n      } else {\\n        var self = this;\\n        var promise = new Parse.Promise();\\n        provider.authenticate({\\n          success: function(provider, result) {\\n            self._linkWith(provider, {\\n              authData: result,\\n              success: options.success,\\n              error: options.error\\n            }).then(function() {\\n              promise.resolve(self);\\n            });\\n          },\\n          error: function(provider, error) {\\n            if (options.error) {\\n              options.error(self, error);\\n            }\\n            promise.reject(error);\\n          }\\n        });\\n        return promise;\\n      }\\n    },\\n\\n    /**\\n     * Unlinks a user from a service.\\n     */\\n    _unlinkFrom: function(provider, options) {\\n      var authType;\\n      if (_.isString(provider)) {\\n        authType = provider;\\n        provider = Parse.User._authProviders[provider];\\n      } else {\\n        authType = provider.getAuthType();\\n      }\\n      var newOptions = _.clone(options);\\n      var self = this;\\n      newOptions.authData = null;\\n      newOptions.success = function(model) {\\n        self._synchronizeAuthData(provider);\\n        if (options.success) {\\n          options.success.apply(this, arguments);\\n        }\\n      };\\n      return this._linkWith(provider, newOptions);\\n    },\\n\\n    /**\\n     * Checks whether a user is linked to a service.\\n     */\\n    _isLinked: function(provider) {\\n      var authType;\\n      if (_.isString(provider)) {\\n        authType = provider;\\n      } else {\\n        authType = provider.getAuthType();\\n      }\\n      var authData = this.get('authData') || {};\\n      return !!authData[authType];\\n    },\\n\\n    /**\\n     * Deauthenticates all providers.\\n     */\\n    _logOutWithAll: function() {\\n      var authData = this.get('authData');\\n      if (!authData) {\\n        return;\\n      }\\n      var self = this;\\n      Parse._objectEach(this.get('authData'), function(value, key) {\\n        self._logOutWith(key);\\n      });\\n    },\\n\\n    /**\\n     * Deauthenticates a single provider (e.g. removing access tokens from the\\n     * Facebook SDK).\\n     */\\n    _logOutWith: function(provider) {\\n      if (!this.isCurrent()) {\\n        return;\\n      }\\n      if (_.isString(provider)) {\\n        provider = Parse.User._authProviders[provider];\\n      }\\n      if (provider && provider.deauthenticate) {\\n        provider.deauthenticate();\\n      }\\n    },\\n\\n    /**\\n     * Signs up a new user. You should call this instead of save for\\n     * new Parse.Users. This will create a new Parse.User on the server, and\\n     * also persist the session on disk so that you can access the user using\\n     * <code>current</code>.\\n     *\\n     * <p>A username and password must be set before calling signUp.</p>\\n     *\\n     * <p>Calls options.success or options.error on completion.</p>\\n     *\\n     * @param {Object} attrs Extra fields to set on the new user, or null.\\n     * @param {Object} options A Backbone-style options object.\\n     * @return {Parse.Promise} A promise that is fulfilled when the signup\\n     *     finishes.\\n     * @see Parse.User.signUp\\n     */\\n    signUp: function(attrs, options) {\\n      var error;\\n      options = options || {};\\n\\n      var username = (attrs && attrs.username) || this.get(\\\"username\\\");\\n      if (!username || (username === \\\"\\\")) {\\n        error = new Parse.Error(\\n            Parse.Error.OTHER_CAUSE,\\n            \\\"Cannot sign up user with an empty name.\\\");\\n        if (options && options.error) {\\n          options.error(this, error);\\n        }\\n        return Parse.Promise.error(error);\\n      }\\n\\n      var password = (attrs && attrs.password) || this.get(\\\"password\\\");\\n      if (!password || (password === \\\"\\\")) {\\n        error = new Parse.Error(\\n            Parse.Error.OTHER_CAUSE,\\n            \\\"Cannot sign up user with an empty password.\\\");\\n        if (options && options.error) {\\n          options.error(this, error);\\n        }\\n        return Parse.Promise.error(error);\\n      }\\n\\n      // Overridden so that the user can be made the current user.\\n      var newOptions = _.clone(options);\\n      newOptions.success = function(model) {\\n        model._handleSaveResult(true);\\n        if (options.success) {\\n          options.success.apply(this, arguments);\\n        }\\n      };\\n      return this.save(attrs, newOptions);\\n    },\\n\\n    /**\\n     * Logs in a Parse.User. On success, this saves the session to localStorage,\\n     * so you can retrieve the currently logged in user using\\n     * <code>current</code>.\\n     *\\n     * <p>A username and password must be set before calling logIn.</p>\\n     *\\n     * <p>Calls options.success or options.error on completion.</p>\\n     *\\n     * @param {Object} options A Backbone-style options object.\\n     * @see Parse.User.logIn\\n     * @return {Parse.Promise} A promise that is fulfilled with the user when\\n     *     the login is complete.\\n     */\\n    logIn: function(options) {\\n      var model = this;\\n      options = options || {};\\n      var request = Parse._request({\\n        route: \\\"login\\\",\\n        method: \\\"GET\\\",\\n        useMasterKey: options.useMasterKey,\\n        data: this.toJSON()\\n      });\\n      return request.then(function(resp, status, xhr) {\\n        var serverAttrs = model.parse(resp, status, xhr);\\n        model._finishFetch(serverAttrs);\\n        model._handleSaveResult(true);\\n        return model;\\n      })._thenRunCallbacks(options, this);\\n    },\\n\\n    /**\\n     * @see Parse.Object#save\\n     */\\n    save: function(arg1, arg2, arg3) {\\n      var i, attrs, current, options, saved;\\n      if (_.isObject(arg1) || _.isNull(arg1) || _.isUndefined(arg1)) {\\n        attrs = arg1;\\n        options = arg2;\\n      } else {\\n        attrs = {};\\n        attrs[arg1] = arg2;\\n        options = arg3;\\n      }\\n      options = options || {};\\n\\n      var newOptions = _.clone(options);\\n      newOptions.success = function(model) {\\n        model._handleSaveResult(false);\\n        if (options.success) {\\n          options.success.apply(this, arguments);\\n        }\\n      };\\n      return Parse.Object.prototype.save.call(this, attrs, newOptions);\\n    },\\n\\n    /**\\n     * @see Parse.Object#fetch\\n     */\\n    fetch: function(options) {\\n      var newOptions = options ? _.clone(options) : {};\\n      newOptions.success = function(model) {\\n        model._handleSaveResult(false);\\n        if (options && options.success) {\\n          options.success.apply(this, arguments);\\n        }\\n      };\\n      return Parse.Object.prototype.fetch.call(this, newOptions);\\n    },\\n\\n    /**\\n     * Returns true if <code>current</code> would return this user.\\n     * @see Parse.User#current\\n     */\\n    isCurrent: function() {\\n      return this._isCurrentUser;\\n    },\\n\\n    /**\\n     * Returns get(\\\"username\\\").\\n     * @return {String}\\n     * @see Parse.Object#get\\n     */\\n    getUsername: function() {\\n      return this.get(\\\"username\\\");\\n    },\\n\\n    /**\\n     * Calls set(\\\"username\\\", username, options) and returns the result.\\n     * @param {String} username\\n     * @param {Object} options A Backbone-style options object.\\n     * @return {Boolean}\\n     * @see Parse.Object.set\\n     */\\n    setUsername: function(username, options) {\\n      return this.set(\\\"username\\\", username, options);\\n    },\\n\\n    /**\\n     * Calls set(\\\"password\\\", password, options) and returns the result.\\n     * @param {String} password\\n     * @param {Object} options A Backbone-style options object.\\n     * @return {Boolean}\\n     * @see Parse.Object.set\\n     */\\n    setPassword: function(password, options) {\\n      return this.set(\\\"password\\\", password, options);\\n    },\\n\\n    /**\\n     * Returns get(\\\"email\\\").\\n     * @return {String}\\n     * @see Parse.Object#get\\n     */\\n    getEmail: function() {\\n      return this.get(\\\"email\\\");\\n    },\\n\\n    /**\\n     * Calls set(\\\"email\\\", email, options) and returns the result.\\n     * @param {String} email\\n     * @param {Object} options A Backbone-style options object.\\n     * @return {Boolean}\\n     * @see Parse.Object.set\\n     */\\n    setEmail: function(email, options) {\\n      return this.set(\\\"email\\\", email, options);\\n    },\\n\\n    /**\\n     * Checks whether this user is the current user and has been authenticated.\\n     * @return (Boolean) whether this user is the current user and is logged in.\\n     */\\n    authenticated: function() {\\n      return !!this._sessionToken &&\\n          (Parse.User.current() && Parse.User.current().id === this.id);\\n    },\\n\\n    /**\\n     * Returns the session token for this user, if the user has been logged in,\\n     * or if it is the result of a query with the master key. Otherwise, returns\\n     * undefined.\\n     * @return {String} the session token, or undefined\\n     */\\n    getSessionToken: function() {\\n      return this._sessionToken;\\n    }\\n\\n  }, /** @lends Parse.User */ {\\n    // Class Variables\\n\\n    // The currently logged-in user.\\n    _currentUser: null,\\n\\n    // Whether currentUser is known to match the serialized version on disk.\\n    // This is useful for saving a localstorage check if you try to load\\n    // _currentUser frequently while there is none stored.\\n    _currentUserMatchesDisk: false,\\n\\n    // The localStorage key suffix that the current user is stored under.\\n    _CURRENT_USER_KEY: \\\"currentUser\\\",\\n\\n    // The mapping of auth provider names to actual providers\\n    _authProviders: {},\\n\\n    // Whether to rewrite className User to _User\\n    _performUserRewrite: true,\\n\\n\\n    // Class Methods\\n\\n    /**\\n     * Signs up a new user with a username (or email) and password.\\n     * This will create a new Parse.User on the server, and also persist the\\n     * session in localStorage so that you can access the user using\\n     * {@link #current}.\\n     *\\n     * <p>Calls options.success or options.error on completion.</p>\\n     *\\n     * @param {String} username The username (or email) to sign up with.\\n     * @param {String} password The password to sign up with.\\n     * @param {Object} attrs Extra fields to set on the new user.\\n     * @param {Object} options A Backbone-style options object.\\n     * @return {Parse.Promise} A promise that is fulfilled with the user when\\n     *     the signup completes.\\n     * @see Parse.User#signUp\\n     */\\n    signUp: function(username, password, attrs, options) {\\n      attrs = attrs || {};\\n      attrs.username = username;\\n      attrs.password = password;\\n      var user = Parse.Object._create(\\\"_User\\\");\\n      return user.signUp(attrs, options);\\n    },\\n\\n    /**\\n     * Logs in a user with a username (or email) and password. On success, this\\n     * saves the session to disk, so you can retrieve the currently logged in\\n     * user using <code>current</code>.\\n     *\\n     * <p>Calls options.success or options.error on completion.</p>\\n     *\\n     * @param {String} username The username (or email) to log in with.\\n     * @param {String} password The password to log in with.\\n     * @param {Object} options A Backbone-style options object.\\n     * @return {Parse.Promise} A promise that is fulfilled with the user when\\n     *     the login completes.\\n     * @see Parse.User#logIn\\n     */\\n    logIn: function(username, password, options) {\\n      var user = Parse.Object._create(\\\"_User\\\");\\n      user._finishFetch({ username: username, password: password });\\n      return user.logIn(options);\\n    },\\n\\n    /**\\n     * Logs in a user with a session token. On success, this saves the session\\n     * to disk, so you can retrieve the currently logged in user using\\n     * <code>current</code>.\\n     *\\n     * <p>Calls options.success or options.error on completion.</p>\\n     *\\n     * @param {String} sessionToken The sessionToken to log in with.\\n     * @param {Object} options A Backbone-style options object.\\n     * @return {Parse.Promise} A promise that is fulfilled with the user when\\n     *     the login completes.\\n     */\\n    become: function(sessionToken, options) {\\n      options = options || {};\\n\\n      var user = Parse.Object._create(\\\"_User\\\");\\n      return Parse._request({\\n        route: \\\"users\\\",\\n        className: \\\"me\\\",\\n        method: \\\"GET\\\",\\n        useMasterKey: options.useMasterKey,\\n        sessionToken: sessionToken\\n      }).then(function(resp, status, xhr) {\\n        var serverAttrs = user.parse(resp, status, xhr);\\n        user._finishFetch(serverAttrs);\\n        user._handleSaveResult(true);\\n        return user;\\n\\n      })._thenRunCallbacks(options, user);\\n    },\\n\\n    /**\\n     * Logs out the currently logged in user session. This will remove the\\n     * session from disk, log out of linked services, and future calls to\\n     * <code>current</code> will return <code>null</code>.\\n     */\\n    logOut: function() {\\n      if (Parse.User._currentUser !== null) {\\n        Parse.User._currentUser._logOutWithAll();\\n        Parse.User._currentUser._isCurrentUser = false;\\n      }\\n      Parse.User._currentUserMatchesDisk = true;\\n      Parse.User._currentUser = null;\\n      Parse.localStorage.removeItem(\\n          Parse._getParsePath(Parse.User._CURRENT_USER_KEY));\\n    },\\n\\n    /**\\n     * Requests a password reset email to be sent to the specified email address\\n     * associated with the user account. This email allows the user to securely\\n     * reset their password on the Parse site.\\n     *\\n     * <p>Calls options.success or options.error on completion.</p>\\n     *\\n     * @param {String} email The email address associated with the user that\\n     *     forgot their password.\\n     * @param {Object} options A Backbone-style options object.\\n     */\\n    requestPasswordReset: function(email, options) {\\n      options = options || {};\\n      var request = Parse._request({\\n        route: \\\"requestPasswordReset\\\",\\n        method: \\\"POST\\\",\\n        useMasterKey: options.useMasterKey,\\n        data: { email: email }\\n      });\\n      return request._thenRunCallbacks(options);\\n    },\\n\\n    /**\\n     * Retrieves the currently logged in ParseUser with a valid session,\\n     * either from memory or localStorage, if necessary.\\n     * @return {Parse.Object} The currently logged in Parse.User.\\n     */\\n    current: function() {\\n      if (Parse.User._currentUser) {\\n        return Parse.User._currentUser;\\n      }\\n\\n      if (Parse.User._currentUserMatchesDisk) {\\n\\n        return Parse.User._currentUser;\\n      }\\n\\n      // Load the user from local storage.\\n      Parse.User._currentUserMatchesDisk = true;\\n\\n      var userData = Parse.localStorage.getItem(Parse._getParsePath(\\n          Parse.User._CURRENT_USER_KEY));\\n      if (!userData) {\\n\\n        return null;\\n      }\\n      Parse.User._currentUser = Parse.Object._create(\\\"_User\\\");\\n      Parse.User._currentUser._isCurrentUser = true;\\n\\n      var json = JSON.parse(userData);\\n      Parse.User._currentUser.id = json._id;\\n      delete json._id;\\n      Parse.User._currentUser._sessionToken = json._sessionToken;\\n      delete json._sessionToken;\\n      Parse.User._currentUser._finishFetch(json);\\n\\n      Parse.User._currentUser._synchronizeAllAuthData();\\n      Parse.User._currentUser._refreshCache();\\n      Parse.User._currentUser._opSetQueue = [{}];\\n      return Parse.User._currentUser;\\n    },\\n\\n    /**\\n     * Allow someone to define a custom User class without className\\n     * being rewritten to _User. The default behavior is to rewrite\\n     * User to _User for legacy reasons. This allows developers to\\n     * override that behavior.\\n     *\\n     * @param {Boolean} isAllowed Whether or not to allow custom User class\\n     */\\n    allowCustomUserClass: function(isAllowed) {\\n      this._performUserRewrite = !isAllowed;\\n    },\\n\\n    /**\\n     * Persists a user as currentUser to localStorage, and into the singleton.\\n     */\\n    _saveCurrentUser: function(user) {\\n      if (Parse.User._currentUser !== user) {\\n        Parse.User.logOut();\\n      }\\n      user._isCurrentUser = true;\\n      Parse.User._currentUser = user;\\n      Parse.User._currentUserMatchesDisk = true;\\n\\n      var json = user.toJSON();\\n      json._id = user.id;\\n      json._sessionToken = user._sessionToken;\\n      Parse.localStorage.setItem(\\n          Parse._getParsePath(Parse.User._CURRENT_USER_KEY),\\n          JSON.stringify(json));\\n    },\\n\\n    _registerAuthenticationProvider: function(provider) {\\n      Parse.User._authProviders[provider.getAuthType()] = provider;\\n      // Synchronize the current user with the auth provider.\\n      if (Parse.User.current()) {\\n        Parse.User.current()._synchronizeAuthData(provider.getAuthType());\\n      }\\n    },\\n\\n    _logInWith: function(provider, options) {\\n      var user = Parse.Object._create(\\\"_User\\\");\\n      return user._linkWith(provider, options);\\n    }\\n\\n  });\\n}(this));\\n\\n\\n// Parse.Query is a way to create a list of Parse.Objects.\\n(function(root) {\\n  root.Parse = root.Parse || {};\\n  var Parse = root.Parse;\\n  var _ = Parse._;\\n\\n  /**\\n   * Creates a new parse Parse.Query for the given Parse.Object subclass.\\n   * @param objectClass -\\n   *   An instance of a subclass of Parse.Object, or a Parse className string.\\n   * @class\\n   *\\n   * <p>Parse.Query defines a query that is used to fetch Parse.Objects. The\\n   * most common use case is finding all objects that match a query through the\\n   * <code>find</code> method. For example, this sample code fetches all objects\\n   * of class <code>MyClass</code>. It calls a different function depending on\\n   * whether the fetch succeeded or not.\\n   *\\n   * <pre>\\n   * var query = new Parse.Query(MyClass);\\n   * query.find({\\n   *   success: function(results) {\\n   *     // results is an array of Parse.Object.\\n   *   },\\n   *\\n   *   error: function(error) {\\n   *     // error is an instance of Parse.Error.\\n   *   }\\n   * });</pre></p>\\n   *\\n   * <p>A Parse.Query can also be used to retrieve a single object whose id is\\n   * known, through the get method. For example, this sample code fetches an\\n   * object of class <code>MyClass</code> and id <code>myId</code>. It calls a\\n   * different function depending on whether the fetch succeeded or not.\\n   *\\n   * <pre>\\n   * var query = new Parse.Query(MyClass);\\n   * query.get(myId, {\\n   *   success: function(object) {\\n   *     // object is an instance of Parse.Object.\\n   *   },\\n   *\\n   *   error: function(object, error) {\\n   *     // error is an instance of Parse.Error.\\n   *   }\\n   * });</pre></p>\\n   *\\n   * <p>A Parse.Query can also be used to count the number of objects that match\\n   * the query without retrieving all of those objects. For example, this\\n   * sample code counts the number of objects of the class <code>MyClass</code>\\n   * <pre>\\n   * var query = new Parse.Query(MyClass);\\n   * query.count({\\n   *   success: function(number) {\\n   *     // There are number instances of MyClass.\\n   *   },\\n   *\\n   *   error: function(error) {\\n   *     // error is an instance of Parse.Error.\\n   *   }\\n   * });</pre></p>\\n   */\\n  Parse.Query = function(objectClass) {\\n    if (_.isString(objectClass)) {\\n      objectClass = Parse.Object._getSubclass(objectClass);\\n    }\\n\\n    this.objectClass = objectClass;\\n\\n    this.className = objectClass.prototype.className;\\n\\n    this._where = {};\\n    this._include = [];\\n    this._limit = -1; // negative limit means, do not send a limit\\n    this._skip = 0;\\n    this._extraOptions = {};\\n  };\\n\\n  /**\\n   * Constructs a Parse.Query that is the OR of the passed in queries.  For\\n   * example:\\n   * <pre>var compoundQuery = Parse.Query.or(query1, query2, query3);</pre>\\n   *\\n   * will create a compoundQuery that is an or of the query1, query2, and\\n   * query3.\\n   * @param {...Parse.Query} var_args The list of queries to OR.\\n   * @return {Parse.Query} The query that is the OR of the passed in queries.\\n   */\\n  Parse.Query.or = function() {\\n    var queries = _.toArray(arguments);\\n    var className = null;\\n    Parse._arrayEach(queries, function(q) {\\n      if (_.isNull(className)) {\\n        className = q.className;\\n      }\\n\\n      if (className !== q.className) {\\n        throw \\\"All queries must be for the same class\\\";\\n      }\\n    });\\n    var query = new Parse.Query(className);\\n    query._orQuery(queries);\\n    return query;\\n  };\\n\\n  Parse.Query.prototype = {\\n    /**\\n     * Constructs a Parse.Object whose id is already known by fetching data from\\n     * the server.  Either options.success or options.error is called when the\\n     * find completes.\\n     *\\n     * @param {String} objectId The id of the object to be fetched.\\n     * @param {Object} options A Backbone-style options object.\\n     * Valid options are:<ul>\\n     *   <li>success: A Backbone-style success callback\\n     *   <li>error: An Backbone-style error callback.\\n     *   <li>useMasterKey: In Cloud Code and Node only, causes the Master Key to\\n     *     be used for this request.\\n     * </ul>\\n     */\\n    get: function(objectId, options) {\\n      var self = this;\\n      self.equalTo('objectId', objectId);\\n\\n      var firstOptions = {};\\n      if (options && _.has(options, 'useMasterKey')) {\\n        firstOptions = { useMasterKey: options.useMasterKey };\\n      }\\n\\n      return self.first(firstOptions).then(function(response) {\\n        if (response) {\\n          return response;\\n        }\\n\\n        var errorObject = new Parse.Error(Parse.Error.OBJECT_NOT_FOUND,\\n                                          \\\"Object not found.\\\");\\n        return Parse.Promise.error(errorObject);\\n\\n      })._thenRunCallbacks(options, null);\\n    },\\n\\n    /**\\n     * Returns a JSON representation of this query.\\n     * @return {Object} The JSON representation of the query.\\n     */\\n    toJSON: function() {\\n      var params = {\\n        where: this._where\\n      };\\n\\n      if (this._include.length > 0) {\\n        params.include = this._include.join(\\\",\\\");\\n      }\\n      if (this._select) {\\n        params.keys = this._select.join(\\\",\\\");\\n      }\\n      if (this._limit >= 0) {\\n        params.limit = this._limit;\\n      }\\n      if (this._skip > 0) {\\n        params.skip = this._skip;\\n      }\\n      if (this._order !== undefined) {\\n        params.order = this._order.join(\\\",\\\");\\n      }\\n\\n      Parse._objectEach(this._extraOptions, function(v, k) {\\n        params[k] = v;\\n      });\\n\\n      return params;\\n    },\\n\\n    /**\\n     * Retrieves a list of ParseObjects that satisfy this query.\\n     * Either options.success or options.error is called when the find\\n     * completes.\\n     *\\n     * @param {Object} options A Backbone-style options object. Valid options\\n     * are:<ul>\\n     *   <li>success: Function to call when the find completes successfully.\\n     *   <li>error: Function to call when the find fails.\\n     *   <li>useMasterKey: In Cloud Code and Node only, causes the Master Key to\\n     *     be used for this request.\\n     * </ul>\\n     *\\n     * @return {Parse.Promise} A promise that is resolved with the results when\\n     * the query completes.\\n     */\\n    find: function(options) {\\n      var self = this;\\n      options = options || {};\\n\\n      var request = Parse._request({\\n        route: \\\"classes\\\",\\n        className: this.className,\\n        method: \\\"GET\\\",\\n        useMasterKey: options.useMasterKey,\\n        data: this.toJSON()\\n      });\\n\\n      return request.then(function(response) {\\n        return _.map(response.results, function(json) {\\n          var obj;\\n          if (response.className) {\\n            obj = new Parse.Object(response.className);\\n          } else {\\n            obj = new self.objectClass();\\n          }\\n          obj._finishFetch(json, true);\\n          return obj;\\n        });\\n      })._thenRunCallbacks(options);\\n    },\\n\\n    /**\\n     * Counts the number of objects that match this query.\\n     * Either options.success or options.error is called when the count\\n     * completes.\\n     *\\n     * @param {Object} options A Backbone-style options object. Valid options\\n     * are:<ul>\\n     *   <li>success: Function to call when the count completes successfully.\\n     *   <li>error: Function to call when the find fails.\\n     *   <li>useMasterKey: In Cloud Code and Node only, causes the Master Key to\\n     *     be used for this request.\\n     * </ul>\\n     *\\n     * @return {Parse.Promise} A promise that is resolved with the count when\\n     * the query completes.\\n     */\\n    count: function(options) {\\n      var self = this;\\n      options = options || {};\\n\\n      var params = this.toJSON();\\n      params.limit = 0;\\n      params.count = 1;\\n      var request = Parse._request({\\n        route: \\\"classes\\\",\\n        className: self.className,\\n        method: \\\"GET\\\",\\n        useMasterKey: options.useMasterKey,\\n        data: params\\n      });\\n\\n      return request.then(function(response) {\\n        return response.count;\\n      })._thenRunCallbacks(options);\\n    },\\n\\n    /**\\n     * Retrieves at most one Parse.Object that satisfies this query.\\n     *\\n     * Either options.success or options.error is called when it completes.\\n     * success is passed the object if there is one. otherwise, undefined.\\n     *\\n     * @param {Object} options A Backbone-style options object. Valid options\\n     * are:<ul>\\n     *   <li>success: Function to call when the find completes successfully.\\n     *   <li>error: Function to call when the find fails.\\n     *   <li>useMasterKey: In Cloud Code and Node only, causes the Master Key to\\n     *     be used for this request.\\n     * </ul>\\n     *\\n     * @return {Parse.Promise} A promise that is resolved with the object when\\n     * the query completes.\\n     */\\n    first: function(options) {\\n      var self = this;\\n      options = options || {};\\n\\n      var params = this.toJSON();\\n      params.limit = 1;\\n      var request = Parse._request({\\n        route: \\\"classes\\\",\\n        className: this.className,\\n        method: \\\"GET\\\",\\n        useMasterKey: options.useMasterKey,\\n        data: params\\n      });\\n\\n      return request.then(function(response) {\\n        return _.map(response.results, function(json) {\\n          var obj = new self.objectClass();\\n          obj._finishFetch(json, true);\\n          return obj;\\n        })[0];\\n      })._thenRunCallbacks(options);\\n    },\\n\\n    /**\\n     * Returns a new instance of Parse.Collection backed by this query.\\n     * @param {Array} items An array of instances of <code>Parse.Object</code>\\n     *     with which to start this Collection.\\n     * @param {Object} options An optional object with Backbone-style options.\\n     * Valid options are:<ul>\\n     *   <li>model: The Parse.Object subclass that this collection contains.\\n     *   <li>query: An instance of Parse.Query to use when fetching items.\\n     *   <li>comparator: A string property name or function to sort by.\\n     * </ul>\\n     * @return {Parse.Collection}\\n     */\\n    collection: function(items, options) {\\n      options = options || {};\\n      return new Parse.Collection(items, _.extend(options, {\\n        model: this.objectClass,\\n        query: this\\n      }));\\n    },\\n\\n    /**\\n     * Sets the number of results to skip before returning any results.\\n     * This is useful for pagination.\\n     * Default is to skip zero results.\\n     * @param {Number} n the number of results to skip.\\n     * @return {Parse.Query} Returns the query, so you can chain this call.\\n     */\\n    skip: function(n) {\\n      this._skip = n;\\n      return this;\\n    },\\n\\n    /**\\n     * Sets the limit of the number of results to return. The default limit is\\n     * 100, with a maximum of 1000 results being returned at a time.\\n     * @param {Number} n the number of results to limit to.\\n     * @return {Parse.Query} Returns the query, so you can chain this call.\\n     */\\n    limit: function(n) {\\n      this._limit = n;\\n      return this;\\n    },\\n\\n    /**\\n     * Add a constraint to the query that requires a particular key's value to\\n     * be equal to the provided value.\\n     * @param {String} key The key to check.\\n     * @param value The value that the Parse.Object must contain.\\n     * @return {Parse.Query} Returns the query, so you can chain this call.\\n     */\\n    equalTo: function(key, value) {\\n      if (_.isUndefined(value)) {\\n        return this.doesNotExist(key);\\n      }\\n\\n      this._where[key] = Parse._encode(value);\\n      return this;\\n    },\\n\\n    /**\\n     * Helper for condition queries\\n     */\\n    _addCondition: function(key, condition, value) {\\n      // Check if we already have a condition\\n      if (!this._where[key]) {\\n        this._where[key] = {};\\n      }\\n      this._where[key][condition] = Parse._encode(value);\\n      return this;\\n    },\\n\\n    /**\\n     * Add a constraint to the query that requires a particular key's value to\\n     * be not equal to the provided value.\\n     * @param {String} key The key to check.\\n     * @param value The value that must not be equalled.\\n     * @return {Parse.Query} Returns the query, so you can chain this call.\\n     */\\n    notEqualTo: function(key, value) {\\n      this._addCondition(key, \\\"$ne\\\", value);\\n      return this;\\n    },\\n\\n    /**\\n     * Add a constraint to the query that requires a particular key's value to\\n     * be less than the provided value.\\n     * @param {String} key The key to check.\\n     * @param value The value that provides an upper bound.\\n     * @return {Parse.Query} Returns the query, so you can chain this call.\\n     */\\n    lessThan: function(key, value) {\\n      this._addCondition(key, \\\"$lt\\\", value);\\n      return this;\\n    },\\n\\n    /**\\n     * Add a constraint to the query that requires a particular key's value to\\n     * be greater than the provided value.\\n     * @param {String} key The key to check.\\n     * @param value The value that provides an lower bound.\\n     * @return {Parse.Query} Returns the query, so you can chain this call.\\n     */\\n    greaterThan: function(key, value) {\\n      this._addCondition(key, \\\"$gt\\\", value);\\n      return this;\\n    },\\n\\n    /**\\n     * Add a constraint to the query that requires a particular key's value to\\n     * be less than or equal to the provided value.\\n     * @param {String} key The key to check.\\n     * @param value The value that provides an upper bound.\\n     * @return {Parse.Query} Returns the query, so you can chain this call.\\n     */\\n    lessThanOrEqualTo: function(key, value) {\\n      this._addCondition(key, \\\"$lte\\\", value);\\n      return this;\\n    },\\n\\n    /**\\n     * Add a constraint to the query that requires a particular key's value to\\n     * be greater than or equal to the provided value.\\n     * @param {String} key The key to check.\\n     * @param value The value that provides an lower bound.\\n     * @return {Parse.Query} Returns the query, so you can chain this call.\\n     */\\n    greaterThanOrEqualTo: function(key, value) {\\n      this._addCondition(key, \\\"$gte\\\", value);\\n      return this;\\n    },\\n\\n    /**\\n     * Add a constraint to the query that requires a particular key's value to\\n     * be contained in the provided list of values.\\n     * @param {String} key The key to check.\\n     * @param {Array} values The values that will match.\\n     * @return {Parse.Query} Returns the query, so you can chain this call.\\n     */\\n    containedIn: function(key, values) {\\n      this._addCondition(key, \\\"$in\\\", values);\\n      return this;\\n    },\\n\\n    /**\\n     * Add a constraint to the query that requires a particular key's value to\\n     * not be contained in the provided list of values.\\n     * @param {String} key The key to check.\\n     * @param {Array} values The values that will not match.\\n     * @return {Parse.Query} Returns the query, so you can chain this call.\\n     */\\n    notContainedIn: function(key, values) {\\n      this._addCondition(key, \\\"$nin\\\", values);\\n      return this;\\n    },\\n\\n    /**\\n     * Add a constraint to the query that requires a particular key's value to\\n     * contain each one of the provided list of values.\\n     * @param {String} key The key to check.  This key's value must be an array.\\n     * @param {Array} values The values that will match.\\n     * @return {Parse.Query} Returns the query, so you can chain this call.\\n     */\\n    containsAll: function(key, values) {\\n      this._addCondition(key, \\\"$all\\\", values);\\n      return this;\\n    },\\n\\n\\n    /**\\n     * Add a constraint for finding objects that contain the given key.\\n     * @param {String} key The key that should exist.\\n     * @return {Parse.Query} Returns the query, so you can chain this call.\\n     */\\n    exists: function(key) {\\n      this._addCondition(key, \\\"$exists\\\", true);\\n      return this;\\n    },\\n\\n    /**\\n     * Add a constraint for finding objects that do not contain a given key.\\n     * @param {String} key The key that should not exist\\n     * @return {Parse.Query} Returns the query, so you can chain this call.\\n     */\\n    doesNotExist: function(key) {\\n      this._addCondition(key, \\\"$exists\\\", false);\\n      return this;\\n    },\\n\\n    /**\\n     * Add a regular expression constraint for finding string values that match\\n     * the provided regular expression.\\n     * This may be slow for large datasets.\\n     * @param {String} key The key that the string to match is stored in.\\n     * @param {RegExp} regex The regular expression pattern to match.\\n     * @return {Parse.Query} Returns the query, so you can chain this call.\\n     */\\n    matches: function(key, regex, modifiers) {\\n      this._addCondition(key, \\\"$regex\\\", regex);\\n      if (!modifiers) { modifiers = \\\"\\\"; }\\n      // Javascript regex options support mig as inline options but store them\\n      // as properties of the object. We support mi & should migrate them to\\n      // modifiers\\n      if (regex.ignoreCase) { modifiers += 'i'; }\\n      if (regex.multiline) { modifiers += 'm'; }\\n\\n      if (modifiers && modifiers.length) {\\n        this._addCondition(key, \\\"$options\\\", modifiers);\\n      }\\n      return this;\\n    },\\n\\n    /**\\n     * Add a constraint that requires that a key's value matches a Parse.Query\\n     * constraint.\\n     * @param {String} key The key that the contains the object to match the\\n     *                     query.\\n     * @param {Parse.Query} query The query that should match.\\n     * @return {Parse.Query} Returns the query, so you can chain this call.\\n     */\\n    matchesQuery: function(key, query) {\\n      var queryJSON = query.toJSON();\\n      queryJSON.className = query.className;\\n      this._addCondition(key, \\\"$inQuery\\\", queryJSON);\\n      return this;\\n    },\\n\\n   /**\\n     * Add a constraint that requires that a key's value not matches a\\n     * Parse.Query constraint.\\n     * @param {String} key The key that the contains the object to match the\\n     *                     query.\\n     * @param {Parse.Query} query The query that should not match.\\n     * @return {Parse.Query} Returns the query, so you can chain this call.\\n     */\\n    doesNotMatchQuery: function(key, query) {\\n      var queryJSON = query.toJSON();\\n      queryJSON.className = query.className;\\n      this._addCondition(key, \\\"$notInQuery\\\", queryJSON);\\n      return this;\\n    },\\n\\n\\n    /**\\n     * Add a constraint that requires that a key's value matches a value in\\n     * an object returned by a different Parse.Query.\\n     * @param {String} key The key that contains the value that is being\\n     *                     matched.\\n     * @param {String} queryKey The key in the objects returned by the query to\\n     *                          match against.\\n     * @param {Parse.Query} query The query to run.\\n     * @return {Parse.Query} Returns the query, so you can chain this call.\\n     */\\n    matchesKeyInQuery: function(key, queryKey, query) {\\n      var queryJSON = query.toJSON();\\n      queryJSON.className = query.className;\\n      this._addCondition(key, \\\"$select\\\",\\n                         { key: queryKey, query: queryJSON });\\n      return this;\\n    },\\n\\n    /**\\n     * Add a constraint that requires that a key's value not match a value in\\n     * an object returned by a different Parse.Query.\\n     * @param {String} key The key that contains the value that is being\\n     *                     excluded.\\n     * @param {String} queryKey The key in the objects returned by the query to\\n     *                          match against.\\n     * @param {Parse.Query} query The query to run.\\n     * @return {Parse.Query} Returns the query, so you can chain this call.\\n     */\\n    doesNotMatchKeyInQuery: function(key, queryKey, query) {\\n      var queryJSON = query.toJSON();\\n      queryJSON.className = query.className;\\n      this._addCondition(key, \\\"$dontSelect\\\",\\n                         { key: queryKey, query: queryJSON });\\n      return this;\\n    },\\n\\n    /**\\n     * Add constraint that at least one of the passed in queries matches.\\n     * @param {Array} queries\\n     * @return {Parse.Query} Returns the query, so you can chain this call.\\n     */\\n    _orQuery: function(queries) {\\n      var queryJSON = _.map(queries, function(q) {\\n        return q.toJSON().where;\\n      });\\n\\n      this._where.$or = queryJSON;\\n      return this;\\n    },\\n\\n    /**\\n     * Converts a string into a regex that matches it.\\n     * Surrounding with \\\\Q .. \\\\E does this, we just need to escape \\\\E's in\\n     * the text separately.\\n     */\\n    _quote: function(s) {\\n      return \\\"\\\\\\\\Q\\\" + s.replace(\\\"\\\\\\\\E\\\", \\\"\\\\\\\\E\\\\\\\\\\\\\\\\E\\\\\\\\Q\\\") + \\\"\\\\\\\\E\\\";\\n    },\\n\\n    /**\\n     * Add a constraint for finding string values that contain a provided\\n     * string.  This may be slow for large datasets.\\n     * @param {String} key The key that the string to match is stored in.\\n     * @param {String} substring The substring that the value must contain.\\n     * @return {Parse.Query} Returns the query, so you can chain this call.\\n     */\\n    contains: function(key, value) {\\n      this._addCondition(key, \\\"$regex\\\", this._quote(value));\\n      return this;\\n    },\\n\\n    /**\\n     * Add a constraint for finding string values that start with a provided\\n     * string.  This query will use the backend index, so it will be fast even\\n     * for large datasets.\\n     * @param {String} key The key that the string to match is stored in.\\n     * @param {String} prefix The substring that the value must start with.\\n     * @return {Parse.Query} Returns the query, so you can chain this call.\\n     */\\n    startsWith: function(key, value) {\\n      this._addCondition(key, \\\"$regex\\\", \\\"^\\\" + this._quote(value));\\n      return this;\\n    },\\n\\n    /**\\n     * Add a constraint for finding string values that end with a provided\\n     * string.  This will be slow for large datasets.\\n     * @param {String} key The key that the string to match is stored in.\\n     * @param {String} suffix The substring that the value must end with.\\n     * @return {Parse.Query} Returns the query, so you can chain this call.\\n     */\\n    endsWith: function(key, value) {\\n      this._addCondition(key, \\\"$regex\\\", this._quote(value) + \\\"$\\\");\\n      return this;\\n    },\\n\\n    /**\\n     * Sorts the results in ascending order by the given key.\\n     *\\n     * @param {(String|String[]|...String} key The key to order by, which is a\\n     * string of comma separated values, or an Array of keys, or multiple keys.\\n     * @return {Parse.Query} Returns the query, so you can chain this call.\\n     */\\n    ascending: function() {\\n      this._order = [];\\n      return this.addAscending.apply(this, arguments);\\n    },\\n\\n    /**\\n     * Sorts the results in ascending order by the given key,\\n     * but can also add secondary sort descriptors without overwriting _order.\\n     *\\n     * @param {(String|String[]|...String} key The key to order by, which is a\\n     * string of comma separated values, or an Array of keys, or multiple keys.\\n     * @return {Parse.Query} Returns the query, so you can chain this call.\\n     */\\n    addAscending: function(key) {\\n      var self = this;\\n      if (!this._order) {\\n        this._order = [];\\n      }\\n      Parse._arrayEach(arguments, function(key) {\\n        if (Array.isArray(key)) {\\n          key = key.join();\\n        }\\n        self._order = self._order.concat(key.replace(/\\\\s/g, \\\"\\\").split(\\\",\\\"));\\n      });\\n      return this;\\n    },\\n\\n    /**\\n     * Sorts the results in descending order by the given key.\\n     *\\n     * @param {(String|String[]|...String} key The key to order by, which is a\\n     * string of comma separated values, or an Array of keys, or multiple keys.\\n     * @return {Parse.Query} Returns the query, so you can chain this call.\\n     */\\n    descending: function(key) {\\n      this._order = [];\\n      return this.addDescending.apply(this, arguments);\\n    },\\n\\n    /**\\n     * Sorts the results in descending order by the given key,\\n     * but can also add secondary sort descriptors without overwriting _order.\\n     *\\n     * @param {(String|String[]|...String} key The key to order by, which is a\\n     * string of comma separated values, or an Array of keys, or multiple keys.\\n     * @return {Parse.Query} Returns the query, so you can chain this call.\\n     */\\n    addDescending: function(key) {\\n      var self = this;\\n      if (!this._order) {\\n        this._order = [];\\n      }\\n      Parse._arrayEach(arguments, function(key) {\\n        if (Array.isArray(key)) {\\n          key = key.join();\\n        }\\n        self._order = self._order.concat(\\n          _.map(key.replace(/\\\\s/g, \\\"\\\").split(\\\",\\\"),\\n            function(k) { return \\\"-\\\" + k; }));\\n      });\\n      return this;\\n    },\\n\\n    /**\\n     * Add a proximity based constraint for finding objects with key point\\n     * values near the point given.\\n     * @param {String} key The key that the Parse.GeoPoint is stored in.\\n     * @param {Parse.GeoPoint} point The reference Parse.GeoPoint that is used.\\n     * @return {Parse.Query} Returns the query, so you can chain this call.\\n     */\\n    near: function(key, point) {\\n      if (!(point instanceof Parse.GeoPoint)) {\\n        // Try to cast it to a GeoPoint, so that near(\\\"loc\\\", [20,30]) works.\\n        point = new Parse.GeoPoint(point);\\n      }\\n      this._addCondition(key, \\\"$nearSphere\\\", point);\\n      return this;\\n    },\\n\\n    /**\\n     * Add a proximity based constraint for finding objects with key point\\n     * values near the point given and within the maximum distance given.\\n     * @param {String} key The key that the Parse.GeoPoint is stored in.\\n     * @param {Parse.GeoPoint} point The reference Parse.GeoPoint that is used.\\n     * @param {Number} maxDistance Maximum distance (in radians) of results to\\n     *   return.\\n     * @return {Parse.Query} Returns the query, so you can chain this call.\\n     */\\n    withinRadians: function(key, point, distance) {\\n      this.near(key, point);\\n      this._addCondition(key, \\\"$maxDistance\\\", distance);\\n      return this;\\n    },\\n\\n    /**\\n     * Add a proximity based constraint for finding objects with key point\\n     * values near the point given and within the maximum distance given.\\n     * Radius of earth used is 3958.8 miles.\\n     * @param {String} key The key that the Parse.GeoPoint is stored in.\\n     * @param {Parse.GeoPoint} point The reference Parse.GeoPoint that is used.\\n     * @param {Number} maxDistance Maximum distance (in miles) of results to\\n     *     return.\\n     * @return {Parse.Query} Returns the query, so you can chain this call.\\n     */\\n    withinMiles: function(key, point, distance) {\\n      return this.withinRadians(key, point, distance / 3958.8);\\n    },\\n\\n    /**\\n     * Add a proximity based constraint for finding objects with key point\\n     * values near the point given and within the maximum distance given.\\n     * Radius of earth used is 6371.0 kilometers.\\n     * @param {String} key The key that the Parse.GeoPoint is stored in.\\n     * @param {Parse.GeoPoint} point The reference Parse.GeoPoint that is used.\\n     * @param {Number} maxDistance Maximum distance (in kilometers) of results\\n     *     to return.\\n     * @return {Parse.Query} Returns the query, so you can chain this call.\\n     */\\n    withinKilometers: function(key, point, distance) {\\n      return this.withinRadians(key, point, distance / 6371.0);\\n    },\\n\\n    /**\\n     * Add a constraint to the query that requires a particular key's\\n     * coordinates be contained within a given rectangular geographic bounding\\n     * box.\\n     * @param {String} key The key to be constrained.\\n     * @param {Parse.GeoPoint} southwest\\n     *     The lower-left inclusive corner of the box.\\n     * @param {Parse.GeoPoint} northeast\\n     *     The upper-right inclusive corner of the box.\\n     * @return {Parse.Query} Returns the query, so you can chain this call.\\n     */\\n    withinGeoBox: function(key, southwest, northeast) {\\n      if (!(southwest instanceof Parse.GeoPoint)) {\\n        southwest = new Parse.GeoPoint(southwest);\\n      }\\n      if (!(northeast instanceof Parse.GeoPoint)) {\\n        northeast = new Parse.GeoPoint(northeast);\\n      }\\n      this._addCondition(key, '$within', { '$box': [southwest, northeast] });\\n      return this;\\n    },\\n\\n    /**\\n     * Include nested Parse.Objects for the provided key.  You can use dot\\n     * notation to specify which fields in the included object are also fetch.\\n     * @param {String} key The name of the key to include.\\n     * @return {Parse.Query} Returns the query, so you can chain this call.\\n     */\\n    include: function() {\\n      var self = this;\\n      Parse._arrayEach(arguments, function(key) {\\n        if (_.isArray(key)) {\\n          self._include = self._include.concat(key);\\n        } else {\\n          self._include.push(key);\\n        }\\n      });\\n      return this;\\n    },\\n\\n    /**\\n     * Restrict the fields of the returned Parse.Objects to include only the\\n     * provided keys.  If this is called multiple times, then all of the keys\\n     * specified in each of the calls will be included.\\n     * @param {Array} keys The names of the keys to include.\\n     * @return {Parse.Query} Returns the query, so you can chain this call.\\n     */\\n    select: function() {\\n      var self = this;\\n      this._select = this._select || [];\\n      Parse._arrayEach(arguments, function(key) {\\n        if (_.isArray(key)) {\\n          self._select = self._select.concat(key);\\n        } else {\\n          self._select.push(key);\\n        }\\n      });\\n      return this;\\n    },\\n\\n    /**\\n     * Iterates over each result of a query, calling a callback for each one. If\\n     * the callback returns a promise, the iteration will not continue until\\n     * that promise has been fulfilled. If the callback returns a rejected\\n     * promise, then iteration will stop with that error. The items are\\n     * processed in an unspecified order. The query may not have any sort order,\\n     * and may not use limit or skip.\\n     * @param {Function} callback Callback that will be called with each result\\n     *     of the query.\\n     * @param {Object} options An optional Backbone-like options object with\\n     *     success and error callbacks that will be invoked once the iteration\\n     *     has finished.\\n     * @return {Parse.Promise} A promise that will be fulfilled once the\\n     *     iteration has completed.\\n     */\\n    each: function(callback, options) {\\n      options = options || {};\\n\\n      if (this._order || this._skip || (this._limit >= 0)) {\\n        var error =\\n          \\\"Cannot iterate on a query with sort, skip, or limit.\\\";\\n        return Parse.Promise.error(error)._thenRunCallbacks(options);\\n      }\\n\\n      var promise = new Parse.Promise();\\n\\n      var query = new Parse.Query(this.objectClass);\\n      // We can override the batch size from the options.\\n      // This is undocumented, but useful for testing.\\n      query._limit = options.batchSize || 100;\\n      query._where = _.clone(this._where);\\n      query._include = _.clone(this._include);\\n\\n      query.ascending('objectId');\\n\\n      var finished = false;\\n      return Parse.Promise._continueWhile(function() {\\n        return !finished;\\n\\n      }, function() {\\n        return query.find().then(function(results) {\\n          var callbacksDone = Parse.Promise.as();\\n          Parse._.each(results, function(result) {\\n            callbacksDone = callbacksDone.then(function() {\\n              return callback(result);\\n            });\\n          });\\n\\n          return callbacksDone.then(function() {\\n            if (results.length >= query._limit) {\\n              query.greaterThan(\\\"objectId\\\", results[results.length - 1].id);\\n            } else {\\n              finished = true;\\n            }\\n          });\\n        });\\n      })._thenRunCallbacks(options);\\n    }\\n  };\\n\\n}(this));\\n\\n/*global FB: false , console: false*/\\n(function(root) {\\n  root.Parse = root.Parse || {};\\n  var Parse = root.Parse;\\n  var _ = Parse._;\\n\\n  var PUBLIC_KEY = \\\"*\\\";\\n\\n  var initialized = false;\\n  var requestedPermissions;\\n  var initOptions;\\n  var provider = {\\n    authenticate: function(options) {\\n      var self = this;\\n      FB.login(function(response) {\\n        if (response.authResponse) {\\n          if (options.success) {\\n            options.success(self, {\\n              id: response.authResponse.userID,\\n              access_token: response.authResponse.accessToken,\\n              expiration_date: new Date(response.authResponse.expiresIn * 1000 +\\n                  (new Date()).getTime()).toJSON()\\n            });\\n          }\\n        } else {\\n          if (options.error) {\\n            options.error(self, response);\\n          }\\n        }\\n      }, {\\n        scope: requestedPermissions\\n      });\\n    },\\n    restoreAuthentication: function(authData) {\\n      if (authData) {\\n        var authResponse = {\\n          userID: authData.id,\\n          accessToken: authData.access_token,\\n          expiresIn: (Parse._parseDate(authData.expiration_date).getTime() -\\n              (new Date()).getTime()) / 1000\\n        };\\n        var newOptions = _.clone(initOptions);\\n        newOptions.authResponse = authResponse;\\n\\n        // Suppress checks for login status from the browser.\\n        newOptions.status = false;\\n\\n        // If the user doesn't match the one known by the FB SDK, log out.\\n        // Most of the time, the users will match -- it's only in cases where\\n        // the FB SDK knows of a different user than the one being restored\\n        // from a Parse User that logged in with username/password.\\n        var existingResponse = FB.getAuthResponse();\\n        if (existingResponse &&\\n            existingResponse.userID !== authResponse.userID) {\\n          FB.logout();\\n        }\\n\\n        FB.init(newOptions);\\n      }\\n      return true;\\n    },\\n    getAuthType: function() {\\n      return \\\"facebook\\\";\\n    },\\n    deauthenticate: function() {\\n      this.restoreAuthentication(null);\\n    }\\n  };\\n\\n  /**\\n   * Provides a set of utilities for using Parse with Facebook.\\n   * @namespace\\n   * Provides a set of utilities for using Parse with Facebook.\\n   */\\n  Parse.FacebookUtils = {\\n    /**\\n     * Initializes Parse Facebook integration.  Call this function after you\\n     * have loaded the Facebook Javascript SDK with the same parameters\\n     * as you would pass to<code>\\n     * <a href=\\n     * \\\"https://developers.facebook.com/docs/reference/javascript/FB.init/\\\">\\n     * FB.init()</a></code>.  Parse.FacebookUtils will invoke FB.init() for you\\n     * with these arguments.\\n     *\\n     * @param {Object} options Facebook options argument as described here:\\n     *   <a href=\\n     *   \\\"https://developers.facebook.com/docs/reference/javascript/FB.init/\\\">\\n     *   FB.init()</a>. The status flag will be coerced to 'false' because it\\n     *   interferes with Parse Facebook integration. Call FB.getLoginStatus()\\n     *   explicitly if this behavior is required by your application.\\n     */\\n    init: function(options) {\\n      if (typeof(FB) === 'undefined') {\\n        throw \\\"The Facebook JavaScript SDK must be loaded before calling init.\\\";\\n      }\\n      initOptions = _.clone(options) || {};\\n      if (initOptions.status && typeof(console) !== \\\"undefined\\\") {\\n        var warn = console.warn || console.log || function() {};\\n        warn.call(console, \\\"The 'status' flag passed into\\\" +\\n          \\\" FB.init, when set to true, can interfere with Parse Facebook\\\" +\\n          \\\" integration, so it has been suppressed. Please call\\\" +\\n          \\\" FB.getLoginStatus() explicitly if you require this behavior.\\\");\\n      }\\n      initOptions.status = false;\\n      FB.init(initOptions);\\n      Parse.User._registerAuthenticationProvider(provider);\\n      initialized = true;\\n    },\\n\\n    /**\\n     * Gets whether the user has their account linked to Facebook.\\n     *\\n     * @param {Parse.User} user User to check for a facebook link.\\n     *     The user must be logged in on this device.\\n     * @return {Boolean} <code>true</code> if the user has their account\\n     *     linked to Facebook.\\n     */\\n    isLinked: function(user) {\\n      return user._isLinked(\\\"facebook\\\");\\n    },\\n\\n    /**\\n     * Logs in a user using Facebook. This method delegates to the Facebook\\n     * SDK to authenticate the user, and then automatically logs in (or\\n     * creates, in the case where it is a new user) a Parse.User.\\n     *\\n     * @param {String, Object} permissions The permissions required for Facebook\\n     *    log in.  This is a comma-separated string of permissions.\\n     *    Alternatively, supply a Facebook authData object as described in our\\n     *    REST API docs if you want to handle getting facebook auth tokens\\n     *    yourself.\\n     * @param {Object} options Standard options object with success and error\\n     *    callbacks.\\n     */\\n    logIn: function(permissions, options) {\\n      if (!permissions || _.isString(permissions)) {\\n        if (!initialized) {\\n          throw \\\"You must initialize FacebookUtils before calling logIn.\\\";\\n        }\\n        requestedPermissions = permissions;\\n        return Parse.User._logInWith(\\\"facebook\\\", options);\\n      } else {\\n        var newOptions = _.clone(options) || {};\\n        newOptions.authData = permissions;\\n        return Parse.User._logInWith(\\\"facebook\\\", newOptions);\\n      }\\n    },\\n\\n    /**\\n     * Links Facebook to an existing PFUser. This method delegates to the\\n     * Facebook SDK to authenticate the user, and then automatically links\\n     * the account to the Parse.User.\\n     *\\n     * @param {Parse.User} user User to link to Facebook. This must be the\\n     *     current user.\\n     * @param {String, Object} permissions The permissions required for Facebook\\n     *    log in.  This is a comma-separated string of permissions.\\n     *    Alternatively, supply a Facebook authData object as described in our\\n     *    REST API docs if you want to handle getting facebook auth tokens\\n     *    yourself.\\n     * @param {Object} options Standard options object with success and error\\n     *    callbacks.\\n     */\\n    link: function(user, permissions, options) {\\n      if (!permissions || _.isString(permissions)) {\\n        if (!initialized) {\\n          throw \\\"You must initialize FacebookUtils before calling link.\\\";\\n        }\\n        requestedPermissions = permissions;\\n        return user._linkWith(\\\"facebook\\\", options);\\n      } else {\\n        var newOptions = _.clone(options) || {};\\n        newOptions.authData = permissions;\\n        return user._linkWith(\\\"facebook\\\", newOptions);\\n      }\\n    },\\n\\n    /**\\n     * Unlinks the Parse.User from a Facebook account.\\n     *\\n     * @param {Parse.User} user User to unlink from Facebook. This must be the\\n     *     current user.\\n     * @param {Object} options Standard options object with success and error\\n     *    callbacks.\\n     */\\n    unlink: function(user, options) {\\n      if (!initialized) {\\n        throw \\\"You must initialize FacebookUtils before calling unlink.\\\";\\n      }\\n      return user._unlinkFrom(\\\"facebook\\\", options);\\n    }\\n  };\\n\\n}(this));\\n\\n/*global _: false, document: false, window: false, navigator: false */\\n(function(root) {\\n  root.Parse = root.Parse || {};\\n  var Parse = root.Parse;\\n  var _ = Parse._;\\n\\n  /**\\n   * History serves as a global router (per frame) to handle hashchange\\n   * events or pushState, match the appropriate route, and trigger\\n   * callbacks. You shouldn't ever have to create one of these yourself\\n   * â€” you should use the reference to <code>Parse.history</code>\\n   * that will be created for you automatically if you make use of\\n   * Routers with routes.\\n   * @class\\n   *\\n   * <p>A fork of Backbone.History, provided for your convenience.  If you\\n   * use this class, you must also include jQuery, or another library\\n   * that provides a jQuery-compatible $ function.  For more information,\\n   * see the <a href=\\\"http://documentcloud.github.com/backbone/#History\\\">\\n   * Backbone documentation</a>.</p>\\n   * <p><strong><em>Available in the client SDK only.</em></strong></p>\\n   */\\n  Parse.History = function() {\\n    this.handlers = [];\\n    _.bindAll(this, 'checkUrl');\\n  };\\n\\n  // Cached regex for cleaning leading hashes and slashes .\\n  var routeStripper = /^[#\\\\/]/;\\n\\n  // Cached regex for detecting MSIE.\\n  var isExplorer = /msie [\\\\w.]+/;\\n\\n  // Has the history handling already been started?\\n  Parse.History.started = false;\\n\\n  // Set up all inheritable **Parse.History** properties and methods.\\n  _.extend(Parse.History.prototype, Parse.Events,\\n           /** @lends Parse.History.prototype */ {\\n\\n    // The default interval to poll for hash changes, if necessary, is\\n    // twenty times a second.\\n    interval: 50,\\n\\n    // Gets the true hash value. Cannot use location.hash directly due to bug\\n    // in Firefox where location.hash will always be decoded.\\n    getHash: function(windowOverride) {\\n      var loc = windowOverride ? windowOverride.location : window.location;\\n      var match = loc.href.match(/#(.*)$/);\\n      return match ? match[1] : '';\\n    },\\n\\n    // Get the cross-browser normalized URL fragment, either from the URL,\\n    // the hash, or the override.\\n    getFragment: function(fragment, forcePushState) {\\n      if (Parse._isNullOrUndefined(fragment)) {\\n        if (this._hasPushState || forcePushState) {\\n          fragment = window.location.pathname;\\n          var search = window.location.search;\\n          if (search) {\\n            fragment += search;\\n          }\\n        } else {\\n          fragment = this.getHash();\\n        }\\n      }\\n      if (!fragment.indexOf(this.options.root)) {\\n        fragment = fragment.substr(this.options.root.length);\\n      }\\n      return fragment.replace(routeStripper, '');\\n    },\\n\\n    /**\\n     * Start the hash change handling, returning `true` if the current\\n     * URL matches an existing route, and `false` otherwise.\\n     */\\n    start: function(options) {\\n      if (Parse.History.started) {\\n        throw new Error(\\\"Parse.history has already been started\\\");\\n      }\\n      Parse.History.started = true;\\n\\n      // Figure out the initial configuration. Do we need an iframe?\\n      // Is pushState desired ... is it available?\\n      this.options = _.extend({}, {root: '/'}, this.options, options);\\n      this._wantsHashChange = this.options.hashChange !== false;\\n      this._wantsPushState = !!this.options.pushState;\\n      this._hasPushState = !!(this.options.pushState &&\\n                              window.history &&\\n                              window.history.pushState);\\n      var fragment = this.getFragment();\\n      var docMode = document.documentMode;\\n      var oldIE = (isExplorer.exec(navigator.userAgent.toLowerCase()) &&\\n                   (!docMode || docMode <= 7));\\n\\n      if (oldIE) {\\n        this.iframe = Parse.$('<iframe src=\\\"javascript:0\\\" tabindex=\\\"-1\\\" />')\\n                      .hide().appendTo('body')[0].contentWindow;\\n        this.navigate(fragment);\\n      }\\n\\n      // Depending on whether we're using pushState or hashes, and whether\\n      // 'onhashchange' is supported, determine how we check the URL state.\\n      if (this._hasPushState) {\\n        Parse.$(window).bind('popstate', this.checkUrl);\\n      } else if (this._wantsHashChange &&\\n                 ('onhashchange' in window) &&\\n                 !oldIE) {\\n        Parse.$(window).bind('hashchange', this.checkUrl);\\n      } else if (this._wantsHashChange) {\\n        this._checkUrlInterval = window.setInterval(this.checkUrl,\\n                                                    this.interval);\\n      }\\n\\n      // Determine if we need to change the base url, for a pushState link\\n      // opened by a non-pushState browser.\\n      this.fragment = fragment;\\n      var loc = window.location;\\n      var atRoot  = loc.pathname === this.options.root;\\n\\n      // If we've started off with a route from a `pushState`-enabled browser,\\n      // but we're currently in a browser that doesn't support it...\\n      if (this._wantsHashChange &&\\n          this._wantsPushState &&\\n          !this._hasPushState &&\\n          !atRoot) {\\n        this.fragment = this.getFragment(null, true);\\n        window.location.replace(this.options.root + '#' + this.fragment);\\n        // Return immediately as browser will do redirect to new url\\n        return true;\\n\\n      // Or if we've started out with a hash-based route, but we're currently\\n      // in a browser where it could be `pushState`-based instead...\\n      } else if (this._wantsPushState &&\\n                 this._hasPushState &&\\n                 atRoot &&\\n                 loc.hash) {\\n        this.fragment = this.getHash().replace(routeStripper, '');\\n        window.history.replaceState({}, document.title,\\n            loc.protocol + '//' + loc.host + this.options.root + this.fragment);\\n      }\\n\\n      if (!this.options.silent) {\\n        return this.loadUrl();\\n      }\\n    },\\n\\n    // Disable Parse.history, perhaps temporarily. Not useful in a real app,\\n    // but possibly useful for unit testing Routers.\\n    stop: function() {\\n      Parse.$(window).unbind('popstate', this.checkUrl)\\n                     .unbind('hashchange', this.checkUrl);\\n      window.clearInterval(this._checkUrlInterval);\\n      Parse.History.started = false;\\n    },\\n\\n    // Add a route to be tested when the fragment changes. Routes added later\\n    // may override previous routes.\\n    route: function(route, callback) {\\n      this.handlers.unshift({route: route, callback: callback});\\n    },\\n\\n    // Checks the current URL to see if it has changed, and if it has,\\n    // calls `loadUrl`, normalizing across the hidden iframe.\\n    checkUrl: function(e) {\\n      var current = this.getFragment();\\n      if (current === this.fragment && this.iframe) {\\n        current = this.getFragment(this.getHash(this.iframe));\\n      }\\n      if (current === this.fragment) {\\n        return false;\\n      }\\n      if (this.iframe) {\\n        this.navigate(current);\\n      }\\n      if (!this.loadUrl()) {\\n        this.loadUrl(this.getHash());\\n      }\\n    },\\n\\n    // Attempt to load the current URL fragment. If a route succeeds with a\\n    // match, returns `true`. If no defined routes matches the fragment,\\n    // returns `false`.\\n    loadUrl: function(fragmentOverride) {\\n      var fragment = this.fragment = this.getFragment(fragmentOverride);\\n      var matched = _.any(this.handlers, function(handler) {\\n        if (handler.route.test(fragment)) {\\n          handler.callback(fragment);\\n          return true;\\n        }\\n      });\\n      return matched;\\n    },\\n\\n    // Save a fragment into the hash history, or replace the URL state if the\\n    // 'replace' option is passed. You are responsible for properly URL-encoding\\n    // the fragment in advance.\\n    //\\n    // The options object can contain `trigger: true` if you wish to have the\\n    // route callback be fired (not usually desirable), or `replace: true`, if\\n    // you wish to modify the current URL without adding an entry to the\\n    // history.\\n    navigate: function(fragment, options) {\\n      if (!Parse.History.started) {\\n        return false;\\n      }\\n      if (!options || options === true) {\\n        options = {trigger: options};\\n      }\\n      var frag = (fragment || '').replace(routeStripper, '');\\n      if (this.fragment === frag) {\\n        return;\\n      }\\n\\n      // If pushState is available, we use it to set the fragment as a real URL.\\n      if (this._hasPushState) {\\n        if (frag.indexOf(this.options.root) !== 0) {\\n          frag = this.options.root + frag;\\n        }\\n        this.fragment = frag;\\n        var replaceOrPush = options.replace ? 'replaceState' : 'pushState';\\n        window.history[replaceOrPush]({}, document.title, frag);\\n\\n      // If hash changes haven't been explicitly disabled, update the hash\\n      // fragment to store history.\\n      } else if (this._wantsHashChange) {\\n        this.fragment = frag;\\n        this._updateHash(window.location, frag, options.replace);\\n        if (this.iframe &&\\n            (frag !== this.getFragment(this.getHash(this.iframe)))) {\\n          // Opening and closing the iframe tricks IE7 and earlier\\n          // to push a history entry on hash-tag change.\\n          // When replace is true, we don't want this.\\n          if (!options.replace) {\\n            this.iframe.document.open().close();\\n          }\\n          this._updateHash(this.iframe.location, frag, options.replace);\\n        }\\n\\n      // If you've told us that you explicitly don't want fallback hashchange-\\n      // based history, then `navigate` becomes a page refresh.\\n      } else {\\n        window.location.assign(this.options.root + fragment);\\n      }\\n      if (options.trigger) {\\n        this.loadUrl(fragment);\\n      }\\n    },\\n\\n    // Update the hash location, either replacing the current entry, or adding\\n    // a new one to the browser history.\\n    _updateHash: function(location, fragment, replace) {\\n      if (replace) {\\n        var s = location.toString().replace(/(javascript:|#).*$/, '');\\n        location.replace(s + '#' + fragment);\\n      } else {\\n        location.hash = fragment;\\n      }\\n    }\\n  });\\n}(this));\\n\\n/*global _: false*/\\n(function(root) {\\n  root.Parse = root.Parse || {};\\n  var Parse = root.Parse;\\n  var _ = Parse._;\\n\\n  /**\\n   * Routers map faux-URLs to actions, and fire events when routes are\\n   * matched. Creating a new one sets its `routes` hash, if not set statically.\\n   * @class\\n   *\\n   * <p>A fork of Backbone.Router, provided for your convenience.\\n   * For more information, see the\\n   * <a href=\\\"http://documentcloud.github.com/backbone/#Router\\\">Backbone\\n   * documentation</a>.</p>\\n   * <p><strong><em>Available in the client SDK only.</em></strong></p>\\n   */\\n  Parse.Router = function(options) {\\n    options = options || {};\\n    if (options.routes) {\\n      this.routes = options.routes;\\n    }\\n    this._bindRoutes();\\n    this.initialize.apply(this, arguments);\\n  };\\n\\n  // Cached regular expressions for matching named param parts and splatted\\n  // parts of route strings.\\n  var namedParam    = /:\\\\w+/g;\\n  var splatParam    = /\\\\*\\\\w+/g;\\n  var escapeRegExp  = /[\\\\-\\\\[\\\\]{}()+?.,\\\\\\\\\\\\^\\\\$\\\\|#\\\\s]/g;\\n\\n  // Set up all inheritable **Parse.Router** properties and methods.\\n  _.extend(Parse.Router.prototype, Parse.Events,\\n           /** @lends Parse.Router.prototype */ {\\n\\n    /**\\n     * Initialize is an empty function by default. Override it with your own\\n     * initialization logic.\\n     */\\n    initialize: function(){},\\n\\n    /**\\n     * Manually bind a single named route to a callback. For example:\\n     *\\n     * <pre>this.route('search/:query/p:num', 'search', function(query, num) {\\n     *       ...\\n     *     });</pre>\\n     */\\n    route: function(route, name, callback) {\\n      Parse.history = Parse.history || new Parse.History();\\n      if (!_.isRegExp(route)) {\\n        route = this._routeToRegExp(route);\\n      }\\n      if (!callback) {\\n        callback = this[name];\\n      }\\n      Parse.history.route(route, _.bind(function(fragment) {\\n        var args = this._extractParameters(route, fragment);\\n        if (callback) {\\n          callback.apply(this, args);\\n        }\\n        this.trigger.apply(this, ['route:' + name].concat(args));\\n        Parse.history.trigger('route', this, name, args);\\n      }, this));\\n      return this;\\n    },\\n\\n    /**\\n     * Whenever you reach a point in your application that you'd\\n     * like to save as a URL, call navigate in order to update the\\n     * URL. If you wish to also call the route function, set the\\n     * trigger option to true. To update the URL without creating\\n     * an entry in the browser's history, set the replace option\\n     * to true.\\n     */\\n    navigate: function(fragment, options) {\\n      Parse.history.navigate(fragment, options);\\n    },\\n\\n    // Bind all defined routes to `Parse.history`. We have to reverse the\\n    // order of the routes here to support behavior where the most general\\n    // routes can be defined at the bottom of the route map.\\n    _bindRoutes: function() {\\n      if (!this.routes) {\\n        return;\\n      }\\n      var routes = [];\\n      for (var route in this.routes) {\\n        if (this.routes.hasOwnProperty(route)) {\\n          routes.unshift([route, this.routes[route]]);\\n        }\\n      }\\n      for (var i = 0, l = routes.length; i < l; i++) {\\n        this.route(routes[i][0], routes[i][1], this[routes[i][1]]);\\n      }\\n    },\\n\\n    // Convert a route string into a regular expression, suitable for matching\\n    // against the current location hash.\\n    _routeToRegExp: function(route) {\\n      route = route.replace(escapeRegExp, '\\\\\\\\$&')\\n                   .replace(namedParam, '([^\\\\/]+)')\\n                   .replace(splatParam, '(.*?)');\\n      return new RegExp('^' + route + '$');\\n    },\\n\\n    // Given a route, and a URL fragment that it matches, return the array of\\n    // extracted parameters.\\n    _extractParameters: function(route, fragment) {\\n      return route.exec(fragment).slice(1);\\n    }\\n  });\\n\\n  /**\\n   * @function\\n   * @param {Object} instanceProps Instance properties for the router.\\n   * @param {Object} classProps Class properies for the router.\\n   * @return {Class} A new subclass of <code>Parse.Router</code>.\\n   */\\n  Parse.Router.extend = Parse._extend;\\n}(this));\\n(function(root) {\\n  root.Parse = root.Parse || {};\\n  var Parse = root.Parse;\\n  var _ = Parse._;\\n\\n  /**\\n   * @namespace Contains functions for calling and declaring\\n   * <a href=\\\"/docs/cloud_code_guide#functions\\\">cloud functions</a>.\\n   * <p><strong><em>\\n   *   Some functions are only available from Cloud Code.\\n   * </em></strong></p>\\n   */\\n  Parse.Cloud = Parse.Cloud || {};\\n\\n  _.extend(Parse.Cloud, /** @lends Parse.Cloud */ {\\n    /**\\n     * Makes a call to a cloud function.\\n     * @param {String} name The function name.\\n     * @param {Object} data The parameters to send to the cloud function.\\n     * @param {Object} options A Backbone-style options object\\n     * options.success, if set, should be a function to handle a successful\\n     * call to a cloud function.  options.error should be a function that\\n     * handles an error running the cloud function.  Both functions are\\n     * optional.  Both functions take a single argument.\\n     * @return {Parse.Promise} A promise that will be resolved with the result\\n     * of the function.\\n     */\\n    run: function(name, data, options) {\\n      options = options || {};\\n\\n      var request = Parse._request({\\n        route: \\\"functions\\\",\\n        className: name,\\n        method: 'POST',\\n        useMasterKey: options.useMasterKey,\\n        data: Parse._encode(data, null, true)\\n      });\\n\\n      return request.then(function(resp) {\\n        return Parse._decode(null, resp).result;\\n      })._thenRunCallbacks(options);\\n    }\\n  });\\n}(this));\\n\\n(function(root) {\\n  root.Parse = root.Parse || {};\\n  var Parse = root.Parse;\\n\\n  Parse.Installation = Parse.Object.extend(\\\"_Installation\\\");\\n\\n  /**\\n   * Contains functions to deal with Push in Parse\\n   * @name Parse.Push\\n   * @namespace\\n   */\\n  Parse.Push = Parse.Push || {};\\n\\n  /**\\n   * Sends a push notification.\\n   * @param {Object} data -  The data of the push notification.  Valid fields\\n   * are:\\n   *   <ol>\\n   *     <li>channels - An Array of channels to push to.</li>\\n   *     <li>push_time - A Date object for when to send the push.</li>\\n   *     <li>expiration_time -  A Date object for when to expire\\n   *         the push.</li>\\n   *     <li>expiration_interval - The seconds from now to expire the push.</li>\\n   *     <li>where - A Parse.Query over Parse.Installation that is used to match\\n   *         a set of installations to push to.</li>\\n   *     <li>data - The data to send as part of the push</li>\\n   *   <ol>\\n   * @param {Object} options An object that has an optional success function,\\n   * that takes no arguments and will be called on a successful push, and\\n   * an error function that takes a Parse.Error and will be called if the push\\n   * failed.\\n   */\\n  Parse.Push.send = function(data, options) {\\n    options = options || {};\\n\\n    if (data.where) {\\n      data.where = data.where.toJSON().where;\\n    }\\n\\n    if (data.push_time) {\\n      data.push_time = data.push_time.toJSON();\\n    }\\n\\n    if (data.expiration_time) {\\n      data.expiration_time = data.expiration_time.toJSON();\\n    }\\n\\n    if (data.expiration_time && data.expiration_interval) {\\n      throw \\\"Both expiration_time and expiration_interval can't be set\\\";\\n    }\\n\\n    var request = Parse._request({\\n      route: 'push',\\n      method: 'POST',\\n      data: data,\\n      useMasterKey: options.useMasterKey\\n    });\\n    return request._thenRunCallbacks(options);\\n  };\\n}(this));\\n\"","// style-loader: Adds some css to the DOM by adding a <style> tag\nvar dispose = require(\"!/Users/auggernaut/Github/pegg/node_modules/style-loader/addStyle.js\")\n\t// The css code:\n\t(require(\"!!/Users/auggernaut/Github/pegg/node_modules/css-loader/index.js!/Users/auggernaut/Github/pegg/bower_components/famous/core/famous.css\"))\nif(module.hot) {\n\tmodule.hot.accept();\n\tmodule.hot.dispose(dispose);\n}","// style-loader: Adds some css to the DOM by adding a <style> tag\nvar dispose = require(\"!/Users/auggernaut/Github/pegg/node_modules/style-loader/addStyle.js\")\n\t// The css code:\n\t(require(\"!!/Users/auggernaut/Github/pegg/node_modules/sass-loader/index.js?outputStyle=expanded&includePaths[]=./bower_components/!/Users/auggernaut/Github/pegg/src/app/views/scss/app.scss\"))\nif(module.hot) {\n\tmodule.hot.accept();\n\tmodule.hot.dispose(dispose);\n}","// style-loader: Adds some css to the DOM by adding a <style> tag\nvar dispose = require(\"!/Users/auggernaut/Github/pegg/node_modules/style-loader/addStyle.js\")\n\t// The css code:\n\t(require(\"!!/Users/auggernaut/Github/pegg/node_modules/sass-loader/index.js?outputStyle=expanded&includePaths[]=./bower_components/!/Users/auggernaut/Github/pegg/src/app/views/scss/fpsmeter.scss\"))\nif(module.hot) {\n\tmodule.hot.accept();\n\tmodule.hot.dispose(dispose);\n}","// style-loader: Adds some css to the DOM by adding a <style> tag\nvar dispose = require(\"!/Users/auggernaut/Github/pegg/node_modules/style-loader/addStyle.js\")\n\t// The css code:\n\t(require(\"!!/Users/auggernaut/Github/pegg/node_modules/sass-loader/index.js?outputStyle=expanded&includePaths[]=./bower_components/!/Users/auggernaut/Github/pegg/src/app/views/scss/header.scss\"))\nif(module.hot) {\n\tmodule.hot.accept();\n\tmodule.hot.dispose(dispose);\n}","// style-loader: Adds some css to the DOM by adding a <style> tag\nvar dispose = require(\"!/Users/auggernaut/Github/pegg/node_modules/style-loader/addStyle.js\")\n\t// The css code:\n\t(require(\"!!/Users/auggernaut/Github/pegg/node_modules/sass-loader/index.js?outputStyle=expanded&includePaths[]=./bower_components/!/Users/auggernaut/Github/pegg/src/app/views/scss/newcard.scss\"))\nif(module.hot) {\n\tmodule.hot.accept();\n\tmodule.hot.dispose(dispose);\n}","// style-loader: Adds some css to the DOM by adding a <style> tag\nvar dispose = require(\"!/Users/auggernaut/Github/pegg/node_modules/style-loader/addStyle.js\")\n\t// The css code:\n\t(require(\"!!/Users/auggernaut/Github/pegg/node_modules/sass-loader/index.js?outputStyle=expanded&includePaths[]=./bower_components/!/Users/auggernaut/Github/pegg/src/app/views/scss/play.scss\"))\nif(module.hot) {\n\tmodule.hot.accept();\n\tmodule.hot.dispose(dispose);\n}","// style-loader: Adds some css to the DOM by adding a <style> tag\nvar dispose = require(\"!/Users/auggernaut/Github/pegg/node_modules/style-loader/addStyle.js\")\n\t// The css code:\n\t(require(\"!!/Users/auggernaut/Github/pegg/node_modules/sass-loader/index.js?outputStyle=expanded&includePaths[]=./bower_components/!/Users/auggernaut/Github/pegg/src/app/views/scss/profile.scss\"))\nif(module.hot) {\n\tmodule.hot.accept();\n\tmodule.hot.dispose(dispose);\n}"],"sourceRoot":"webpack-module://"}